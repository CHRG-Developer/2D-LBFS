GAS LISTING /tmp/ccX8BQhk.s 			page 1


   1              		.file	"global_variables.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   7              	_ZStL19piecewise_construct:
   8 0000 00       		.zero	1
   9              		.section	.text._ZNSt11char_traitsIcE6assignERcRKc,"axG",@progbits,_ZNSt11char_traitsIcE6assignERcR
  10              		.weak	_ZNSt11char_traitsIcE6assignERcRKc
  12              	_ZNSt11char_traitsIcE6assignERcRKc:
  13              	.LFB290:
  14              		.file 1 "/usr/include/c++/5/bits/char_traits.h"
   1:/usr/include/c++/5/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/usr/include/c++/5/bits/char_traits.h **** 
   3:/usr/include/c++/5/bits/char_traits.h **** // Copyright (C) 1997-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/char_traits.h **** //
   5:/usr/include/c++/5/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/char_traits.h **** // any later version.
  10:/usr/include/c++/5/bits/char_traits.h **** 
  11:/usr/include/c++/5/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/char_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/char_traits.h **** 
  16:/usr/include/c++/5/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/char_traits.h **** 
  20:/usr/include/c++/5/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/char_traits.h **** 
  25:/usr/include/c++/5/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/usr/include/c++/5/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/5/bits/char_traits.h ****  */
  29:/usr/include/c++/5/bits/char_traits.h **** 
  30:/usr/include/c++/5/bits/char_traits.h **** //
  31:/usr/include/c++/5/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/5/bits/char_traits.h **** //
  33:/usr/include/c++/5/bits/char_traits.h **** 
  34:/usr/include/c++/5/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/usr/include/c++/5/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/usr/include/c++/5/bits/char_traits.h **** 
  37:/usr/include/c++/5/bits/char_traits.h **** #pragma GCC system_header
  38:/usr/include/c++/5/bits/char_traits.h **** 
  39:/usr/include/c++/5/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/usr/include/c++/5/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/usr/include/c++/5/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/usr/include/c++/5/bits/char_traits.h **** 
  43:/usr/include/c++/5/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  44:/usr/include/c++/5/bits/char_traits.h **** {
  45:/usr/include/c++/5/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/include/c++/5/bits/char_traits.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 2


  47:/usr/include/c++/5/bits/char_traits.h ****   /**
  48:/usr/include/c++/5/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  49:/usr/include/c++/5/bits/char_traits.h ****    *
  50:/usr/include/c++/5/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  51:/usr/include/c++/5/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  52:/usr/include/c++/5/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  53:/usr/include/c++/5/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  54:/usr/include/c++/5/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  55:/usr/include/c++/5/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  56:/usr/include/c++/5/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  57:/usr/include/c++/5/bits/char_traits.h ****   template<typename _CharT>
  58:/usr/include/c++/5/bits/char_traits.h ****     struct _Char_types
  59:/usr/include/c++/5/bits/char_traits.h ****     {
  60:/usr/include/c++/5/bits/char_traits.h ****       typedef unsigned long   int_type;
  61:/usr/include/c++/5/bits/char_traits.h ****       typedef std::streampos  pos_type;
  62:/usr/include/c++/5/bits/char_traits.h ****       typedef std::streamoff  off_type;
  63:/usr/include/c++/5/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  64:/usr/include/c++/5/bits/char_traits.h ****     };
  65:/usr/include/c++/5/bits/char_traits.h **** 
  66:/usr/include/c++/5/bits/char_traits.h **** 
  67:/usr/include/c++/5/bits/char_traits.h ****   /**
  68:/usr/include/c++/5/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  69:/usr/include/c++/5/bits/char_traits.h ****    *
  70:/usr/include/c++/5/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  71:/usr/include/c++/5/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  72:/usr/include/c++/5/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  73:/usr/include/c++/5/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  74:/usr/include/c++/5/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  75:/usr/include/c++/5/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  76:/usr/include/c++/5/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  77:/usr/include/c++/5/bits/char_traits.h ****    *
  78:/usr/include/c++/5/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  79:/usr/include/c++/5/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  80:/usr/include/c++/5/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  81:/usr/include/c++/5/bits/char_traits.h ****    */
  82:/usr/include/c++/5/bits/char_traits.h ****   template<typename _CharT>
  83:/usr/include/c++/5/bits/char_traits.h ****     struct char_traits
  84:/usr/include/c++/5/bits/char_traits.h ****     {
  85:/usr/include/c++/5/bits/char_traits.h ****       typedef _CharT                                    char_type;
  86:/usr/include/c++/5/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  87:/usr/include/c++/5/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  88:/usr/include/c++/5/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  89:/usr/include/c++/5/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  90:/usr/include/c++/5/bits/char_traits.h **** 
  91:/usr/include/c++/5/bits/char_traits.h ****       static void
  92:/usr/include/c++/5/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  93:/usr/include/c++/5/bits/char_traits.h ****       { __c1 = __c2; }
  94:/usr/include/c++/5/bits/char_traits.h **** 
  95:/usr/include/c++/5/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
  96:/usr/include/c++/5/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
  97:/usr/include/c++/5/bits/char_traits.h ****       { return __c1 == __c2; }
  98:/usr/include/c++/5/bits/char_traits.h **** 
  99:/usr/include/c++/5/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/usr/include/c++/5/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 101:/usr/include/c++/5/bits/char_traits.h ****       { return __c1 < __c2; }
 102:/usr/include/c++/5/bits/char_traits.h **** 
 103:/usr/include/c++/5/bits/char_traits.h ****       static int
GAS LISTING /tmp/ccX8BQhk.s 			page 3


 104:/usr/include/c++/5/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 105:/usr/include/c++/5/bits/char_traits.h **** 
 106:/usr/include/c++/5/bits/char_traits.h ****       static std::size_t
 107:/usr/include/c++/5/bits/char_traits.h ****       length(const char_type* __s);
 108:/usr/include/c++/5/bits/char_traits.h **** 
 109:/usr/include/c++/5/bits/char_traits.h ****       static const char_type*
 110:/usr/include/c++/5/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 111:/usr/include/c++/5/bits/char_traits.h **** 
 112:/usr/include/c++/5/bits/char_traits.h ****       static char_type*
 113:/usr/include/c++/5/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 114:/usr/include/c++/5/bits/char_traits.h **** 
 115:/usr/include/c++/5/bits/char_traits.h ****       static char_type*
 116:/usr/include/c++/5/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 117:/usr/include/c++/5/bits/char_traits.h **** 
 118:/usr/include/c++/5/bits/char_traits.h ****       static char_type*
 119:/usr/include/c++/5/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 120:/usr/include/c++/5/bits/char_traits.h **** 
 121:/usr/include/c++/5/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 122:/usr/include/c++/5/bits/char_traits.h ****       to_char_type(const int_type& __c)
 123:/usr/include/c++/5/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 124:/usr/include/c++/5/bits/char_traits.h **** 
 125:/usr/include/c++/5/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 126:/usr/include/c++/5/bits/char_traits.h ****       to_int_type(const char_type& __c)
 127:/usr/include/c++/5/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 128:/usr/include/c++/5/bits/char_traits.h **** 
 129:/usr/include/c++/5/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 130:/usr/include/c++/5/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 131:/usr/include/c++/5/bits/char_traits.h ****       { return __c1 == __c2; }
 132:/usr/include/c++/5/bits/char_traits.h **** 
 133:/usr/include/c++/5/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 134:/usr/include/c++/5/bits/char_traits.h ****       eof()
 135:/usr/include/c++/5/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 136:/usr/include/c++/5/bits/char_traits.h **** 
 137:/usr/include/c++/5/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/usr/include/c++/5/bits/char_traits.h ****       not_eof(const int_type& __c)
 139:/usr/include/c++/5/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 140:/usr/include/c++/5/bits/char_traits.h ****     };
 141:/usr/include/c++/5/bits/char_traits.h **** 
 142:/usr/include/c++/5/bits/char_traits.h ****   template<typename _CharT>
 143:/usr/include/c++/5/bits/char_traits.h ****     int
 144:/usr/include/c++/5/bits/char_traits.h ****     char_traits<_CharT>::
 145:/usr/include/c++/5/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 146:/usr/include/c++/5/bits/char_traits.h ****     {
 147:/usr/include/c++/5/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 148:/usr/include/c++/5/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 149:/usr/include/c++/5/bits/char_traits.h **** 	  return -1;
 150:/usr/include/c++/5/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 151:/usr/include/c++/5/bits/char_traits.h **** 	  return 1;
 152:/usr/include/c++/5/bits/char_traits.h ****       return 0;
 153:/usr/include/c++/5/bits/char_traits.h ****     }
 154:/usr/include/c++/5/bits/char_traits.h **** 
 155:/usr/include/c++/5/bits/char_traits.h ****   template<typename _CharT>
 156:/usr/include/c++/5/bits/char_traits.h ****     std::size_t
 157:/usr/include/c++/5/bits/char_traits.h ****     char_traits<_CharT>::
 158:/usr/include/c++/5/bits/char_traits.h ****     length(const char_type* __p)
 159:/usr/include/c++/5/bits/char_traits.h ****     {
 160:/usr/include/c++/5/bits/char_traits.h ****       std::size_t __i = 0;
GAS LISTING /tmp/ccX8BQhk.s 			page 4


 161:/usr/include/c++/5/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 162:/usr/include/c++/5/bits/char_traits.h ****         ++__i;
 163:/usr/include/c++/5/bits/char_traits.h ****       return __i;
 164:/usr/include/c++/5/bits/char_traits.h ****     }
 165:/usr/include/c++/5/bits/char_traits.h **** 
 166:/usr/include/c++/5/bits/char_traits.h ****   template<typename _CharT>
 167:/usr/include/c++/5/bits/char_traits.h ****     const typename char_traits<_CharT>::char_type*
 168:/usr/include/c++/5/bits/char_traits.h ****     char_traits<_CharT>::
 169:/usr/include/c++/5/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 170:/usr/include/c++/5/bits/char_traits.h ****     {
 171:/usr/include/c++/5/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 172:/usr/include/c++/5/bits/char_traits.h ****         if (eq(__s[__i], __a))
 173:/usr/include/c++/5/bits/char_traits.h ****           return __s + __i;
 174:/usr/include/c++/5/bits/char_traits.h ****       return 0;
 175:/usr/include/c++/5/bits/char_traits.h ****     }
 176:/usr/include/c++/5/bits/char_traits.h **** 
 177:/usr/include/c++/5/bits/char_traits.h ****   template<typename _CharT>
 178:/usr/include/c++/5/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 179:/usr/include/c++/5/bits/char_traits.h ****     char_traits<_CharT>::
 180:/usr/include/c++/5/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 181:/usr/include/c++/5/bits/char_traits.h ****     {
 182:/usr/include/c++/5/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 183:/usr/include/c++/5/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 184:/usr/include/c++/5/bits/char_traits.h ****     }
 185:/usr/include/c++/5/bits/char_traits.h **** 
 186:/usr/include/c++/5/bits/char_traits.h ****   template<typename _CharT>
 187:/usr/include/c++/5/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 188:/usr/include/c++/5/bits/char_traits.h ****     char_traits<_CharT>::
 189:/usr/include/c++/5/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 190:/usr/include/c++/5/bits/char_traits.h ****     {
 191:/usr/include/c++/5/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 192:/usr/include/c++/5/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 193:/usr/include/c++/5/bits/char_traits.h ****       return __s1;
 194:/usr/include/c++/5/bits/char_traits.h ****     }
 195:/usr/include/c++/5/bits/char_traits.h **** 
 196:/usr/include/c++/5/bits/char_traits.h ****   template<typename _CharT>
 197:/usr/include/c++/5/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 198:/usr/include/c++/5/bits/char_traits.h ****     char_traits<_CharT>::
 199:/usr/include/c++/5/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 200:/usr/include/c++/5/bits/char_traits.h ****     {
 201:/usr/include/c++/5/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 202:/usr/include/c++/5/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 203:/usr/include/c++/5/bits/char_traits.h ****       return __s;
 204:/usr/include/c++/5/bits/char_traits.h ****     }
 205:/usr/include/c++/5/bits/char_traits.h **** 
 206:/usr/include/c++/5/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 207:/usr/include/c++/5/bits/char_traits.h **** } // namespace
 208:/usr/include/c++/5/bits/char_traits.h **** 
 209:/usr/include/c++/5/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 210:/usr/include/c++/5/bits/char_traits.h **** {
 211:/usr/include/c++/5/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 212:/usr/include/c++/5/bits/char_traits.h **** 
 213:/usr/include/c++/5/bits/char_traits.h ****   // 21.1
 214:/usr/include/c++/5/bits/char_traits.h ****   /**
 215:/usr/include/c++/5/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 216:/usr/include/c++/5/bits/char_traits.h ****    *
 217:/usr/include/c++/5/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
GAS LISTING /tmp/ccX8BQhk.s 			page 5


 218:/usr/include/c++/5/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 219:/usr/include/c++/5/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 220:/usr/include/c++/5/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 221:/usr/include/c++/5/bits/char_traits.h ****    *
 222:/usr/include/c++/5/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 223:/usr/include/c++/5/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 224:/usr/include/c++/5/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 225:/usr/include/c++/5/bits/char_traits.h ****   */
 226:/usr/include/c++/5/bits/char_traits.h ****   template<class _CharT>
 227:/usr/include/c++/5/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 228:/usr/include/c++/5/bits/char_traits.h ****     { };
 229:/usr/include/c++/5/bits/char_traits.h **** 
 230:/usr/include/c++/5/bits/char_traits.h **** 
 231:/usr/include/c++/5/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 232:/usr/include/c++/5/bits/char_traits.h ****   template<>
 233:/usr/include/c++/5/bits/char_traits.h ****     struct char_traits<char>
 234:/usr/include/c++/5/bits/char_traits.h ****     {
 235:/usr/include/c++/5/bits/char_traits.h ****       typedef char              char_type;
 236:/usr/include/c++/5/bits/char_traits.h ****       typedef int               int_type;
 237:/usr/include/c++/5/bits/char_traits.h ****       typedef streampos         pos_type;
 238:/usr/include/c++/5/bits/char_traits.h ****       typedef streamoff         off_type;
 239:/usr/include/c++/5/bits/char_traits.h ****       typedef mbstate_t         state_type;
 240:/usr/include/c++/5/bits/char_traits.h **** 
 241:/usr/include/c++/5/bits/char_traits.h ****       static void
 242:/usr/include/c++/5/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
  15              		.loc 1 242 0
  16              		.cfi_startproc
  17 0000 55       		pushq	%rbp
  18              		.cfi_def_cfa_offset 16
  19              		.cfi_offset 6, -16
  20 0001 4889E5   		movq	%rsp, %rbp
  21              		.cfi_def_cfa_register 6
  22 0004 48897DF8 		movq	%rdi, -8(%rbp)
  23 0008 488975F0 		movq	%rsi, -16(%rbp)
 243:/usr/include/c++/5/bits/char_traits.h ****       { __c1 = __c2; }
  24              		.loc 1 243 0
  25 000c 488B45F0 		movq	-16(%rbp), %rax
  26 0010 0FB610   		movzbl	(%rax), %edx
  27 0013 488B45F8 		movq	-8(%rbp), %rax
  28 0017 8810     		movb	%dl, (%rax)
  29 0019 90       		nop
  30 001a 5D       		popq	%rbp
  31              		.cfi_def_cfa 7, 8
  32 001b C3       		ret
  33              		.cfi_endproc
  34              	.LFE290:
  36              		.section	.text._ZnwmPv,"axG",@progbits,_ZnwmPv,comdat
  37              		.weak	_ZnwmPv
  39              	_ZnwmPv:
  40              	.LFB382:
  41              		.file 2 "/usr/include/c++/5/new"
   1:/usr/include/c++/5/new **** // The -*- C++ -*- dynamic memory management header.
   2:/usr/include/c++/5/new **** 
   3:/usr/include/c++/5/new **** // Copyright (C) 1994-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/new **** 
   5:/usr/include/c++/5/new **** // This file is part of GCC.
   6:/usr/include/c++/5/new **** //
GAS LISTING /tmp/ccX8BQhk.s 			page 6


   7:/usr/include/c++/5/new **** // GCC is free software; you can redistribute it and/or modify
   8:/usr/include/c++/5/new **** // it under the terms of the GNU General Public License as published by
   9:/usr/include/c++/5/new **** // the Free Software Foundation; either version 3, or (at your option)
  10:/usr/include/c++/5/new **** // any later version.
  11:/usr/include/c++/5/new **** // 
  12:/usr/include/c++/5/new **** // GCC is distributed in the hope that it will be useful,
  13:/usr/include/c++/5/new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/usr/include/c++/5/new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/usr/include/c++/5/new **** // GNU General Public License for more details.
  16:/usr/include/c++/5/new **** // 
  17:/usr/include/c++/5/new **** // Under Section 7 of GPL version 3, you are granted additional
  18:/usr/include/c++/5/new **** // permissions described in the GCC Runtime Library Exception, version
  19:/usr/include/c++/5/new **** // 3.1, as published by the Free Software Foundation.
  20:/usr/include/c++/5/new **** 
  21:/usr/include/c++/5/new **** // You should have received a copy of the GNU General Public License and
  22:/usr/include/c++/5/new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/usr/include/c++/5/new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/usr/include/c++/5/new **** // <http://www.gnu.org/licenses/>.
  25:/usr/include/c++/5/new **** 
  26:/usr/include/c++/5/new **** /** @file new
  27:/usr/include/c++/5/new ****  *  This is a Standard C++ Library header.
  28:/usr/include/c++/5/new ****  *
  29:/usr/include/c++/5/new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:/usr/include/c++/5/new ****  *  handling memory allocation errors; see
  31:/usr/include/c++/5/new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  32:/usr/include/c++/5/new ****  */
  33:/usr/include/c++/5/new **** 
  34:/usr/include/c++/5/new **** #ifndef _NEW
  35:/usr/include/c++/5/new **** #define _NEW
  36:/usr/include/c++/5/new **** 
  37:/usr/include/c++/5/new **** #pragma GCC system_header
  38:/usr/include/c++/5/new **** 
  39:/usr/include/c++/5/new **** #include <bits/c++config.h>
  40:/usr/include/c++/5/new **** #include <exception>
  41:/usr/include/c++/5/new **** 
  42:/usr/include/c++/5/new **** #pragma GCC visibility push(default)
  43:/usr/include/c++/5/new **** 
  44:/usr/include/c++/5/new **** extern "C++" {
  45:/usr/include/c++/5/new **** 
  46:/usr/include/c++/5/new **** namespace std 
  47:/usr/include/c++/5/new **** {
  48:/usr/include/c++/5/new ****   /**
  49:/usr/include/c++/5/new ****    *  @brief  Exception possibly thrown by @c new.
  50:/usr/include/c++/5/new ****    *  @ingroup exceptions
  51:/usr/include/c++/5/new ****    *
  52:/usr/include/c++/5/new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  53:/usr/include/c++/5/new ****    *  errors from the throwing forms of @c new.  */
  54:/usr/include/c++/5/new ****   class bad_alloc : public exception 
  55:/usr/include/c++/5/new ****   {
  56:/usr/include/c++/5/new ****   public:
  57:/usr/include/c++/5/new ****     bad_alloc() throw() { }
  58:/usr/include/c++/5/new **** 
  59:/usr/include/c++/5/new ****     // This declaration is not useless:
  60:/usr/include/c++/5/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  61:/usr/include/c++/5/new ****     virtual ~bad_alloc() throw();
  62:/usr/include/c++/5/new **** 
  63:/usr/include/c++/5/new ****     // See comment in eh_exception.cc.
GAS LISTING /tmp/ccX8BQhk.s 			page 7


  64:/usr/include/c++/5/new ****     virtual const char* what() const throw();
  65:/usr/include/c++/5/new ****   };
  66:/usr/include/c++/5/new **** 
  67:/usr/include/c++/5/new **** #if __cplusplus >= 201103L
  68:/usr/include/c++/5/new ****   class bad_array_new_length : public bad_alloc
  69:/usr/include/c++/5/new ****   {
  70:/usr/include/c++/5/new ****   public:
  71:/usr/include/c++/5/new ****     bad_array_new_length() throw() { };
  72:/usr/include/c++/5/new **** 
  73:/usr/include/c++/5/new ****     // This declaration is not useless:
  74:/usr/include/c++/5/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  75:/usr/include/c++/5/new ****     virtual ~bad_array_new_length() throw();
  76:/usr/include/c++/5/new **** 
  77:/usr/include/c++/5/new ****     // See comment in eh_exception.cc.
  78:/usr/include/c++/5/new ****     virtual const char* what() const throw();
  79:/usr/include/c++/5/new ****   };
  80:/usr/include/c++/5/new **** #endif
  81:/usr/include/c++/5/new **** 
  82:/usr/include/c++/5/new ****   struct nothrow_t { };
  83:/usr/include/c++/5/new **** 
  84:/usr/include/c++/5/new ****   extern const nothrow_t nothrow;
  85:/usr/include/c++/5/new **** 
  86:/usr/include/c++/5/new ****   /** If you write your own error handler to be called by @c new, it must
  87:/usr/include/c++/5/new ****    *  be of this type.  */
  88:/usr/include/c++/5/new ****   typedef void (*new_handler)();
  89:/usr/include/c++/5/new **** 
  90:/usr/include/c++/5/new ****   /// Takes a replacement handler as the argument, returns the
  91:/usr/include/c++/5/new ****   /// previous handler.
  92:/usr/include/c++/5/new ****   new_handler set_new_handler(new_handler) throw();
  93:/usr/include/c++/5/new **** 
  94:/usr/include/c++/5/new **** #if __cplusplus >= 201103L
  95:/usr/include/c++/5/new ****   /// Return the current new handler.
  96:/usr/include/c++/5/new ****   new_handler get_new_handler() noexcept;
  97:/usr/include/c++/5/new **** #endif
  98:/usr/include/c++/5/new **** } // namespace std
  99:/usr/include/c++/5/new **** 
 100:/usr/include/c++/5/new **** //@{
 101:/usr/include/c++/5/new **** /** These are replaceable signatures:
 102:/usr/include/c++/5/new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 103:/usr/include/c++/5/new ****  *  - normal array new and delete (same)
 104:/usr/include/c++/5/new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 105:/usr/include/c++/5/new ****  *    @c NULL on error)
 106:/usr/include/c++/5/new ****  *  - @c nothrow array new and delete (same)
 107:/usr/include/c++/5/new ****  *
 108:/usr/include/c++/5/new ****  *  Placement new and delete signatures (take a memory address argument,
 109:/usr/include/c++/5/new ****  *  does nothing) may not be replaced by a user's program.
 110:/usr/include/c++/5/new **** */
 111:/usr/include/c++/5/new **** void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 112:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 113:/usr/include/c++/5/new **** void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 114:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 115:/usr/include/c++/5/new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 116:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 117:/usr/include/c++/5/new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
 118:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 119:/usr/include/c++/5/new **** void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 120:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
GAS LISTING /tmp/ccX8BQhk.s 			page 8


 121:/usr/include/c++/5/new **** void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 122:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 123:/usr/include/c++/5/new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 124:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 125:/usr/include/c++/5/new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 126:/usr/include/c++/5/new ****   __attribute__((__externally_visible__));
 127:/usr/include/c++/5/new **** 
 128:/usr/include/c++/5/new **** // Default placement versions of operator new.
 129:/usr/include/c++/5/new **** inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 130:/usr/include/c++/5/new **** { return __p; }
  42              		.loc 2 130 0
  43              		.cfi_startproc
  44 0000 55       		pushq	%rbp
  45              		.cfi_def_cfa_offset 16
  46              		.cfi_offset 6, -16
  47 0001 4889E5   		movq	%rsp, %rbp
  48              		.cfi_def_cfa_register 6
  49 0004 48897DF8 		movq	%rdi, -8(%rbp)
  50 0008 488975F0 		movq	%rsi, -16(%rbp)
  51              		.loc 2 130 0
  52 000c 488B45F0 		movq	-16(%rbp), %rax
  53 0010 5D       		popq	%rbp
  54              		.cfi_def_cfa 7, 8
  55 0011 C3       		ret
  56              		.cfi_endproc
  57              	.LFE382:
  59              		.section	.text._ZSt16__deque_buf_sizem,"axG",@progbits,_ZSt16__deque_buf_sizem,comdat
  60              		.weak	_ZSt16__deque_buf_sizem
  62              	_ZSt16__deque_buf_sizem:
  63              	.LFB6985:
  64              		.file 3 "/usr/include/c++/5/bits/stl_deque.h"
   1:/usr/include/c++/5/bits/stl_deque.h **** // Deque implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_deque.h **** 
   3:/usr/include/c++/5/bits/stl_deque.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_deque.h **** //
   5:/usr/include/c++/5/bits/stl_deque.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_deque.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_deque.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_deque.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_deque.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_deque.h **** 
  11:/usr/include/c++/5/bits/stl_deque.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_deque.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_deque.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_deque.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_deque.h **** 
  16:/usr/include/c++/5/bits/stl_deque.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_deque.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_deque.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_deque.h **** 
  20:/usr/include/c++/5/bits/stl_deque.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_deque.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_deque.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_deque.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_deque.h **** 
  25:/usr/include/c++/5/bits/stl_deque.h **** /*
  26:/usr/include/c++/5/bits/stl_deque.h ****  *
GAS LISTING /tmp/ccX8BQhk.s 			page 9


  27:/usr/include/c++/5/bits/stl_deque.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_deque.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_deque.h ****  *
  30:/usr/include/c++/5/bits/stl_deque.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_deque.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_deque.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_deque.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_deque.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_deque.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_deque.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_deque.h ****  *
  38:/usr/include/c++/5/bits/stl_deque.h ****  *
  39:/usr/include/c++/5/bits/stl_deque.h ****  * Copyright (c) 1997
  40:/usr/include/c++/5/bits/stl_deque.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_deque.h ****  *
  42:/usr/include/c++/5/bits/stl_deque.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_deque.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_deque.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_deque.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_deque.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_deque.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_deque.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_deque.h ****  */
  50:/usr/include/c++/5/bits/stl_deque.h **** 
  51:/usr/include/c++/5/bits/stl_deque.h **** /** @file bits/stl_deque.h
  52:/usr/include/c++/5/bits/stl_deque.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_deque.h ****  *  Do not attempt to use it directly. @headername{deque}
  54:/usr/include/c++/5/bits/stl_deque.h ****  */
  55:/usr/include/c++/5/bits/stl_deque.h **** 
  56:/usr/include/c++/5/bits/stl_deque.h **** #ifndef _STL_DEQUE_H
  57:/usr/include/c++/5/bits/stl_deque.h **** #define _STL_DEQUE_H 1
  58:/usr/include/c++/5/bits/stl_deque.h **** 
  59:/usr/include/c++/5/bits/stl_deque.h **** #include <bits/concept_check.h>
  60:/usr/include/c++/5/bits/stl_deque.h **** #include <bits/stl_iterator_base_types.h>
  61:/usr/include/c++/5/bits/stl_deque.h **** #include <bits/stl_iterator_base_funcs.h>
  62:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
  63:/usr/include/c++/5/bits/stl_deque.h **** #include <initializer_list>
  64:/usr/include/c++/5/bits/stl_deque.h **** #endif
  65:/usr/include/c++/5/bits/stl_deque.h **** 
  66:/usr/include/c++/5/bits/stl_deque.h **** namespace std _GLIBCXX_VISIBILITY(default)
  67:/usr/include/c++/5/bits/stl_deque.h **** {
  68:/usr/include/c++/5/bits/stl_deque.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  69:/usr/include/c++/5/bits/stl_deque.h **** 
  70:/usr/include/c++/5/bits/stl_deque.h ****   /**
  71:/usr/include/c++/5/bits/stl_deque.h ****    *  @brief This function controls the size of memory nodes.
  72:/usr/include/c++/5/bits/stl_deque.h ****    *  @param  __size  The size of an element.
  73:/usr/include/c++/5/bits/stl_deque.h ****    *  @return   The number (not byte size) of elements per node.
  74:/usr/include/c++/5/bits/stl_deque.h ****    *
  75:/usr/include/c++/5/bits/stl_deque.h ****    *  This function started off as a compiler kludge from SGI, but
  76:/usr/include/c++/5/bits/stl_deque.h ****    *  seems to be a useful wrapper around a repeated constant
  77:/usr/include/c++/5/bits/stl_deque.h ****    *  expression.  The @b 512 is tunable (and no other code needs to
  78:/usr/include/c++/5/bits/stl_deque.h ****    *  change), but no investigation has been done since inheriting the
  79:/usr/include/c++/5/bits/stl_deque.h ****    *  SGI code.  Touch _GLIBCXX_DEQUE_BUF_SIZE only if you know what
  80:/usr/include/c++/5/bits/stl_deque.h ****    *  you are doing, however: changing it breaks the binary
  81:/usr/include/c++/5/bits/stl_deque.h ****    *  compatibility!!
  82:/usr/include/c++/5/bits/stl_deque.h ****   */
  83:/usr/include/c++/5/bits/stl_deque.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 10


  84:/usr/include/c++/5/bits/stl_deque.h **** #ifndef _GLIBCXX_DEQUE_BUF_SIZE
  85:/usr/include/c++/5/bits/stl_deque.h **** #define _GLIBCXX_DEQUE_BUF_SIZE 512
  86:/usr/include/c++/5/bits/stl_deque.h **** #endif
  87:/usr/include/c++/5/bits/stl_deque.h **** 
  88:/usr/include/c++/5/bits/stl_deque.h ****   _GLIBCXX_CONSTEXPR inline size_t
  89:/usr/include/c++/5/bits/stl_deque.h ****   __deque_buf_size(size_t __size)
  90:/usr/include/c++/5/bits/stl_deque.h ****   { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
  65              		.loc 3 90 0
  66              		.cfi_startproc
  67 0000 55       		pushq	%rbp
  68              		.cfi_def_cfa_offset 16
  69              		.cfi_offset 6, -16
  70 0001 4889E5   		movq	%rsp, %rbp
  71              		.cfi_def_cfa_register 6
  72 0004 48897DF8 		movq	%rdi, -8(%rbp)
  91:/usr/include/c++/5/bits/stl_deque.h **** 	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
  73              		.loc 3 91 0
  74 0008 48817DF8 		cmpq	$511, -8(%rbp)
  74      FF010000 
  75 0010 7710     		ja	.L5
  76              		.loc 3 91 0 is_stmt 0 discriminator 1
  77 0012 B8000200 		movl	$512, %eax
  77      00
  78 0017 BA000000 		movl	$0, %edx
  78      00
  79 001c 48F775F8 		divq	-8(%rbp)
  80 0020 EB05     		jmp	.L7
  81              	.L5:
  82              		.loc 3 91 0 discriminator 2
  83 0022 B8010000 		movl	$1, %eax
  83      00
  84              	.L7:
  85              		.loc 3 91 0 discriminator 5
  86 0027 5D       		popq	%rbp
  87              		.cfi_def_cfa 7, 8
  88 0028 C3       		ret
  89              		.cfi_endproc
  90              	.LFE6985:
  92              		.section	.text._ZN5boost12range_detail6lengthEPKc,"axG",@progbits,_ZN5boost12range_detail6lengthEP
  93              		.weak	_ZN5boost12range_detail6lengthEPKc
  95              	_ZN5boost12range_detail6lengthEPKc:
  96              	.LFB7168:
  97              		.file 4 "/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** // Boost.Range library
   2:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** //
   3:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** //  Copyright Thorsten Ottosen 2006. Use, modification and
   4:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** //  distribution is subject to the Boost Software License, Version
   5:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** //  1.0. (See accompanying file LICENSE_1_0.txt or copy at
   6:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
   7:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** //
   8:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** // For more information, see http://www.boost.org/libs/range/
   9:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** //
  10:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #ifndef BOOST_RANGE_AS_LITERAL_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #define BOOST_RANGE_AS_LITERAL_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #if defined(_MSC_VER)
GAS LISTING /tmp/ccX8BQhk.s 			page 11


  15:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** # pragma once
  16:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #endif
  17:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  18:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #ifdef BOOST_NO_FUNCTION_TEMPLATE_ORDERING
  19:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #include <boost/range/detail/as_literal.hpp>
  20:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #else
  21:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  22:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #include <boost/range/iterator_range.hpp>
  23:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #include <boost/range/detail/str_types.hpp>
  24:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  25:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #include <boost/detail/workaround.hpp>
  26:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  27:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #include <cstring>
  28:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #ifndef BOOST_NO_CWCHAR
  29:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #include <cwchar>
  30:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #endif
  31:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  32:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** namespace boost
  33:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** {
  34:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     namespace range_detail
  35:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     {
  36:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         inline std::size_t length( const char* s )
  37:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
  98              		.loc 4 37 0 is_stmt 1
  99              		.cfi_startproc
 100 0000 55       		pushq	%rbp
 101              		.cfi_def_cfa_offset 16
 102              		.cfi_offset 6, -16
 103 0001 4889E5   		movq	%rsp, %rbp
 104              		.cfi_def_cfa_register 6
 105 0004 4883EC10 		subq	$16, %rsp
 106 0008 48897DF8 		movq	%rdi, -8(%rbp)
  38:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****             return strlen( s );
 107              		.loc 4 38 0
 108 000c 488B45F8 		movq	-8(%rbp), %rax
 109 0010 4889C7   		movq	%rax, %rdi
 110 0013 E8000000 		call	strlen
 110      00
  39:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
 111              		.loc 4 39 0
 112 0018 C9       		leave
 113              		.cfi_def_cfa 7, 8
 114 0019 C3       		ret
 115              		.cfi_endproc
 116              	.LFE7168:
 118              		.section	.text._ZN5boost12range_detail11is_char_ptrEPKc,"axG",@progbits,_ZN5boost12range_detail11i
 119              		.weak	_ZN5boost12range_detail11is_char_ptrEPKc
 121              	_ZN5boost12range_detail11is_char_ptrEPKc:
 122              	.LFB7171:
  40:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  41:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #ifndef BOOST_NO_CWCHAR
  42:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         inline std::size_t length( const wchar_t* s )
  43:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
  44:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****             return wcslen( s );
  45:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
  46:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #endif
  47:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 12


  48:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         //
  49:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         // Remark: the compiler cannot choose between T* and T[sz]
  50:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         // overloads, so we must put the T* internal to the
  51:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         // unconstrained version.
  52:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         //
  53:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  54:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         inline bool is_char_ptr( char* )
  55:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
  56:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****             return true;
  57:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
  58:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  59:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         inline bool is_char_ptr( const char* )
  60:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
 123              		.loc 4 60 0
 124              		.cfi_startproc
 125 0000 55       		pushq	%rbp
 126              		.cfi_def_cfa_offset 16
 127              		.cfi_offset 6, -16
 128 0001 4889E5   		movq	%rsp, %rbp
 129              		.cfi_def_cfa_register 6
 130 0004 48897DF8 		movq	%rdi, -8(%rbp)
  61:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****             return true;
 131              		.loc 4 61 0
 132 0008 B8010000 		movl	$1, %eax
 132      00
  62:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
 133              		.loc 4 62 0
 134 000d 5D       		popq	%rbp
 135              		.cfi_def_cfa 7, 8
 136 000e C3       		ret
 137              		.cfi_endproc
 138              	.LFE7171:
 140              		.section	.rodata
 143              	_ZStL13allocator_arg:
 144 0001 00       		.zero	1
 147              	_ZStL6ignore:
 148 0002 00       		.zero	1
 149              		.local	_ZN5boost6systemL14posix_categoryE
 150              		.comm	_ZN5boost6systemL14posix_categoryE,8,8
 151              		.local	_ZN5boost6systemL10errno_ecatE
 152              		.comm	_ZN5boost6systemL10errno_ecatE,8,8
 153              		.local	_ZN5boost6systemL11native_ecatE
 154              		.comm	_ZN5boost6systemL11native_ecatE,8,8
 155              		.section	.text._ZNK5boost6system10error_code5valueEv,"axG",@progbits,_ZNK5boost6system10error_code
 156              		.align 2
 157              		.weak	_ZNK5boost6system10error_code5valueEv
 159              	_ZNK5boost6system10error_code5valueEv:
 160              	.LFB7922:
 161              		.file 5 "/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** //  boost/system/error_code.hpp  ---------------------------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** //  Copyright Beman Dawes 2006, 2007
   4:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** //  Copyright Christoper Kohlhoff 2007
   5:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
   6:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See accompanying
   7:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** //  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 13


   9:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** //  See library home page at http://www.boost.org/libs/system
  10:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #ifndef BOOST_ERROR_CODE_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #define BOOST_ERROR_CODE_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <boost/system/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <boost/cstdint.hpp>
  16:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <boost/assert.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <boost/noncopyable.hpp>
  18:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <boost/utility/enable_if.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <ostream>
  20:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <string>
  21:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <stdexcept>
  22:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <functional>
  23:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  24:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** // TODO: undef these macros if not already defined
  25:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <boost/cerrno.hpp>
  26:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  27:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #if !defined(BOOST_POSIX_API) && !defined(BOOST_WINDOWS_API)
  28:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #  error BOOST_POSIX_API or BOOST_WINDOWS_API must be defined
  29:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #endif
  30:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  31:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #include <boost/config/abi_prefix.hpp> // must be the last #include
  32:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  33:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #ifndef BOOST_SYSTEM_NOEXCEPT
  34:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #define BOOST_SYSTEM_NOEXCEPT BOOST_NOEXCEPT
  35:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #endif
  36:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  37:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** namespace boost
  38:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** {
  39:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****   namespace system
  40:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****   {
  41:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  42:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     class error_code;
  43:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     class error_condition;
  44:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  45:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  "Concept" helpers  ---------------------------------------------------//
  46:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  47:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     template< class T >
  48:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     struct is_error_code_enum { static const bool value = false; };
  49:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  50:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     template< class T >
  51:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     struct is_error_condition_enum { static const bool value = false; };
  52:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  53:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  generic error_conditions  --------------------------------------------//
  54:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
  55:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     namespace errc
  56:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     {
  57:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       enum errc_t
  58:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
  59:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         success = 0,
  60:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         address_family_not_supported = EAFNOSUPPORT,
  61:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         address_in_use = EADDRINUSE,
  62:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         address_not_available = EADDRNOTAVAIL,
  63:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         already_connected = EISCONN,
  64:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         argument_list_too_long = E2BIG,
  65:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         argument_out_of_domain = EDOM,
GAS LISTING /tmp/ccX8BQhk.s 			page 14


  66:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         bad_address = EFAULT,
  67:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         bad_file_descriptor = EBADF,
  68:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         bad_message = EBADMSG,
  69:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         broken_pipe = EPIPE,
  70:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         connection_aborted = ECONNABORTED,
  71:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         connection_already_in_progress = EALREADY,
  72:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         connection_refused = ECONNREFUSED,
  73:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         connection_reset = ECONNRESET,
  74:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         cross_device_link = EXDEV,
  75:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         destination_address_required = EDESTADDRREQ,
  76:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         device_or_resource_busy = EBUSY,
  77:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         directory_not_empty = ENOTEMPTY,
  78:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         executable_format_error = ENOEXEC,
  79:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         file_exists = EEXIST,
  80:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         file_too_large = EFBIG,
  81:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         filename_too_long = ENAMETOOLONG,
  82:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         function_not_supported = ENOSYS,
  83:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         host_unreachable = EHOSTUNREACH,
  84:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         identifier_removed = EIDRM,
  85:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         illegal_byte_sequence = EILSEQ,
  86:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         inappropriate_io_control_operation = ENOTTY,
  87:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         interrupted = EINTR,
  88:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         invalid_argument = EINVAL,
  89:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         invalid_seek = ESPIPE,
  90:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         io_error = EIO,
  91:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         is_a_directory = EISDIR,
  92:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         message_size = EMSGSIZE,
  93:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         network_down = ENETDOWN,
  94:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         network_reset = ENETRESET,
  95:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         network_unreachable = ENETUNREACH,
  96:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_buffer_space = ENOBUFS,
  97:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_child_process = ECHILD,
  98:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_link = ENOLINK,
  99:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_lock_available = ENOLCK,
 100:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_message_available = ENODATA,
 101:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_message = ENOMSG,
 102:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_protocol_option = ENOPROTOOPT,
 103:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_space_on_device = ENOSPC,
 104:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_stream_resources = ENOSR,
 105:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_such_device_or_address = ENXIO,
 106:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_such_device = ENODEV,
 107:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_such_file_or_directory = ENOENT,
 108:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         no_such_process = ESRCH,
 109:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         not_a_directory = ENOTDIR,
 110:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         not_a_socket = ENOTSOCK,
 111:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         not_a_stream = ENOSTR,
 112:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         not_connected = ENOTCONN,
 113:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         not_enough_memory = ENOMEM,
 114:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         not_supported = ENOTSUP,
 115:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         operation_canceled = ECANCELED,
 116:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         operation_in_progress = EINPROGRESS,
 117:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         operation_not_permitted = EPERM,
 118:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         operation_not_supported = EOPNOTSUPP,
 119:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         operation_would_block = EWOULDBLOCK,
 120:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         owner_dead = EOWNERDEAD,
 121:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         permission_denied = EACCES,
 122:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         protocol_error = EPROTO,
GAS LISTING /tmp/ccX8BQhk.s 			page 15


 123:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         protocol_not_supported = EPROTONOSUPPORT,
 124:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         read_only_file_system = EROFS,
 125:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         resource_deadlock_would_occur = EDEADLK,
 126:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         resource_unavailable_try_again = EAGAIN,
 127:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         result_out_of_range = ERANGE,
 128:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         state_not_recoverable = ENOTRECOVERABLE,
 129:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         stream_timeout = ETIME,
 130:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         text_file_busy = ETXTBSY,
 131:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         timed_out = ETIMEDOUT,
 132:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         too_many_files_open_in_system = ENFILE,
 133:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         too_many_files_open = EMFILE,
 134:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         too_many_links = EMLINK,
 135:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         too_many_symbolic_link_levels = ELOOP,
 136:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         value_too_large = EOVERFLOW,
 137:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         wrong_protocol_type = EPROTOTYPE
 138:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       };
 139:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 140:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     } // namespace errc
 141:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 142:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** # ifndef BOOST_SYSTEM_NO_DEPRECATED
 143:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     namespace posix = errc;
 144:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     namespace posix_error = errc;
 145:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** # endif
 146:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 147:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     template<> struct is_error_condition_enum<errc::errc_t>
 148:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       { static const bool value = true; };
 149:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 150:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 151:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  ----------------------------------------------------------------------//
 152:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 153:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  Operating system specific interfaces  --------------------------------//
 154:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 155:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 156:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  The interface is divided into general and system-specific portions to
 157:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  meet these requirements:
 158:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //
 159:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  * Code calling an operating system API can create an error_code with
 160:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //    a single category (system_category), even for POSIX-like operating
 161:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //    systems that return some POSIX errno values and some native errno
 162:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //    values. This code should not have to pay the cost of distinguishing
 163:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //    between categories, since it is not yet known if that is needed.
 164:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //
 165:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  * Users wishing to write system-specific code should be given enums for
 166:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //    at least the common error cases.
 167:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //
 168:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  * System specific code should fail at compile time if moved to another
 169:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //    operating system.
 170:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 171:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  The system specific portions of the interface are located in headers
 172:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  with names reflecting the operating system. For example,
 173:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //
 174:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //       <boost/system/cygwin_error.hpp>
 175:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //       <boost/system/linux_error.hpp>
 176:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //       <boost/system/windows_error.hpp>
 177:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //
 178:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  These headers are effectively empty for compiles on operating systems
 179:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  where they are not applicable.
GAS LISTING /tmp/ccX8BQhk.s 			page 16


 180:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 181:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  ----------------------------------------------------------------------//
 182:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 183:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  class error_category  ------------------------------------------------//
 184:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 185:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     class error_category : public noncopyable
 186:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     {
 187:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     public:
 188:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       virtual ~error_category(){}
 189:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 190:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       virtual const char *     name() const BOOST_SYSTEM_NOEXCEPT = 0;
 191:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       virtual std::string      message( int ev ) const = 0;
 192:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       inline virtual error_condition  default_error_condition( int ev ) const  BOOST_SYSTEM_NOEXCEP
 193:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       inline virtual bool             equivalent( int code,
 194:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****                                            const error_condition & condition ) const  BOOST_SYSTEM_
 195:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       inline virtual bool             equivalent( const error_code & code,
 196:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****                                            int condition ) const  BOOST_SYSTEM_NOEXCEPT;
 197:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 198:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       bool operator==(const error_category & rhs) const BOOST_SYSTEM_NOEXCEPT { return this == &rhs
 199:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       bool operator!=(const error_category & rhs) const BOOST_SYSTEM_NOEXCEPT { return this != &rhs
 200:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       bool operator<( const error_category & rhs ) const BOOST_SYSTEM_NOEXCEPT
 201:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 202:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         return std::less<const error_category*>()( this, &rhs );
 203:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 204:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     };
 205:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 206:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  predefined error categories  -----------------------------------------//
 207:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 208:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** # ifdef BOOST_ERROR_CODE_HEADER_ONLY
 209:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     inline const error_category &  system_category() BOOST_SYSTEM_NOEXCEPT;
 210:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     inline const error_category &  generic_category() BOOST_SYSTEM_NOEXCEPT;
 211:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #else
 212:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     BOOST_SYSTEM_DECL const error_category &  system_category() BOOST_SYSTEM_NOEXCEPT;
 213:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     BOOST_SYSTEM_DECL const error_category &  generic_category() BOOST_SYSTEM_NOEXCEPT;
 214:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** #endif
 215:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  deprecated synonyms --------------------------------------------------//
 216:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 217:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** # ifndef BOOST_SYSTEM_NO_DEPRECATED
 218:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     inline const error_category &  get_system_category() { return system_category(); }
 219:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     inline const error_category &  get_generic_category() { return generic_category(); }
 220:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     inline const error_category &  get_posix_category() { return generic_category(); }
 221:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     static const error_category &  posix_category = generic_category();
 222:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     static const error_category &  errno_ecat     = generic_category();
 223:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     static const error_category &  native_ecat    = system_category();
 224:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** # endif
 225:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 226:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  class error_condition  -----------------------------------------------//
 227:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 228:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  error_conditions are portable, error_codes are system or library specific
 229:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 230:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     class error_condition
 231:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     {
 232:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     public:
 233:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 234:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       // constructors:
 235:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       error_condition() BOOST_SYSTEM_NOEXCEPT : m_val(0), m_cat(&generic_category()) {}
 236:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       error_condition( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT : m_val(val), m_
GAS LISTING /tmp/ccX8BQhk.s 			page 17


 237:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 238:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       template <class ErrorConditionEnum>
 239:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         error_condition(ErrorConditionEnum e,
 240:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****           typename boost::enable_if<is_error_condition_enum<ErrorConditionEnum> >::type* = 0) BOOST
 241:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 242:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         *this = make_error_condition(e);
 243:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 244:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 245:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       // modifiers:
 246:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 247:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       void assign( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT
 248:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 249:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         m_val = val;
 250:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         m_cat = &cat;
 251:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 252:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 253:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       template<typename ErrorConditionEnum>
 254:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         typename boost::enable_if<is_error_condition_enum<ErrorConditionEnum>, error_condition>::ty
 255:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****           operator=( ErrorConditionEnum val ) BOOST_SYSTEM_NOEXCEPT
 256:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 257:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         *this = make_error_condition(val);
 258:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         return *this;
 259:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 260:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 261:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       void clear() BOOST_SYSTEM_NOEXCEPT
 262:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 263:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         m_val = 0;
 264:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         m_cat = &generic_category();
 265:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 266:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 267:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       // observers:
 268:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       int                     value() const BOOST_SYSTEM_NOEXCEPT    { return m_val; }
 269:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       const error_category &  category() const BOOST_SYSTEM_NOEXCEPT { return *m_cat; }
 270:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       std::string             message() const  { return m_cat->message(value()); }
 271:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 272:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       typedef void (*unspecified_bool_type)();
 273:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       static void unspecified_bool_true() {}
 274:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 275:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       operator unspecified_bool_type() const BOOST_SYSTEM_NOEXCEPT  // true if error
 276:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 277:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         return m_val == 0 ? 0 : unspecified_bool_true;
 278:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 279:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 280:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       bool operator!() const BOOST_SYSTEM_NOEXCEPT  // true if no error
 281:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 282:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         return m_val == 0;
 283:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 284:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 285:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       // relationals:
 286:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       //  the more symmetrical non-member syntax allows enum
 287:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       //  conversions work for both rhs and lhs.
 288:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       inline friend bool operator==( const error_condition & lhs,
 289:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****                                      const error_condition & rhs ) BOOST_SYSTEM_NOEXCEPT
 290:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 291:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         return lhs.m_cat == rhs.m_cat && lhs.m_val == rhs.m_val;
 292:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 293:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 18


 294:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       inline friend bool operator<( const error_condition & lhs,
 295:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****                                     const error_condition & rhs ) BOOST_SYSTEM_NOEXCEPT
 296:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         //  the more symmetrical non-member syntax allows enum
 297:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         //  conversions work for both rhs and lhs.
 298:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 299:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         return lhs.m_cat < rhs.m_cat
 300:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****           || (lhs.m_cat == rhs.m_cat && lhs.m_val < rhs.m_val);
 301:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 302:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 303:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     private:
 304:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       int                     m_val;
 305:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       const error_category *  m_cat;
 306:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 307:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     };
 308:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 309:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  class error_code  ----------------------------------------------------//
 310:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 311:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  We want error_code to be a value type that can be copied without slicing
 312:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  and without requiring heap allocation, but we also want it to have
 313:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  polymorphic behavior based on the error category. This is achieved by
 314:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  abstract base class error_category supplying the polymorphic behavior,
 315:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  and error_code containing a pointer to an object of a type derived
 316:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     //  from error_category.
 317:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     class error_code
 318:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     {
 319:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     public:
 320:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 321:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       // constructors:
 322:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       error_code() BOOST_SYSTEM_NOEXCEPT : m_val(0), m_cat(&system_category()) {}
 323:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       error_code( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT : m_val(val), m_cat(&
 324:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 325:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       template <class ErrorCodeEnum>
 326:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         error_code(ErrorCodeEnum e,
 327:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****           typename boost::enable_if<is_error_code_enum<ErrorCodeEnum> >::type* = 0) BOOST_SYSTEM_NO
 328:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 329:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         *this = make_error_code(e);
 330:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 331:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 332:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       // modifiers:
 333:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       void assign( int val, const error_category & cat ) BOOST_SYSTEM_NOEXCEPT
 334:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 335:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         m_val = val;
 336:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         m_cat = &cat;
 337:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 338:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 339:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       template<typename ErrorCodeEnum>
 340:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         typename boost::enable_if<is_error_code_enum<ErrorCodeEnum>, error_code>::type &
 341:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****           operator=( ErrorCodeEnum val ) BOOST_SYSTEM_NOEXCEPT
 342:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 343:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         *this = make_error_code(val);
 344:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         return *this;
 345:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 346:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 347:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       void clear() BOOST_SYSTEM_NOEXCEPT
 348:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       {
 349:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         m_val = 0;
 350:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****         m_cat = &system_category();
GAS LISTING /tmp/ccX8BQhk.s 			page 19


 351:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       }
 352:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** 
 353:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       // observers:
 354:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       int                     value() const  BOOST_SYSTEM_NOEXCEPT   { return m_val; }
 162              		.loc 5 354 0
 163              		.cfi_startproc
 164 0000 55       		pushq	%rbp
 165              		.cfi_def_cfa_offset 16
 166              		.cfi_offset 6, -16
 167 0001 4889E5   		movq	%rsp, %rbp
 168              		.cfi_def_cfa_register 6
 169 0004 48897DF8 		movq	%rdi, -8(%rbp)
 170              		.loc 5 354 0
 171 0008 488B45F8 		movq	-8(%rbp), %rax
 172 000c 8B00     		movl	(%rax), %eax
 173 000e 5D       		popq	%rbp
 174              		.cfi_def_cfa 7, 8
 175 000f C3       		ret
 176              		.cfi_endproc
 177              	.LFE7922:
 179              		.section	.text._ZNK5boost6system10error_code7messageB5cxx11Ev,"axG",@progbits,_ZNK5boost6system10e
 180              		.align 2
 181              		.weak	_ZNK5boost6system10error_code7messageB5cxx11Ev
 183              	_ZNK5boost6system10error_code7messageB5cxx11Ev:
 184              	.LFB7925:
 355:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       const error_category &  category() const BOOST_SYSTEM_NOEXCEPT { return *m_cat; }
 356:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       error_condition         default_error_condition() const BOOST_SYSTEM_NOEXCEPT  { return m_cat
 357:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****       std::string             message() const  { return m_cat->message(value()); }
 185              		.loc 5 357 0
 186              		.cfi_startproc
 187 0000 55       		pushq	%rbp
 188              		.cfi_def_cfa_offset 16
 189              		.cfi_offset 6, -16
 190 0001 4889E5   		movq	%rsp, %rbp
 191              		.cfi_def_cfa_register 6
 192 0004 53       		pushq	%rbx
 193 0005 4883EC28 		subq	$40, %rsp
 194              		.cfi_offset 3, -24
 195 0009 48897DD8 		movq	%rdi, -40(%rbp)
 196 000d 488975D0 		movq	%rsi, -48(%rbp)
 197              		.loc 5 357 0
 198 0011 64488B04 		movq	%fs:40, %rax
 198      25280000 
 198      00
 199 001a 488945E8 		movq	%rax, -24(%rbp)
 200 001e 31C0     		xorl	%eax, %eax
 201 0020 488B45D0 		movq	-48(%rbp), %rax
 202 0024 488B4008 		movq	8(%rax), %rax
 203 0028 488B00   		movq	(%rax), %rax
 204 002b 4883C018 		addq	$24, %rax
 205 002f 488B18   		movq	(%rax), %rbx
 206 0032 488B45D0 		movq	-48(%rbp), %rax
 207 0036 4889C7   		movq	%rax, %rdi
 208 0039 E8000000 		call	_ZNK5boost6system10error_code5valueEv
 208      00
 209 003e 89C2     		movl	%eax, %edx
 210 0040 488B45D0 		movq	-48(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 20


 211 0044 488B4808 		movq	8(%rax), %rcx
 212 0048 488B45D8 		movq	-40(%rbp), %rax
 213 004c 4889CE   		movq	%rcx, %rsi
 214 004f 4889C7   		movq	%rax, %rdi
 215 0052 FFD3     		call	*%rbx
 216 0054 488B45D8 		movq	-40(%rbp), %rax
 217 0058 488B4DE8 		movq	-24(%rbp), %rcx
 218 005c 6448330C 		xorq	%fs:40, %rcx
 218      25280000 
 218      00
 219 0065 7405     		je	.L16
 220 0067 E8000000 		call	__stack_chk_fail
 220      00
 221              	.L16:
 222 006c 4883C428 		addq	$40, %rsp
 223 0070 5B       		popq	%rbx
 224 0071 5D       		popq	%rbp
 225              		.cfi_def_cfa 7, 8
 226 0072 C3       		ret
 227              		.cfi_endproc
 228              	.LFE7925:
 230              		.section	.text._ZN5boost6system12system_errorD2Ev,"axG",@progbits,_ZN5boost6system12system_errorD5
 231              		.align 2
 232              		.weak	_ZN5boost6system12system_errorD2Ev
 234              	_ZN5boost6system12system_errorD2Ev:
 235              	.LFB8129:
 236              		.file 6 "/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** //  Boost system_error.hpp  --------------------------------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** //  Copyright Beman Dawes 2006
   4:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
   5:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** //  Distributed under the Boost Software License, Version 1.0. (See accompanying
   6:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** //  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
   7:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
   8:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #ifndef BOOST_SYSTEM_ERROR_HPP
   9:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #define BOOST_SYSTEM_ERROR_HPP
  10:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #include <string>
  12:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #include <stdexcept>
  13:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #include <cassert>
  14:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #include <boost/system/error_code.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  16:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** namespace boost
  17:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** {
  18:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****   namespace system
  19:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****   {
  20:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     //  class system_error  ------------------------------------------------------------//
  21:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  22:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     class BOOST_SYMBOL_VISIBLE system_error : public std::runtime_error
  23:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     // BOOST_SYMBOL_VISIBLE is needed by GCC to ensure system_error thrown from a shared
  24:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     // library can be caught. See svn.boost.org/trac/boost/ticket/3697
  25:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     {
  26:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     public:
  27:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       system_error( error_code ec )
  28:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           : std::runtime_error(""), m_error_code(ec) {}
  29:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  30:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       system_error( error_code ec, const std::string & what_arg )
GAS LISTING /tmp/ccX8BQhk.s 			page 21


  31:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ec) {}
  32:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  33:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       system_error( error_code ec, const char* what_arg )
  34:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ec) {}
  35:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  36:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       system_error( int ev, const error_category & ecat )
  37:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           : std::runtime_error(""), m_error_code(ev,ecat) {}
  38:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  39:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       system_error( int ev, const error_category & ecat,
  40:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****         const std::string & what_arg )
  41:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ev,ecat) {}
  42:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  43:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       system_error( int ev, const error_category & ecat,
  44:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****         const char * what_arg )
  45:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           : std::runtime_error(what_arg), m_error_code(ev,ecat) {}
  46:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  47:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       virtual ~system_error() throw() {}
 237              		.loc 6 47 0
 238              		.cfi_startproc
 239 0000 55       		pushq	%rbp
 240              		.cfi_def_cfa_offset 16
 241              		.cfi_offset 6, -16
 242 0001 4889E5   		movq	%rsp, %rbp
 243              		.cfi_def_cfa_register 6
 244 0004 4883EC10 		subq	$16, %rsp
 245 0008 48897DF8 		movq	%rdi, -8(%rbp)
 246              	.LBB2:
 247              		.loc 6 47 0
 248 000c BA000000 		movl	$_ZTVN5boost6system12system_errorE+16, %edx
 248      00
 249 0011 488B45F8 		movq	-8(%rbp), %rax
 250 0015 488910   		movq	%rdx, (%rax)
 251 0018 488B45F8 		movq	-8(%rbp), %rax
 252 001c 4883C020 		addq	$32, %rax
 253 0020 4889C7   		movq	%rax, %rdi
 254 0023 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 254      00
 255 0028 488B45F8 		movq	-8(%rbp), %rax
 256 002c 4889C7   		movq	%rax, %rdi
 257 002f E8000000 		call	_ZNSt13runtime_errorD2Ev
 257      00
 258              	.LBE2:
 259 0034 B8000000 		movl	$0, %eax
 259      00
 260 0039 85C0     		testl	%eax, %eax
 261 003b 740C     		je	.L17
 262              		.loc 6 47 0 is_stmt 0 discriminator 2
 263 003d 488B45F8 		movq	-8(%rbp), %rax
 264 0041 4889C7   		movq	%rax, %rdi
 265 0044 E8000000 		call	_ZdlPv
 265      00
 266              	.L17:
 267              		.loc 6 47 0
 268 0049 C9       		leave
 269              		.cfi_def_cfa 7, 8
 270 004a C3       		ret
 271              		.cfi_endproc
GAS LISTING /tmp/ccX8BQhk.s 			page 22


 272              	.LFE8129:
 274              		.weak	_ZN5boost6system12system_errorD1Ev
 275              		.set	_ZN5boost6system12system_errorD1Ev,_ZN5boost6system12system_errorD2Ev
 276              		.section	.text._ZN5boost6system12system_errorD0Ev,"axG",@progbits,_ZN5boost6system12system_errorD5
 277              		.align 2
 278              		.weak	_ZN5boost6system12system_errorD0Ev
 280              	_ZN5boost6system12system_errorD0Ev:
 281              	.LFB8131:
 282              		.loc 6 47 0 is_stmt 1
 283              		.cfi_startproc
 284 0000 55       		pushq	%rbp
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 6, -16
 287 0001 4889E5   		movq	%rsp, %rbp
 288              		.cfi_def_cfa_register 6
 289 0004 4883EC10 		subq	$16, %rsp
 290 0008 48897DF8 		movq	%rdi, -8(%rbp)
 291              		.loc 6 47 0
 292 000c 488B45F8 		movq	-8(%rbp), %rax
 293 0010 4889C7   		movq	%rax, %rdi
 294 0013 E8000000 		call	_ZN5boost6system12system_errorD1Ev
 294      00
 295 0018 488B45F8 		movq	-8(%rbp), %rax
 296 001c 4889C7   		movq	%rax, %rdi
 297 001f E8000000 		call	_ZdlPv
 297      00
 298 0024 C9       		leave
 299              		.cfi_def_cfa 7, 8
 300 0025 C3       		ret
 301              		.cfi_endproc
 302              	.LFE8131:
 304              		.section	.rodata
 305              	.LC0:
 306 0003 3A2000   		.string	": "
 307              		.section	.text._ZNK5boost6system12system_error4whatEv,"axG",@progbits,_ZNK5boost6system12system_er
 308              		.align 2
 309              		.weak	_ZNK5boost6system12system_error4whatEv
 311              	_ZNK5boost6system12system_error4whatEv:
 312              	.LFB8133:
  48:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  49:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       const error_code &  code() const throw() { return m_error_code; }
  50:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       const char *        what() const throw();
  51:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  52:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     private:
  53:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       error_code           m_error_code;
  54:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       mutable std::string  m_what;
  55:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     };
  56:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  57:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     //  implementation  ------------------------------------------------------//
  58:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** 
  59:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     inline const char * system_error::what() const throw()
  60:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     // see http://www.boost.org/more/error_handling.html for lazy build rationale
  61:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     {
 313              		.loc 6 61 0
 314              		.cfi_startproc
 315              		.cfi_personality 0x3,__gxx_personality_v0
 316              		.cfi_lsda 0x3,.LLSDA8133
GAS LISTING /tmp/ccX8BQhk.s 			page 23


 317 0000 55       		pushq	%rbp
 318              		.cfi_def_cfa_offset 16
 319              		.cfi_offset 6, -16
 320 0001 4889E5   		movq	%rsp, %rbp
 321              		.cfi_def_cfa_register 6
 322 0004 53       		pushq	%rbx
 323 0005 4883EC48 		subq	$72, %rsp
 324              		.cfi_offset 3, -24
 325 0009 48897DB8 		movq	%rdi, -72(%rbp)
 326              		.loc 6 61 0
 327 000d 64488B04 		movq	%fs:40, %rax
 327      25280000 
 327      00
 328 0016 488945E8 		movq	%rax, -24(%rbp)
 329 001a 31C0     		xorl	%eax, %eax
  62:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       if ( m_what.empty() )
 330              		.loc 6 62 0
 331 001c 488B45B8 		movq	-72(%rbp), %rax
 332 0020 4883C020 		addq	$32, %rax
 333 0024 4889C7   		movq	%rax, %rdi
 334 0027 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
 334      00
 335 002c 84C0     		testb	%al, %al
 336 002e 0F848800 		je	.L21
 336      0000
  63:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       {
  64:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #ifndef BOOST_NO_EXCEPTIONS
  65:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****         try
  66:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #endif
  67:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****         {
  68:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           m_what = this->std::runtime_error::what();
 337              		.loc 6 68 0
 338 0034 488B45B8 		movq	-72(%rbp), %rax
 339 0038 4889C7   		movq	%rax, %rdi
 340 003b E8000000 		call	_ZNKSt13runtime_error4whatEv
 340      00
 341 0040 4889C2   		movq	%rax, %rdx
 342 0043 488B45B8 		movq	-72(%rbp), %rax
 343 0047 4883C020 		addq	$32, %rax
 344 004b 4889D6   		movq	%rdx, %rsi
 345 004e 4889C7   		movq	%rax, %rdi
 346              	.LEHB0:
 347 0051 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc
 347      00
  69:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           if ( !m_what.empty() ) m_what += ": ";
 348              		.loc 6 69 0
 349 0056 488B45B8 		movq	-72(%rbp), %rax
 350 005a 4883C020 		addq	$32, %rax
 351 005e 4889C7   		movq	%rax, %rdi
 352 0061 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
 352      00
 353 0066 83F001   		xorl	$1, %eax
 354 0069 84C0     		testb	%al, %al
 355 006b 7415     		je	.L22
 356              		.loc 6 69 0 is_stmt 0 discriminator 1
 357 006d 488B45B8 		movq	-72(%rbp), %rax
 358 0071 4883C020 		addq	$32, %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 24


 359 0075 BE000000 		movl	$.LC0, %esi
 359      00
 360 007a 4889C7   		movq	%rax, %rdi
 361 007d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
 361      00
 362              	.L22:
  70:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           m_what += m_error_code.message();
 363              		.loc 6 70 0 is_stmt 1
 364 0082 488B45B8 		movq	-72(%rbp), %rax
 365 0086 488D5010 		leaq	16(%rax), %rdx
 366 008a 488D45C0 		leaq	-64(%rbp), %rax
 367 008e 4889D6   		movq	%rdx, %rsi
 368 0091 4889C7   		movq	%rax, %rdi
 369 0094 E8000000 		call	_ZNK5boost6system10error_code7messageB5cxx11Ev
 369      00
 370              	.LEHE0:
 371              		.loc 6 70 0 is_stmt 0 discriminator 1
 372 0099 488B45B8 		movq	-72(%rbp), %rax
 373 009d 488D5020 		leaq	32(%rax), %rdx
 374 00a1 488D45C0 		leaq	-64(%rbp), %rax
 375 00a5 4889C6   		movq	%rax, %rsi
 376 00a8 4889D7   		movq	%rdx, %rdi
 377              	.LEHB1:
 378 00ab E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_
 378      00
 379              	.LEHE1:
 380              		.loc 6 70 0 discriminator 3
 381 00b0 488D45C0 		leaq	-64(%rbp), %rax
 382 00b4 4889C7   		movq	%rax, %rdi
 383 00b7 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 383      00
 384              	.L21:
  71:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****         }
  72:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #ifndef BOOST_NO_EXCEPTIONS
  73:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****         catch (...) { return std::runtime_error::what(); }
  74:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #endif
  75:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       }
  76:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****       return m_what.c_str();
 385              		.loc 6 76 0 is_stmt 1
 386 00bc 488B45B8 		movq	-72(%rbp), %rax
 387 00c0 4883C020 		addq	$32, %rax
 388 00c4 4889C7   		movq	%rax, %rdi
 389 00c7 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 389      00
 390 00cc 4889C3   		movq	%rax, %rbx
 391              	.L23:
 392 00cf 4889D8   		movq	%rbx, %rax
  77:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     }
 393              		.loc 6 77 0
 394 00d2 488B4DE8 		movq	-24(%rbp), %rcx
 395 00d6 6448330C 		xorq	%fs:40, %rcx
 395      25280000 
 395      00
 396 00df 744F     		je	.L28
 397 00e1 EB48     		jmp	.L32
 398              	.L30:
 399 00e3 4889C3   		movq	%rax, %rbx
GAS LISTING /tmp/ccX8BQhk.s 			page 25


  70:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****           m_what += m_error_code.message();
 400              		.loc 6 70 0
 401 00e6 488D45C0 		leaq	-64(%rbp), %rax
 402 00ea 4889C7   		movq	%rax, %rdi
 403 00ed E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 403      00
 404 00f2 4889D8   		movq	%rbx, %rax
 405 00f5 EB00     		jmp	.L25
 406              	.L29:
 407              	.L25:
  73:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp **** #endif
 408              		.loc 6 73 0
 409 00f7 4889C7   		movq	%rax, %rdi
 410 00fa E8000000 		call	__cxa_begin_catch
 410      00
 411 00ff 488B45B8 		movq	-72(%rbp), %rax
 412 0103 4889C7   		movq	%rax, %rdi
 413 0106 E8000000 		call	_ZNKSt13runtime_error4whatEv
 413      00
 414 010b 4889C3   		movq	%rax, %rbx
 415              	.LEHB2:
 416 010e E8000000 		call	__cxa_end_catch
 416      00
 417              	.LEHE2:
 418 0113 EBBA     		jmp	.L23
 419              	.L31:
 420 0115 4883FAFF 		cmpq	$-1, %rdx
 421 0119 7408     		je	.L27
 422 011b 4889C7   		movq	%rax, %rdi
 423              	.LEHB3:
 424 011e E8000000 		call	_Unwind_Resume
 424      00
 425              	.L27:
  59:/home/brendan/Boost/boost_1_60_0/boost/system/system_error.hpp ****     // see http://www.boost.org/more/error_handling.html for lazy build rationale
 426              		.loc 6 59 0
 427 0123 4889C7   		movq	%rax, %rdi
 428 0126 E8000000 		call	__cxa_call_unexpected
 428      00
 429              	.LEHE3:
 430              	.L32:
 431              		.loc 6 77 0
 432 012b E8000000 		call	__stack_chk_fail
 432      00
 433              	.L28:
 434 0130 4883C448 		addq	$72, %rsp
 435 0134 5B       		popq	%rbx
 436 0135 5D       		popq	%rbp
 437              		.cfi_def_cfa 7, 8
 438 0136 C3       		ret
 439              		.cfi_endproc
 440              	.LFE8133:
 441              		.globl	__gxx_personality_v0
 442              		.section	.gcc_except_table._ZNK5boost6system12system_error4whatEv,"aG",@progbits,_ZNK5boost6system
 443              		.align 4
 444              	.LLSDA8133:
 445 0000 FF       		.byte	0xff
 446 0001 03       		.byte	0x3
GAS LISTING /tmp/ccX8BQhk.s 			page 26


 447 0002 25       		.uleb128 .LLSDATT8133-.LLSDATTD8133
 448              	.LLSDATTD8133:
 449 0003 01       		.byte	0x1
 450 0004 16       		.uleb128 .LLSDACSE8133-.LLSDACSB8133
 451              	.LLSDACSB8133:
 452 0005 51       		.uleb128 .LEHB0-.LFB8133
 453 0006 48       		.uleb128 .LEHE0-.LEHB0
 454 0007 F701     		.uleb128 .L29-.LFB8133
 455 0009 01       		.uleb128 0x1
 456 000a AB01     		.uleb128 .LEHB1-.LFB8133
 457 000c 05       		.uleb128 .LEHE1-.LEHB1
 458 000d E301     		.uleb128 .L30-.LFB8133
 459 000f 03       		.uleb128 0x3
 460 0010 8E02     		.uleb128 .LEHB2-.LFB8133
 461 0012 05       		.uleb128 .LEHE2-.LEHB2
 462 0013 9502     		.uleb128 .L31-.LFB8133
 463 0015 05       		.uleb128 0x5
 464 0016 9E02     		.uleb128 .LEHB3-.LFB8133
 465 0018 0D       		.uleb128 .LEHE3-.LEHB3
 466 0019 00       		.uleb128 0
 467 001a 00       		.uleb128 0
 468              	.LLSDACSE8133:
 469 001b 01       		.byte	0x1
 470 001c 00       		.byte	0
 471 001d 00       		.byte	0
 472 001e 7D       		.byte	0x7d
 473 001f 7F       		.byte	0x7f
 474 0020 00       		.byte	0
 475 0021 000000   		.align 4
 476 0024 00000000 		.long	0
 477              	
 478              	.LLSDATT8133:
 479 0028 00       		.byte	0
 480              		.section	.text._ZNK5boost6system12system_error4whatEv,"axG",@progbits,_ZNK5boost6system12system_er
 482              		.section	.rodata
 483 0006 0000     		.align 4
 486              	_ZN9__gnu_cxxL21__default_lock_policyE:
 487 0008 02000000 		.long	2
 488              		.section	.text._ZN5boost10filesystem4pathD2Ev,"axG",@progbits,_ZN5boost10filesystem4pathD5Ev,comda
 489              		.align 2
 490              		.weak	_ZN5boost10filesystem4pathD2Ev
 492              	_ZN5boost10filesystem4pathD2Ev:
 493              	.LFB8993:
 494              		.file 7 "/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** //  filesystem path.hpp  ---------------------------------------------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** //  Copyright Beman Dawes 2002-2005, 2009
   4:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** //  Copyright Vladimir Prus 2002
   5:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
   6:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** //  Distributed under the Boost Software License, Version 1.0.
   7:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** //  See http://www.boost.org/LICENSE_1_0.txt
   8:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** //  Library home page: http://www.boost.org/libs/filesystem
  10:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** //  path::stem(), extension(), and replace_extension() are based on
  12:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** //  basename(), extension(), and change_extension() from the original
  13:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** //  filesystem/convenience.hpp header by Vladimir Prus.
GAS LISTING /tmp/ccX8BQhk.s 			page 27


  14:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  15:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #ifndef BOOST_FILESYSTEM_PATH_HPP
  16:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #define BOOST_FILESYSTEM_PATH_HPP
  17:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  18:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/config.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  20:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** # if defined( BOOST_NO_STD_WSTRING )
  21:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #   error Configuration not supported: Boost.Filesystem V3 and later requires std::wstring support
  22:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** # endif
  23:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  24:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/filesystem/config.hpp>
  25:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/filesystem/path_traits.hpp>  // includes <cwchar>
  26:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/system/error_code.hpp>
  27:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/system/system_error.hpp>
  28:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/iterator/iterator_facade.hpp>
  29:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/shared_ptr.hpp>
  30:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/io/detail/quoted_manip.hpp>
  31:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/static_assert.hpp>
  32:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/functional/hash_fwd.hpp>
  33:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/type_traits/is_integral.hpp>
  34:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <string>
  35:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <iterator>
  36:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <cstring>
  37:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <iosfwd>
  38:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <stdexcept>
  39:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <cassert>
  40:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <locale>
  41:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <algorithm>
  42:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  43:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** #include <boost/config/abi_prefix.hpp> // must be the last #include
  44:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  45:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** namespace boost
  46:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** {
  47:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** namespace filesystem
  48:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** {
  49:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  50:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****   //------------------------------------------------------------------------------------//
  51:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****   //                                                                                    //
  52:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****   //                                    class path                                      //
  53:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****   //                                                                                    //
  54:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****   //------------------------------------------------------------------------------------//
  55:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  56:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****   class BOOST_FILESYSTEM_DECL path
 495              		.loc 7 56 0
 496              		.cfi_startproc
 497 0000 55       		pushq	%rbp
 498              		.cfi_def_cfa_offset 16
 499              		.cfi_offset 6, -16
 500 0001 4889E5   		movq	%rsp, %rbp
 501              		.cfi_def_cfa_register 6
 502 0004 4883EC10 		subq	$16, %rsp
 503 0008 48897DF8 		movq	%rdi, -8(%rbp)
 504              	.LBB3:
 505              		.loc 7 56 0
 506 000c 488B45F8 		movq	-8(%rbp), %rax
 507 0010 4889C7   		movq	%rax, %rdi
 508 0013 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
GAS LISTING /tmp/ccX8BQhk.s 			page 28


 508      00
 509              	.LBE3:
 510 0018 90       		nop
 511 0019 C9       		leave
 512              		.cfi_def_cfa 7, 8
 513 001a C3       		ret
 514              		.cfi_endproc
 515              	.LFE8993:
 517              		.weak	_ZN5boost10filesystem4pathD1Ev
 518              		.set	_ZN5boost10filesystem4pathD1Ev,_ZN5boost10filesystem4pathD2Ev
 519              		.section	.text._ZN5boost10filesystem4pathC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,
 520              		.align 2
 521              		.weak	_ZN5boost10filesystem4pathC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 523              	_ZN5boost10filesystem4pathC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 524              	.LFB9012:
  57:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****   {
  58:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****   public:
  59:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  60:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  value_type is the character type used by the operating system API to
  61:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  represent paths.
  62:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  63:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** # ifdef BOOST_WINDOWS_API
  64:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     typedef wchar_t                        value_type;
  65:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     BOOST_STATIC_CONSTEXPR value_type      preferred_separator = L'\\';
  66:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** # else 
  67:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     typedef char                           value_type;
  68:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     BOOST_STATIC_CONSTEXPR value_type      preferred_separator = '/';
  69:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** # endif
  70:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     typedef std::basic_string<value_type>  string_type;  
  71:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     typedef std::codecvt<wchar_t, char,
  72:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****                          std::mbstate_t>   codecvt_type;
  73:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  74:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  75:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  ----- character encoding conversions -----
  76:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
  77:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  Following the principle of least astonishment, path input arguments
  78:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  passed to or obtained from the operating system via objects of
  79:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  class path behave as if they were directly passed to or
  80:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  obtained from the O/S API, unless conversion is explicitly requested.
  81:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //
  82:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  POSIX specfies that path strings are passed unchanged to and from the
  83:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  API. Note that this is different from the POSIX command line utilities,
  84:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  which convert according to a locale.
  85:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //
  86:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  Thus for POSIX, char strings do not undergo conversion.  wchar_t strings
  87:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  are converted to/from char using the path locale or, if a conversion
  88:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  argument is given, using a conversion object modeled on
  89:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  std::wstring_convert.
  90:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //
  91:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  The path locale, which is global to the thread, can be changed by the
  92:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  imbue() function. It is initialized to an implementation defined locale.
  93:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  
  94:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  For Windows, wchar_t strings do not undergo conversion. char strings
  95:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  are converted using the "ANSI" or "OEM" code pages, as determined by
  96:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  the AreFileApisANSI() function, or, if a conversion argument is given,
  97:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  using a conversion object modeled on std::wstring_convert.
  98:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //
GAS LISTING /tmp/ccX8BQhk.s 			page 29


  99:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  See m_pathname comments for further important rationale.
 100:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
 101:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  TODO: rules needed for operating systems that use / or .
 102:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  differently, or format directory paths differently from file paths. 
 103:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //
 104:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  **********************************************************************************
 105:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //
 106:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  More work needed: How to handle an operating system that may have
 107:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  slash characters or dot characters in valid filenames, either because
 108:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  it doesn't follow the POSIX standard, or because it allows MBCS
 109:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  filename encodings that may contain slash or dot characters. For
 110:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  example, ISO/IEC 2022 (JIS) encoding which allows switching to
 111:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  JIS x0208-1983 encoding. A valid filename in this set of encodings is
 112:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  0x1B 0x24 0x42 [switch to X0208-1983] 0x24 0x2F [U+304F Kiragana letter KU]
 113:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //                                             ^^^^
 114:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  Note that 0x2F is the ASCII slash character
 115:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //
 116:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  **********************************************************************************
 117:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
 118:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  Supported source arguments: half-open iterator range, container, c-array,
 119:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  and single pointer to null terminated string.
 120:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
 121:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  All source arguments except pointers to null terminated byte strings support
 122:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  multi-byte character strings which may have embedded nulls. Embedded null
 123:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  support is required for some Asian languages on Windows.
 124:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
 125:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  "const codecvt_type& cvt=codecvt()" default arguments are not used because this
 126:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  limits the impact of locale("") initialization failures on POSIX systems to programs
 127:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  that actually depend on locale(""). It further ensures that exceptions thrown
 128:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  as a result of such failues occur after main() has started, so can be caught. 
 129:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
 130:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     //  -----  constructors  -----
 131:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
 132:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     path() BOOST_NOEXCEPT {}                                          
 133:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     path(const path& p) : m_pathname(p.m_pathname) {}
 134:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
 135:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     template <class Source>
 136:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     path(Source const& source,
 137:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****       typename boost::enable_if<path_traits::is_pathable<
 138:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****         typename boost::decay<Source>::type> >::type* =0)
 139:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     {
 140:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****       path_traits::dispatch(source, m_pathname);
 141:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     }
 142:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp **** 
 143:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     path(const value_type* s) : m_pathname(s) {}
 144:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     path(value_type* s) : m_pathname(s) {}
 145:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     path(const string_type& s) : m_pathname(s) {}
 146:/home/brendan/Boost/boost_1_60_0/boost/filesystem/path.hpp ****     path(string_type& s) : m_pathname(s) {}
 525              		.loc 7 146 0
 526              		.cfi_startproc
 527 0000 55       		pushq	%rbp
 528              		.cfi_def_cfa_offset 16
 529              		.cfi_offset 6, -16
 530 0001 4889E5   		movq	%rsp, %rbp
 531              		.cfi_def_cfa_register 6
 532 0004 4883EC10 		subq	$16, %rsp
 533 0008 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 30


 534 000c 488975F0 		movq	%rsi, -16(%rbp)
 535              	.LBB4:
 536              		.loc 7 146 0
 537 0010 488B45F8 		movq	-8(%rbp), %rax
 538 0014 488B55F0 		movq	-16(%rbp), %rdx
 539 0018 4889D6   		movq	%rdx, %rsi
 540 001b 4889C7   		movq	%rax, %rdi
 541 001e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
 541      00
 542              	.LBE4:
 543 0023 90       		nop
 544 0024 C9       		leave
 545              		.cfi_def_cfa 7, 8
 546 0025 C3       		ret
 547              		.cfi_endproc
 548              	.LFE9012:
 550              		.weak	_ZN5boost10filesystem4pathC1ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 551              		.set	_ZN5boost10filesystem4pathC1ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,_ZN5boost1
 552              		.section	.text._ZN5boost10filesystem18create_directoriesERKNS0_4pathE,"axG",@progbits,_ZN5boost10f
 553              		.weak	_ZN5boost10filesystem18create_directoriesERKNS0_4pathE
 555              	_ZN5boost10filesystem18create_directoriesERKNS0_4pathE:
 556              	.LFB9275:
 557              		.file 8 "/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //  boost/filesystem/operations.hpp  ---------------------------------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //  Copyright Beman Dawes 2002-2009
   4:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //  Copyright Jan Langer 2002
   5:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //  Copyright Dietmar Kuehl 2001                                        
   6:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //  Copyright Vladimir Prus 2002
   7:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****    
   8:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //  Distributed under the Boost Software License, Version 1.0.
   9:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //  See http://www.boost.org/LICENSE_1_0.txt
  10:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //  Library home page: http://www.boost.org/libs/filesystem
  12:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  13:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
  14:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  15:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #ifndef BOOST_FILESYSTEM3_OPERATIONS_HPP
  16:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #define BOOST_FILESYSTEM3_OPERATIONS_HPP
  17:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  18:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/config.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  20:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # if defined( BOOST_NO_STD_WSTRING )
  21:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #   error Configuration not supported: Boost.Filesystem V3 and later requires std::wstring support
  22:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # endif
  23:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  24:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/filesystem/config.hpp>
  25:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/filesystem/path.hpp>
  26:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  27:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/detail/scoped_enum_emulation.hpp>
  28:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/detail/bitmask.hpp>
  29:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/system/error_code.hpp>
  30:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/system/system_error.hpp>
  31:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/shared_ptr.hpp>
  32:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/utility/enable_if.hpp>
  33:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/type_traits/is_same.hpp>
  34:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/cstdint.hpp>
GAS LISTING /tmp/ccX8BQhk.s 			page 31


  35:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/range/mutable_iterator.hpp>
  36:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/range/const_iterator.hpp>
  37:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/assert.hpp>
  38:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <string>
  39:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <utility> // for pair
  40:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <ctime>
  41:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <vector>
  42:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <stack>
  43:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  44:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #ifdef BOOST_WINDOWS_API
  45:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #  include <fstream>
  46:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #endif
  47:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  48:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #include <boost/config/abi_prefix.hpp> // must be the last #include
  49:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  50:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
  51:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  52:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** namespace boost
  53:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** {
  54:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   namespace filesystem
  55:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
  56:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  57:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     //--------------------------------------------------------------------------------------//
  58:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     //                                                                                      //
  59:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     //                            class filesystem_error                                    //
  60:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     //                                                                                      //
  61:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     //--------------------------------------------------------------------------------------//
  62:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  63:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     class BOOST_SYMBOL_VISIBLE filesystem_error : public system::system_error
  64:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     {
  65:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       // see http://www.boost.org/more/error_handling.html for design rationale
  66:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  67:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       // all functions are inline to avoid issues with crossing dll boundaries
  68:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  69:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       // functions previously throw() are now BOOST_NOEXCEPT_OR_NOTHROW
  70:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       // functions previously without throw() are now BOOST_NOEXCEPT
  71:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  72:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     public:
  73:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       // compiler generates copy constructor and copy assignment
  74:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  75:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       filesystem_error(
  76:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         const std::string & what_arg, system::error_code ec) BOOST_NOEXCEPT
  77:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         : system::system_error(ec, what_arg)
  78:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       {
  79:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         try
  80:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         {
  81:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           m_imp_ptr.reset(new m_imp);
  82:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         }
  83:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         catch (...) { m_imp_ptr.reset(); }
  84:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       }
  85:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  86:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       filesystem_error(
  87:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         const std::string & what_arg, const path& path1_arg,
  88:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         system::error_code ec) BOOST_NOEXCEPT
  89:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         : system::system_error(ec, what_arg)
  90:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       {
  91:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         try
GAS LISTING /tmp/ccX8BQhk.s 			page 32


  92:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         {
  93:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           m_imp_ptr.reset(new m_imp);
  94:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           m_imp_ptr->m_path1 = path1_arg;
  95:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         }
  96:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         catch (...) { m_imp_ptr.reset(); }
  97:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       }
  98:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
  99:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       filesystem_error(
 100:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         const std::string & what_arg, const path& path1_arg,
 101:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         const path& path2_arg, system::error_code ec) BOOST_NOEXCEPT
 102:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         : system::system_error(ec, what_arg)
 103:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       {
 104:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         try
 105:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         {
 106:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           m_imp_ptr.reset(new m_imp);
 107:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           m_imp_ptr->m_path1 = path1_arg;
 108:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           m_imp_ptr->m_path2 = path2_arg;
 109:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         }
 110:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         catch (...) { m_imp_ptr.reset(); }
 111:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       }
 112:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 113:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       ~filesystem_error() BOOST_NOEXCEPT_OR_NOTHROW{}
 114:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 115:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         const path& path1() const BOOST_NOEXCEPT
 116:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       {
 117:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         static const path empty_path;
 118:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         return m_imp_ptr.get() ? m_imp_ptr->m_path1 : empty_path;
 119:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       }
 120:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         const path& path2() const  BOOST_NOEXCEPT
 121:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       {
 122:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         static const path empty_path;
 123:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         return m_imp_ptr.get() ? m_imp_ptr->m_path2 : empty_path;
 124:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       }
 125:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 126:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         const char* what() const BOOST_NOEXCEPT_OR_NOTHROW
 127:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       {
 128:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         if (!m_imp_ptr.get())
 129:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         return system::system_error::what();
 130:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 131:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         try
 132:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         {
 133:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           if (m_imp_ptr->m_what.empty())
 134:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           {
 135:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****             m_imp_ptr->m_what = system::system_error::what();
 136:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****             if (!m_imp_ptr->m_path1.empty())
 137:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****             {
 138:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****               m_imp_ptr->m_what += ": \"";
 139:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****               m_imp_ptr->m_what += m_imp_ptr->m_path1.string();
 140:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****               m_imp_ptr->m_what += "\"";
 141:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****             }
 142:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****             if (!m_imp_ptr->m_path2.empty())
 143:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****             {
 144:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****               m_imp_ptr->m_what += ", \"";
 145:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****               m_imp_ptr->m_what += m_imp_ptr->m_path2.string();
 146:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****               m_imp_ptr->m_what += "\"";
 147:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****             }
 148:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           }
GAS LISTING /tmp/ccX8BQhk.s 			page 33


 149:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           return m_imp_ptr->m_what.c_str();
 150:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         }
 151:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         catch (...)
 152:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         {
 153:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****           return system::system_error::what();
 154:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         }
 155:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       }
 156:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 157:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     private:
 158:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       struct m_imp
 159:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       {
 160:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         path         m_path1; // may be empty()
 161:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         path         m_path2; // may be empty()
 162:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         std::string  m_what;  // not built until needed
 163:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       };
 164:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       boost::shared_ptr<m_imp> m_imp_ptr;
 165:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     };
 166:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 167:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 168:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                                     file_type                                        //
 169:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 170:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 171:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   enum file_type
 172:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   { 
 173:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     status_error,
 174:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #   ifndef BOOST_FILESYSTEM_NO_DEPRECATED
 175:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     status_unknown = status_error,
 176:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** #   endif
 177:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     file_not_found,
 178:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     regular_file,
 179:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     directory_file,
 180:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     // the following may not apply to some operating systems or file systems
 181:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     symlink_file,
 182:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     block_file,
 183:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     character_file,
 184:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     fifo_file,
 185:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     socket_file,
 186:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     reparse_file,  // Windows: FILE_ATTRIBUTE_REPARSE_POINT that is not a symlink
 187:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     type_unknown,  // file does exist, but isn't one of the above types or
 188:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                    // we don't have strong enough permission to find its type
 189:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 190:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     _detail_directory_symlink  // internal use only; never exposed to users
 191:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   };
 192:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 193:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 194:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                                       perms                                          //
 195:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 196:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 197:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   enum perms
 198:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 199:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     no_perms = 0,       // file_not_found is no_perms rather than perms_not_known
 200:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 201:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     // POSIX equivalent macros given in comments.
 202:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     // Values are from POSIX and are given in octal per the POSIX standard.
 203:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 204:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     // permission bits
 205:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     
GAS LISTING /tmp/ccX8BQhk.s 			page 34


 206:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     owner_read = 0400,  // S_IRUSR, Read permission, owner
 207:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     owner_write = 0200, // S_IWUSR, Write permission, owner
 208:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     owner_exe = 0100,   // S_IXUSR, Execute/search permission, owner
 209:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     owner_all = 0700,   // S_IRWXU, Read, write, execute/search by owner
 210:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 211:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     group_read = 040,   // S_IRGRP, Read permission, group
 212:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     group_write = 020,  // S_IWGRP, Write permission, group
 213:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     group_exe = 010,    // S_IXGRP, Execute/search permission, group
 214:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     group_all = 070,    // S_IRWXG, Read, write, execute/search by group
 215:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 216:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     others_read = 04,   // S_IROTH, Read permission, others
 217:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     others_write = 02,  // S_IWOTH, Write permission, others
 218:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     others_exe = 01,    // S_IXOTH, Execute/search permission, others
 219:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     others_all = 07,    // S_IRWXO, Read, write, execute/search by others
 220:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 221:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     all_all = 0777,     // owner_all|group_all|others_all
 222:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 223:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     // other POSIX bits
 224:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 225:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     set_uid_on_exe = 04000, // S_ISUID, Set-user-ID on execution
 226:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     set_gid_on_exe = 02000, // S_ISGID, Set-group-ID on execution
 227:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     sticky_bit     = 01000, // S_ISVTX,
 228:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                             // (POSIX XSI) On directories, restricted deletion flag 
 229:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                             // (V7) 'sticky bit': save swapped text even after use 
 230:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                             // (SunOS) On non-directories: don't cache this file
 231:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                             // (SVID-v4.2) On directories: restricted deletion flag
 232:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                             // Also see http://en.wikipedia.org/wiki/Sticky_bit
 233:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 234:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     perms_mask = 07777,     // all_all|set_uid_on_exe|set_gid_on_exe|sticky_bit
 235:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 236:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     perms_not_known = 0xFFFF, // present when directory_entry cache not loaded
 237:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 238:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     // options for permissions() function
 239:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 240:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     add_perms = 0x1000,     // adds the given permission bits to the current bits
 241:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     remove_perms = 0x2000,  // removes the given permission bits from the current bits;
 242:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                             // choose add_perms or remove_perms, not both; if neither add_perms
 243:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                             // nor remove_perms is given, replace the current bits with
 244:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                             // the given bits.
 245:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 246:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     symlink_perms = 0x4000  // on POSIX, don't resolve symlinks; implied on Windows
 247:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   };
 248:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 249:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   BOOST_BITMASK(perms)
 250:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 251:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 252:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                                    file_status                                       //
 253:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 254:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 255:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   class BOOST_FILESYSTEM_DECL file_status
 256:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 257:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   public:
 258:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****              file_status() BOOST_NOEXCEPT
 259:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                : m_value(status_error), m_perms(perms_not_known) {}
 260:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     explicit file_status(file_type v) BOOST_NOEXCEPT
 261:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                : m_value(v), m_perms(perms_not_known)  {}
 262:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****              file_status(file_type v, perms prms) BOOST_NOEXCEPT
GAS LISTING /tmp/ccX8BQhk.s 			page 35


 263:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                : m_value(v), m_perms(prms) {}
 264:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 265:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   //  As of October 2015 the interaction between noexcept and =default is so troublesome
 266:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   //  for VC++, GCC, and probably other compilers, that =default is not used with noexcept
 267:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   //  functions. GCC is not even consistent for the same release on different platforms.
 268:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 269:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     file_status(const file_status& rhs) BOOST_NOEXCEPT
 270:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       : m_value(rhs.m_value), m_perms(rhs.m_perms) {}
 271:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     file_status& operator=(const file_status& rhs) BOOST_NOEXCEPT
 272:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     {
 273:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       m_value = rhs.m_value;
 274:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       m_perms = rhs.m_perms;
 275:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       return *this;
 276:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     }
 277:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 278:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # if !defined(BOOST_NO_CXX11_RVALUE_REFERENCES)
 279:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     file_status(file_status&& rhs) BOOST_NOEXCEPT
 280:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     {
 281:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       m_value = std::move(rhs.m_value);
 282:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       m_perms = std::move(rhs.m_perms);
 283:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     }
 284:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     file_status& operator=(file_status&& rhs) BOOST_NOEXCEPT
 285:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     { 
 286:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       m_value = std::move(rhs.m_value);
 287:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       m_perms = std::move(rhs.m_perms);
 288:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       return *this;
 289:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     }
 290:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # endif
 291:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 292:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 293:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     // observers
 294:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     file_type  type() const BOOST_NOEXCEPT            { return m_value; }
 295:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     perms      permissions() const BOOST_NOEXCEPT     { return m_perms; } 
 296:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 297:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     // modifiers
 298:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void       type(file_type v) BOOST_NOEXCEPT       { m_value = v; }
 299:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void       permissions(perms prms) BOOST_NOEXCEPT { m_perms = prms; }
 300:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 301:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     bool operator==(const file_status& rhs) const BOOST_NOEXCEPT
 302:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       { return type() == rhs.type() && 
 303:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****         permissions() == rhs.permissions(); }
 304:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     bool operator!=(const file_status& rhs) const BOOST_NOEXCEPT
 305:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****       { return !(*this == rhs); }
 306:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 307:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   private:
 308:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     file_type   m_value;
 309:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     enum perms  m_perms;
 310:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   };
 311:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 312:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline bool type_present(file_status f) BOOST_NOEXCEPT
 313:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                           { return f.type() != status_error; }
 314:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline bool permissions_present(file_status f) BOOST_NOEXCEPT
 315:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                           {return f.permissions() != perms_not_known;}
 316:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline bool status_known(file_status f) BOOST_NOEXCEPT
 317:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                           { return type_present(f) && permissions_present(f); }
 318:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline bool exists(file_status f) BOOST_NOEXCEPT
 319:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                           { return f.type() != status_error
GAS LISTING /tmp/ccX8BQhk.s 			page 36


 320:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                                 && f.type() != file_not_found; }
 321:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline bool is_regular_file(file_status f) BOOST_NOEXCEPT
 322:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                           { return f.type() == regular_file; }
 323:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline bool is_directory(file_status f) BOOST_NOEXCEPT
 324:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                           { return f.type() == directory_file; }
 325:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline bool is_symlink(file_status f) BOOST_NOEXCEPT
 326:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                           { return f.type() == symlink_file; }
 327:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline bool is_other(file_status f) BOOST_NOEXCEPT
 328:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                           { return exists(f) && !is_regular_file(f)
 329:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                                 && !is_directory(f) && !is_symlink(f); }
 330:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 331:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # ifndef BOOST_FILESYSTEM_NO_DEPRECATED
 332:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline bool is_regular(file_status f) BOOST_NOEXCEPT { return f.type() == regular_file; }
 333:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # endif
 334:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 335:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   struct space_info
 336:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 337:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     // all values are byte counts
 338:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     boost::uintmax_t capacity;
 339:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     boost::uintmax_t free;      // <= capacity
 340:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     boost::uintmax_t available; // <= free
 341:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   };
 342:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 343:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   BOOST_SCOPED_ENUM_START(copy_option)
 344:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     {none=0, fail_if_exists = none, overwrite_if_exists};
 345:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   BOOST_SCOPED_ENUM_END
 346:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 347:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 348:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                             implementation details                                   //
 349:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 350:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 351:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   namespace detail
 352:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 353:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     //  We cannot pass a BOOST_SCOPED_ENUM to a compled function because it will result
 354:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     //  in an undefined reference if the library is compled with -std=c++0x but the use
 355:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     //  is compiled in C++03 mode, or visa versa. See tickets 6124, 6779, 10038.
 356:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     enum copy_option {none=0, fail_if_exists = none, overwrite_if_exists};
 357:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 358:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 359:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     file_status status(const path&p, system::error_code* ec=0);
 360:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 361:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     file_status symlink_status(const path& p, system::error_code* ec=0);
 362:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 363:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     bool is_empty(const path& p, system::error_code* ec=0);
 364:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 365:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     path initial_path(system::error_code* ec=0);
 366:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 367:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     path canonical(const path& p, const path& base, system::error_code* ec=0);
 368:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 369:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void copy(const path& from, const path& to, system::error_code* ec=0);
 370:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 371:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void copy_directory(const path& from, const path& to, system::error_code* ec=0);
 372:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 373:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void copy_file(const path& from, const path& to,  // See ticket #2925
 374:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                     detail::copy_option option, system::error_code* ec=0);
 375:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 376:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void copy_symlink(const path& existing_symlink, const path& new_symlink, system::error_code* ec
GAS LISTING /tmp/ccX8BQhk.s 			page 37


 377:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 378:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     bool create_directories(const path& p, system::error_code* ec=0);
 379:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 380:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     bool create_directory(const path& p, system::error_code* ec=0);
 381:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 382:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void create_directory_symlink(const path& to, const path& from,
 383:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                   system::error_code* ec=0);
 384:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 385:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void create_hard_link(const path& to, const path& from, system::error_code* ec=0);
 386:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 387:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void create_symlink(const path& to, const path& from, system::error_code* ec=0);
 388:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 389:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     path current_path(system::error_code* ec=0);
 390:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 391:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void current_path(const path& p, system::error_code* ec=0);
 392:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 393:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     bool equivalent(const path& p1, const path& p2, system::error_code* ec=0);
 394:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 395:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     boost::uintmax_t file_size(const path& p, system::error_code* ec=0);
 396:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 397:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     boost::uintmax_t hard_link_count(const path& p, system::error_code* ec=0);
 398:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 399:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     std::time_t last_write_time(const path& p, system::error_code* ec=0);
 400:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 401:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void last_write_time(const path& p, const std::time_t new_time,
 402:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                          system::error_code* ec=0);
 403:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 404:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void permissions(const path& p, perms prms, system::error_code* ec=0);
 405:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 406:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     path read_symlink(const path& p, system::error_code* ec=0);
 407:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 408:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     path relative(const path& p, const path& base, system::error_code* ec = 0);
 409:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 410:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     bool remove(const path& p, system::error_code* ec=0);
 411:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 412:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     boost::uintmax_t remove_all(const path& p, system::error_code* ec=0);
 413:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 414:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void rename(const path& old_p, const path& new_p, system::error_code* ec=0);
 415:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 416:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     void resize_file(const path& p, uintmax_t size, system::error_code* ec=0);
 417:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 418:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     space_info space(const path& p, system::error_code* ec=0); 
 419:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 420:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     path system_complete(const path& p, system::error_code* ec=0);
 421:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 422:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     path temp_directory_path(system::error_code* ec=0);
 423:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 424:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     path unique_path(const path& p, system::error_code* ec=0);
 425:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     BOOST_FILESYSTEM_DECL
 426:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     path weakly_canonical(const path& p, system::error_code* ec = 0);
 427:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   }  // namespace detail             
 428:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 429:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 430:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                                                                                      //
 431:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                             status query functions                                   //
 432:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                                                                                      //
 433:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
GAS LISTING /tmp/ccX8BQhk.s 			page 38


 434:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 435:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 436:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   file_status status(const path& p)    {return detail::status(p);}
 437:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 438:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   file_status status(const path& p, system::error_code& ec)
 439:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return detail::status(p, &ec);}
 440:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 441:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   file_status symlink_status(const path& p) {return detail::symlink_status(p);}
 442:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 443:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   file_status symlink_status(const path& p, system::error_code& ec)
 444:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return detail::symlink_status(p, &ec);}
 445:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 446:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool exists(const path& p)           {return exists(detail::status(p));}
 447:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 448:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool exists(const path& p, system::error_code& ec)
 449:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return exists(detail::status(p, &ec));}
 450:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 451:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_directory(const path& p)     {return is_directory(detail::status(p));}
 452:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 453:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_directory(const path& p, system::error_code& ec)
 454:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return is_directory(detail::status(p, &ec));}
 455:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 456:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_regular_file(const path& p)  {return is_regular_file(detail::status(p));}
 457:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 458:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_regular_file(const path& p, system::error_code& ec)
 459:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return is_regular_file(detail::status(p, &ec));}
 460:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 461:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_other(const path& p)         {return is_other(detail::status(p));}
 462:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 463:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_other(const path& p, system::error_code& ec)
 464:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return is_other(detail::status(p, &ec));}
 465:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 466:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_symlink(const path& p)       {return is_symlink(detail::symlink_status(p));}
 467:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline 
 468:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_symlink(const path& p, system::error_code& ec)
 469:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return is_symlink(detail::symlink_status(p, &ec));}
 470:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # ifndef BOOST_FILESYSTEM_NO_DEPRECATED
 471:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 472:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_regular(const path& p)       {return is_regular(detail::status(p));}
 473:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 474:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_regular(const path& p, system::error_code& ec)
 475:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return is_regular(detail::status(p, &ec));}
 476:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # endif
 477:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 478:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 479:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_empty(const path& p)         {return detail::is_empty(p);}
 480:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 481:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool is_empty(const path& p, system::error_code& ec)
 482:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return detail::is_empty(p, &ec);}
 483:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 484:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 485:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                                                                                      //
 486:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                             operational functions                                    //
 487:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                  in alphabetical order, unless otherwise noted                       //
 488:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //                                                                                      //
 489:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** //--------------------------------------------------------------------------------------//
 490:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****  
GAS LISTING /tmp/ccX8BQhk.s 			page 39


 491:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   //  forward declarations
 492:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   path current_path();  // fwd declaration
 493:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   path initial_path();
 494:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 495:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   BOOST_FILESYSTEM_DECL
 496:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   path absolute(const path& p, const path& base=current_path());
 497:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   //  If base.is_absolute(), throws nothing. Thus no need for ec argument
 498:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 499:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 500:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   path canonical(const path& p, const path& base=current_path())
 501:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return detail::canonical(p, base);}
 502:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 503:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   path canonical(const path& p, system::error_code& ec)
 504:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return detail::canonical(p, current_path(), &ec);}
 505:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 506:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   path canonical(const path& p, const path& base, system::error_code& ec)
 507:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {return detail::canonical(p, base, &ec);}
 508:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 509:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # ifndef BOOST_FILESYSTEM_NO_DEPRECATED
 510:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 511:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   path complete(const path& p)
 512:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 513:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     return absolute(p, initial_path());
 514:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   }
 515:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 516:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 517:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   path complete(const path& p, const path& base)
 518:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 519:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     return absolute(p, base);
 520:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   }
 521:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** # endif
 522:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 523:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 524:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy(const path& from, const path& to) {detail::copy(from, to);}
 525:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 526:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 527:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy(const path& from, const path& to, system::error_code& ec) BOOST_NOEXCEPT 
 528:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {detail::copy(from, to, &ec);}
 529:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 530:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy_directory(const path& from, const path& to)
 531:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {detail::copy_directory(from, to);}
 532:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 533:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy_directory(const path& from, const path& to, system::error_code& ec) BOOST_NOEXCEPT
 534:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {detail::copy_directory(from, to, &ec);}
 535:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 536:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy_file(const path& from, const path& to,   // See ticket #2925
 537:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                  BOOST_SCOPED_ENUM(copy_option) option)
 538:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 539:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     detail::copy_file(from, to, static_cast<detail::copy_option>(option));
 540:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   }
 541:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 542:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy_file(const path& from, const path& to)
 543:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 544:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     detail::copy_file(from, to, detail::fail_if_exists);
 545:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   }
 546:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 547:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy_file(const path& from, const path& to,   // See ticket #2925
GAS LISTING /tmp/ccX8BQhk.s 			page 40


 548:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                  BOOST_SCOPED_ENUM(copy_option) option, system::error_code& ec) BOOST_NOEXCEPT
 549:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 550:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     detail::copy_file(from, to, static_cast<detail::copy_option>(option), &ec);
 551:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   }
 552:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 553:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy_file(const path& from, const path& to, system::error_code& ec) BOOST_NOEXCEPT
 554:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   {
 555:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****     detail::copy_file(from, to, detail::fail_if_exists, &ec);
 556:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   }
 557:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 558:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy_symlink(const path& existing_symlink,
 559:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                     const path& new_symlink) {detail::copy_symlink(existing_symlink, new_symlink);}
 560:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp **** 
 561:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 562:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   void copy_symlink(const path& existing_symlink, const path& new_symlink,
 563:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                     system::error_code& ec) BOOST_NOEXCEPT
 564:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****                                        {detail::copy_symlink(existing_symlink, new_symlink, &ec);}
 565:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   inline
 566:/home/brendan/Boost/boost_1_60_0/boost/filesystem/operations.hpp ****   bool create_directories(const path& p) {return detail::create_directories(p);}
 558              		.loc 8 566 0
 559              		.cfi_startproc
 560 0000 55       		pushq	%rbp
 561              		.cfi_def_cfa_offset 16
 562              		.cfi_offset 6, -16
 563 0001 4889E5   		movq	%rsp, %rbp
 564              		.cfi_def_cfa_register 6
 565 0004 4883EC10 		subq	$16, %rsp
 566 0008 48897DF8 		movq	%rdi, -8(%rbp)
 567              		.loc 8 566 0
 568 000c 488B45F8 		movq	-8(%rbp), %rax
 569 0010 BE000000 		movl	$0, %esi
 569      00
 570 0015 4889C7   		movq	%rax, %rdi
 571 0018 E8000000 		call	_ZN5boost10filesystem6detail18create_directoriesERKNS0_4pathEPNS_6system10error_codeE
 571      00
 572 001d C9       		leave
 573              		.cfi_def_cfa 7, 8
 574 001e C3       		ret
 575              		.cfi_endproc
 576              	.LFE9275:
 578              		.section	.rodata
 579              	.LC5:
 580 000c 436F7565 		.string	"Couette"
 580      74746500 
 581              		.text
 582              		.align 2
 583              		.globl	_ZN16global_variablesC2Ev
 585              	_ZN16global_variablesC2Ev:
 586              	.LFB9636:
 587              		.file 9 "/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp"
   1:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** #include "global_variables.h"
   2:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** #include "domain_geometry.h"
   3:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** #include <boost/algorithm/string/replace.hpp>
   4:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** #include <boost/filesystem.hpp>
   5:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** #include <sstream>
   6:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
   7:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** using namespace boost::filesystem;
GAS LISTING /tmp/ccX8BQhk.s 			page 41


   8:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** using namespace std;
   9:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  10:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** global_variables::global_variables()
 588              		.loc 9 10 0
 589              		.cfi_startproc
 590              		.cfi_personality 0x3,__gxx_personality_v0
 591              		.cfi_lsda 0x3,.LLSDA9636
 592 0000 55       		pushq	%rbp
 593              		.cfi_def_cfa_offset 16
 594              		.cfi_offset 6, -16
 595 0001 4889E5   		movq	%rsp, %rbp
 596              		.cfi_def_cfa_register 6
 597 0004 53       		pushq	%rbx
 598 0005 4883EC28 		subq	$40, %rsp
 599              		.cfi_offset 3, -24
 600 0009 48897DD8 		movq	%rdi, -40(%rbp)
 601              		.loc 9 10 0
 602 000d 64488B04 		movq	%fs:40, %rax
 602      25280000 
 602      00
 603 0016 488945E8 		movq	%rax, -24(%rbp)
 604 001a 31C0     		xorl	%eax, %eax
 605              	.LBB5:
 606 001c BA000000 		movl	$_ZTV16global_variables+16, %edx
 606      00
 607 0021 488B45D8 		movq	-40(%rbp), %rax
 608 0025 488910   		movq	%rdx, (%rax)
 609 0028 488B45D8 		movq	-40(%rbp), %rax
 610 002c C7400803 		movl	$3, 8(%rax)
 610      000000
 611 0033 488B45D8 		movq	-40(%rbp), %rax
 612 0037 C7400C01 		movl	$1, 12(%rax)
 612      000000
 613 003e 488B45D8 		movq	-40(%rbp), %rax
 614 0042 C7401002 		movl	$2, 16(%rax)
 614      000000
 615 0049 488B45D8 		movq	-40(%rbp), %rax
 616 004d F20F1005 		movsd	.LC1(%rip), %xmm0
 616      00000000 
 617 0055 F20F1140 		movsd	%xmm0, 24(%rax)
 617      18
 618 005a 488B45D8 		movq	-40(%rbp), %rax
 619 005e F20F1005 		movsd	.LC2(%rip), %xmm0
 619      00000000 
 620 0066 F20F1140 		movsd	%xmm0, 32(%rax)
 620      20
 621 006b 488B45D8 		movq	-40(%rbp), %rax
 622 006f F20F1005 		movsd	.LC3(%rip), %xmm0
 622      00000000 
 623 0077 F20F1140 		movsd	%xmm0, 48(%rax)
 623      30
 624 007c 488B45D8 		movq	-40(%rbp), %rax
 625 0080 F20F1005 		movsd	.LC4(%rip), %xmm0
 625      00000000 
 626 0088 F20F1140 		movsd	%xmm0, 56(%rax)
 626      38
 627 008d 488B45D8 		movq	-40(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 42


 628 0091 48059800 		addq	$152, %rax
 628      0000
 629 0097 4889C7   		movq	%rax, %rdi
 630 009a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
 630      00
 631 009f 488B45D8 		movq	-40(%rbp), %rax
 632 00a3 4805B800 		addq	$184, %rax
 632      0000
 633 00a9 4889C7   		movq	%rax, %rdi
 634 00ac E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
 634      00
 635 00b1 488B45D8 		movq	-40(%rbp), %rax
 636 00b5 4805D800 		addq	$216, %rax
 636      0000
 637 00bb 4889C7   		movq	%rax, %rdi
 638 00be E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
 638      00
 639 00c3 488D45E7 		leaq	-25(%rbp), %rax
 640 00c7 4889C7   		movq	%rax, %rdi
 641 00ca E8000000 		call	_ZNSaIcEC1Ev
 641      00
 642 00cf 488B45D8 		movq	-40(%rbp), %rax
 643 00d3 488D88F8 		leaq	248(%rax), %rcx
 643      000000
 644 00da 488D45E7 		leaq	-25(%rbp), %rax
 645 00de 4889C2   		movq	%rax, %rdx
 646 00e1 BE000000 		movl	$.LC5, %esi
 646      00
 647 00e6 4889CF   		movq	%rcx, %rdi
 648              	.LEHB4:
 649 00e9 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
 649      00
 650              	.LEHE4:
 651              		.loc 9 10 0 is_stmt 0 discriminator 2
 652 00ee 488D45E7 		leaq	-25(%rbp), %rax
 653 00f2 4889C7   		movq	%rax, %rdi
 654 00f5 E8000000 		call	_ZNSaIcED1Ev
 654      00
 655              	.LBE5:
  11:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** {
  12:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     //ctor
  13:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** }
 656              		.loc 9 13 0 is_stmt 1 discriminator 2
 657 00fa 90       		nop
 658 00fb 488B45E8 		movq	-24(%rbp), %rax
 659 00ff 64483304 		xorq	%fs:40, %rax
 659      25280000 
 659      00
 660 0108 7457     		je	.L39
 661 010a EB50     		jmp	.L41
 662              	.L40:
 663 010c 4889C3   		movq	%rax, %rbx
 664              	.LBB6:
  10:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** {
 665              		.loc 9 10 0
 666 010f 488D45E7 		leaq	-25(%rbp), %rax
 667 0113 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 43


 668 0116 E8000000 		call	_ZNSaIcED1Ev
 668      00
 669 011b 488B45D8 		movq	-40(%rbp), %rax
 670 011f 4805D800 		addq	$216, %rax
 670      0000
 671 0125 4889C7   		movq	%rax, %rdi
 672 0128 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 672      00
 673 012d 488B45D8 		movq	-40(%rbp), %rax
 674 0131 4805B800 		addq	$184, %rax
 674      0000
 675 0137 4889C7   		movq	%rax, %rdi
 676 013a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 676      00
 677 013f 488B45D8 		movq	-40(%rbp), %rax
 678 0143 48059800 		addq	$152, %rax
 678      0000
 679 0149 4889C7   		movq	%rax, %rdi
 680 014c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 680      00
 681 0151 4889D8   		movq	%rbx, %rax
 682 0154 4889C7   		movq	%rax, %rdi
 683              	.LEHB5:
 684 0157 E8000000 		call	_Unwind_Resume
 684      00
 685              	.LEHE5:
 686              	.L41:
 687              	.LBE6:
 688              		.loc 9 13 0
 689 015c E8000000 		call	__stack_chk_fail
 689      00
 690              	.L39:
 691 0161 4883C428 		addq	$40, %rsp
 692 0165 5B       		popq	%rbx
 693 0166 5D       		popq	%rbp
 694              		.cfi_def_cfa 7, 8
 695 0167 C3       		ret
 696              		.cfi_endproc
 697              	.LFE9636:
 698              		.section	.gcc_except_table,"a",@progbits
 699              	.LLSDA9636:
 700 0000 FF       		.byte	0xff
 701 0001 FF       		.byte	0xff
 702 0002 01       		.byte	0x1
 703 0003 0B       		.uleb128 .LLSDACSE9636-.LLSDACSB9636
 704              	.LLSDACSB9636:
 705 0004 E901     		.uleb128 .LEHB4-.LFB9636
 706 0006 05       		.uleb128 .LEHE4-.LEHB4
 707 0007 8C02     		.uleb128 .L40-.LFB9636
 708 0009 00       		.uleb128 0
 709 000a D702     		.uleb128 .LEHB5-.LFB9636
 710 000c 05       		.uleb128 .LEHE5-.LEHB5
 711 000d 00       		.uleb128 0
 712 000e 00       		.uleb128 0
 713              	.LLSDACSE9636:
 714              		.text
 716              		.globl	_ZN16global_variablesC1Ev
GAS LISTING /tmp/ccX8BQhk.s 			page 44


 717              		.set	_ZN16global_variablesC1Ev,_ZN16global_variablesC2Ev
 718              		.align 2
 719              		.globl	_ZN16global_variablesD2Ev
 721              	_ZN16global_variablesD2Ev:
 722              	.LFB9639:
  14:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  15:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** global_variables::~global_variables()
 723              		.loc 9 15 0
 724              		.cfi_startproc
 725 0168 55       		pushq	%rbp
 726              		.cfi_def_cfa_offset 16
 727              		.cfi_offset 6, -16
 728 0169 4889E5   		movq	%rsp, %rbp
 729              		.cfi_def_cfa_register 6
 730 016c 4883EC10 		subq	$16, %rsp
 731 0170 48897DF8 		movq	%rdi, -8(%rbp)
 732              	.LBB7:
 733              		.loc 9 15 0
 734 0174 BA000000 		movl	$_ZTV16global_variables+16, %edx
 734      00
 735 0179 488B45F8 		movq	-8(%rbp), %rax
 736 017d 488910   		movq	%rdx, (%rax)
 737 0180 488B45F8 		movq	-8(%rbp), %rax
 738 0184 4805F800 		addq	$248, %rax
 738      0000
 739 018a 4889C7   		movq	%rax, %rdi
 740 018d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 740      00
 741 0192 488B45F8 		movq	-8(%rbp), %rax
 742 0196 4805D800 		addq	$216, %rax
 742      0000
 743 019c 4889C7   		movq	%rax, %rdi
 744 019f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 744      00
 745 01a4 488B45F8 		movq	-8(%rbp), %rax
 746 01a8 4805B800 		addq	$184, %rax
 746      0000
 747 01ae 4889C7   		movq	%rax, %rdi
 748 01b1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 748      00
 749 01b6 488B45F8 		movq	-8(%rbp), %rax
 750 01ba 48059800 		addq	$152, %rax
 750      0000
 751 01c0 4889C7   		movq	%rax, %rdi
 752 01c3 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 752      00
 753              	.LBE7:
  16:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** {
  17:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     //dtor
  18:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** }
 754              		.loc 9 18 0
 755 01c8 B8000000 		movl	$0, %eax
 755      00
 756 01cd 85C0     		testl	%eax, %eax
 757 01cf 740C     		je	.L42
 758              		.loc 9 18 0 is_stmt 0 discriminator 1
 759 01d1 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 45


 760 01d5 4889C7   		movq	%rax, %rdi
 761 01d8 E8000000 		call	_ZdlPv
 761      00
 762              	.L42:
 763              		.loc 9 18 0
 764 01dd C9       		leave
 765              		.cfi_def_cfa 7, 8
 766 01de C3       		ret
 767              		.cfi_endproc
 768              	.LFE9639:
 770              		.globl	_ZN16global_variablesD1Ev
 771              		.set	_ZN16global_variablesD1Ev,_ZN16global_variablesD2Ev
 772 01df 90       		.align 2
 773              		.globl	_ZN16global_variablesD0Ev
 775              	_ZN16global_variablesD0Ev:
 776              	.LFB9641:
  15:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** {
 777              		.loc 9 15 0 is_stmt 1
 778              		.cfi_startproc
 779 01e0 55       		pushq	%rbp
 780              		.cfi_def_cfa_offset 16
 781              		.cfi_offset 6, -16
 782 01e1 4889E5   		movq	%rsp, %rbp
 783              		.cfi_def_cfa_register 6
 784 01e4 4883EC10 		subq	$16, %rsp
 785 01e8 48897DF8 		movq	%rdi, -8(%rbp)
 786              		.loc 9 18 0
 787 01ec 488B45F8 		movq	-8(%rbp), %rax
 788 01f0 4889C7   		movq	%rax, %rdi
 789 01f3 E8000000 		call	_ZN16global_variablesD1Ev
 789      00
 790 01f8 488B45F8 		movq	-8(%rbp), %rax
 791 01fc 4889C7   		movq	%rax, %rdi
 792 01ff E8000000 		call	_ZdlPv
 792      00
 793 0204 C9       		leave
 794              		.cfi_def_cfa 7, 8
 795 0205 C3       		ret
 796              		.cfi_endproc
 797              	.LFE9641:
 799              		.section	.text._ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_,
 800              		.weak	_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
 802              	_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_:
 803              	.LFB9643:
 804              		.file 10 "/usr/include/c++/5/cmath"
   1:/usr/include/c++/5/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/include/c++/5/cmath **** 
   3:/usr/include/c++/5/cmath **** // Copyright (C) 1997-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/cmath **** //
   5:/usr/include/c++/5/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/cmath **** // any later version.
  10:/usr/include/c++/5/cmath **** 
  11:/usr/include/c++/5/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
GAS LISTING /tmp/ccX8BQhk.s 			page 46


  13:/usr/include/c++/5/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/cmath **** // GNU General Public License for more details.
  15:/usr/include/c++/5/cmath **** 
  16:/usr/include/c++/5/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/cmath **** 
  20:/usr/include/c++/5/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/cmath **** 
  25:/usr/include/c++/5/cmath **** /** @file include/cmath
  26:/usr/include/c++/5/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/include/c++/5/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/include/c++/5/cmath ****  *
  29:/usr/include/c++/5/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/include/c++/5/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/include/c++/5/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/include/c++/5/cmath ****  *  as macros in C).
  33:/usr/include/c++/5/cmath ****  */
  34:/usr/include/c++/5/cmath **** 
  35:/usr/include/c++/5/cmath **** //
  36:/usr/include/c++/5/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/include/c++/5/cmath **** //
  38:/usr/include/c++/5/cmath **** 
  39:/usr/include/c++/5/cmath **** #pragma GCC system_header
  40:/usr/include/c++/5/cmath **** 
  41:/usr/include/c++/5/cmath **** #include <bits/c++config.h>
  42:/usr/include/c++/5/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/include/c++/5/cmath **** #include <ext/type_traits.h>
  44:/usr/include/c++/5/cmath **** #include <math.h>
  45:/usr/include/c++/5/cmath **** 
  46:/usr/include/c++/5/cmath **** #ifndef _GLIBCXX_CMATH
  47:/usr/include/c++/5/cmath **** #define _GLIBCXX_CMATH 1
  48:/usr/include/c++/5/cmath **** 
  49:/usr/include/c++/5/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  50:/usr/include/c++/5/cmath **** #undef abs
  51:/usr/include/c++/5/cmath **** #undef div
  52:/usr/include/c++/5/cmath **** #undef acos
  53:/usr/include/c++/5/cmath **** #undef asin
  54:/usr/include/c++/5/cmath **** #undef atan
  55:/usr/include/c++/5/cmath **** #undef atan2
  56:/usr/include/c++/5/cmath **** #undef ceil
  57:/usr/include/c++/5/cmath **** #undef cos
  58:/usr/include/c++/5/cmath **** #undef cosh
  59:/usr/include/c++/5/cmath **** #undef exp
  60:/usr/include/c++/5/cmath **** #undef fabs
  61:/usr/include/c++/5/cmath **** #undef floor
  62:/usr/include/c++/5/cmath **** #undef fmod
  63:/usr/include/c++/5/cmath **** #undef frexp
  64:/usr/include/c++/5/cmath **** #undef ldexp
  65:/usr/include/c++/5/cmath **** #undef log
  66:/usr/include/c++/5/cmath **** #undef log10
  67:/usr/include/c++/5/cmath **** #undef modf
  68:/usr/include/c++/5/cmath **** #undef pow
  69:/usr/include/c++/5/cmath **** #undef sin
GAS LISTING /tmp/ccX8BQhk.s 			page 47


  70:/usr/include/c++/5/cmath **** #undef sinh
  71:/usr/include/c++/5/cmath **** #undef sqrt
  72:/usr/include/c++/5/cmath **** #undef tan
  73:/usr/include/c++/5/cmath **** #undef tanh
  74:/usr/include/c++/5/cmath **** 
  75:/usr/include/c++/5/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  76:/usr/include/c++/5/cmath **** {
  77:/usr/include/c++/5/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  78:/usr/include/c++/5/cmath **** 
  79:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  80:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR double
  81:/usr/include/c++/5/cmath ****   abs(double __x)
  82:/usr/include/c++/5/cmath ****   { return __builtin_fabs(__x); }
  83:/usr/include/c++/5/cmath **** #endif
  84:/usr/include/c++/5/cmath **** 
  85:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/include/c++/5/cmath ****   abs(float __x)
  88:/usr/include/c++/5/cmath ****   { return __builtin_fabsf(__x); }
  89:/usr/include/c++/5/cmath **** 
  90:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/include/c++/5/cmath ****   abs(long double __x)
  92:/usr/include/c++/5/cmath ****   { return __builtin_fabsl(__x); }
  93:/usr/include/c++/5/cmath **** #endif
  94:/usr/include/c++/5/cmath **** 
  95:/usr/include/c++/5/cmath ****   template<typename _Tp>
  96:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
  98:/usr/include/c++/5/cmath ****                                     double>::__type
  99:/usr/include/c++/5/cmath ****     abs(_Tp __x)
 100:/usr/include/c++/5/cmath ****     { return __builtin_fabs(__x); }
 101:/usr/include/c++/5/cmath **** 
 102:/usr/include/c++/5/cmath ****   using ::acos;
 103:/usr/include/c++/5/cmath **** 
 104:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/include/c++/5/cmath ****   acos(float __x)
 107:/usr/include/c++/5/cmath ****   { return __builtin_acosf(__x); }
 108:/usr/include/c++/5/cmath **** 
 109:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/include/c++/5/cmath ****   acos(long double __x)
 111:/usr/include/c++/5/cmath ****   { return __builtin_acosl(__x); }
 112:/usr/include/c++/5/cmath **** #endif
 113:/usr/include/c++/5/cmath **** 
 114:/usr/include/c++/5/cmath ****   template<typename _Tp>
 115:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 117:/usr/include/c++/5/cmath ****                                     double>::__type
 118:/usr/include/c++/5/cmath ****     acos(_Tp __x)
 119:/usr/include/c++/5/cmath ****     { return __builtin_acos(__x); }
 120:/usr/include/c++/5/cmath **** 
 121:/usr/include/c++/5/cmath ****   using ::asin;
 122:/usr/include/c++/5/cmath **** 
 123:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/include/c++/5/cmath ****   asin(float __x)
 126:/usr/include/c++/5/cmath ****   { return __builtin_asinf(__x); }
GAS LISTING /tmp/ccX8BQhk.s 			page 48


 127:/usr/include/c++/5/cmath **** 
 128:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/include/c++/5/cmath ****   asin(long double __x)
 130:/usr/include/c++/5/cmath ****   { return __builtin_asinl(__x); }
 131:/usr/include/c++/5/cmath **** #endif
 132:/usr/include/c++/5/cmath **** 
 133:/usr/include/c++/5/cmath ****   template<typename _Tp>
 134:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/include/c++/5/cmath ****                                     double>::__type
 137:/usr/include/c++/5/cmath ****     asin(_Tp __x)
 138:/usr/include/c++/5/cmath ****     { return __builtin_asin(__x); }
 139:/usr/include/c++/5/cmath **** 
 140:/usr/include/c++/5/cmath ****   using ::atan;
 141:/usr/include/c++/5/cmath **** 
 142:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/include/c++/5/cmath ****   atan(float __x)
 145:/usr/include/c++/5/cmath ****   { return __builtin_atanf(__x); }
 146:/usr/include/c++/5/cmath **** 
 147:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/include/c++/5/cmath ****   atan(long double __x)
 149:/usr/include/c++/5/cmath ****   { return __builtin_atanl(__x); }
 150:/usr/include/c++/5/cmath **** #endif
 151:/usr/include/c++/5/cmath **** 
 152:/usr/include/c++/5/cmath ****   template<typename _Tp>
 153:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 155:/usr/include/c++/5/cmath ****                                     double>::__type
 156:/usr/include/c++/5/cmath ****     atan(_Tp __x)
 157:/usr/include/c++/5/cmath ****     { return __builtin_atan(__x); }
 158:/usr/include/c++/5/cmath **** 
 159:/usr/include/c++/5/cmath ****   using ::atan2;
 160:/usr/include/c++/5/cmath **** 
 161:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 162:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 163:/usr/include/c++/5/cmath ****   atan2(float __y, float __x)
 164:/usr/include/c++/5/cmath ****   { return __builtin_atan2f(__y, __x); }
 165:/usr/include/c++/5/cmath **** 
 166:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 167:/usr/include/c++/5/cmath ****   atan2(long double __y, long double __x)
 168:/usr/include/c++/5/cmath ****   { return __builtin_atan2l(__y, __x); }
 169:/usr/include/c++/5/cmath **** #endif
 170:/usr/include/c++/5/cmath **** 
 171:/usr/include/c++/5/cmath ****   template<typename _Tp, typename _Up>
 172:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 173:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 174:/usr/include/c++/5/cmath ****     atan2(_Tp __y, _Up __x)
 175:/usr/include/c++/5/cmath ****     {
 176:/usr/include/c++/5/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 177:/usr/include/c++/5/cmath ****       return atan2(__type(__y), __type(__x));
 178:/usr/include/c++/5/cmath ****     }
 179:/usr/include/c++/5/cmath **** 
 180:/usr/include/c++/5/cmath ****   using ::ceil;
 181:/usr/include/c++/5/cmath **** 
 182:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
GAS LISTING /tmp/ccX8BQhk.s 			page 49


 184:/usr/include/c++/5/cmath ****   ceil(float __x)
 185:/usr/include/c++/5/cmath ****   { return __builtin_ceilf(__x); }
 186:/usr/include/c++/5/cmath **** 
 187:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/include/c++/5/cmath ****   ceil(long double __x)
 189:/usr/include/c++/5/cmath ****   { return __builtin_ceill(__x); }
 190:/usr/include/c++/5/cmath **** #endif
 191:/usr/include/c++/5/cmath **** 
 192:/usr/include/c++/5/cmath ****   template<typename _Tp>
 193:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 195:/usr/include/c++/5/cmath ****                                     double>::__type
 196:/usr/include/c++/5/cmath ****     ceil(_Tp __x)
 197:/usr/include/c++/5/cmath ****     { return __builtin_ceil(__x); }
 198:/usr/include/c++/5/cmath **** 
 199:/usr/include/c++/5/cmath ****   using ::cos;
 200:/usr/include/c++/5/cmath **** 
 201:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/include/c++/5/cmath ****   cos(float __x)
 204:/usr/include/c++/5/cmath ****   { return __builtin_cosf(__x); }
 205:/usr/include/c++/5/cmath **** 
 206:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/include/c++/5/cmath ****   cos(long double __x)
 208:/usr/include/c++/5/cmath ****   { return __builtin_cosl(__x); }
 209:/usr/include/c++/5/cmath **** #endif
 210:/usr/include/c++/5/cmath **** 
 211:/usr/include/c++/5/cmath ****   template<typename _Tp>
 212:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/include/c++/5/cmath ****                                     double>::__type
 215:/usr/include/c++/5/cmath ****     cos(_Tp __x)
 216:/usr/include/c++/5/cmath ****     { return __builtin_cos(__x); }
 217:/usr/include/c++/5/cmath **** 
 218:/usr/include/c++/5/cmath ****   using ::cosh;
 219:/usr/include/c++/5/cmath **** 
 220:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/include/c++/5/cmath ****   cosh(float __x)
 223:/usr/include/c++/5/cmath ****   { return __builtin_coshf(__x); }
 224:/usr/include/c++/5/cmath **** 
 225:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/include/c++/5/cmath ****   cosh(long double __x)
 227:/usr/include/c++/5/cmath ****   { return __builtin_coshl(__x); }
 228:/usr/include/c++/5/cmath **** #endif
 229:/usr/include/c++/5/cmath **** 
 230:/usr/include/c++/5/cmath ****   template<typename _Tp>
 231:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/include/c++/5/cmath ****                                     double>::__type
 234:/usr/include/c++/5/cmath ****     cosh(_Tp __x)
 235:/usr/include/c++/5/cmath ****     { return __builtin_cosh(__x); }
 236:/usr/include/c++/5/cmath **** 
 237:/usr/include/c++/5/cmath ****   using ::exp;
 238:/usr/include/c++/5/cmath **** 
 239:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
GAS LISTING /tmp/ccX8BQhk.s 			page 50


 241:/usr/include/c++/5/cmath ****   exp(float __x)
 242:/usr/include/c++/5/cmath ****   { return __builtin_expf(__x); }
 243:/usr/include/c++/5/cmath **** 
 244:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/include/c++/5/cmath ****   exp(long double __x)
 246:/usr/include/c++/5/cmath ****   { return __builtin_expl(__x); }
 247:/usr/include/c++/5/cmath **** #endif
 248:/usr/include/c++/5/cmath **** 
 249:/usr/include/c++/5/cmath ****   template<typename _Tp>
 250:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/include/c++/5/cmath ****                                     double>::__type
 253:/usr/include/c++/5/cmath ****     exp(_Tp __x)
 254:/usr/include/c++/5/cmath ****     { return __builtin_exp(__x); }
 255:/usr/include/c++/5/cmath **** 
 256:/usr/include/c++/5/cmath ****   using ::fabs;
 257:/usr/include/c++/5/cmath **** 
 258:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/include/c++/5/cmath ****   fabs(float __x)
 261:/usr/include/c++/5/cmath ****   { return __builtin_fabsf(__x); }
 262:/usr/include/c++/5/cmath **** 
 263:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/include/c++/5/cmath ****   fabs(long double __x)
 265:/usr/include/c++/5/cmath ****   { return __builtin_fabsl(__x); }
 266:/usr/include/c++/5/cmath **** #endif
 267:/usr/include/c++/5/cmath **** 
 268:/usr/include/c++/5/cmath ****   template<typename _Tp>
 269:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/include/c++/5/cmath ****                                     double>::__type
 272:/usr/include/c++/5/cmath ****     fabs(_Tp __x)
 273:/usr/include/c++/5/cmath ****     { return __builtin_fabs(__x); }
 274:/usr/include/c++/5/cmath **** 
 275:/usr/include/c++/5/cmath ****   using ::floor;
 276:/usr/include/c++/5/cmath **** 
 277:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/include/c++/5/cmath ****   floor(float __x)
 280:/usr/include/c++/5/cmath ****   { return __builtin_floorf(__x); }
 281:/usr/include/c++/5/cmath **** 
 282:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/include/c++/5/cmath ****   floor(long double __x)
 284:/usr/include/c++/5/cmath ****   { return __builtin_floorl(__x); }
 285:/usr/include/c++/5/cmath **** #endif
 286:/usr/include/c++/5/cmath **** 
 287:/usr/include/c++/5/cmath ****   template<typename _Tp>
 288:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 290:/usr/include/c++/5/cmath ****                                     double>::__type
 291:/usr/include/c++/5/cmath ****     floor(_Tp __x)
 292:/usr/include/c++/5/cmath ****     { return __builtin_floor(__x); }
 293:/usr/include/c++/5/cmath **** 
 294:/usr/include/c++/5/cmath ****   using ::fmod;
 295:/usr/include/c++/5/cmath **** 
 296:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 297:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
GAS LISTING /tmp/ccX8BQhk.s 			page 51


 298:/usr/include/c++/5/cmath ****   fmod(float __x, float __y)
 299:/usr/include/c++/5/cmath ****   { return __builtin_fmodf(__x, __y); }
 300:/usr/include/c++/5/cmath **** 
 301:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 302:/usr/include/c++/5/cmath ****   fmod(long double __x, long double __y)
 303:/usr/include/c++/5/cmath ****   { return __builtin_fmodl(__x, __y); }
 304:/usr/include/c++/5/cmath **** #endif
 305:/usr/include/c++/5/cmath **** 
 306:/usr/include/c++/5/cmath ****   template<typename _Tp, typename _Up>
 307:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 308:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 309:/usr/include/c++/5/cmath ****     fmod(_Tp __x, _Up __y)
 310:/usr/include/c++/5/cmath ****     {
 311:/usr/include/c++/5/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 312:/usr/include/c++/5/cmath ****       return fmod(__type(__x), __type(__y));
 313:/usr/include/c++/5/cmath ****     }
 314:/usr/include/c++/5/cmath **** 
 315:/usr/include/c++/5/cmath ****   using ::frexp;
 316:/usr/include/c++/5/cmath **** 
 317:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/include/c++/5/cmath ****   inline float
 319:/usr/include/c++/5/cmath ****   frexp(float __x, int* __exp)
 320:/usr/include/c++/5/cmath ****   { return __builtin_frexpf(__x, __exp); }
 321:/usr/include/c++/5/cmath **** 
 322:/usr/include/c++/5/cmath ****   inline long double
 323:/usr/include/c++/5/cmath ****   frexp(long double __x, int* __exp)
 324:/usr/include/c++/5/cmath ****   { return __builtin_frexpl(__x, __exp); }
 325:/usr/include/c++/5/cmath **** #endif
 326:/usr/include/c++/5/cmath **** 
 327:/usr/include/c++/5/cmath ****   template<typename _Tp>
 328:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/include/c++/5/cmath ****                                     double>::__type
 331:/usr/include/c++/5/cmath ****     frexp(_Tp __x, int* __exp)
 332:/usr/include/c++/5/cmath ****     { return __builtin_frexp(__x, __exp); }
 333:/usr/include/c++/5/cmath **** 
 334:/usr/include/c++/5/cmath ****   using ::ldexp;
 335:/usr/include/c++/5/cmath **** 
 336:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/include/c++/5/cmath ****   ldexp(float __x, int __exp)
 339:/usr/include/c++/5/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 340:/usr/include/c++/5/cmath **** 
 341:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/include/c++/5/cmath ****   ldexp(long double __x, int __exp)
 343:/usr/include/c++/5/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 344:/usr/include/c++/5/cmath **** #endif
 345:/usr/include/c++/5/cmath **** 
 346:/usr/include/c++/5/cmath ****   template<typename _Tp>
 347:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/include/c++/5/cmath ****                                     double>::__type
 350:/usr/include/c++/5/cmath ****     ldexp(_Tp __x, int __exp)
 351:/usr/include/c++/5/cmath ****     { return __builtin_ldexp(__x, __exp); }
 352:/usr/include/c++/5/cmath **** 
 353:/usr/include/c++/5/cmath ****   using ::log;
 354:/usr/include/c++/5/cmath **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 52


 355:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/include/c++/5/cmath ****   log(float __x)
 358:/usr/include/c++/5/cmath ****   { return __builtin_logf(__x); }
 359:/usr/include/c++/5/cmath **** 
 360:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/include/c++/5/cmath ****   log(long double __x)
 362:/usr/include/c++/5/cmath ****   { return __builtin_logl(__x); }
 363:/usr/include/c++/5/cmath **** #endif
 364:/usr/include/c++/5/cmath **** 
 365:/usr/include/c++/5/cmath ****   template<typename _Tp>
 366:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 368:/usr/include/c++/5/cmath ****                                     double>::__type
 369:/usr/include/c++/5/cmath ****     log(_Tp __x)
 370:/usr/include/c++/5/cmath ****     { return __builtin_log(__x); }
 371:/usr/include/c++/5/cmath **** 
 372:/usr/include/c++/5/cmath ****   using ::log10;
 373:/usr/include/c++/5/cmath **** 
 374:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 376:/usr/include/c++/5/cmath ****   log10(float __x)
 377:/usr/include/c++/5/cmath ****   { return __builtin_log10f(__x); }
 378:/usr/include/c++/5/cmath **** 
 379:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 380:/usr/include/c++/5/cmath ****   log10(long double __x)
 381:/usr/include/c++/5/cmath ****   { return __builtin_log10l(__x); }
 382:/usr/include/c++/5/cmath **** #endif
 383:/usr/include/c++/5/cmath **** 
 384:/usr/include/c++/5/cmath ****   template<typename _Tp>
 385:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 386:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 387:/usr/include/c++/5/cmath ****                                     double>::__type
 388:/usr/include/c++/5/cmath ****     log10(_Tp __x)
 389:/usr/include/c++/5/cmath ****     { return __builtin_log10(__x); }
 390:/usr/include/c++/5/cmath **** 
 391:/usr/include/c++/5/cmath ****   using ::modf;
 392:/usr/include/c++/5/cmath **** 
 393:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 394:/usr/include/c++/5/cmath ****   inline float
 395:/usr/include/c++/5/cmath ****   modf(float __x, float* __iptr)
 396:/usr/include/c++/5/cmath ****   { return __builtin_modff(__x, __iptr); }
 397:/usr/include/c++/5/cmath **** 
 398:/usr/include/c++/5/cmath ****   inline long double
 399:/usr/include/c++/5/cmath ****   modf(long double __x, long double* __iptr)
 400:/usr/include/c++/5/cmath ****   { return __builtin_modfl(__x, __iptr); }
 401:/usr/include/c++/5/cmath **** #endif
 402:/usr/include/c++/5/cmath **** 
 403:/usr/include/c++/5/cmath ****   using ::pow;
 404:/usr/include/c++/5/cmath **** 
 405:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 406:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 407:/usr/include/c++/5/cmath ****   pow(float __x, float __y)
 408:/usr/include/c++/5/cmath ****   { return __builtin_powf(__x, __y); }
 409:/usr/include/c++/5/cmath **** 
 410:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 411:/usr/include/c++/5/cmath ****   pow(long double __x, long double __y)
GAS LISTING /tmp/ccX8BQhk.s 			page 53


 412:/usr/include/c++/5/cmath ****   { return __builtin_powl(__x, __y); }
 413:/usr/include/c++/5/cmath **** 
 414:/usr/include/c++/5/cmath **** #if __cplusplus < 201103L
 415:/usr/include/c++/5/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 416:/usr/include/c++/5/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 417:/usr/include/c++/5/cmath ****   inline double
 418:/usr/include/c++/5/cmath ****   pow(double __x, int __i)
 419:/usr/include/c++/5/cmath ****   { return __builtin_powi(__x, __i); }
 420:/usr/include/c++/5/cmath **** 
 421:/usr/include/c++/5/cmath ****   inline float
 422:/usr/include/c++/5/cmath ****   pow(float __x, int __n)
 423:/usr/include/c++/5/cmath ****   { return __builtin_powif(__x, __n); }
 424:/usr/include/c++/5/cmath **** 
 425:/usr/include/c++/5/cmath ****   inline long double
 426:/usr/include/c++/5/cmath ****   pow(long double __x, int __n)
 427:/usr/include/c++/5/cmath ****   { return __builtin_powil(__x, __n); }
 428:/usr/include/c++/5/cmath **** #endif
 429:/usr/include/c++/5/cmath **** #endif
 430:/usr/include/c++/5/cmath **** 
 431:/usr/include/c++/5/cmath ****   template<typename _Tp, typename _Up>
 432:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 433:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 434:/usr/include/c++/5/cmath ****     pow(_Tp __x, _Up __y)
 435:/usr/include/c++/5/cmath ****     {
 436:/usr/include/c++/5/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 437:/usr/include/c++/5/cmath ****       return pow(__type(__x), __type(__y));
 438:/usr/include/c++/5/cmath ****     }
 439:/usr/include/c++/5/cmath **** 
 440:/usr/include/c++/5/cmath ****   using ::sin;
 441:/usr/include/c++/5/cmath **** 
 442:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/include/c++/5/cmath ****   sin(float __x)
 445:/usr/include/c++/5/cmath ****   { return __builtin_sinf(__x); }
 446:/usr/include/c++/5/cmath **** 
 447:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/include/c++/5/cmath ****   sin(long double __x)
 449:/usr/include/c++/5/cmath ****   { return __builtin_sinl(__x); }
 450:/usr/include/c++/5/cmath **** #endif
 451:/usr/include/c++/5/cmath **** 
 452:/usr/include/c++/5/cmath ****   template<typename _Tp>
 453:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/include/c++/5/cmath ****                                     double>::__type
 456:/usr/include/c++/5/cmath ****     sin(_Tp __x)
 457:/usr/include/c++/5/cmath ****     { return __builtin_sin(__x); }
 458:/usr/include/c++/5/cmath **** 
 459:/usr/include/c++/5/cmath ****   using ::sinh;
 460:/usr/include/c++/5/cmath **** 
 461:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/include/c++/5/cmath ****   sinh(float __x)
 464:/usr/include/c++/5/cmath ****   { return __builtin_sinhf(__x); }
 465:/usr/include/c++/5/cmath **** 
 466:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/include/c++/5/cmath ****   sinh(long double __x)
 468:/usr/include/c++/5/cmath ****   { return __builtin_sinhl(__x); }
GAS LISTING /tmp/ccX8BQhk.s 			page 54


 469:/usr/include/c++/5/cmath **** #endif
 470:/usr/include/c++/5/cmath **** 
 471:/usr/include/c++/5/cmath ****   template<typename _Tp>
 472:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/include/c++/5/cmath ****                                     double>::__type
 475:/usr/include/c++/5/cmath ****     sinh(_Tp __x)
 476:/usr/include/c++/5/cmath ****     { return __builtin_sinh(__x); }
 477:/usr/include/c++/5/cmath **** 
 478:/usr/include/c++/5/cmath ****   using ::sqrt;
 479:/usr/include/c++/5/cmath **** 
 480:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/include/c++/5/cmath ****   sqrt(float __x)
 483:/usr/include/c++/5/cmath ****   { return __builtin_sqrtf(__x); }
 484:/usr/include/c++/5/cmath **** 
 485:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/include/c++/5/cmath ****   sqrt(long double __x)
 487:/usr/include/c++/5/cmath ****   { return __builtin_sqrtl(__x); }
 488:/usr/include/c++/5/cmath **** #endif
 489:/usr/include/c++/5/cmath **** 
 490:/usr/include/c++/5/cmath ****   template<typename _Tp>
 491:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/include/c++/5/cmath ****                                     double>::__type
 494:/usr/include/c++/5/cmath ****     sqrt(_Tp __x)
 805              		.loc 10 494 0
 806              		.cfi_startproc
 807 0000 55       		pushq	%rbp
 808              		.cfi_def_cfa_offset 16
 809              		.cfi_offset 6, -16
 810 0001 4889E5   		movq	%rsp, %rbp
 811              		.cfi_def_cfa_register 6
 812 0004 4883EC10 		subq	$16, %rsp
 813 0008 897DFC   		movl	%edi, -4(%rbp)
 495:/usr/include/c++/5/cmath ****     { return __builtin_sqrt(__x); }
 814              		.loc 10 495 0
 815 000b 660FEFC9 		pxor	%xmm1, %xmm1
 816 000f F20F2A4D 		cvtsi2sd	-4(%rbp), %xmm1
 816      FC
 817 0014 F20F51C1 		sqrtsd	%xmm1, %xmm0
 818 0018 660F2EC0 		ucomisd	%xmm0, %xmm0
 819 001c 7A06     		jp	.L47
 820 001e 660F2EC0 		ucomisd	%xmm0, %xmm0
 821 0022 7409     		je	.L46
 822              	.L47:
 823 0024 660F28C1 		movapd	%xmm1, %xmm0
 824 0028 E8000000 		call	sqrt
 824      00
 825              	.L46:
 826 002d C9       		leave
 827              		.cfi_def_cfa 7, 8
 828 002e C3       		ret
 829              		.cfi_endproc
 830              	.LFE9643:
 832              		.text
 833              		.align 2
GAS LISTING /tmp/ccX8BQhk.s 			page 55


 834              		.globl	_ZN16global_variables10initialiseE15domain_geometry
 836              	_ZN16global_variables10initialiseE15domain_geometry:
 837              	.LFB9642:
  19:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  20:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** void global_variables::initialise(domain_geometry domain){
 838              		.loc 9 20 0
 839              		.cfi_startproc
 840              		.cfi_personality 0x3,__gxx_personality_v0
 841              		.cfi_lsda 0x3,.LLSDA9642
 842 0206 55       		pushq	%rbp
 843              		.cfi_def_cfa_offset 16
 844              		.cfi_offset 6, -16
 845 0207 4889E5   		movq	%rsp, %rbp
 846              		.cfi_def_cfa_register 6
 847 020a 53       		pushq	%rbx
 848 020b 4883EC58 		subq	$88, %rsp
 849              		.cfi_offset 3, -24
 850 020f 48897DB8 		movq	%rdi, -72(%rbp)
 851 0213 488975B0 		movq	%rsi, -80(%rbp)
 852              		.loc 9 20 0
 853 0217 64488B04 		movq	%fs:40, %rax
 853      25280000 
 853      00
 854 0220 488945E8 		movq	%rax, -24(%rbp)
 855 0224 31C0     		xorl	%eax, %eax
  21:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     //tau = 0.5 + viscosity / dt/ gamma
  22:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     // viscosity = MA/root(3) /Re
  23:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     tau = 0.5 + mach_number * sqrt(3)/reynolds_number * domain.Y/domain.dt*pre_conditioned_gamma;
 856              		.loc 9 23 0
 857 0226 488B45B8 		movq	-72(%rbp), %rax
 858 022a F20F1050 		movsd	80(%rax), %xmm2
 858      50
 859 022f F20F1155 		movsd	%xmm2, -88(%rbp)
 859      A8
 860 0234 BF030000 		movl	$3, %edi
 860      00
 861 0239 E8000000 		call	_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
 861      00
 862 023e F20F5945 		mulsd	-88(%rbp), %xmm0
 862      A8
 863 0243 488B45B8 		movq	-72(%rbp), %rax
 864 0247 F20F1048 		movsd	72(%rax), %xmm1
 864      48
 865 024c F20F5EC1 		divsd	%xmm1, %xmm0
 866 0250 488B45B0 		movq	-80(%rbp), %rax
 867 0254 F20F1048 		movsd	16(%rax), %xmm1
 867      10
 868 0259 F20F59C1 		mulsd	%xmm1, %xmm0
 869 025d 488B45B0 		movq	-80(%rbp), %rax
 870 0261 F20F1048 		movsd	40(%rax), %xmm1
 870      28
 871 0266 F20F5EC1 		divsd	%xmm1, %xmm0
 872 026a 488B45B8 		movq	-72(%rbp), %rax
 873 026e F20F1048 		movsd	48(%rax), %xmm1
 873      30
 874 0273 F20F59C1 		mulsd	%xmm1, %xmm0
 875 0277 F20F100D 		movsd	.LC6(%rip), %xmm1
GAS LISTING /tmp/ccX8BQhk.s 			page 56


 875      00000000 
 876 027f F20F58C1 		addsd	%xmm1, %xmm0
 877 0283 488B45B8 		movq	-72(%rbp), %rax
 878 0287 F20F1140 		movsd	%xmm0, 96(%rax)
 878      60
  24:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     knudsen_number = mach_number / reynolds_number;
 879              		.loc 9 24 0
 880 028c 488B45B8 		movq	-72(%rbp), %rax
 881 0290 F20F1040 		movsd	80(%rax), %xmm0
 881      50
 882 0295 488B45B8 		movq	-72(%rbp), %rax
 883 0299 F20F1048 		movsd	72(%rax), %xmm1
 883      48
 884 029e F20F5EC1 		divsd	%xmm1, %xmm0
 885 02a2 488B45B8 		movq	-72(%rbp), %rax
 886 02a6 F20F1140 		movsd	%xmm0, 88(%rax)
 886      58
  25:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     output_file = create_output_directory();
 887              		.loc 9 25 0
 888 02ab 488D45C0 		leaq	-64(%rbp), %rax
 889 02af 488B55B8 		movq	-72(%rbp), %rdx
 890 02b3 4889D6   		movq	%rdx, %rsi
 891 02b6 4889C7   		movq	%rax, %rdi
 892              	.LEHB6:
 893 02b9 E8000000 		call	_ZN16global_variables23create_output_directoryB5cxx11Ev
 893      00
 894              	.LEHE6:
 895 02be 488B45B8 		movq	-72(%rbp), %rax
 896 02c2 488D90D8 		leaq	216(%rax), %rdx
 896      000000
 897 02c9 488D45C0 		leaq	-64(%rbp), %rax
 898 02cd 4889C6   		movq	%rax, %rsi
 899 02d0 4889D7   		movq	%rdx, %rdi
 900              	.LEHB7:
 901 02d3 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
 901      00
 902              	.LEHE7:
 903              		.loc 9 25 0 is_stmt 0 discriminator 2
 904 02d8 488D45C0 		leaq	-64(%rbp), %rax
 905 02dc 4889C7   		movq	%rax, %rdi
 906 02df E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 906      00
  26:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** }
 907              		.loc 9 26 0 is_stmt 1 discriminator 2
 908 02e4 90       		nop
 909 02e5 488B45E8 		movq	-24(%rbp), %rax
 910 02e9 64483304 		xorq	%fs:40, %rax
 910      25280000 
 910      00
 911 02f2 7421     		je	.L51
 912 02f4 EB1A     		jmp	.L53
 913              	.L52:
 914 02f6 4889C3   		movq	%rax, %rbx
  25:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     output_file = create_output_directory();
 915              		.loc 9 25 0
 916 02f9 488D45C0 		leaq	-64(%rbp), %rax
 917 02fd 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 57


 918 0300 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 918      00
 919 0305 4889D8   		movq	%rbx, %rax
 920 0308 4889C7   		movq	%rax, %rdi
 921              	.LEHB8:
 922 030b E8000000 		call	_Unwind_Resume
 922      00
 923              	.LEHE8:
 924              	.L53:
 925              		.loc 9 26 0
 926 0310 E8000000 		call	__stack_chk_fail
 926      00
 927              	.L51:
 928 0315 4883C458 		addq	$88, %rsp
 929 0319 5B       		popq	%rbx
 930 031a 5D       		popq	%rbp
 931              		.cfi_def_cfa 7, 8
 932 031b C3       		ret
 933              		.cfi_endproc
 934              	.LFE9642:
 935              		.section	.gcc_except_table
 936              	.LLSDA9642:
 937 000f FF       		.byte	0xff
 938 0010 FF       		.byte	0xff
 939 0011 01       		.byte	0x1
 940 0012 10       		.uleb128 .LLSDACSE9642-.LLSDACSB9642
 941              	.LLSDACSB9642:
 942 0013 B301     		.uleb128 .LEHB6-.LFB9642
 943 0015 05       		.uleb128 .LEHE6-.LEHB6
 944 0016 00       		.uleb128 0
 945 0017 00       		.uleb128 0
 946 0018 CD01     		.uleb128 .LEHB7-.LFB9642
 947 001a 05       		.uleb128 .LEHE7-.LEHB7
 948 001b F001     		.uleb128 .L52-.LFB9642
 949 001d 00       		.uleb128 0
 950 001e 8502     		.uleb128 .LEHB8-.LFB9642
 951 0020 05       		.uleb128 .LEHE8-.LEHB8
 952 0021 00       		.uleb128 0
 953 0022 00       		.uleb128 0
 954              	.LLSDACSE9642:
 955              		.text
 957              		.align 2
 958              		.globl	_ZN16global_variables17update_coarse_tauEv
 960              	_ZN16global_variables17update_coarse_tauEv:
 961              	.LFB9644:
  27:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  28:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** void global_variables::update_coarse_tau(){
 962              		.loc 9 28 0
 963              		.cfi_startproc
 964 031c 55       		pushq	%rbp
 965              		.cfi_def_cfa_offset 16
 966              		.cfi_offset 6, -16
 967 031d 4889E5   		movq	%rsp, %rbp
 968              		.cfi_def_cfa_register 6
 969 0320 48897DF8 		movq	%rdi, -8(%rbp)
  29:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  30:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     tau = tau/2.0;
GAS LISTING /tmp/ccX8BQhk.s 			page 58


 970              		.loc 9 30 0
 971 0324 488B45F8 		movq	-8(%rbp), %rax
 972 0328 F20F1040 		movsd	96(%rax), %xmm0
 972      60
 973 032d F20F100D 		movsd	.LC7(%rip), %xmm1
 973      00000000 
 974 0335 F20F5EC1 		divsd	%xmm1, %xmm0
 975 0339 488B45F8 		movq	-8(%rbp), %rax
 976 033d F20F1140 		movsd	%xmm0, 96(%rax)
 976      60
  31:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** }
 977              		.loc 9 31 0
 978 0342 90       		nop
 979 0343 5D       		popq	%rbp
 980              		.cfi_def_cfa 7, 8
 981 0344 C3       		ret
 982              		.cfi_endproc
 983              	.LFE9644:
 985 0345 90       		.align 2
 986              		.globl	_ZN16global_variables15update_fine_tauEv
 988              	_ZN16global_variables15update_fine_tauEv:
 989              	.LFB9645:
  32:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  33:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** void global_variables::update_fine_tau(){
 990              		.loc 9 33 0
 991              		.cfi_startproc
 992 0346 55       		pushq	%rbp
 993              		.cfi_def_cfa_offset 16
 994              		.cfi_offset 6, -16
 995 0347 4889E5   		movq	%rsp, %rbp
 996              		.cfi_def_cfa_register 6
 997 034a 48897DF8 		movq	%rdi, -8(%rbp)
  34:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  35:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     tau = tau*2.0;
 998              		.loc 9 35 0
 999 034e 488B45F8 		movq	-8(%rbp), %rax
 1000 0352 F20F1040 		movsd	96(%rax), %xmm0
 1000      60
 1001 0357 F20F58C0 		addsd	%xmm0, %xmm0
 1002 035b 488B45F8 		movq	-8(%rbp), %rax
 1003 035f F20F1140 		movsd	%xmm0, 96(%rax)
 1003      60
  36:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** }
 1004              		.loc 9 36 0
 1005 0364 90       		nop
 1006 0365 5D       		popq	%rbp
 1007              		.cfi_def_cfa 7, 8
 1008 0366 C3       		ret
 1009              		.cfi_endproc
 1010              	.LFE9645:
 1012 0367 90       		.align 2
 1013              		.globl	_ZN16global_variables10update_tauE15domain_geometry
 1015              	_ZN16global_variables10update_tauE15domain_geometry:
 1016              	.LFB9646:
  37:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  38:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** void global_variables::update_tau( domain_geometry domain){
 1017              		.loc 9 38 0
GAS LISTING /tmp/ccX8BQhk.s 			page 59


 1018              		.cfi_startproc
 1019 0368 55       		pushq	%rbp
 1020              		.cfi_def_cfa_offset 16
 1021              		.cfi_offset 6, -16
 1022 0369 4889E5   		movq	%rsp, %rbp
 1023              		.cfi_def_cfa_register 6
 1024 036c 4883EC20 		subq	$32, %rsp
 1025 0370 48897DF8 		movq	%rdi, -8(%rbp)
 1026 0374 488975F0 		movq	%rsi, -16(%rbp)
  39:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****      tau = 0.5 + mach_number * sqrt(3)/reynolds_number * ceil(domain.Y /domain.dt) *pre_conditioned
 1027              		.loc 9 39 0
 1028 0378 488B45F8 		movq	-8(%rbp), %rax
 1029 037c F20F1058 		movsd	80(%rax), %xmm3
 1029      50
 1030 0381 F20F115D 		movsd	%xmm3, -24(%rbp)
 1030      E8
 1031 0386 BF030000 		movl	$3, %edi
 1031      00
 1032 038b E8000000 		call	_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
 1032      00
 1033 0390 F20F5945 		mulsd	-24(%rbp), %xmm0
 1033      E8
 1034 0395 488B45F8 		movq	-8(%rbp), %rax
 1035 0399 F20F1048 		movsd	72(%rax), %xmm1
 1035      48
 1036 039e F20F5EC1 		divsd	%xmm1, %xmm0
 1037 03a2 F20F1145 		movsd	%xmm0, -24(%rbp)
 1037      E8
 1038 03a7 488B45F0 		movq	-16(%rbp), %rax
 1039 03ab F20F1040 		movsd	16(%rax), %xmm0
 1039      10
 1040 03b0 488B45F0 		movq	-16(%rbp), %rax
 1041 03b4 F20F1048 		movsd	40(%rax), %xmm1
 1041      28
 1042 03b9 F20F5EC1 		divsd	%xmm1, %xmm0
 1043 03bd E8000000 		call	ceil
 1043      00
 1044 03c2 F20F5945 		mulsd	-24(%rbp), %xmm0
 1044      E8
 1045 03c7 488B45F8 		movq	-8(%rbp), %rax
 1046 03cb F20F1048 		movsd	48(%rax), %xmm1
 1046      30
 1047 03d0 F20F59C1 		mulsd	%xmm1, %xmm0
 1048 03d4 F20F100D 		movsd	.LC6(%rip), %xmm1
 1048      00000000 
 1049 03dc F20F58C1 		addsd	%xmm1, %xmm0
 1050 03e0 488B45F8 		movq	-8(%rbp), %rax
 1051 03e4 F20F1140 		movsd	%xmm0, 96(%rax)
 1051      60
  40:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  41:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** }
 1052              		.loc 9 41 0
 1053 03e9 90       		nop
 1054 03ea C9       		leave
 1055              		.cfi_def_cfa 7, 8
 1056 03eb C3       		ret
 1057              		.cfi_endproc
GAS LISTING /tmp/ccX8BQhk.s 			page 60


 1058              	.LFE9646:
 1060              		.align 2
 1061              		.globl	_ZN16global_variables17magnify_time_stepEv
 1063              	_ZN16global_variables17magnify_time_stepEv:
 1064              	.LFB9647:
  42:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** void global_variables::magnify_time_step( ){
 1065              		.loc 9 42 0
 1066              		.cfi_startproc
 1067 03ec 55       		pushq	%rbp
 1068              		.cfi_def_cfa_offset 16
 1069              		.cfi_offset 6, -16
 1070 03ed 4889E5   		movq	%rsp, %rbp
 1071              		.cfi_def_cfa_register 6
 1072 03f0 48897DF8 		movq	%rdi, -8(%rbp)
  43:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****      time_marching_step = time_marching_step * 2;
 1073              		.loc 9 43 0
 1074 03f4 488B45F8 		movq	-8(%rbp), %rax
 1075 03f8 F20F1040 		movsd	64(%rax), %xmm0
 1075      40
 1076 03fd F20F58C0 		addsd	%xmm0, %xmm0
 1077 0401 488B45F8 		movq	-8(%rbp), %rax
 1078 0405 F20F1140 		movsd	%xmm0, 64(%rax)
 1078      40
  44:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  45:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** }
 1079              		.loc 9 45 0
 1080 040a 90       		nop
 1081 040b 5D       		popq	%rbp
 1082              		.cfi_def_cfa 7, 8
 1083 040c C3       		ret
 1084              		.cfi_endproc
 1085              	.LFE9647:
 1087 040d 90       		.align 2
 1088              		.globl	_ZN16global_variables16reduce_time_stepEv
 1090              	_ZN16global_variables16reduce_time_stepEv:
 1091              	.LFB9648:
  46:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  47:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** void global_variables::reduce_time_step( ){
 1092              		.loc 9 47 0
 1093              		.cfi_startproc
 1094 040e 55       		pushq	%rbp
 1095              		.cfi_def_cfa_offset 16
 1096              		.cfi_offset 6, -16
 1097 040f 4889E5   		movq	%rsp, %rbp
 1098              		.cfi_def_cfa_register 6
 1099 0412 48897DF8 		movq	%rdi, -8(%rbp)
  48:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****      time_marching_step = time_marching_step / 2;
 1100              		.loc 9 48 0
 1101 0416 488B45F8 		movq	-8(%rbp), %rax
 1102 041a F20F1040 		movsd	64(%rax), %xmm0
 1102      40
 1103 041f F20F100D 		movsd	.LC7(%rip), %xmm1
 1103      00000000 
 1104 0427 F20F5EC1 		divsd	%xmm1, %xmm0
 1105 042b 488B45F8 		movq	-8(%rbp), %rax
 1106 042f F20F1140 		movsd	%xmm0, 64(%rax)
 1106      40
GAS LISTING /tmp/ccX8BQhk.s 			page 61


  49:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  50:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** }
 1107              		.loc 9 50 0
 1108 0434 90       		nop
 1109 0435 5D       		popq	%rbp
 1110              		.cfi_def_cfa 7, 8
 1111 0436 C3       		ret
 1112              		.cfi_endproc
 1113              	.LFE9648:
 1115              		.section	.rodata
 1116              	.LC8:
 1117 0014 64656661 		.string	"default"
 1117      756C7400 
 1118              	.LC9:
 1119 001c 746F6C20 		.string	"tol "
 1119      00
 1120              	.LC10:
 1121 0021 20524520 		.string	" RE "
 1121      00
 1122              	.LC11:
 1123 0026 20742000 		.string	" t "
 1124              	.LC12:
 1125 002a 2067616D 		.string	" gamma "
 1125      6D612000 
 1126              	.LC13:
 1127 0032 20746175 		.string	" tau "
 1127      2000
 1128              	.LC14:
 1129 0038 5F00     		.string	"_"
 1130              	.LC15:
 1131 003a 2E00     		.string	"."
 1132              		.text
 1133 0437 90       		.align 2
 1134              		.globl	_ZN16global_variables23create_output_directoryB5cxx11Ev
 1136              	_ZN16global_variables23create_output_directoryB5cxx11Ev:
 1137              	.LFB9649:
  51:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** std::string global_variables::create_output_directory(){
 1138              		.loc 9 51 0
 1139              		.cfi_startproc
 1140              		.cfi_personality 0x3,__gxx_personality_v0
 1141              		.cfi_lsda 0x3,.LLSDA9649
 1142 0438 55       		pushq	%rbp
 1143              		.cfi_def_cfa_offset 16
 1144              		.cfi_offset 6, -16
 1145 0439 4889E5   		movq	%rsp, %rbp
 1146              		.cfi_def_cfa_register 6
 1147 043c 4157     		pushq	%r15
 1148 043e 4156     		pushq	%r14
 1149 0440 4155     		pushq	%r13
 1150 0442 4154     		pushq	%r12
 1151 0444 53       		pushq	%rbx
 1152 0445 4881EC28 		subq	$552, %rsp
 1152      020000
 1153              		.cfi_offset 15, -24
 1154              		.cfi_offset 14, -32
 1155              		.cfi_offset 13, -40
 1156              		.cfi_offset 12, -48
GAS LISTING /tmp/ccX8BQhk.s 			page 62


 1157              		.cfi_offset 3, -56
 1158 044c 4889BDC8 		movq	%rdi, -568(%rbp)
 1158      FDFFFF
 1159 0453 4889B5C0 		movq	%rsi, -576(%rbp)
 1159      FDFFFF
 1160              		.loc 9 51 0
 1161 045a 64488B04 		movq	%fs:40, %rax
 1161      25280000 
 1161      00
 1162 0463 488945C8 		movq	%rax, -56(%rbp)
 1163 0467 31C0     		xorl	%eax, %eax
  52:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  53:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     std::string output_file;
 1164              		.loc 9 53 0
 1165 0469 488B85C8 		movq	-568(%rbp), %rax
 1165      FDFFFF
 1166 0470 4889C7   		movq	%rax, %rdi
 1167 0473 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
 1167      00
  54:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     std::string folder;
 1168              		.loc 9 54 0
 1169 0478 488D85D0 		leaq	-560(%rbp), %rax
 1169      FDFFFF
 1170 047f 4889C7   		movq	%rax, %rdi
 1171 0482 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
 1171      00
  55:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     std::ostringstream s;
 1172              		.loc 9 55 0
 1173 0487 488D8550 		leaq	-432(%rbp), %rax
 1173      FEFFFF
 1174 048e BE100000 		movl	$16, %esi
 1174      00
 1175 0493 4889C7   		movq	%rax, %rdi
 1176              	.LEHB9:
 1177 0496 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
 1177      00
 1178              	.LEHE9:
  56:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     //output_file = "C:/Users/brendan/Dropbox/PhD/Test Cases/Poiseuille Flow/";
  57:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  58:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     output_file = output_file_dir;
 1179              		.loc 9 58 0
 1180 049b 488B85C0 		movq	-576(%rbp), %rax
 1180      FDFFFF
 1181 04a2 488D9098 		leaq	152(%rax), %rdx
 1181      000000
 1182 04a9 488B85C8 		movq	-568(%rbp), %rax
 1182      FDFFFF
 1183 04b0 4889D6   		movq	%rdx, %rsi
 1184 04b3 4889C7   		movq	%rax, %rdi
 1185              	.LEHB10:
 1186 04b6 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
 1186      00
  59:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  60:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     if( simulation_name ==  "default"){
 1187              		.loc 9 60 0
 1188 04bb 488B85C0 		movq	-576(%rbp), %rax
 1188      FDFFFF
GAS LISTING /tmp/ccX8BQhk.s 			page 63


 1189 04c2 4805B800 		addq	$184, %rax
 1189      0000
 1190 04c8 BE000000 		movl	$.LC8, %esi
 1190      00
 1191 04cd 4889C7   		movq	%rax, %rdi
 1192 04d0 E8000000 		call	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
 1192      00
 1193 04d5 84C0     		testb	%al, %al
 1194 04d7 0F843501 		je	.L60
 1194      0000
  61:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****         s << "tol " << tolerance << " RE " << reynolds_number
  62:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****          << " t " << time_marching_step << " gamma " << pre_conditioned_gamma << " tau "
  63:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****          << tau;
 1195              		.loc 9 63 0
 1196 04dd 488B85C0 		movq	-576(%rbp), %rax
 1196      FDFFFF
 1197 04e4 488B5860 		movq	96(%rax), %rbx
  62:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****          << tau;
 1198              		.loc 9 62 0
 1199 04e8 488B85C0 		movq	-576(%rbp), %rax
 1199      FDFFFF
 1200 04ef 4C8B6030 		movq	48(%rax), %r12
 1201 04f3 488B85C0 		movq	-576(%rbp), %rax
 1201      FDFFFF
 1202 04fa 4C8B6840 		movq	64(%rax), %r13
  61:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****         s << "tol " << tolerance << " RE " << reynolds_number
 1203              		.loc 9 61 0
 1204 04fe 488B85C0 		movq	-576(%rbp), %rax
 1204      FDFFFF
 1205 0505 4C8B7048 		movq	72(%rax), %r14
 1206 0509 488B85C0 		movq	-576(%rbp), %rax
 1206      FDFFFF
 1207 0510 4C8B7828 		movq	40(%rax), %r15
 1208 0514 488D8550 		leaq	-432(%rbp), %rax
 1208      FEFFFF
 1209 051b BE000000 		movl	$.LC9, %esi
 1209      00
 1210 0520 4889C7   		movq	%rax, %rdi
 1211 0523 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1211      00
 1212 0528 4C89BDB8 		movq	%r15, -584(%rbp)
 1212      FDFFFF
 1213 052f F20F1085 		movsd	-584(%rbp), %xmm0
 1213      B8FDFFFF 
 1214 0537 4889C7   		movq	%rax, %rdi
 1215 053a E8000000 		call	_ZNSolsEd
 1215      00
  61:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****         s << "tol " << tolerance << " RE " << reynolds_number
 1216              		.loc 9 61 0 is_stmt 0 discriminator 1
 1217 053f BE000000 		movl	$.LC10, %esi
 1217      00
 1218 0544 4889C7   		movq	%rax, %rdi
 1219 0547 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1219      00
  61:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****         s << "tol " << tolerance << " RE " << reynolds_number
 1220              		.loc 9 61 0 discriminator 2
 1221 054c 4C89B5B8 		movq	%r14, -584(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 64


 1221      FDFFFF
 1222 0553 F20F1085 		movsd	-584(%rbp), %xmm0
 1222      B8FDFFFF 
 1223 055b 4889C7   		movq	%rax, %rdi
 1224 055e E8000000 		call	_ZNSolsEd
 1224      00
  62:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****          << tau;
 1225              		.loc 9 62 0 is_stmt 1 discriminator 3
 1226 0563 BE000000 		movl	$.LC11, %esi
 1226      00
 1227 0568 4889C7   		movq	%rax, %rdi
 1228 056b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1228      00
  62:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****          << tau;
 1229              		.loc 9 62 0 is_stmt 0 discriminator 4
 1230 0570 4C89ADB8 		movq	%r13, -584(%rbp)
 1230      FDFFFF
 1231 0577 F20F1085 		movsd	-584(%rbp), %xmm0
 1231      B8FDFFFF 
 1232 057f 4889C7   		movq	%rax, %rdi
 1233 0582 E8000000 		call	_ZNSolsEd
 1233      00
  62:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****          << tau;
 1234              		.loc 9 62 0 discriminator 1
 1235 0587 BE000000 		movl	$.LC12, %esi
 1235      00
 1236 058c 4889C7   		movq	%rax, %rdi
 1237 058f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1237      00
  62:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****          << tau;
 1238              		.loc 9 62 0 discriminator 2
 1239 0594 4C89A5B8 		movq	%r12, -584(%rbp)
 1239      FDFFFF
 1240 059b F20F1085 		movsd	-584(%rbp), %xmm0
 1240      B8FDFFFF 
 1241 05a3 4889C7   		movq	%rax, %rdi
 1242 05a6 E8000000 		call	_ZNSolsEd
 1242      00
  62:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****          << tau;
 1243              		.loc 9 62 0 discriminator 3
 1244 05ab BE000000 		movl	$.LC13, %esi
 1244      00
 1245 05b0 4889C7   		movq	%rax, %rdi
 1246 05b3 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 1246      00
 1247              		.loc 9 63 0 is_stmt 1 discriminator 4
 1248 05b8 48899DB8 		movq	%rbx, -584(%rbp)
 1248      FDFFFF
 1249 05bf F20F1085 		movsd	-584(%rbp), %xmm0
 1249      B8FDFFFF 
 1250 05c7 4889C7   		movq	%rax, %rdi
 1251 05ca E8000000 		call	_ZNSolsEd
 1251      00
  64:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****          folder = s.str();
 1252              		.loc 9 64 0
 1253 05cf 488D85F0 		leaq	-528(%rbp), %rax
 1253      FDFFFF
GAS LISTING /tmp/ccX8BQhk.s 			page 65


 1254 05d6 488D9550 		leaq	-432(%rbp), %rdx
 1254      FEFFFF
 1255 05dd 4889D6   		movq	%rdx, %rsi
 1256 05e0 4889C7   		movq	%rax, %rdi
 1257 05e3 E8000000 		call	_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
 1257      00
 1258              	.LEHE10:
 1259              		.loc 9 64 0 is_stmt 0 discriminator 1
 1260 05e8 488D95F0 		leaq	-528(%rbp), %rdx
 1260      FDFFFF
 1261 05ef 488D85D0 		leaq	-560(%rbp), %rax
 1261      FDFFFF
 1262 05f6 4889D6   		movq	%rdx, %rsi
 1263 05f9 4889C7   		movq	%rax, %rdi
 1264              	.LEHB11:
 1265 05fc E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
 1265      00
 1266              	.LEHE11:
 1267              		.loc 9 64 0 discriminator 3
 1268 0601 488D85F0 		leaq	-528(%rbp), %rax
 1268      FDFFFF
 1269 0608 4889C7   		movq	%rax, %rdi
 1270 060b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1270      00
 1271 0610 EB20     		jmp	.L61
 1272              	.L60:
  65:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  66:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     }else{
  67:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  68:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****         folder = simulation_name;
 1273              		.loc 9 68 0 is_stmt 1
 1274 0612 488B85C0 		movq	-576(%rbp), %rax
 1274      FDFFFF
 1275 0619 488D90B8 		leaq	184(%rax), %rdx
 1275      000000
 1276 0620 488D85D0 		leaq	-560(%rbp), %rax
 1276      FDFFFF
 1277 0627 4889D6   		movq	%rdx, %rsi
 1278 062a 4889C7   		movq	%rax, %rdi
 1279              	.LEHB12:
 1280 062d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
 1280      00
 1281              	.L61:
  69:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  70:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     }
  71:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  72:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     //folder.replace(folder.begin(),folder.end(), ".",  "_");
  73:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     boost::replace_all(folder, "." , "_");
 1282              		.loc 9 73 0
 1283 0632 488D85D0 		leaq	-560(%rbp), %rax
 1283      FDFFFF
 1284 0639 BA000000 		movl	$.LC14, %edx
 1284      00
 1285 063e BE000000 		movl	$.LC15, %esi
 1285      00
 1286 0643 4889C7   		movq	%rax, %rdi
 1287 0646 E8000000 		call	_ZN5boost9algorithm11replace_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEA2_cS8_E
GAS LISTING /tmp/ccX8BQhk.s 			page 66


 1287      00
  74:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     output_file = output_file + folder;
 1288              		.loc 9 74 0
 1289 064b 488D8510 		leaq	-496(%rbp), %rax
 1289      FEFFFF
 1290 0652 488D95D0 		leaq	-560(%rbp), %rdx
 1290      FDFFFF
 1291 0659 488B8DC8 		movq	-568(%rbp), %rcx
 1291      FDFFFF
 1292 0660 4889CE   		movq	%rcx, %rsi
 1293 0663 4889C7   		movq	%rax, %rdi
 1294 0666 E8000000 		call	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
 1294      00
 1295              	.LEHE12:
 1296              		.loc 9 74 0 is_stmt 0 discriminator 1
 1297 066b 488D9510 		leaq	-496(%rbp), %rdx
 1297      FEFFFF
 1298 0672 488B85C8 		movq	-568(%rbp), %rax
 1298      FDFFFF
 1299 0679 4889D6   		movq	%rdx, %rsi
 1300 067c 4889C7   		movq	%rax, %rdi
 1301              	.LEHB13:
 1302 067f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
 1302      00
 1303              	.LEHE13:
 1304              		.loc 9 74 0 discriminator 3
 1305 0684 488D8510 		leaq	-496(%rbp), %rax
 1305      FEFFFF
 1306 068b 4889C7   		movq	%rax, %rdi
 1307 068e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1307      00
  75:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  76:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     boost::filesystem::path dir(output_file);
 1308              		.loc 9 76 0 is_stmt 1 discriminator 3
 1309 0693 488B95C8 		movq	-568(%rbp), %rdx
 1309      FDFFFF
 1310 069a 488D8530 		leaq	-464(%rbp), %rax
 1310      FEFFFF
 1311 06a1 4889D6   		movq	%rdx, %rsi
 1312 06a4 4889C7   		movq	%rax, %rdi
 1313              	.LEHB14:
 1314 06a7 E8000000 		call	_ZN5boost10filesystem4pathC1ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 1314      00
 1315              	.LEHE14:
  77:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     boost::filesystem::create_directories(dir);
 1316              		.loc 9 77 0
 1317 06ac 488D8530 		leaq	-464(%rbp), %rax
 1317      FEFFFF
 1318 06b3 4889C7   		movq	%rax, %rdi
 1319              	.LEHB15:
 1320 06b6 E8000000 		call	_ZN5boost10filesystem18create_directoriesERKNS0_4pathE
 1320      00
 1321              	.LEHE15:
  78:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  79:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     return output_file;
 1322              		.loc 9 79 0
 1323 06bb 90       		nop
GAS LISTING /tmp/ccX8BQhk.s 			page 67


  76:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     boost::filesystem::create_directories(dir);
 1324              		.loc 9 76 0
 1325 06bc 488D8530 		leaq	-464(%rbp), %rax
 1325      FEFFFF
 1326 06c3 4889C7   		movq	%rax, %rdi
 1327 06c6 E8000000 		call	_ZN5boost10filesystem4pathD1Ev
 1327      00
  55:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     //output_file = "C:/Users/brendan/Dropbox/PhD/Test Cases/Poiseuille Flow/";
 1328              		.loc 9 55 0
 1329 06cb 488D8550 		leaq	-432(%rbp), %rax
 1329      FEFFFF
 1330 06d2 4889C7   		movq	%rax, %rdi
 1331 06d5 E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 1331      00
  54:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     std::ostringstream s;
 1332              		.loc 9 54 0
 1333 06da 488D85D0 		leaq	-560(%rbp), %rax
 1333      FDFFFF
 1334 06e1 4889C7   		movq	%rax, %rdi
 1335 06e4 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1335      00
 1336              		.loc 9 79 0
 1337 06e9 90       		nop
  80:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
  81:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** }
 1338              		.loc 9 81 0
 1339 06ea 488B85C8 		movq	-568(%rbp), %rax
 1339      FDFFFF
 1340 06f1 488B4DC8 		movq	-56(%rbp), %rcx
 1341 06f5 6448330C 		xorq	%fs:40, %rcx
 1341      25280000 
 1341      00
 1342 06fe 0F848300 		je	.L68
 1342      0000
 1343 0704 EB7C     		jmp	.L74
 1344              	.L71:
 1345 0706 4889C3   		movq	%rax, %rbx
  64:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
 1346              		.loc 9 64 0
 1347 0709 488D85F0 		leaq	-528(%rbp), %rax
 1347      FDFFFF
 1348 0710 4889C7   		movq	%rax, %rdi
 1349 0713 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1349      00
 1350 0718 EB2B     		jmp	.L64
 1351              	.L72:
 1352 071a 4889C3   		movq	%rax, %rbx
  74:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp **** 
 1353              		.loc 9 74 0
 1354 071d 488D8510 		leaq	-496(%rbp), %rax
 1354      FEFFFF
 1355 0724 4889C7   		movq	%rax, %rdi
 1356 0727 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1356      00
 1357 072c EB17     		jmp	.L64
 1358              	.L73:
 1359 072e 4889C3   		movq	%rax, %rbx
GAS LISTING /tmp/ccX8BQhk.s 			page 68


  76:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     boost::filesystem::create_directories(dir);
 1360              		.loc 9 76 0
 1361 0731 488D8530 		leaq	-464(%rbp), %rax
 1361      FEFFFF
 1362 0738 4889C7   		movq	%rax, %rdi
 1363 073b E8000000 		call	_ZN5boost10filesystem4pathD1Ev
 1363      00
 1364 0740 EB03     		jmp	.L64
 1365              	.L70:
 1366 0742 4889C3   		movq	%rax, %rbx
 1367              	.L64:
  55:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     //output_file = "C:/Users/brendan/Dropbox/PhD/Test Cases/Poiseuille Flow/";
 1368              		.loc 9 55 0
 1369 0745 488D8550 		leaq	-432(%rbp), %rax
 1369      FEFFFF
 1370 074c 4889C7   		movq	%rax, %rdi
 1371 074f E8000000 		call	_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
 1371      00
 1372 0754 EB03     		jmp	.L67
 1373              	.L69:
 1374 0756 4889C3   		movq	%rax, %rbx
 1375              	.L67:
  54:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/global_variables.cpp ****     std::ostringstream s;
 1376              		.loc 9 54 0
 1377 0759 488D85D0 		leaq	-560(%rbp), %rax
 1377      FDFFFF
 1378 0760 4889C7   		movq	%rax, %rdi
 1379 0763 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1379      00
 1380 0768 488B85C8 		movq	-568(%rbp), %rax
 1380      FDFFFF
 1381 076f 4889C7   		movq	%rax, %rdi
 1382 0772 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1382      00
 1383 0777 4889D8   		movq	%rbx, %rax
 1384 077a 4889C7   		movq	%rax, %rdi
 1385              	.LEHB16:
 1386 077d E8000000 		call	_Unwind_Resume
 1386      00
 1387              	.LEHE16:
 1388              	.L74:
 1389              		.loc 9 81 0
 1390 0782 E8000000 		call	__stack_chk_fail
 1390      00
 1391              	.L68:
 1392 0787 4881C428 		addq	$552, %rsp
 1392      020000
 1393 078e 5B       		popq	%rbx
 1394 078f 415C     		popq	%r12
 1395 0791 415D     		popq	%r13
 1396 0793 415E     		popq	%r14
 1397 0795 415F     		popq	%r15
 1398 0797 5D       		popq	%rbp
 1399              		.cfi_def_cfa 7, 8
 1400 0798 C3       		ret
 1401              		.cfi_endproc
 1402              	.LFE9649:
GAS LISTING /tmp/ccX8BQhk.s 			page 69


 1403              		.section	.gcc_except_table
 1404              	.LLSDA9649:
 1405 0023 FF       		.byte	0xff
 1406 0024 FF       		.byte	0xff
 1407 0025 01       		.byte	0x1
 1408 0026 2E       		.uleb128 .LLSDACSE9649-.LLSDACSB9649
 1409              	.LLSDACSB9649:
 1410 0027 5E       		.uleb128 .LEHB9-.LFB9649
 1411 0028 05       		.uleb128 .LEHE9-.LEHB9
 1412 0029 9E06     		.uleb128 .L69-.LFB9649
 1413 002b 00       		.uleb128 0
 1414 002c 7E       		.uleb128 .LEHB10-.LFB9649
 1415 002d B202     		.uleb128 .LEHE10-.LEHB10
 1416 002f 8A06     		.uleb128 .L70-.LFB9649
 1417 0031 00       		.uleb128 0
 1418 0032 C403     		.uleb128 .LEHB11-.LFB9649
 1419 0034 05       		.uleb128 .LEHE11-.LEHB11
 1420 0035 CE05     		.uleb128 .L71-.LFB9649
 1421 0037 00       		.uleb128 0
 1422 0038 F503     		.uleb128 .LEHB12-.LFB9649
 1423 003a 3E       		.uleb128 .LEHE12-.LEHB12
 1424 003b 8A06     		.uleb128 .L70-.LFB9649
 1425 003d 00       		.uleb128 0
 1426 003e C704     		.uleb128 .LEHB13-.LFB9649
 1427 0040 05       		.uleb128 .LEHE13-.LEHB13
 1428 0041 E205     		.uleb128 .L72-.LFB9649
 1429 0043 00       		.uleb128 0
 1430 0044 EF04     		.uleb128 .LEHB14-.LFB9649
 1431 0046 05       		.uleb128 .LEHE14-.LEHB14
 1432 0047 8A06     		.uleb128 .L70-.LFB9649
 1433 0049 00       		.uleb128 0
 1434 004a FE04     		.uleb128 .LEHB15-.LFB9649
 1435 004c 05       		.uleb128 .LEHE15-.LEHB15
 1436 004d F605     		.uleb128 .L73-.LFB9649
 1437 004f 00       		.uleb128 0
 1438 0050 C506     		.uleb128 .LEHB16-.LFB9649
 1439 0052 05       		.uleb128 .LEHE16-.LEHB16
 1440 0053 00       		.uleb128 0
 1441 0054 00       		.uleb128 0
 1442              	.LLSDACSE9649:
 1443              		.text
 1445              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev,"axG",@prog
 1446              		.align 2
 1447              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev
 1449              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev:
 1450              	.LFB9662:
 1451              		.file 11 "/usr/include/c++/5/bits/basic_string.h"
   1:/usr/include/c++/5/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/5/bits/basic_string.h **** 
   3:/usr/include/c++/5/bits/basic_string.h **** // Copyright (C) 1997-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/basic_string.h **** //
   5:/usr/include/c++/5/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 70


  11:/usr/include/c++/5/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/basic_string.h **** 
  16:/usr/include/c++/5/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/basic_string.h **** 
  20:/usr/include/c++/5/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/basic_string.h **** 
  25:/usr/include/c++/5/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/5/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/5/bits/basic_string.h ****  */
  29:/usr/include/c++/5/bits/basic_string.h **** 
  30:/usr/include/c++/5/bits/basic_string.h **** //
  31:/usr/include/c++/5/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/5/bits/basic_string.h **** //
  33:/usr/include/c++/5/bits/basic_string.h **** 
  34:/usr/include/c++/5/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/5/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/5/bits/basic_string.h **** 
  37:/usr/include/c++/5/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/5/bits/basic_string.h **** 
  39:/usr/include/c++/5/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/5/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/5/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
  43:/usr/include/c++/5/bits/basic_string.h **** #include <initializer_list>
  44:/usr/include/c++/5/bits/basic_string.h **** #endif
  45:/usr/include/c++/5/bits/basic_string.h **** 
  46:/usr/include/c++/5/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/5/bits/basic_string.h **** {
  48:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/5/bits/basic_string.h **** 
  50:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  52:/usr/include/c++/5/bits/basic_string.h ****   /**
  53:/usr/include/c++/5/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  54:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  55:/usr/include/c++/5/bits/basic_string.h ****    *
  56:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup strings
  57:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup sequences
  58:/usr/include/c++/5/bits/basic_string.h ****    *
  59:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  60:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/usr/include/c++/5/bits/basic_string.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  63:/usr/include/c++/5/bits/basic_string.h ****    *
  64:/usr/include/c++/5/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  65:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  66:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  67:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
GAS LISTING /tmp/ccX8BQhk.s 			page 71


  68:/usr/include/c++/5/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  69:/usr/include/c++/5/bits/basic_string.h ****    */
  70:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  71:/usr/include/c++/5/bits/basic_string.h ****     class basic_string
  72:/usr/include/c++/5/bits/basic_string.h ****     {
  73:/usr/include/c++/5/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  74:/usr/include/c++/5/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  75:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  76:/usr/include/c++/5/bits/basic_string.h **** 
  77:/usr/include/c++/5/bits/basic_string.h ****       // Types:
  78:/usr/include/c++/5/bits/basic_string.h ****     public:
  79:/usr/include/c++/5/bits/basic_string.h ****       typedef _Traits					traits_type;
  80:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  81:/usr/include/c++/5/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  82:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  83:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  84:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  85:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  86:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  87:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  88:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  89:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  90:/usr/include/c++/5/bits/basic_string.h **** 							const_iterator;
  91:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  92:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  93:/usr/include/c++/5/bits/basic_string.h **** 
  94:/usr/include/c++/5/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
  95:/usr/include/c++/5/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
  96:/usr/include/c++/5/bits/basic_string.h **** 
  97:/usr/include/c++/5/bits/basic_string.h ****     private:
  98:/usr/include/c++/5/bits/basic_string.h ****       // type used for positions in insert, erase etc.
  99:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus < 201103L
 100:/usr/include/c++/5/bits/basic_string.h ****       typedef iterator __const_iterator;
 101:/usr/include/c++/5/bits/basic_string.h **** #else
 102:/usr/include/c++/5/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 103:/usr/include/c++/5/bits/basic_string.h **** #endif
 104:/usr/include/c++/5/bits/basic_string.h **** 
 105:/usr/include/c++/5/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 106:/usr/include/c++/5/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 1452              		.loc 11 106 0
 1453              		.cfi_startproc
 1454 0000 55       		pushq	%rbp
 1455              		.cfi_def_cfa_offset 16
 1456              		.cfi_offset 6, -16
 1457 0001 4889E5   		movq	%rsp, %rbp
 1458              		.cfi_def_cfa_register 6
 1459 0004 4883EC10 		subq	$16, %rsp
 1460 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1461              	.LBB8:
 1462              		.loc 11 106 0
 1463 000c 488B45F8 		movq	-8(%rbp), %rax
 1464 0010 4889C7   		movq	%rax, %rdi
 1465 0013 E8000000 		call	_ZNSaIcED2Ev
 1465      00
 1466              	.LBE8:
 1467 0018 90       		nop
 1468 0019 C9       		leave
GAS LISTING /tmp/ccX8BQhk.s 			page 72


 1469              		.cfi_def_cfa 7, 8
 1470 001a C3       		ret
 1471              		.cfi_endproc
 1472              	.LFE9662:
 1474              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev
 1475              		.set	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev,_ZNSt7__cxx1112basic_
 1476              		.section	.text._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_,"axG",
 1477              		.weak	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
 1479              	_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_:
 1480              	.LFB9899:
 107:/usr/include/c++/5/bits/basic_string.h ****       {
 108:/usr/include/c++/5/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 109:/usr/include/c++/5/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 110:/usr/include/c++/5/bits/basic_string.h **** 
 111:/usr/include/c++/5/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 112:/usr/include/c++/5/bits/basic_string.h ****       };
 113:/usr/include/c++/5/bits/basic_string.h **** 
 114:/usr/include/c++/5/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 115:/usr/include/c++/5/bits/basic_string.h ****       size_type		_M_string_length;
 116:/usr/include/c++/5/bits/basic_string.h **** 
 117:/usr/include/c++/5/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 118:/usr/include/c++/5/bits/basic_string.h **** 
 119:/usr/include/c++/5/bits/basic_string.h ****       union
 120:/usr/include/c++/5/bits/basic_string.h ****       {
 121:/usr/include/c++/5/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 122:/usr/include/c++/5/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 123:/usr/include/c++/5/bits/basic_string.h ****       };
 124:/usr/include/c++/5/bits/basic_string.h **** 
 125:/usr/include/c++/5/bits/basic_string.h ****       void
 126:/usr/include/c++/5/bits/basic_string.h ****       _M_data(pointer __p)
 127:/usr/include/c++/5/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 128:/usr/include/c++/5/bits/basic_string.h **** 
 129:/usr/include/c++/5/bits/basic_string.h ****       void
 130:/usr/include/c++/5/bits/basic_string.h ****       _M_length(size_type __length)
 131:/usr/include/c++/5/bits/basic_string.h ****       { _M_string_length = __length; }
 132:/usr/include/c++/5/bits/basic_string.h **** 
 133:/usr/include/c++/5/bits/basic_string.h ****       pointer
 134:/usr/include/c++/5/bits/basic_string.h ****       _M_data() const
 135:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 136:/usr/include/c++/5/bits/basic_string.h **** 
 137:/usr/include/c++/5/bits/basic_string.h ****       pointer
 138:/usr/include/c++/5/bits/basic_string.h ****       _M_local_data()
 139:/usr/include/c++/5/bits/basic_string.h ****       {
 140:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/5/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 142:/usr/include/c++/5/bits/basic_string.h **** #else
 143:/usr/include/c++/5/bits/basic_string.h **** 	return pointer(_M_local_buf);
 144:/usr/include/c++/5/bits/basic_string.h **** #endif
 145:/usr/include/c++/5/bits/basic_string.h ****       }
 146:/usr/include/c++/5/bits/basic_string.h **** 
 147:/usr/include/c++/5/bits/basic_string.h ****       const_pointer
 148:/usr/include/c++/5/bits/basic_string.h ****       _M_local_data() const
 149:/usr/include/c++/5/bits/basic_string.h ****       {
 150:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 151:/usr/include/c++/5/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 152:/usr/include/c++/5/bits/basic_string.h **** #else
 153:/usr/include/c++/5/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
GAS LISTING /tmp/ccX8BQhk.s 			page 73


 154:/usr/include/c++/5/bits/basic_string.h **** #endif
 155:/usr/include/c++/5/bits/basic_string.h ****       }
 156:/usr/include/c++/5/bits/basic_string.h **** 
 157:/usr/include/c++/5/bits/basic_string.h ****       void
 158:/usr/include/c++/5/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 159:/usr/include/c++/5/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 160:/usr/include/c++/5/bits/basic_string.h **** 
 161:/usr/include/c++/5/bits/basic_string.h ****       void
 162:/usr/include/c++/5/bits/basic_string.h ****       _M_set_length(size_type __n)
 163:/usr/include/c++/5/bits/basic_string.h ****       {
 164:/usr/include/c++/5/bits/basic_string.h **** 	_M_length(__n);
 165:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 166:/usr/include/c++/5/bits/basic_string.h ****       }
 167:/usr/include/c++/5/bits/basic_string.h **** 
 168:/usr/include/c++/5/bits/basic_string.h ****       bool
 169:/usr/include/c++/5/bits/basic_string.h ****       _M_is_local() const
 170:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 171:/usr/include/c++/5/bits/basic_string.h **** 
 172:/usr/include/c++/5/bits/basic_string.h ****       // Create & Destroy
 173:/usr/include/c++/5/bits/basic_string.h ****       pointer
 174:/usr/include/c++/5/bits/basic_string.h ****       _M_create(size_type&, size_type);
 175:/usr/include/c++/5/bits/basic_string.h **** 
 176:/usr/include/c++/5/bits/basic_string.h ****       void
 177:/usr/include/c++/5/bits/basic_string.h ****       _M_dispose()
 178:/usr/include/c++/5/bits/basic_string.h ****       {
 179:/usr/include/c++/5/bits/basic_string.h **** 	if (!_M_is_local())
 180:/usr/include/c++/5/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 181:/usr/include/c++/5/bits/basic_string.h ****       }
 182:/usr/include/c++/5/bits/basic_string.h **** 
 183:/usr/include/c++/5/bits/basic_string.h ****       void
 184:/usr/include/c++/5/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 185:/usr/include/c++/5/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 186:/usr/include/c++/5/bits/basic_string.h **** 
 187:/usr/include/c++/5/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 188:/usr/include/c++/5/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 189:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 190:/usr/include/c++/5/bits/basic_string.h ****         void
 191:/usr/include/c++/5/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 192:/usr/include/c++/5/bits/basic_string.h **** 			 std::__false_type)
 193:/usr/include/c++/5/bits/basic_string.h **** 	{
 194:/usr/include/c++/5/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 195:/usr/include/c++/5/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 196:/usr/include/c++/5/bits/basic_string.h **** 	}
 197:/usr/include/c++/5/bits/basic_string.h **** 
 198:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 199:/usr/include/c++/5/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 200:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Integer>
 201:/usr/include/c++/5/bits/basic_string.h ****         void
 202:/usr/include/c++/5/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 203:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 204:/usr/include/c++/5/bits/basic_string.h **** 
 205:/usr/include/c++/5/bits/basic_string.h ****       void
 206:/usr/include/c++/5/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 207:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__req, __c); }
 208:/usr/include/c++/5/bits/basic_string.h **** 
 209:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 210:/usr/include/c++/5/bits/basic_string.h ****         void
GAS LISTING /tmp/ccX8BQhk.s 			page 74


 211:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 212:/usr/include/c++/5/bits/basic_string.h **** 	{
 213:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 214:/usr/include/c++/5/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 215:/usr/include/c++/5/bits/basic_string.h ****         }
 216:/usr/include/c++/5/bits/basic_string.h **** 
 217:/usr/include/c++/5/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 218:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 219:/usr/include/c++/5/bits/basic_string.h ****         void
 220:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 221:/usr/include/c++/5/bits/basic_string.h **** 		     std::input_iterator_tag);
 222:/usr/include/c++/5/bits/basic_string.h **** 
 223:/usr/include/c++/5/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 224:/usr/include/c++/5/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 225:/usr/include/c++/5/bits/basic_string.h ****       template<typename _FwdIterator>
 226:/usr/include/c++/5/bits/basic_string.h ****         void
 227:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 228:/usr/include/c++/5/bits/basic_string.h **** 		     std::forward_iterator_tag);
 229:/usr/include/c++/5/bits/basic_string.h **** 
 230:/usr/include/c++/5/bits/basic_string.h ****       void
 231:/usr/include/c++/5/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 232:/usr/include/c++/5/bits/basic_string.h **** 
 233:/usr/include/c++/5/bits/basic_string.h ****       allocator_type&
 234:/usr/include/c++/5/bits/basic_string.h ****       _M_get_allocator()
 235:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
 236:/usr/include/c++/5/bits/basic_string.h **** 
 237:/usr/include/c++/5/bits/basic_string.h ****       const allocator_type&
 238:/usr/include/c++/5/bits/basic_string.h ****       _M_get_allocator() const
 239:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
 240:/usr/include/c++/5/bits/basic_string.h **** 
 241:/usr/include/c++/5/bits/basic_string.h ****     private:
 242:/usr/include/c++/5/bits/basic_string.h **** 
 243:/usr/include/c++/5/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 244:/usr/include/c++/5/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 245:/usr/include/c++/5/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 246:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 247:/usr/include/c++/5/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 248:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 249:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 250:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 251:/usr/include/c++/5/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 252:/usr/include/c++/5/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 253:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Tp>
 254:/usr/include/c++/5/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 255:/usr/include/c++/5/bits/basic_string.h **** #endif
 256:/usr/include/c++/5/bits/basic_string.h **** 
 257:/usr/include/c++/5/bits/basic_string.h ****       size_type
 258:/usr/include/c++/5/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 259:/usr/include/c++/5/bits/basic_string.h ****       {
 260:/usr/include/c++/5/bits/basic_string.h **** 	if (__pos > this->size())
 261:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 262:/usr/include/c++/5/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 263:/usr/include/c++/5/bits/basic_string.h **** 				   __s, __pos, this->size());
 264:/usr/include/c++/5/bits/basic_string.h **** 	return __pos;
 265:/usr/include/c++/5/bits/basic_string.h ****       }
 266:/usr/include/c++/5/bits/basic_string.h **** 
 267:/usr/include/c++/5/bits/basic_string.h ****       void
GAS LISTING /tmp/ccX8BQhk.s 			page 75


 268:/usr/include/c++/5/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 269:/usr/include/c++/5/bits/basic_string.h ****       {
 270:/usr/include/c++/5/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 271:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 272:/usr/include/c++/5/bits/basic_string.h ****       }
 273:/usr/include/c++/5/bits/basic_string.h **** 
 274:/usr/include/c++/5/bits/basic_string.h **** 
 275:/usr/include/c++/5/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 276:/usr/include/c++/5/bits/basic_string.h ****       size_type
 277:/usr/include/c++/5/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 278:/usr/include/c++/5/bits/basic_string.h ****       {
 279:/usr/include/c++/5/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 280:/usr/include/c++/5/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 281:/usr/include/c++/5/bits/basic_string.h ****       }
 282:/usr/include/c++/5/bits/basic_string.h **** 
 283:/usr/include/c++/5/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 284:/usr/include/c++/5/bits/basic_string.h ****       bool
 285:/usr/include/c++/5/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 286:/usr/include/c++/5/bits/basic_string.h ****       {
 287:/usr/include/c++/5/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 288:/usr/include/c++/5/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 289:/usr/include/c++/5/bits/basic_string.h ****       }
 290:/usr/include/c++/5/bits/basic_string.h **** 
 291:/usr/include/c++/5/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 292:/usr/include/c++/5/bits/basic_string.h ****       // traits_type::copy/move/assign.
 293:/usr/include/c++/5/bits/basic_string.h ****       static void
 294:/usr/include/c++/5/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 295:/usr/include/c++/5/bits/basic_string.h ****       {
 296:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 297:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 298:/usr/include/c++/5/bits/basic_string.h **** 	else
 299:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 300:/usr/include/c++/5/bits/basic_string.h ****       }
 301:/usr/include/c++/5/bits/basic_string.h **** 
 302:/usr/include/c++/5/bits/basic_string.h ****       static void
 303:/usr/include/c++/5/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 304:/usr/include/c++/5/bits/basic_string.h ****       {
 305:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 306:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 307:/usr/include/c++/5/bits/basic_string.h **** 	else
 308:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 309:/usr/include/c++/5/bits/basic_string.h ****       }
 310:/usr/include/c++/5/bits/basic_string.h **** 
 311:/usr/include/c++/5/bits/basic_string.h ****       static void
 312:/usr/include/c++/5/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 313:/usr/include/c++/5/bits/basic_string.h ****       {
 314:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 315:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 316:/usr/include/c++/5/bits/basic_string.h **** 	else
 317:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 318:/usr/include/c++/5/bits/basic_string.h ****       }
 319:/usr/include/c++/5/bits/basic_string.h **** 
 320:/usr/include/c++/5/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 321:/usr/include/c++/5/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 322:/usr/include/c++/5/bits/basic_string.h ****       template<class _Iterator>
 323:/usr/include/c++/5/bits/basic_string.h ****         static void
 324:/usr/include/c++/5/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
GAS LISTING /tmp/ccX8BQhk.s 			page 76


 325:/usr/include/c++/5/bits/basic_string.h ****         {
 326:/usr/include/c++/5/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
 327:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 328:/usr/include/c++/5/bits/basic_string.h **** 	}
 329:/usr/include/c++/5/bits/basic_string.h **** 
 330:/usr/include/c++/5/bits/basic_string.h ****       static void
 331:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 332:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 333:/usr/include/c++/5/bits/basic_string.h **** 
 334:/usr/include/c++/5/bits/basic_string.h ****       static void
 335:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 336:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 337:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 338:/usr/include/c++/5/bits/basic_string.h **** 
 339:/usr/include/c++/5/bits/basic_string.h ****       static void
 340:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 341:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 342:/usr/include/c++/5/bits/basic_string.h **** 
 343:/usr/include/c++/5/bits/basic_string.h ****       static void
 344:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 345:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 346:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 347:/usr/include/c++/5/bits/basic_string.h **** 
 348:/usr/include/c++/5/bits/basic_string.h ****       static int
 349:/usr/include/c++/5/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 350:/usr/include/c++/5/bits/basic_string.h ****       {
 351:/usr/include/c++/5/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 352:/usr/include/c++/5/bits/basic_string.h **** 
 353:/usr/include/c++/5/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 354:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 355:/usr/include/c++/5/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 356:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 357:/usr/include/c++/5/bits/basic_string.h **** 	else
 358:/usr/include/c++/5/bits/basic_string.h **** 	  return int(__d);
 359:/usr/include/c++/5/bits/basic_string.h ****       }
 360:/usr/include/c++/5/bits/basic_string.h **** 
 361:/usr/include/c++/5/bits/basic_string.h ****       void
 362:/usr/include/c++/5/bits/basic_string.h ****       _M_assign(const basic_string& __rcs);
 363:/usr/include/c++/5/bits/basic_string.h **** 
 364:/usr/include/c++/5/bits/basic_string.h ****       void
 365:/usr/include/c++/5/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 366:/usr/include/c++/5/bits/basic_string.h **** 		size_type __len2);
 367:/usr/include/c++/5/bits/basic_string.h **** 
 368:/usr/include/c++/5/bits/basic_string.h ****       void
 369:/usr/include/c++/5/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 370:/usr/include/c++/5/bits/basic_string.h **** 
 371:/usr/include/c++/5/bits/basic_string.h ****     public:
 372:/usr/include/c++/5/bits/basic_string.h ****       // Construct/copy/destroy:
 373:/usr/include/c++/5/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 374:/usr/include/c++/5/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 375:/usr/include/c++/5/bits/basic_string.h **** 
 376:/usr/include/c++/5/bits/basic_string.h ****       /**
 377:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 378:/usr/include/c++/5/bits/basic_string.h ****        */
 379:/usr/include/c++/5/bits/basic_string.h ****       basic_string()
 380:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 381:/usr/include/c++/5/bits/basic_string.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
GAS LISTING /tmp/ccX8BQhk.s 			page 77


 382:/usr/include/c++/5/bits/basic_string.h **** #endif
 383:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 384:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 385:/usr/include/c++/5/bits/basic_string.h **** 
 386:/usr/include/c++/5/bits/basic_string.h ****       /**
 387:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 388:/usr/include/c++/5/bits/basic_string.h ****        */
 389:/usr/include/c++/5/bits/basic_string.h ****       explicit
 390:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _Alloc& __a)
 391:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 392:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 393:/usr/include/c++/5/bits/basic_string.h **** 
 394:/usr/include/c++/5/bits/basic_string.h ****       /**
 395:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 396:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 397:/usr/include/c++/5/bits/basic_string.h ****        */
 398:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str)
 399:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __str._M_get_allocator()) // TODO A traits
 400:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 401:/usr/include/c++/5/bits/basic_string.h **** 
 402:/usr/include/c++/5/bits/basic_string.h ****       /**
 403:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 404:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 405:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 406:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 407:/usr/include/c++/5/bits/basic_string.h ****        */
 408:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 409:/usr/include/c++/5/bits/basic_string.h ****       // 2402. [this constructor] shouldn't use Allocator()
 410:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 411:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n = npos)
 412:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 413:/usr/include/c++/5/bits/basic_string.h ****       {
 414:/usr/include/c++/5/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 415:/usr/include/c++/5/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 416:/usr/include/c++/5/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 417:/usr/include/c++/5/bits/basic_string.h ****       }
 418:/usr/include/c++/5/bits/basic_string.h **** 
 419:/usr/include/c++/5/bits/basic_string.h ****       /**
 420:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 421:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 422:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 423:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 424:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 425:/usr/include/c++/5/bits/basic_string.h ****        */
 426:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 427:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 428:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 429:/usr/include/c++/5/bits/basic_string.h ****       {
 430:/usr/include/c++/5/bits/basic_string.h **** 	const _CharT* __start
 431:/usr/include/c++/5/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 432:/usr/include/c++/5/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 433:/usr/include/c++/5/bits/basic_string.h ****       }
 434:/usr/include/c++/5/bits/basic_string.h **** 
 435:/usr/include/c++/5/bits/basic_string.h ****       /**
 436:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 437:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source character %array.
 438:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
GAS LISTING /tmp/ccX8BQhk.s 			page 78


 439:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 440:/usr/include/c++/5/bits/basic_string.h ****        *
 441:/usr/include/c++/5/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 442:/usr/include/c++/5/bits/basic_string.h ****        *  has no special meaning.
 443:/usr/include/c++/5/bits/basic_string.h ****        */
 444:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 445:/usr/include/c++/5/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 446:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 447:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 448:/usr/include/c++/5/bits/basic_string.h **** 
 449:/usr/include/c++/5/bits/basic_string.h ****       /**
 450:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 451:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source C string.
 452:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 453:/usr/include/c++/5/bits/basic_string.h ****        */
 454:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 455:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 456:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 457:/usr/include/c++/5/bits/basic_string.h **** 
 458:/usr/include/c++/5/bits/basic_string.h ****       /**
 459:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 460:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters.
 461:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to use.
 462:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 463:/usr/include/c++/5/bits/basic_string.h ****        */
 464:/usr/include/c++/5/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 465:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 466:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__n, __c); }
 467:/usr/include/c++/5/bits/basic_string.h **** 
 468:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 469:/usr/include/c++/5/bits/basic_string.h ****       /**
 470:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move construct string.
 471:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 472:/usr/include/c++/5/bits/basic_string.h ****        *
 473:/usr/include/c++/5/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 474:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 475:/usr/include/c++/5/bits/basic_string.h ****        **/
 476:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 477:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 478:/usr/include/c++/5/bits/basic_string.h ****       {
 479:/usr/include/c++/5/bits/basic_string.h **** 	if (__str._M_is_local())
 480:/usr/include/c++/5/bits/basic_string.h **** 	  {
 481:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 482:/usr/include/c++/5/bits/basic_string.h **** 			      _S_local_capacity + 1);
 483:/usr/include/c++/5/bits/basic_string.h **** 	  }
 484:/usr/include/c++/5/bits/basic_string.h **** 	else
 485:/usr/include/c++/5/bits/basic_string.h **** 	  {
 486:/usr/include/c++/5/bits/basic_string.h **** 	    _M_data(__str._M_data());
 487:/usr/include/c++/5/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 488:/usr/include/c++/5/bits/basic_string.h **** 	  }
 489:/usr/include/c++/5/bits/basic_string.h **** 
 490:/usr/include/c++/5/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 491:/usr/include/c++/5/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 492:/usr/include/c++/5/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 493:/usr/include/c++/5/bits/basic_string.h **** 	_M_length(__str.length());
 494:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 495:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_set_length(0);
GAS LISTING /tmp/ccX8BQhk.s 			page 79


 496:/usr/include/c++/5/bits/basic_string.h ****       }
 497:/usr/include/c++/5/bits/basic_string.h **** 
 498:/usr/include/c++/5/bits/basic_string.h ****       /**
 499:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 500:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 501:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 502:/usr/include/c++/5/bits/basic_string.h ****        */
 503:/usr/include/c++/5/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 504:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 505:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 506:/usr/include/c++/5/bits/basic_string.h **** 
 507:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 508:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 509:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 510:/usr/include/c++/5/bits/basic_string.h **** 
 511:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 512:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/c++/5/bits/basic_string.h ****       {
 514:/usr/include/c++/5/bits/basic_string.h **** 	if (__str.get_allocator() == __a)
 515:/usr/include/c++/5/bits/basic_string.h **** 	  *this = std::move(__str);
 516:/usr/include/c++/5/bits/basic_string.h **** 	else
 517:/usr/include/c++/5/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 518:/usr/include/c++/5/bits/basic_string.h ****       }
 519:/usr/include/c++/5/bits/basic_string.h **** 
 520:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 521:/usr/include/c++/5/bits/basic_string.h **** 
 522:/usr/include/c++/5/bits/basic_string.h ****       /**
 523:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 524:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __beg  Start of range.
 525:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __end  End of range.
 526:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 527:/usr/include/c++/5/bits/basic_string.h ****        */
 528:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 529:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InputIterator,
 530:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 531:/usr/include/c++/5/bits/basic_string.h **** #else
 532:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InputIterator>
 533:/usr/include/c++/5/bits/basic_string.h **** #endif
 534:/usr/include/c++/5/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 535:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 536:/usr/include/c++/5/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 537:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 538:/usr/include/c++/5/bits/basic_string.h **** 
 539:/usr/include/c++/5/bits/basic_string.h ****       /**
 540:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 541:/usr/include/c++/5/bits/basic_string.h ****        */
 542:/usr/include/c++/5/bits/basic_string.h ****       ~basic_string()
 543:/usr/include/c++/5/bits/basic_string.h ****       { _M_dispose(); }
 544:/usr/include/c++/5/bits/basic_string.h **** 
 545:/usr/include/c++/5/bits/basic_string.h ****       /**
 546:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 547:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/c++/5/bits/basic_string.h ****        */
 549:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 550:/usr/include/c++/5/bits/basic_string.h ****       operator=(const basic_string& __str)
 551:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str); }
 552:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 80


 553:/usr/include/c++/5/bits/basic_string.h ****       /**
 554:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 555:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 556:/usr/include/c++/5/bits/basic_string.h ****        */
 557:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 558:/usr/include/c++/5/bits/basic_string.h ****       operator=(const _CharT* __s)
 559:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__s); }
 560:/usr/include/c++/5/bits/basic_string.h **** 
 561:/usr/include/c++/5/bits/basic_string.h ****       /**
 562:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 563:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Source character.
 564:/usr/include/c++/5/bits/basic_string.h ****        *
 565:/usr/include/c++/5/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 566:/usr/include/c++/5/bits/basic_string.h ****        *  (*this)[0] == @a c.
 567:/usr/include/c++/5/bits/basic_string.h ****        */
 568:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 569:/usr/include/c++/5/bits/basic_string.h ****       operator=(_CharT __c)
 570:/usr/include/c++/5/bits/basic_string.h ****       {
 571:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(1, __c);
 572:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 573:/usr/include/c++/5/bits/basic_string.h ****       }
 574:/usr/include/c++/5/bits/basic_string.h **** 
 575:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 576:/usr/include/c++/5/bits/basic_string.h ****       /**
 577:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 578:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 579:/usr/include/c++/5/bits/basic_string.h ****        *
 580:/usr/include/c++/5/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 581:/usr/include/c++/5/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 582:/usr/include/c++/5/bits/basic_string.h ****        **/
 583:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
 584:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 585:/usr/include/c++/5/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 586:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 587:/usr/include/c++/5/bits/basic_string.h ****       operator=(basic_string&& __str)
 588:/usr/include/c++/5/bits/basic_string.h ****       {
 589:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
 590:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 591:/usr/include/c++/5/bits/basic_string.h ****       }
 592:/usr/include/c++/5/bits/basic_string.h **** 
 593:/usr/include/c++/5/bits/basic_string.h ****       /**
 594:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 595:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 596:/usr/include/c++/5/bits/basic_string.h ****        */
 597:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 598:/usr/include/c++/5/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 599:/usr/include/c++/5/bits/basic_string.h ****       {
 600:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 601:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 602:/usr/include/c++/5/bits/basic_string.h ****       }
 603:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 604:/usr/include/c++/5/bits/basic_string.h **** 
 605:/usr/include/c++/5/bits/basic_string.h ****       // Iterators:
 606:/usr/include/c++/5/bits/basic_string.h ****       /**
 607:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 608:/usr/include/c++/5/bits/basic_string.h ****        *  the %string.
 609:/usr/include/c++/5/bits/basic_string.h ****        */
GAS LISTING /tmp/ccX8BQhk.s 			page 81


 610:/usr/include/c++/5/bits/basic_string.h ****       iterator
 611:/usr/include/c++/5/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 612:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data()); }
 613:/usr/include/c++/5/bits/basic_string.h **** 
 614:/usr/include/c++/5/bits/basic_string.h ****       /**
 615:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 616:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 617:/usr/include/c++/5/bits/basic_string.h ****        */
 618:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 619:/usr/include/c++/5/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 620:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 621:/usr/include/c++/5/bits/basic_string.h **** 
 622:/usr/include/c++/5/bits/basic_string.h ****       /**
 623:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 624:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 625:/usr/include/c++/5/bits/basic_string.h ****        */
 626:/usr/include/c++/5/bits/basic_string.h ****       iterator
 627:/usr/include/c++/5/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 628:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 629:/usr/include/c++/5/bits/basic_string.h **** 
 630:/usr/include/c++/5/bits/basic_string.h ****       /**
 631:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 632:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
 633:/usr/include/c++/5/bits/basic_string.h ****        */
 634:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 635:/usr/include/c++/5/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 636:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 637:/usr/include/c++/5/bits/basic_string.h **** 
 638:/usr/include/c++/5/bits/basic_string.h ****       /**
 639:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 640:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 641:/usr/include/c++/5/bits/basic_string.h ****        *  order.
 642:/usr/include/c++/5/bits/basic_string.h ****        */
 643:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
 644:/usr/include/c++/5/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 645:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 646:/usr/include/c++/5/bits/basic_string.h **** 
 647:/usr/include/c++/5/bits/basic_string.h ****       /**
 648:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 649:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 650:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
 651:/usr/include/c++/5/bits/basic_string.h ****        */
 652:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 653:/usr/include/c++/5/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 654:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 655:/usr/include/c++/5/bits/basic_string.h **** 
 656:/usr/include/c++/5/bits/basic_string.h ****       /**
 657:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 658:/usr/include/c++/5/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 659:/usr/include/c++/5/bits/basic_string.h ****        *  element order.
 660:/usr/include/c++/5/bits/basic_string.h ****        */
 661:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
 662:/usr/include/c++/5/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 663:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 664:/usr/include/c++/5/bits/basic_string.h **** 
 665:/usr/include/c++/5/bits/basic_string.h ****       /**
 666:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
GAS LISTING /tmp/ccX8BQhk.s 			page 82


 667:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 668:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
 669:/usr/include/c++/5/bits/basic_string.h ****        */
 670:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 671:/usr/include/c++/5/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 672:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 673:/usr/include/c++/5/bits/basic_string.h **** 
 674:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 675:/usr/include/c++/5/bits/basic_string.h ****       /**
 676:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 677:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 678:/usr/include/c++/5/bits/basic_string.h ****        */
 679:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 680:/usr/include/c++/5/bits/basic_string.h ****       cbegin() const noexcept
 681:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 682:/usr/include/c++/5/bits/basic_string.h **** 
 683:/usr/include/c++/5/bits/basic_string.h ****       /**
 684:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 685:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
 686:/usr/include/c++/5/bits/basic_string.h ****        */
 687:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 688:/usr/include/c++/5/bits/basic_string.h ****       cend() const noexcept
 689:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 690:/usr/include/c++/5/bits/basic_string.h **** 
 691:/usr/include/c++/5/bits/basic_string.h ****       /**
 692:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 693:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 694:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
 695:/usr/include/c++/5/bits/basic_string.h ****        */
 696:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 697:/usr/include/c++/5/bits/basic_string.h ****       crbegin() const noexcept
 698:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 699:/usr/include/c++/5/bits/basic_string.h **** 
 700:/usr/include/c++/5/bits/basic_string.h ****       /**
 701:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 702:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 703:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
 704:/usr/include/c++/5/bits/basic_string.h ****        */
 705:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 706:/usr/include/c++/5/bits/basic_string.h ****       crend() const noexcept
 707:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 708:/usr/include/c++/5/bits/basic_string.h **** #endif
 709:/usr/include/c++/5/bits/basic_string.h **** 
 710:/usr/include/c++/5/bits/basic_string.h ****     public:
 711:/usr/include/c++/5/bits/basic_string.h ****       // Capacity:
 712:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 713:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
 714:/usr/include/c++/5/bits/basic_string.h ****       size_type
 715:/usr/include/c++/5/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 716:/usr/include/c++/5/bits/basic_string.h ****       { return _M_string_length; }
 717:/usr/include/c++/5/bits/basic_string.h **** 
 718:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 719:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
 720:/usr/include/c++/5/bits/basic_string.h ****       size_type
 721:/usr/include/c++/5/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 722:/usr/include/c++/5/bits/basic_string.h ****       { return _M_string_length; }
 723:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 83


 724:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 725:/usr/include/c++/5/bits/basic_string.h ****       size_type
 726:/usr/include/c++/5/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 727:/usr/include/c++/5/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 728:/usr/include/c++/5/bits/basic_string.h **** 
 729:/usr/include/c++/5/bits/basic_string.h ****       /**
 730:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 731:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 732:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 733:/usr/include/c++/5/bits/basic_string.h ****        *
 734:/usr/include/c++/5/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 735:/usr/include/c++/5/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 736:/usr/include/c++/5/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 737:/usr/include/c++/5/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 738:/usr/include/c++/5/bits/basic_string.h ****        */
 739:/usr/include/c++/5/bits/basic_string.h ****       void
 740:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 741:/usr/include/c++/5/bits/basic_string.h **** 
 742:/usr/include/c++/5/bits/basic_string.h ****       /**
 743:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 744:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 745:/usr/include/c++/5/bits/basic_string.h ****        *
 746:/usr/include/c++/5/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 747:/usr/include/c++/5/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 748:/usr/include/c++/5/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 749:/usr/include/c++/5/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 750:/usr/include/c++/5/bits/basic_string.h ****        *  setting them to 0.
 751:/usr/include/c++/5/bits/basic_string.h ****        */
 752:/usr/include/c++/5/bits/basic_string.h ****       void
 753:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n)
 754:/usr/include/c++/5/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 755:/usr/include/c++/5/bits/basic_string.h **** 
 756:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 757:/usr/include/c++/5/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 758:/usr/include/c++/5/bits/basic_string.h ****       void
 759:/usr/include/c++/5/bits/basic_string.h ****       shrink_to_fit() noexcept
 760:/usr/include/c++/5/bits/basic_string.h ****       {
 761:/usr/include/c++/5/bits/basic_string.h **** #if __cpp_exceptions
 762:/usr/include/c++/5/bits/basic_string.h **** 	if (capacity() > size())
 763:/usr/include/c++/5/bits/basic_string.h **** 	  {
 764:/usr/include/c++/5/bits/basic_string.h **** 	    try
 765:/usr/include/c++/5/bits/basic_string.h **** 	      { reserve(0); }
 766:/usr/include/c++/5/bits/basic_string.h **** 	    catch(...)
 767:/usr/include/c++/5/bits/basic_string.h **** 	      { }
 768:/usr/include/c++/5/bits/basic_string.h **** 	  }
 769:/usr/include/c++/5/bits/basic_string.h **** #endif
 770:/usr/include/c++/5/bits/basic_string.h ****       }
 771:/usr/include/c++/5/bits/basic_string.h **** #endif
 772:/usr/include/c++/5/bits/basic_string.h **** 
 773:/usr/include/c++/5/bits/basic_string.h ****       /**
 774:/usr/include/c++/5/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 775:/usr/include/c++/5/bits/basic_string.h ****        *  before needing to allocate more memory.
 776:/usr/include/c++/5/bits/basic_string.h ****        */
 777:/usr/include/c++/5/bits/basic_string.h ****       size_type
 778:/usr/include/c++/5/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 779:/usr/include/c++/5/bits/basic_string.h ****       {
 780:/usr/include/c++/5/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
GAS LISTING /tmp/ccX8BQhk.s 			page 84


 781:/usr/include/c++/5/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 782:/usr/include/c++/5/bits/basic_string.h ****       }
 783:/usr/include/c++/5/bits/basic_string.h **** 
 784:/usr/include/c++/5/bits/basic_string.h ****       /**
 785:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 786:/usr/include/c++/5/bits/basic_string.h ****        *          characters.
 787:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 788:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 789:/usr/include/c++/5/bits/basic_string.h ****        *
 790:/usr/include/c++/5/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 791:/usr/include/c++/5/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 792:/usr/include/c++/5/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 793:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
 794:/usr/include/c++/5/bits/basic_string.h ****        *
 795:/usr/include/c++/5/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 796:/usr/include/c++/5/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 797:/usr/include/c++/5/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 798:/usr/include/c++/5/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 799:/usr/include/c++/5/bits/basic_string.h ****        *  data.
 800:/usr/include/c++/5/bits/basic_string.h ****        */
 801:/usr/include/c++/5/bits/basic_string.h ****       void
 802:/usr/include/c++/5/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 803:/usr/include/c++/5/bits/basic_string.h **** 
 804:/usr/include/c++/5/bits/basic_string.h ****       /**
 805:/usr/include/c++/5/bits/basic_string.h ****        *  Erases the string, making it empty.
 806:/usr/include/c++/5/bits/basic_string.h ****        */
 807:/usr/include/c++/5/bits/basic_string.h ****       void
 808:/usr/include/c++/5/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 809:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 810:/usr/include/c++/5/bits/basic_string.h **** 
 811:/usr/include/c++/5/bits/basic_string.h ****       /**
 812:/usr/include/c++/5/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 813:/usr/include/c++/5/bits/basic_string.h ****        *  <code>*this == ""</code>.
 814:/usr/include/c++/5/bits/basic_string.h ****        */
 815:/usr/include/c++/5/bits/basic_string.h ****       bool
 816:/usr/include/c++/5/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
 817:/usr/include/c++/5/bits/basic_string.h ****       { return this->size() == 0; }
 818:/usr/include/c++/5/bits/basic_string.h **** 
 819:/usr/include/c++/5/bits/basic_string.h ****       // Element access:
 820:/usr/include/c++/5/bits/basic_string.h ****       /**
 821:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 822:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 823:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
 824:/usr/include/c++/5/bits/basic_string.h ****        *
 825:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 826:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 827:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 828:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
 829:/usr/include/c++/5/bits/basic_string.h ****        */
 830:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 831:/usr/include/c++/5/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
 832:/usr/include/c++/5/bits/basic_string.h ****       {
 833:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 834:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
 835:/usr/include/c++/5/bits/basic_string.h ****       }
 836:/usr/include/c++/5/bits/basic_string.h **** 
 837:/usr/include/c++/5/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccX8BQhk.s 			page 85


 838:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 839:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 840:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 841:/usr/include/c++/5/bits/basic_string.h ****        *
 842:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 843:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 844:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 845:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
 846:/usr/include/c++/5/bits/basic_string.h ****        */
 847:/usr/include/c++/5/bits/basic_string.h ****       reference
 848:/usr/include/c++/5/bits/basic_string.h ****       operator[](size_type __pos)
 849:/usr/include/c++/5/bits/basic_string.h ****       {
 850:/usr/include/c++/5/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
 851:/usr/include/c++/5/bits/basic_string.h **** 	// and in C++11 mode.
 852:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 853:/usr/include/c++/5/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
 854:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
 855:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
 856:/usr/include/c++/5/bits/basic_string.h ****       }
 857:/usr/include/c++/5/bits/basic_string.h **** 
 858:/usr/include/c++/5/bits/basic_string.h ****       /**
 859:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 860:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
 861:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
 862:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 863:/usr/include/c++/5/bits/basic_string.h ****        *
 864:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 865:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 866:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 867:/usr/include/c++/5/bits/basic_string.h ****        */
 868:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 869:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n) const
 870:/usr/include/c++/5/bits/basic_string.h ****       {
 871:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= this->size())
 872:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 873:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
 874:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
 875:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
 876:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
 877:/usr/include/c++/5/bits/basic_string.h ****       }
 878:/usr/include/c++/5/bits/basic_string.h **** 
 879:/usr/include/c++/5/bits/basic_string.h ****       /**
 880:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 881:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
 882:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 883:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 884:/usr/include/c++/5/bits/basic_string.h ****        *
 885:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 886:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 887:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 888:/usr/include/c++/5/bits/basic_string.h ****        */
 889:/usr/include/c++/5/bits/basic_string.h ****       reference
 890:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n)
 891:/usr/include/c++/5/bits/basic_string.h ****       {
 892:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= size())
 893:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 894:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
GAS LISTING /tmp/ccX8BQhk.s 			page 86


 895:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
 896:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
 897:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
 898:/usr/include/c++/5/bits/basic_string.h ****       }
 899:/usr/include/c++/5/bits/basic_string.h **** 
 900:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 901:/usr/include/c++/5/bits/basic_string.h ****       /**
 902:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
 903:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 904:/usr/include/c++/5/bits/basic_string.h ****        */
 905:/usr/include/c++/5/bits/basic_string.h ****       reference
 906:/usr/include/c++/5/bits/basic_string.h ****       front() noexcept
 907:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
 908:/usr/include/c++/5/bits/basic_string.h **** 
 909:/usr/include/c++/5/bits/basic_string.h ****       /**
 910:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
 911:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 912:/usr/include/c++/5/bits/basic_string.h ****        */
 913:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 914:/usr/include/c++/5/bits/basic_string.h ****       front() const noexcept
 915:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
 916:/usr/include/c++/5/bits/basic_string.h **** 
 917:/usr/include/c++/5/bits/basic_string.h ****       /**
 918:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
 919:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 920:/usr/include/c++/5/bits/basic_string.h ****        */
 921:/usr/include/c++/5/bits/basic_string.h ****       reference
 922:/usr/include/c++/5/bits/basic_string.h ****       back() noexcept
 923:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 924:/usr/include/c++/5/bits/basic_string.h **** 
 925:/usr/include/c++/5/bits/basic_string.h ****       /**
 926:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
 927:/usr/include/c++/5/bits/basic_string.h ****        *  last element of the %string.
 928:/usr/include/c++/5/bits/basic_string.h ****        */
 929:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 930:/usr/include/c++/5/bits/basic_string.h ****       back() const noexcept
 931:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 932:/usr/include/c++/5/bits/basic_string.h **** #endif
 933:/usr/include/c++/5/bits/basic_string.h **** 
 934:/usr/include/c++/5/bits/basic_string.h ****       // Modifiers:
 935:/usr/include/c++/5/bits/basic_string.h ****       /**
 936:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
 937:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 938:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 939:/usr/include/c++/5/bits/basic_string.h ****        */
 940:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 941:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const basic_string& __str)
 942:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__str); }
 943:/usr/include/c++/5/bits/basic_string.h **** 
 944:/usr/include/c++/5/bits/basic_string.h ****       /**
 945:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
 946:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
 947:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 948:/usr/include/c++/5/bits/basic_string.h ****        */
 949:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 950:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const _CharT* __s)
 951:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__s); }
GAS LISTING /tmp/ccX8BQhk.s 			page 87


 952:/usr/include/c++/5/bits/basic_string.h **** 
 953:/usr/include/c++/5/bits/basic_string.h ****       /**
 954:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a character.
 955:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to append.
 956:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 957:/usr/include/c++/5/bits/basic_string.h ****        */
 958:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 959:/usr/include/c++/5/bits/basic_string.h ****       operator+=(_CharT __c)
 960:/usr/include/c++/5/bits/basic_string.h ****       {
 961:/usr/include/c++/5/bits/basic_string.h **** 	this->push_back(__c);
 962:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 963:/usr/include/c++/5/bits/basic_string.h ****       }
 964:/usr/include/c++/5/bits/basic_string.h **** 
 965:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 966:/usr/include/c++/5/bits/basic_string.h ****       /**
 967:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
 968:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
 969:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 970:/usr/include/c++/5/bits/basic_string.h ****        */
 971:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 972:/usr/include/c++/5/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
 973:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
 974:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 975:/usr/include/c++/5/bits/basic_string.h **** 
 976:/usr/include/c++/5/bits/basic_string.h ****       /**
 977:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
 978:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 979:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 980:/usr/include/c++/5/bits/basic_string.h ****        */
 981:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 982:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str)
 983:/usr/include/c++/5/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 984:/usr/include/c++/5/bits/basic_string.h **** 
 985:/usr/include/c++/5/bits/basic_string.h ****       /**
 986:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a substring.
 987:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 988:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
 989:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 990:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 991:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
 992:/usr/include/c++/5/bits/basic_string.h ****        *
 993:/usr/include/c++/5/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
 994:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
 995:/usr/include/c++/5/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
 996:/usr/include/c++/5/bits/basic_string.h ****        *  remainder of @a __str is appended.
 997:/usr/include/c++/5/bits/basic_string.h ****        */
 998:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 999:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n)
1000:/usr/include/c++/5/bits/basic_string.h ****       { return _M_append(__str._M_data()
1001:/usr/include/c++/5/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1002:/usr/include/c++/5/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1003:/usr/include/c++/5/bits/basic_string.h **** 
1004:/usr/include/c++/5/bits/basic_string.h ****       /**
1005:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C substring.
1006:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
1007:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1008:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/ccX8BQhk.s 			page 88


1009:/usr/include/c++/5/bits/basic_string.h ****        */
1010:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1011:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1012:/usr/include/c++/5/bits/basic_string.h ****       {
1013:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1014:/usr/include/c++/5/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1015:/usr/include/c++/5/bits/basic_string.h **** 	return _M_append(__s, __n);
1016:/usr/include/c++/5/bits/basic_string.h ****       }
1017:/usr/include/c++/5/bits/basic_string.h **** 
1018:/usr/include/c++/5/bits/basic_string.h ****       /**
1019:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
1020:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
1021:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1022:/usr/include/c++/5/bits/basic_string.h ****        */
1023:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1024:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s)
1025:/usr/include/c++/5/bits/basic_string.h ****       {
1026:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1027:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1028:/usr/include/c++/5/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1029:/usr/include/c++/5/bits/basic_string.h **** 	return _M_append(__s, __n);
1030:/usr/include/c++/5/bits/basic_string.h ****       }
1031:/usr/include/c++/5/bits/basic_string.h **** 
1032:/usr/include/c++/5/bits/basic_string.h ****       /**
1033:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append multiple characters.
1034:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1035:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
1036:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1037:/usr/include/c++/5/bits/basic_string.h ****        *
1038:/usr/include/c++/5/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1039:/usr/include/c++/5/bits/basic_string.h ****        */
1040:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1041:/usr/include/c++/5/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1042:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1043:/usr/include/c++/5/bits/basic_string.h **** 
1044:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1045:/usr/include/c++/5/bits/basic_string.h ****       /**
1046:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1047:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1048:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1049:/usr/include/c++/5/bits/basic_string.h ****        */
1050:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1051:/usr/include/c++/5/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1052:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1053:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1054:/usr/include/c++/5/bits/basic_string.h **** 
1055:/usr/include/c++/5/bits/basic_string.h ****       /**
1056:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a range of characters.
1057:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1058:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1059:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1060:/usr/include/c++/5/bits/basic_string.h ****        *
1061:/usr/include/c++/5/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1062:/usr/include/c++/5/bits/basic_string.h ****        */
1063:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1064:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1065:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
GAS LISTING /tmp/ccX8BQhk.s 			page 89


1066:/usr/include/c++/5/bits/basic_string.h **** #else
1067:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1068:/usr/include/c++/5/bits/basic_string.h **** #endif
1069:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1070:/usr/include/c++/5/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1071:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1072:/usr/include/c++/5/bits/basic_string.h **** 
1073:/usr/include/c++/5/bits/basic_string.h ****       /**
1074:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a single character.
1075:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to append.
1076:/usr/include/c++/5/bits/basic_string.h ****        */
1077:/usr/include/c++/5/bits/basic_string.h ****       void
1078:/usr/include/c++/5/bits/basic_string.h ****       push_back(_CharT __c)
1079:/usr/include/c++/5/bits/basic_string.h ****       {
1080:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
1081:/usr/include/c++/5/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1082:/usr/include/c++/5/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1083:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1084:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1085:/usr/include/c++/5/bits/basic_string.h ****       }
1086:/usr/include/c++/5/bits/basic_string.h **** 
1087:/usr/include/c++/5/bits/basic_string.h ****       /**
1088:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1089:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
1090:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1091:/usr/include/c++/5/bits/basic_string.h ****        */
1092:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1093:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str)
1094:/usr/include/c++/5/bits/basic_string.h ****       {
1095:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_assign(__str);
1096:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
1097:/usr/include/c++/5/bits/basic_string.h ****       }
1098:/usr/include/c++/5/bits/basic_string.h **** 
1099:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1100:/usr/include/c++/5/bits/basic_string.h ****       /**
1101:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1102:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
1103:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1104:/usr/include/c++/5/bits/basic_string.h ****        *
1105:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1106:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1107:/usr/include/c++/5/bits/basic_string.h ****        */
1108:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1109:/usr/include/c++/5/bits/basic_string.h ****       assign(basic_string&& __str)
1110:/usr/include/c++/5/bits/basic_string.h ****       {
1111:/usr/include/c++/5/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1112:/usr/include/c++/5/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1113:/usr/include/c++/5/bits/basic_string.h **** 	return *this = std::move(__str);
1114:/usr/include/c++/5/bits/basic_string.h ****       }
1115:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1116:/usr/include/c++/5/bits/basic_string.h **** 
1117:/usr/include/c++/5/bits/basic_string.h ****       /**
1118:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1119:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to use.
1120:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1121:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1122:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
GAS LISTING /tmp/ccX8BQhk.s 			page 90


1123:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1124:/usr/include/c++/5/bits/basic_string.h ****        *
1125:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1126:/usr/include/c++/5/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1127:/usr/include/c++/5/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1128:/usr/include/c++/5/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1129:/usr/include/c++/5/bits/basic_string.h ****        */
1130:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1131:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1132:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1133:/usr/include/c++/5/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1134:/usr/include/c++/5/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1135:/usr/include/c++/5/bits/basic_string.h **** 
1136:/usr/include/c++/5/bits/basic_string.h ****       /**
1137:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1138:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
1139:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1140:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1141:/usr/include/c++/5/bits/basic_string.h ****        *
1142:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1143:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1144:/usr/include/c++/5/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1145:/usr/include/c++/5/bits/basic_string.h ****        */
1146:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1147:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1148:/usr/include/c++/5/bits/basic_string.h ****       {
1149:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1150:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1151:/usr/include/c++/5/bits/basic_string.h ****       }
1152:/usr/include/c++/5/bits/basic_string.h **** 
1153:/usr/include/c++/5/bits/basic_string.h ****       /**
1154:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1155:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
1156:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1157:/usr/include/c++/5/bits/basic_string.h ****        *
1158:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1159:/usr/include/c++/5/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1160:/usr/include/c++/5/bits/basic_string.h ****        *  function returns.
1161:/usr/include/c++/5/bits/basic_string.h ****        */
1162:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1163:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s)
1164:/usr/include/c++/5/bits/basic_string.h ****       {
1165:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1166:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1167:/usr/include/c++/5/bits/basic_string.h **** 			  traits_type::length(__s));
1168:/usr/include/c++/5/bits/basic_string.h ****       }
1169:/usr/include/c++/5/bits/basic_string.h **** 
1170:/usr/include/c++/5/bits/basic_string.h ****       /**
1171:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1172:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1173:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
1174:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/usr/include/c++/5/bits/basic_string.h ****        *
1176:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1177:/usr/include/c++/5/bits/basic_string.h ****        *  character @a __c.
1178:/usr/include/c++/5/bits/basic_string.h ****        */
1179:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/ccX8BQhk.s 			page 91


1180:/usr/include/c++/5/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1181:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1182:/usr/include/c++/5/bits/basic_string.h **** 
1183:/usr/include/c++/5/bits/basic_string.h ****       /**
1184:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1185:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1186:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1187:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1188:/usr/include/c++/5/bits/basic_string.h ****        *
1189:/usr/include/c++/5/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1190:/usr/include/c++/5/bits/basic_string.h ****       */
1191:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1192:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1193:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1194:/usr/include/c++/5/bits/basic_string.h **** #else
1195:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1196:/usr/include/c++/5/bits/basic_string.h **** #endif
1197:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1198:/usr/include/c++/5/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1199:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1200:/usr/include/c++/5/bits/basic_string.h **** 
1201:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1202:/usr/include/c++/5/bits/basic_string.h ****       /**
1203:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1204:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1205:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1206:/usr/include/c++/5/bits/basic_string.h ****        */
1207:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1208:/usr/include/c++/5/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1209:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1210:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1211:/usr/include/c++/5/bits/basic_string.h **** 
1212:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1213:/usr/include/c++/5/bits/basic_string.h ****       /**
1214:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1215:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1216:/usr/include/c++/5/bits/basic_string.h ****        *              insert at.
1217:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1218:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1219:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1220:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1221:/usr/include/c++/5/bits/basic_string.h ****        *
1222:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1223:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1224:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1225:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1226:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1227:/usr/include/c++/5/bits/basic_string.h ****       */
1228:/usr/include/c++/5/bits/basic_string.h ****       iterator
1229:/usr/include/c++/5/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1230:/usr/include/c++/5/bits/basic_string.h ****       {
1231:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1232:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1233:/usr/include/c++/5/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1234:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1235:/usr/include/c++/5/bits/basic_string.h ****       }
1236:/usr/include/c++/5/bits/basic_string.h **** #else
GAS LISTING /tmp/ccX8BQhk.s 			page 92


1237:/usr/include/c++/5/bits/basic_string.h ****       /**
1238:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1239:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1240:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1241:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1242:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1243:/usr/include/c++/5/bits/basic_string.h ****        *
1244:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1245:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1246:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1247:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1248:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1249:/usr/include/c++/5/bits/basic_string.h ****       */
1250:/usr/include/c++/5/bits/basic_string.h ****       void
1251:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1252:/usr/include/c++/5/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1253:/usr/include/c++/5/bits/basic_string.h **** #endif
1254:/usr/include/c++/5/bits/basic_string.h **** 
1255:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1256:/usr/include/c++/5/bits/basic_string.h ****       /**
1257:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1258:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1259:/usr/include/c++/5/bits/basic_string.h ****        *              insert at.
1260:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
1261:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
1262:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1263:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1264:/usr/include/c++/5/bits/basic_string.h ****        *
1265:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1266:/usr/include/c++/5/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1267:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1268:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1269:/usr/include/c++/5/bits/basic_string.h ****       */
1270:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1271:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1272:/usr/include/c++/5/bits/basic_string.h **** 	iterator
1273:/usr/include/c++/5/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1274:/usr/include/c++/5/bits/basic_string.h ****         {
1275:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1276:/usr/include/c++/5/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1277:/usr/include/c++/5/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1278:/usr/include/c++/5/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1279:/usr/include/c++/5/bits/basic_string.h **** 	}
1280:/usr/include/c++/5/bits/basic_string.h **** #else
1281:/usr/include/c++/5/bits/basic_string.h ****       /**
1282:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1283:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1284:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
1285:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
1286:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1287:/usr/include/c++/5/bits/basic_string.h ****        *
1288:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1289:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1290:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1291:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1292:/usr/include/c++/5/bits/basic_string.h ****       */
1293:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
GAS LISTING /tmp/ccX8BQhk.s 			page 93


1294:/usr/include/c++/5/bits/basic_string.h ****         void
1295:/usr/include/c++/5/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1296:/usr/include/c++/5/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1297:/usr/include/c++/5/bits/basic_string.h **** #endif
1298:/usr/include/c++/5/bits/basic_string.h **** 
1299:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1300:/usr/include/c++/5/bits/basic_string.h ****       /**
1301:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1302:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1303:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1304:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1305:/usr/include/c++/5/bits/basic_string.h ****        */
1306:/usr/include/c++/5/bits/basic_string.h ****       void
1307:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1308:/usr/include/c++/5/bits/basic_string.h ****       {
1309:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1310:/usr/include/c++/5/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1311:/usr/include/c++/5/bits/basic_string.h ****       }
1312:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1313:/usr/include/c++/5/bits/basic_string.h **** 
1314:/usr/include/c++/5/bits/basic_string.h ****       /**
1315:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert value of a string.
1316:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1317:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
1318:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1319:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1320:/usr/include/c++/5/bits/basic_string.h ****        *
1321:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1322:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1323:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1324:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1325:/usr/include/c++/5/bits/basic_string.h ****       */
1326:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1327:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1328:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1329:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1330:/usr/include/c++/5/bits/basic_string.h **** 
1331:/usr/include/c++/5/bits/basic_string.h ****       /**
1332:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a substring.
1333:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1334:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
1335:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1336:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1337:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1338:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1339:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1340:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1341:/usr/include/c++/5/bits/basic_string.h ****        *
1342:/usr/include/c++/5/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1343:/usr/include/c++/5/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1344:/usr/include/c++/5/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1345:/usr/include/c++/5/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1346:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1347:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1348:/usr/include/c++/5/bits/basic_string.h ****       */
1349:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1350:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
GAS LISTING /tmp/ccX8BQhk.s 			page 94


1351:/usr/include/c++/5/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1352:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1353:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1354:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1355:/usr/include/c++/5/bits/basic_string.h **** 
1356:/usr/include/c++/5/bits/basic_string.h ****       /**
1357:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C substring.
1358:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1359:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
1360:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1361:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1363:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1364:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1365:/usr/include/c++/5/bits/basic_string.h ****        *
1366:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1367:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1368:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1369:/usr/include/c++/5/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1370:/usr/include/c++/5/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1371:/usr/include/c++/5/bits/basic_string.h ****       */
1372:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1373:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1374:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1375:/usr/include/c++/5/bits/basic_string.h **** 
1376:/usr/include/c++/5/bits/basic_string.h ****       /**
1377:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C string.
1378:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1379:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
1380:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1381:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1382:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1383:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1384:/usr/include/c++/5/bits/basic_string.h ****        *
1385:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1386:/usr/include/c++/5/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1387:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1388:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1389:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1390:/usr/include/c++/5/bits/basic_string.h ****       */
1391:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1392:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1393:/usr/include/c++/5/bits/basic_string.h ****       {
1394:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1395:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1396:/usr/include/c++/5/bits/basic_string.h **** 			     traits_type::length(__s));
1397:/usr/include/c++/5/bits/basic_string.h ****       }
1398:/usr/include/c++/5/bits/basic_string.h **** 
1399:/usr/include/c++/5/bits/basic_string.h ****       /**
1400:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1401:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1402:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1403:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1404:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1405:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1406:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1407:/usr/include/c++/5/bits/basic_string.h ****        *  string.
GAS LISTING /tmp/ccX8BQhk.s 			page 95


1408:/usr/include/c++/5/bits/basic_string.h ****        *
1409:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1410:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1411:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1412:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1413:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1414:/usr/include/c++/5/bits/basic_string.h ****       */
1415:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1416:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1417:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1418:/usr/include/c++/5/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1419:/usr/include/c++/5/bits/basic_string.h **** 
1420:/usr/include/c++/5/bits/basic_string.h ****       /**
1421:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert one character.
1422:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1423:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1424:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1425:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1426:/usr/include/c++/5/bits/basic_string.h ****        *
1427:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1428:/usr/include/c++/5/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1429:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1430:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1431:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1432:/usr/include/c++/5/bits/basic_string.h ****       */
1433:/usr/include/c++/5/bits/basic_string.h ****       iterator
1434:/usr/include/c++/5/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1435:/usr/include/c++/5/bits/basic_string.h ****       {
1436:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1437:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1438:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1439:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1440:/usr/include/c++/5/bits/basic_string.h ****       }
1441:/usr/include/c++/5/bits/basic_string.h **** 
1442:/usr/include/c++/5/bits/basic_string.h ****       /**
1443:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove characters.
1444:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1445:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1446:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1448:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1449:/usr/include/c++/5/bits/basic_string.h ****        *
1450:/usr/include/c++/5/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1451:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1452:/usr/include/c++/5/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1453:/usr/include/c++/5/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1454:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1455:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1456:/usr/include/c++/5/bits/basic_string.h ****       */
1457:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1458:/usr/include/c++/5/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1459:/usr/include/c++/5/bits/basic_string.h ****       {
1460:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(_M_check(__pos, "basic_string::erase"),
1461:/usr/include/c++/5/bits/basic_string.h **** 		       _M_limit(__pos, __n));
1462:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
1463:/usr/include/c++/5/bits/basic_string.h ****       }
1464:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 96


1465:/usr/include/c++/5/bits/basic_string.h ****       /**
1466:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove one character.
1467:/usr/include/c++/5/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1468:/usr/include/c++/5/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1469:/usr/include/c++/5/bits/basic_string.h ****        *
1470:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1471:/usr/include/c++/5/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1472:/usr/include/c++/5/bits/basic_string.h ****       */
1473:/usr/include/c++/5/bits/basic_string.h ****       iterator
1474:/usr/include/c++/5/bits/basic_string.h ****       erase(__const_iterator __position)
1475:/usr/include/c++/5/bits/basic_string.h ****       {
1476:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1477:/usr/include/c++/5/bits/basic_string.h **** 				 && __position < end());
1478:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1479:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1480:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1481:/usr/include/c++/5/bits/basic_string.h ****       }
1482:/usr/include/c++/5/bits/basic_string.h **** 
1483:/usr/include/c++/5/bits/basic_string.h ****       /**
1484:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1485:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1486:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1487:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1488:/usr/include/c++/5/bits/basic_string.h ****        *
1489:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1490:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1491:/usr/include/c++/5/bits/basic_string.h ****       */
1492:/usr/include/c++/5/bits/basic_string.h ****       iterator
1493:/usr/include/c++/5/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1494:/usr/include/c++/5/bits/basic_string.h ****       {
1495:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1496:/usr/include/c++/5/bits/basic_string.h **** 				 && __last <= end());
1497:/usr/include/c++/5/bits/basic_string.h ****         const size_type __pos = __first - begin();
1498:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(__pos, __last - __first);
1499:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1500:/usr/include/c++/5/bits/basic_string.h ****       }
1501:/usr/include/c++/5/bits/basic_string.h **** 
1502:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1503:/usr/include/c++/5/bits/basic_string.h ****       /**
1504:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove the last character.
1505:/usr/include/c++/5/bits/basic_string.h ****        *
1506:/usr/include/c++/5/bits/basic_string.h ****        *  The string must be non-empty.
1507:/usr/include/c++/5/bits/basic_string.h ****        */
1508:/usr/include/c++/5/bits/basic_string.h ****       void
1509:/usr/include/c++/5/bits/basic_string.h ****       pop_back() noexcept
1510:/usr/include/c++/5/bits/basic_string.h ****       { _M_erase(size()-1, 1); }
1511:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1512:/usr/include/c++/5/bits/basic_string.h **** 
1513:/usr/include/c++/5/bits/basic_string.h ****       /**
1514:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1515:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1516:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1517:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
1518:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1519:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1520:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1521:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
GAS LISTING /tmp/ccX8BQhk.s 			page 97


1522:/usr/include/c++/5/bits/basic_string.h ****        *
1523:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1524:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1525:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1526:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1527:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1528:/usr/include/c++/5/bits/basic_string.h ****        *  error is thrown.
1529:/usr/include/c++/5/bits/basic_string.h ****       */
1530:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1531:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1532:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1533:/usr/include/c++/5/bits/basic_string.h **** 
1534:/usr/include/c++/5/bits/basic_string.h ****       /**
1535:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1537:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1538:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
1539:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1540:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1541:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1542:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1543:/usr/include/c++/5/bits/basic_string.h ****        *  __str.size().
1544:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1545:/usr/include/c++/5/bits/basic_string.h ****        *
1546:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1547:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1548:/usr/include/c++/5/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1549:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1550:/usr/include/c++/5/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1551:/usr/include/c++/5/bits/basic_string.h ****       */
1552:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1553:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1554:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1555:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1556:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1557:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1558:/usr/include/c++/5/bits/basic_string.h **** 
1559:/usr/include/c++/5/bits/basic_string.h ****       /**
1560:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1561:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1562:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1563:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
1564:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1565:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1566:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1567:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1568:/usr/include/c++/5/bits/basic_string.h ****        *
1569:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1570:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1571:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1572:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1573:/usr/include/c++/5/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1574:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1575:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1576:/usr/include/c++/5/bits/basic_string.h ****       */
1577:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1578:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
GAS LISTING /tmp/ccX8BQhk.s 			page 98


1579:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2)
1580:/usr/include/c++/5/bits/basic_string.h ****       {
1581:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1582:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1583:/usr/include/c++/5/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1584:/usr/include/c++/5/bits/basic_string.h ****       }
1585:/usr/include/c++/5/bits/basic_string.h **** 
1586:/usr/include/c++/5/bits/basic_string.h ****       /**
1587:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1588:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1589:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1590:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
1591:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1592:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1593:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1594:/usr/include/c++/5/bits/basic_string.h ****        *
1595:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1596:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1597:/usr/include/c++/5/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1598:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1599:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1600:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1601:/usr/include/c++/5/bits/basic_string.h ****       */
1602:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1603:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1604:/usr/include/c++/5/bits/basic_string.h ****       {
1605:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1606:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1607:/usr/include/c++/5/bits/basic_string.h ****       }
1608:/usr/include/c++/5/bits/basic_string.h **** 
1609:/usr/include/c++/5/bits/basic_string.h ****       /**
1610:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1611:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1612:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1613:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1614:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
1615:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1616:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1617:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1618:/usr/include/c++/5/bits/basic_string.h ****        *
1619:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1620:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1621:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1622:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1623:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1624:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1625:/usr/include/c++/5/bits/basic_string.h ****       */
1626:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1627:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1628:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1629:/usr/include/c++/5/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1630:/usr/include/c++/5/bits/basic_string.h **** 
1631:/usr/include/c++/5/bits/basic_string.h ****       /**
1632:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1633:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1634:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1635:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String value to insert.
GAS LISTING /tmp/ccX8BQhk.s 			page 99


1636:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1637:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1638:/usr/include/c++/5/bits/basic_string.h ****        *
1639:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1640:/usr/include/c++/5/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1641:/usr/include/c++/5/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1642:/usr/include/c++/5/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1643:/usr/include/c++/5/bits/basic_string.h ****       */
1644:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1645:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1646:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string& __str)
1647:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1648:/usr/include/c++/5/bits/basic_string.h **** 
1649:/usr/include/c++/5/bits/basic_string.h ****       /**
1650:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1651:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1652:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1653:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
1654:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1655:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1656:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1657:/usr/include/c++/5/bits/basic_string.h ****        *
1658:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1659:/usr/include/c++/5/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1660:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1661:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1662:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1663:/usr/include/c++/5/bits/basic_string.h ****       */
1664:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1665:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1666:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
1667:/usr/include/c++/5/bits/basic_string.h ****       {
1668:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1669:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1670:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
1671:/usr/include/c++/5/bits/basic_string.h ****       }
1672:/usr/include/c++/5/bits/basic_string.h **** 
1673:/usr/include/c++/5/bits/basic_string.h ****       /**
1674:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
1675:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1676:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1677:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
1678:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1679:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1680:/usr/include/c++/5/bits/basic_string.h ****        *
1681:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1682:/usr/include/c++/5/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
1683:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1684:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1685:/usr/include/c++/5/bits/basic_string.h ****       */
1686:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1687:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
1688:/usr/include/c++/5/bits/basic_string.h ****       {
1689:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1690:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
1691:/usr/include/c++/5/bits/basic_string.h ****       }
1692:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 100


1693:/usr/include/c++/5/bits/basic_string.h ****       /**
1694:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
1695:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1696:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1697:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1698:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
1699:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1700:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1701:/usr/include/c++/5/bits/basic_string.h ****        *
1702:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1703:/usr/include/c++/5/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
1704:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1705:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1706:/usr/include/c++/5/bits/basic_string.h ****       */
1707:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1708:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
1709:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT __c)
1710:/usr/include/c++/5/bits/basic_string.h ****       {
1711:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1712:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1713:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
1714:/usr/include/c++/5/bits/basic_string.h ****       }
1715:/usr/include/c++/5/bits/basic_string.h **** 
1716:/usr/include/c++/5/bits/basic_string.h ****       /**
1717:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
1718:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1719:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1720:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
1721:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
1722:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1723:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1724:/usr/include/c++/5/bits/basic_string.h ****        *
1725:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1726:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1727:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1728:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1729:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1730:/usr/include/c++/5/bits/basic_string.h ****       */
1731:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1732:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1733:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1734:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1735:/usr/include/c++/5/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
1736:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1737:/usr/include/c++/5/bits/basic_string.h ****         {
1738:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1739:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= end());
1740:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1741:/usr/include/c++/5/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
1742:/usr/include/c++/5/bits/basic_string.h **** 					   std::__false_type());
1743:/usr/include/c++/5/bits/basic_string.h **** 	}
1744:/usr/include/c++/5/bits/basic_string.h **** #else
1745:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1746:/usr/include/c++/5/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
1747:/usr/include/c++/5/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
1748:/usr/include/c++/5/bits/basic_string.h **** #else
1749:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
GAS LISTING /tmp/ccX8BQhk.s 			page 101


1750:/usr/include/c++/5/bits/basic_string.h **** #endif
1751:/usr/include/c++/5/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
1752:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1753:/usr/include/c++/5/bits/basic_string.h ****         {
1754:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1755:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= end());
1756:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1757:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1758:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
1759:/usr/include/c++/5/bits/basic_string.h **** 	}
1760:/usr/include/c++/5/bits/basic_string.h **** #endif
1761:/usr/include/c++/5/bits/basic_string.h **** 
1762:/usr/include/c++/5/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
1763:/usr/include/c++/5/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
1764:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1765:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1766:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
1767:/usr/include/c++/5/bits/basic_string.h ****       {
1768:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1769:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1770:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1771:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1772:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1773:/usr/include/c++/5/bits/basic_string.h ****       }
1774:/usr/include/c++/5/bits/basic_string.h **** 
1775:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1776:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1777:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
1778:/usr/include/c++/5/bits/basic_string.h ****       {
1779:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1780:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1781:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1782:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1783:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1784:/usr/include/c++/5/bits/basic_string.h ****       }
1785:/usr/include/c++/5/bits/basic_string.h **** 
1786:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1787:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1788:/usr/include/c++/5/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
1789:/usr/include/c++/5/bits/basic_string.h ****       {
1790:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1791:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1792:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1793:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1794:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1795:/usr/include/c++/5/bits/basic_string.h ****       }
1796:/usr/include/c++/5/bits/basic_string.h **** 
1797:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1798:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1799:/usr/include/c++/5/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
1800:/usr/include/c++/5/bits/basic_string.h ****       {
1801:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1802:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1803:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1804:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1805:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1806:/usr/include/c++/5/bits/basic_string.h ****       }
GAS LISTING /tmp/ccX8BQhk.s 			page 102


1807:/usr/include/c++/5/bits/basic_string.h **** 
1808:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1809:/usr/include/c++/5/bits/basic_string.h ****       /**
1810:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
1811:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1812:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1813:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1814:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1815:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1816:/usr/include/c++/5/bits/basic_string.h ****        *
1817:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1818:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1819:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1820:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1821:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1822:/usr/include/c++/5/bits/basic_string.h ****       */
1823:/usr/include/c++/5/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
1824:/usr/include/c++/5/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
1825:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
1826:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1827:/usr/include/c++/5/bits/basic_string.h **** 
1828:/usr/include/c++/5/bits/basic_string.h ****     private:
1829:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
1830:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
1831:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1832:/usr/include/c++/5/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
1833:/usr/include/c++/5/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
1834:/usr/include/c++/5/bits/basic_string.h **** 
1835:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1836:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
1837:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1838:/usr/include/c++/5/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
1839:/usr/include/c++/5/bits/basic_string.h **** 			    __false_type);
1840:/usr/include/c++/5/bits/basic_string.h **** 
1841:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1842:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1843:/usr/include/c++/5/bits/basic_string.h **** 		     _CharT __c);
1844:/usr/include/c++/5/bits/basic_string.h **** 
1845:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1846:/usr/include/c++/5/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
1847:/usr/include/c++/5/bits/basic_string.h **** 		 const size_type __len2);
1848:/usr/include/c++/5/bits/basic_string.h **** 
1849:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1850:/usr/include/c++/5/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
1851:/usr/include/c++/5/bits/basic_string.h **** 
1852:/usr/include/c++/5/bits/basic_string.h ****     public:
1853:/usr/include/c++/5/bits/basic_string.h **** 
1854:/usr/include/c++/5/bits/basic_string.h ****       /**
1855:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy substring into C string.
1856:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to copy value into.
1857:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
1858:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
1859:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Number of characters actually copied
1860:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
1861:/usr/include/c++/5/bits/basic_string.h ****        *
1862:/usr/include/c++/5/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
1863:/usr/include/c++/5/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
GAS LISTING /tmp/ccX8BQhk.s 			page 103


1864:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.
1865:/usr/include/c++/5/bits/basic_string.h ****       */
1866:/usr/include/c++/5/bits/basic_string.h ****       size_type
1867:/usr/include/c++/5/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
1868:/usr/include/c++/5/bits/basic_string.h **** 
1869:/usr/include/c++/5/bits/basic_string.h ****       /**
1870:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Swap contents with another string.
1871:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String to swap with.
1872:/usr/include/c++/5/bits/basic_string.h ****        *
1873:/usr/include/c++/5/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
1874:/usr/include/c++/5/bits/basic_string.h ****        *  time.
1875:/usr/include/c++/5/bits/basic_string.h ****       */
1876:/usr/include/c++/5/bits/basic_string.h ****       void
1877:/usr/include/c++/5/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
1878:/usr/include/c++/5/bits/basic_string.h **** 
1879:/usr/include/c++/5/bits/basic_string.h ****       // String operations:
1880:/usr/include/c++/5/bits/basic_string.h ****       /**
1881:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
1882:/usr/include/c++/5/bits/basic_string.h ****        *
1883:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1884:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
1885:/usr/include/c++/5/bits/basic_string.h ****       */
1886:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
1887:/usr/include/c++/5/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
1888:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
1889:/usr/include/c++/5/bits/basic_string.h **** 
1890:/usr/include/c++/5/bits/basic_string.h ****       /**
1891:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
1892:/usr/include/c++/5/bits/basic_string.h ****        *
1893:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1894:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
1895:/usr/include/c++/5/bits/basic_string.h ****       */
1896:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
1897:/usr/include/c++/5/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
1898:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
1899:/usr/include/c++/5/bits/basic_string.h **** 
1900:/usr/include/c++/5/bits/basic_string.h ****       /**
1901:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
1902:/usr/include/c++/5/bits/basic_string.h ****       */
1903:/usr/include/c++/5/bits/basic_string.h ****       allocator_type
1904:/usr/include/c++/5/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1905:/usr/include/c++/5/bits/basic_string.h ****       { return _M_get_allocator(); }
1906:/usr/include/c++/5/bits/basic_string.h **** 
1907:/usr/include/c++/5/bits/basic_string.h ****       /**
1908:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C substring.
1909:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1910:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1911:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
1912:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1913:/usr/include/c++/5/bits/basic_string.h ****        *
1914:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
1915:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1916:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1917:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
1918:/usr/include/c++/5/bits/basic_string.h ****       */
1919:/usr/include/c++/5/bits/basic_string.h ****       size_type
1920:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
GAS LISTING /tmp/ccX8BQhk.s 			page 104


1921:/usr/include/c++/5/bits/basic_string.h **** 
1922:/usr/include/c++/5/bits/basic_string.h ****       /**
1923:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a string.
1924:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
1925:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1926:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1927:/usr/include/c++/5/bits/basic_string.h ****        *
1928:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
1929:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
1930:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns npos.
1931:/usr/include/c++/5/bits/basic_string.h ****       */
1932:/usr/include/c++/5/bits/basic_string.h ****       size_type
1933:/usr/include/c++/5/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
1934:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1935:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
1936:/usr/include/c++/5/bits/basic_string.h **** 
1937:/usr/include/c++/5/bits/basic_string.h ****       /**
1938:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C string.
1939:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1940:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1941:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1942:/usr/include/c++/5/bits/basic_string.h ****        *
1943:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
1944:/usr/include/c++/5/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
1945:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1946:/usr/include/c++/5/bits/basic_string.h ****       */
1947:/usr/include/c++/5/bits/basic_string.h ****       size_type
1948:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
1949:/usr/include/c++/5/bits/basic_string.h ****       {
1950:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1951:/usr/include/c++/5/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
1952:/usr/include/c++/5/bits/basic_string.h ****       }
1953:/usr/include/c++/5/bits/basic_string.h **** 
1954:/usr/include/c++/5/bits/basic_string.h ****       /**
1955:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
1956:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
1957:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1958:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
1959:/usr/include/c++/5/bits/basic_string.h ****        *
1960:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
1961:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1962:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
1963:/usr/include/c++/5/bits/basic_string.h ****       */
1964:/usr/include/c++/5/bits/basic_string.h ****       size_type
1965:/usr/include/c++/5/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
1966:/usr/include/c++/5/bits/basic_string.h **** 
1967:/usr/include/c++/5/bits/basic_string.h ****       /**
1968:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a string.
1969:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
1970:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1971:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1972:/usr/include/c++/5/bits/basic_string.h ****        *
1973:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
1974:/usr/include/c++/5/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
1975:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1976:/usr/include/c++/5/bits/basic_string.h ****       */
1977:/usr/include/c++/5/bits/basic_string.h ****       size_type
GAS LISTING /tmp/ccX8BQhk.s 			page 105


1978:/usr/include/c++/5/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
1979:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1980:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
1981:/usr/include/c++/5/bits/basic_string.h **** 
1982:/usr/include/c++/5/bits/basic_string.h ****       /**
1983:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
1984:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1985:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
1986:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1987:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1988:/usr/include/c++/5/bits/basic_string.h ****        *
1989:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
1990:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1991:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1992:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
1993:/usr/include/c++/5/bits/basic_string.h ****       */
1994:/usr/include/c++/5/bits/basic_string.h ****       size_type
1995:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
1996:/usr/include/c++/5/bits/basic_string.h **** 
1997:/usr/include/c++/5/bits/basic_string.h ****       /**
1998:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C string.
1999:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
2000:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2001:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2002:/usr/include/c++/5/bits/basic_string.h ****        *
2003:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2004:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2005:/usr/include/c++/5/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2006:/usr/include/c++/5/bits/basic_string.h ****       */
2007:/usr/include/c++/5/bits/basic_string.h ****       size_type
2008:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2009:/usr/include/c++/5/bits/basic_string.h ****       {
2010:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2011:/usr/include/c++/5/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2012:/usr/include/c++/5/bits/basic_string.h ****       }
2013:/usr/include/c++/5/bits/basic_string.h **** 
2014:/usr/include/c++/5/bits/basic_string.h ****       /**
2015:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
2016:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2017:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2018:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2019:/usr/include/c++/5/bits/basic_string.h ****        *
2020:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2021:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2022:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2023:/usr/include/c++/5/bits/basic_string.h ****       */
2024:/usr/include/c++/5/bits/basic_string.h ****       size_type
2025:/usr/include/c++/5/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2026:/usr/include/c++/5/bits/basic_string.h **** 
2027:/usr/include/c++/5/bits/basic_string.h ****       /**
2028:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2029:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2030:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2031:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2032:/usr/include/c++/5/bits/basic_string.h ****        *
2033:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2034:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
GAS LISTING /tmp/ccX8BQhk.s 			page 106


2035:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2036:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2037:/usr/include/c++/5/bits/basic_string.h ****       */
2038:/usr/include/c++/5/bits/basic_string.h ****       size_type
2039:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2040:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2041:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2042:/usr/include/c++/5/bits/basic_string.h **** 
2043:/usr/include/c++/5/bits/basic_string.h ****       /**
2044:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2045:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2046:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2047:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2048:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2049:/usr/include/c++/5/bits/basic_string.h ****        *
2050:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2051:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2052:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2053:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2054:/usr/include/c++/5/bits/basic_string.h ****       */
2055:/usr/include/c++/5/bits/basic_string.h ****       size_type
2056:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
2057:/usr/include/c++/5/bits/basic_string.h **** 
2058:/usr/include/c++/5/bits/basic_string.h ****       /**
2059:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2060:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2061:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2062:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2063:/usr/include/c++/5/bits/basic_string.h ****        *
2064:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2065:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2066:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2067:/usr/include/c++/5/bits/basic_string.h ****       */
2068:/usr/include/c++/5/bits/basic_string.h ****       size_type
2069:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2070:/usr/include/c++/5/bits/basic_string.h ****       {
2071:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2072:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2073:/usr/include/c++/5/bits/basic_string.h ****       }
2074:/usr/include/c++/5/bits/basic_string.h **** 
2075:/usr/include/c++/5/bits/basic_string.h ****       /**
2076:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
2077:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2078:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2079:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2080:/usr/include/c++/5/bits/basic_string.h ****        *
2081:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2082:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2083:/usr/include/c++/5/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2084:/usr/include/c++/5/bits/basic_string.h ****        *
2085:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2086:/usr/include/c++/5/bits/basic_string.h ****       */
2087:/usr/include/c++/5/bits/basic_string.h ****       size_type
2088:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2089:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__c, __pos); }
2090:/usr/include/c++/5/bits/basic_string.h **** 
2091:/usr/include/c++/5/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccX8BQhk.s 			page 107


2092:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2093:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2094:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2095:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2096:/usr/include/c++/5/bits/basic_string.h ****        *
2097:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2098:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2099:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2100:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2101:/usr/include/c++/5/bits/basic_string.h ****       */
2102:/usr/include/c++/5/bits/basic_string.h ****       size_type
2103:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2104:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2105:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2106:/usr/include/c++/5/bits/basic_string.h **** 
2107:/usr/include/c++/5/bits/basic_string.h ****       /**
2108:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2109:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2110:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2111:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2112:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2113:/usr/include/c++/5/bits/basic_string.h ****        *
2114:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2115:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2116:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2117:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2118:/usr/include/c++/5/bits/basic_string.h ****       */
2119:/usr/include/c++/5/bits/basic_string.h ****       size_type
2120:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
2121:/usr/include/c++/5/bits/basic_string.h **** 
2122:/usr/include/c++/5/bits/basic_string.h ****       /**
2123:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2124:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2125:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2126:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2127:/usr/include/c++/5/bits/basic_string.h ****        *
2128:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2129:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2130:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2131:/usr/include/c++/5/bits/basic_string.h ****       */
2132:/usr/include/c++/5/bits/basic_string.h ****       size_type
2133:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2134:/usr/include/c++/5/bits/basic_string.h ****       {
2135:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2136:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2137:/usr/include/c++/5/bits/basic_string.h ****       }
2138:/usr/include/c++/5/bits/basic_string.h **** 
2139:/usr/include/c++/5/bits/basic_string.h ****       /**
2140:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
2141:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2142:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2143:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2144:/usr/include/c++/5/bits/basic_string.h ****        *
2145:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2146:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2147:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2148:/usr/include/c++/5/bits/basic_string.h ****        *
GAS LISTING /tmp/ccX8BQhk.s 			page 108


2149:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2150:/usr/include/c++/5/bits/basic_string.h ****       */
2151:/usr/include/c++/5/bits/basic_string.h ****       size_type
2152:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2153:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2154:/usr/include/c++/5/bits/basic_string.h **** 
2155:/usr/include/c++/5/bits/basic_string.h ****       /**
2156:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2157:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2158:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2159:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2160:/usr/include/c++/5/bits/basic_string.h ****        *
2161:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2162:/usr/include/c++/5/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2163:/usr/include/c++/5/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2164:/usr/include/c++/5/bits/basic_string.h ****       */
2165:/usr/include/c++/5/bits/basic_string.h ****       size_type
2166:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2167:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2168:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2169:/usr/include/c++/5/bits/basic_string.h **** 
2170:/usr/include/c++/5/bits/basic_string.h ****       /**
2171:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2172:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2173:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2174:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2175:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2176:/usr/include/c++/5/bits/basic_string.h ****        *
2177:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2178:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2179:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2180:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2181:/usr/include/c++/5/bits/basic_string.h ****       */
2182:/usr/include/c++/5/bits/basic_string.h ****       size_type
2183:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2184:/usr/include/c++/5/bits/basic_string.h **** 			size_type __n) const;
2185:/usr/include/c++/5/bits/basic_string.h **** 
2186:/usr/include/c++/5/bits/basic_string.h ****       /**
2187:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2188:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2189:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2190:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2191:/usr/include/c++/5/bits/basic_string.h ****        *
2192:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2193:/usr/include/c++/5/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2194:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2195:/usr/include/c++/5/bits/basic_string.h ****       */
2196:/usr/include/c++/5/bits/basic_string.h ****       size_type
2197:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2198:/usr/include/c++/5/bits/basic_string.h ****       {
2199:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2200:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2201:/usr/include/c++/5/bits/basic_string.h ****       }
2202:/usr/include/c++/5/bits/basic_string.h **** 
2203:/usr/include/c++/5/bits/basic_string.h ****       /**
2204:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a different character.
2205:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
GAS LISTING /tmp/ccX8BQhk.s 			page 109


2206:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2207:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2208:/usr/include/c++/5/bits/basic_string.h ****        *
2209:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2210:/usr/include/c++/5/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2211:/usr/include/c++/5/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2212:/usr/include/c++/5/bits/basic_string.h ****       */
2213:/usr/include/c++/5/bits/basic_string.h ****       size_type
2214:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2215:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2216:/usr/include/c++/5/bits/basic_string.h **** 
2217:/usr/include/c++/5/bits/basic_string.h ****       /**
2218:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2219:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2220:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2221:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2222:/usr/include/c++/5/bits/basic_string.h ****        *
2223:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2224:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2225:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2226:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2227:/usr/include/c++/5/bits/basic_string.h ****       */
2228:/usr/include/c++/5/bits/basic_string.h ****       size_type
2229:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2230:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2231:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2232:/usr/include/c++/5/bits/basic_string.h **** 
2233:/usr/include/c++/5/bits/basic_string.h ****       /**
2234:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2235:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2236:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2237:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2238:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2239:/usr/include/c++/5/bits/basic_string.h ****        *
2240:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2241:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2242:/usr/include/c++/5/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2243:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2244:/usr/include/c++/5/bits/basic_string.h ****       */
2245:/usr/include/c++/5/bits/basic_string.h ****       size_type
2246:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2247:/usr/include/c++/5/bits/basic_string.h **** 		       size_type __n) const;
2248:/usr/include/c++/5/bits/basic_string.h ****       /**
2249:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2250:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2251:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2252:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2253:/usr/include/c++/5/bits/basic_string.h ****        *
2254:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2255:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2256:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2257:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2258:/usr/include/c++/5/bits/basic_string.h ****       */
2259:/usr/include/c++/5/bits/basic_string.h ****       size_type
2260:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2261:/usr/include/c++/5/bits/basic_string.h ****       {
2262:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
GAS LISTING /tmp/ccX8BQhk.s 			page 110


2263:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2264:/usr/include/c++/5/bits/basic_string.h ****       }
2265:/usr/include/c++/5/bits/basic_string.h **** 
2266:/usr/include/c++/5/bits/basic_string.h ****       /**
2267:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2268:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
2269:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2270:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2271:/usr/include/c++/5/bits/basic_string.h ****        *
2272:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2273:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2274:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2275:/usr/include/c++/5/bits/basic_string.h ****       */
2276:/usr/include/c++/5/bits/basic_string.h ****       size_type
2277:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2278:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2279:/usr/include/c++/5/bits/basic_string.h **** 
2280:/usr/include/c++/5/bits/basic_string.h ****       /**
2281:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Get a substring.
2282:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2283:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2284:/usr/include/c++/5/bits/basic_string.h ****        *  @return  The new string.
2285:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2286:/usr/include/c++/5/bits/basic_string.h ****        *
2287:/usr/include/c++/5/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2288:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2289:/usr/include/c++/5/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2290:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2291:/usr/include/c++/5/bits/basic_string.h ****       */
2292:/usr/include/c++/5/bits/basic_string.h ****       basic_string
2293:/usr/include/c++/5/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2294:/usr/include/c++/5/bits/basic_string.h ****       { return basic_string(*this,
2295:/usr/include/c++/5/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2296:/usr/include/c++/5/bits/basic_string.h **** 
2297:/usr/include/c++/5/bits/basic_string.h ****       /**
2298:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a string.
2299:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2300:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2301:/usr/include/c++/5/bits/basic_string.h ****        *
2302:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2303:/usr/include/c++/5/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2304:/usr/include/c++/5/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2305:/usr/include/c++/5/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2306:/usr/include/c++/5/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2307:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2308:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2309:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2310:/usr/include/c++/5/bits/basic_string.h ****       */
2311:/usr/include/c++/5/bits/basic_string.h ****       int
2312:/usr/include/c++/5/bits/basic_string.h ****       compare(const basic_string& __str) const
2313:/usr/include/c++/5/bits/basic_string.h ****       {
2314:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
2315:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __osize = __str.size();
2316:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2317:/usr/include/c++/5/bits/basic_string.h **** 
2318:/usr/include/c++/5/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2319:/usr/include/c++/5/bits/basic_string.h **** 	if (!__r)
GAS LISTING /tmp/ccX8BQhk.s 			page 111


2320:/usr/include/c++/5/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2321:/usr/include/c++/5/bits/basic_string.h **** 	return __r;
2322:/usr/include/c++/5/bits/basic_string.h ****       }
2323:/usr/include/c++/5/bits/basic_string.h **** 
2324:/usr/include/c++/5/bits/basic_string.h ****       /**
2325:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2326:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2327:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2328:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2329:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2330:/usr/include/c++/5/bits/basic_string.h ****        *
2331:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2332:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2333:/usr/include/c++/5/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2334:/usr/include/c++/5/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2335:/usr/include/c++/5/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2336:/usr/include/c++/5/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2337:/usr/include/c++/5/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2338:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling
2339:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2340:/usr/include/c++/5/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2341:/usr/include/c++/5/bits/basic_string.h ****        *  the shorter one is ordered first.
2342:/usr/include/c++/5/bits/basic_string.h ****       */
2343:/usr/include/c++/5/bits/basic_string.h ****       int
2344:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2345:/usr/include/c++/5/bits/basic_string.h **** 
2346:/usr/include/c++/5/bits/basic_string.h ****       /**
2347:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2348:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2349:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2350:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2351:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2352:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2353:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2354:/usr/include/c++/5/bits/basic_string.h ****        *
2355:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2356:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2357:/usr/include/c++/5/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2358:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2359:/usr/include/c++/5/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2360:/usr/include/c++/5/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2361:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2362:/usr/include/c++/5/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2363:/usr/include/c++/5/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2364:/usr/include/c++/5/bits/basic_string.h ****        *  calling
2365:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2366:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2367:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2368:/usr/include/c++/5/bits/basic_string.h ****       */
2369:/usr/include/c++/5/bits/basic_string.h ****       int
2370:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2371:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2372:/usr/include/c++/5/bits/basic_string.h **** 
2373:/usr/include/c++/5/bits/basic_string.h ****       /**
2374:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a C string.
2375:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
2376:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
GAS LISTING /tmp/ccX8BQhk.s 			page 112


2377:/usr/include/c++/5/bits/basic_string.h ****        *
2378:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2379:/usr/include/c++/5/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2380:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2381:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2382:/usr/include/c++/5/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2383:/usr/include/c++/5/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2384:/usr/include/c++/5/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2385:/usr/include/c++/5/bits/basic_string.h ****        *  ordered first.
2386:/usr/include/c++/5/bits/basic_string.h ****       */
2387:/usr/include/c++/5/bits/basic_string.h ****       int
2388:/usr/include/c++/5/bits/basic_string.h ****       compare(const _CharT* __s) const;
2389:/usr/include/c++/5/bits/basic_string.h **** 
2390:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2391:/usr/include/c++/5/bits/basic_string.h ****       // 5 String::compare specification questionable
2392:/usr/include/c++/5/bits/basic_string.h ****       /**
2393:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2394:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2395:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2396:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
2397:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2398:/usr/include/c++/5/bits/basic_string.h ****        *
2399:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2400:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2401:/usr/include/c++/5/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2402:/usr/include/c++/5/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2403:/usr/include/c++/5/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2404:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2405:/usr/include/c++/5/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2406:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two string by calling
2407:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2408:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2409:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
2410:/usr/include/c++/5/bits/basic_string.h ****       */
2411:/usr/include/c++/5/bits/basic_string.h ****       int
2412:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2413:/usr/include/c++/5/bits/basic_string.h **** 
2414:/usr/include/c++/5/bits/basic_string.h ****       /**
2415:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2416:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2417:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2418:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2419:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2420:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2421:/usr/include/c++/5/bits/basic_string.h ****        *
2422:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2423:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2424:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2425:/usr/include/c++/5/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2426:/usr/include/c++/5/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
2427:/usr/include/c++/5/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
2428:/usr/include/c++/5/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
2429:/usr/include/c++/5/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
2430:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two strings by calling
2431:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
2432:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2433:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
GAS LISTING /tmp/ccX8BQhk.s 			page 113


2434:/usr/include/c++/5/bits/basic_string.h ****        *
2435:/usr/include/c++/5/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
2436:/usr/include/c++/5/bits/basic_string.h ****        *  no special meaning.
2437:/usr/include/c++/5/bits/basic_string.h ****       */
2438:/usr/include/c++/5/bits/basic_string.h ****       int
2439:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
2440:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2) const;
2441:/usr/include/c++/5/bits/basic_string.h ****   };
2442:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
2443:/usr/include/c++/5/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
2444:/usr/include/c++/5/bits/basic_string.h ****   // Reference-counted COW string implentation
2445:/usr/include/c++/5/bits/basic_string.h **** 
2446:/usr/include/c++/5/bits/basic_string.h ****   /**
2447:/usr/include/c++/5/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
2448:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
2449:/usr/include/c++/5/bits/basic_string.h ****    *
2450:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup strings
2451:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup sequences
2452:/usr/include/c++/5/bits/basic_string.h ****    *
2453:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _CharT  Type of character
2454:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
2455:/usr/include/c++/5/bits/basic_string.h ****    *                   char_traits<_CharT>.
2456:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
2457:/usr/include/c++/5/bits/basic_string.h ****    *
2458:/usr/include/c++/5/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
2459:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
2460:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
2461:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
2462:/usr/include/c++/5/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
2463:/usr/include/c++/5/bits/basic_string.h ****    *
2464:/usr/include/c++/5/bits/basic_string.h ****    *  @doctodo
2465:/usr/include/c++/5/bits/basic_string.h ****    *
2466:/usr/include/c++/5/bits/basic_string.h ****    *
2467:/usr/include/c++/5/bits/basic_string.h ****    *  Documentation?  What's that?
2468:/usr/include/c++/5/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
2469:/usr/include/c++/5/bits/basic_string.h ****    *
2470:/usr/include/c++/5/bits/basic_string.h ****    *  A string looks like this:
2471:/usr/include/c++/5/bits/basic_string.h ****    *
2472:/usr/include/c++/5/bits/basic_string.h ****    *  @code
2473:/usr/include/c++/5/bits/basic_string.h ****    *                                        [_Rep]
2474:/usr/include/c++/5/bits/basic_string.h ****    *                                        _M_length
2475:/usr/include/c++/5/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
2476:/usr/include/c++/5/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
2477:/usr/include/c++/5/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
2478:/usr/include/c++/5/bits/basic_string.h ****    *  @endcode
2479:/usr/include/c++/5/bits/basic_string.h ****    *
2480:/usr/include/c++/5/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
2481:/usr/include/c++/5/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
2482:/usr/include/c++/5/bits/basic_string.h ****    *  pointer to the header.
2483:/usr/include/c++/5/bits/basic_string.h ****    *
2484:/usr/include/c++/5/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
2485:/usr/include/c++/5/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
2486:/usr/include/c++/5/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
2487:/usr/include/c++/5/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
2488:/usr/include/c++/5/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
2489:/usr/include/c++/5/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
2490:/usr/include/c++/5/bits/basic_string.h ****    *  object at the front.
GAS LISTING /tmp/ccX8BQhk.s 			page 114


2491:/usr/include/c++/5/bits/basic_string.h ****    *
2492:/usr/include/c++/5/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
2493:/usr/include/c++/5/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
2494:/usr/include/c++/5/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
2495:/usr/include/c++/5/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
2496:/usr/include/c++/5/bits/basic_string.h ****    *  string length.)
2497:/usr/include/c++/5/bits/basic_string.h ****    *
2498:/usr/include/c++/5/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
2499:/usr/include/c++/5/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
2500:/usr/include/c++/5/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
2501:/usr/include/c++/5/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
2502:/usr/include/c++/5/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
2503:/usr/include/c++/5/bits/basic_string.h ****    *
2504:/usr/include/c++/5/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
2505:/usr/include/c++/5/bits/basic_string.h ****    *  for a C++ string implementation.
2506:/usr/include/c++/5/bits/basic_string.h ****   */
2507:/usr/include/c++/5/bits/basic_string.h ****   // 21.3  Template class basic_string
2508:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2509:/usr/include/c++/5/bits/basic_string.h ****     class basic_string
2510:/usr/include/c++/5/bits/basic_string.h ****     {
2511:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
2512:/usr/include/c++/5/bits/basic_string.h **** 
2513:/usr/include/c++/5/bits/basic_string.h ****       // Types:
2514:/usr/include/c++/5/bits/basic_string.h ****     public:
2515:/usr/include/c++/5/bits/basic_string.h ****       typedef _Traits					    traits_type;
2516:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
2517:/usr/include/c++/5/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
2518:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
2519:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
2520:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
2521:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
2522:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
2523:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
2524:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
2525:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
2526:/usr/include/c++/5/bits/basic_string.h ****                                                             const_iterator;
2527:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
2528:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
2529:/usr/include/c++/5/bits/basic_string.h **** 
2530:/usr/include/c++/5/bits/basic_string.h ****     private:
2531:/usr/include/c++/5/bits/basic_string.h ****       // _Rep: string representation
2532:/usr/include/c++/5/bits/basic_string.h ****       //   Invariants:
2533:/usr/include/c++/5/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
2534:/usr/include/c++/5/bits/basic_string.h ****       //      must be kept null-terminated.
2535:/usr/include/c++/5/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
2536:/usr/include/c++/5/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
2537:/usr/include/c++/5/bits/basic_string.h ****       //   3. _M_refcount has three states:
2538:/usr/include/c++/5/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
2539:/usr/include/c++/5/bits/basic_string.h ****       //       0: one reference, non-const.
2540:/usr/include/c++/5/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
2541:/usr/include/c++/5/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
2542:/usr/include/c++/5/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
2543:/usr/include/c++/5/bits/basic_string.h ****       //      empty string representation needs no constructor.
2544:/usr/include/c++/5/bits/basic_string.h **** 
2545:/usr/include/c++/5/bits/basic_string.h ****       struct _Rep_base
2546:/usr/include/c++/5/bits/basic_string.h ****       {
2547:/usr/include/c++/5/bits/basic_string.h **** 	size_type		_M_length;
GAS LISTING /tmp/ccX8BQhk.s 			page 115


2548:/usr/include/c++/5/bits/basic_string.h **** 	size_type		_M_capacity;
2549:/usr/include/c++/5/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
2550:/usr/include/c++/5/bits/basic_string.h ****       };
2551:/usr/include/c++/5/bits/basic_string.h **** 
2552:/usr/include/c++/5/bits/basic_string.h ****       struct _Rep : _Rep_base
2553:/usr/include/c++/5/bits/basic_string.h ****       {
2554:/usr/include/c++/5/bits/basic_string.h **** 	// Types:
2555:/usr/include/c++/5/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
2556:/usr/include/c++/5/bits/basic_string.h **** 
2557:/usr/include/c++/5/bits/basic_string.h **** 	// (Public) Data members:
2558:/usr/include/c++/5/bits/basic_string.h **** 
2559:/usr/include/c++/5/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
2560:/usr/include/c++/5/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
2561:/usr/include/c++/5/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
2562:/usr/include/c++/5/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
2563:/usr/include/c++/5/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
2564:/usr/include/c++/5/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
2565:/usr/include/c++/5/bits/basic_string.h **** 	// look like this:
2566:/usr/include/c++/5/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
2567:/usr/include/c++/5/bits/basic_string.h **** 	// Solving for m:
2568:/usr/include/c++/5/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
2569:/usr/include/c++/5/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
2570:/usr/include/c++/5/bits/basic_string.h **** 	static const size_type	_S_max_size;
2571:/usr/include/c++/5/bits/basic_string.h **** 	static const _CharT	_S_terminal;
2572:/usr/include/c++/5/bits/basic_string.h **** 
2573:/usr/include/c++/5/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
2574:/usr/include/c++/5/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
2575:/usr/include/c++/5/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
2576:/usr/include/c++/5/bits/basic_string.h **** 
2577:/usr/include/c++/5/bits/basic_string.h ****         static _Rep&
2578:/usr/include/c++/5/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
2579:/usr/include/c++/5/bits/basic_string.h ****         { 
2580:/usr/include/c++/5/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
2581:/usr/include/c++/5/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
2582:/usr/include/c++/5/bits/basic_string.h **** 	  // be reasonably safe in this case.
2583:/usr/include/c++/5/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
2584:/usr/include/c++/5/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
2585:/usr/include/c++/5/bits/basic_string.h **** 	}
2586:/usr/include/c++/5/bits/basic_string.h **** 
2587:/usr/include/c++/5/bits/basic_string.h ****         bool
2588:/usr/include/c++/5/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
2589:/usr/include/c++/5/bits/basic_string.h ****         { return this->_M_refcount < 0; }
2590:/usr/include/c++/5/bits/basic_string.h **** 
2591:/usr/include/c++/5/bits/basic_string.h ****         bool
2592:/usr/include/c++/5/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
2593:/usr/include/c++/5/bits/basic_string.h ****         { return this->_M_refcount > 0; }
2594:/usr/include/c++/5/bits/basic_string.h **** 
2595:/usr/include/c++/5/bits/basic_string.h ****         void
2596:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
2597:/usr/include/c++/5/bits/basic_string.h ****         { this->_M_refcount = -1; }
2598:/usr/include/c++/5/bits/basic_string.h **** 
2599:/usr/include/c++/5/bits/basic_string.h ****         void
2600:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
2601:/usr/include/c++/5/bits/basic_string.h ****         { this->_M_refcount = 0; }
2602:/usr/include/c++/5/bits/basic_string.h **** 
2603:/usr/include/c++/5/bits/basic_string.h **** 	void
2604:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccX8BQhk.s 			page 116


2605:/usr/include/c++/5/bits/basic_string.h **** 	{
2606:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2607:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2608:/usr/include/c++/5/bits/basic_string.h **** #endif
2609:/usr/include/c++/5/bits/basic_string.h **** 	    {
2610:/usr/include/c++/5/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
2611:/usr/include/c++/5/bits/basic_string.h **** 	      this->_M_length = __n;
2612:/usr/include/c++/5/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
2613:/usr/include/c++/5/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
2614:/usr/include/c++/5/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
2615:/usr/include/c++/5/bits/basic_string.h **** 	    }
2616:/usr/include/c++/5/bits/basic_string.h **** 	}
2617:/usr/include/c++/5/bits/basic_string.h **** 
2618:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2619:/usr/include/c++/5/bits/basic_string.h **** 	_M_refdata() throw()
2620:/usr/include/c++/5/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
2621:/usr/include/c++/5/bits/basic_string.h **** 
2622:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2623:/usr/include/c++/5/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
2624:/usr/include/c++/5/bits/basic_string.h **** 	{
2625:/usr/include/c++/5/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
2626:/usr/include/c++/5/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
2627:/usr/include/c++/5/bits/basic_string.h **** 	}
2628:/usr/include/c++/5/bits/basic_string.h **** 
2629:/usr/include/c++/5/bits/basic_string.h **** 	// Create & Destroy
2630:/usr/include/c++/5/bits/basic_string.h **** 	static _Rep*
2631:/usr/include/c++/5/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
2632:/usr/include/c++/5/bits/basic_string.h **** 
2633:/usr/include/c++/5/bits/basic_string.h **** 	void
2634:/usr/include/c++/5/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
2635:/usr/include/c++/5/bits/basic_string.h **** 	{
2636:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2637:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2638:/usr/include/c++/5/bits/basic_string.h **** #endif
2639:/usr/include/c++/5/bits/basic_string.h **** 	    {
2640:/usr/include/c++/5/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
2641:/usr/include/c++/5/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
2642:/usr/include/c++/5/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
2643:/usr/include/c++/5/bits/basic_string.h **** 							 -1) <= 0)
2644:/usr/include/c++/5/bits/basic_string.h **** 		{
2645:/usr/include/c++/5/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
2646:/usr/include/c++/5/bits/basic_string.h **** 		  _M_destroy(__a);
2647:/usr/include/c++/5/bits/basic_string.h **** 		}
2648:/usr/include/c++/5/bits/basic_string.h **** 	    }
2649:/usr/include/c++/5/bits/basic_string.h **** 	}  // XXX MT
2650:/usr/include/c++/5/bits/basic_string.h **** 
2651:/usr/include/c++/5/bits/basic_string.h **** 	void
2652:/usr/include/c++/5/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
2653:/usr/include/c++/5/bits/basic_string.h **** 
2654:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2655:/usr/include/c++/5/bits/basic_string.h **** 	_M_refcopy() throw()
2656:/usr/include/c++/5/bits/basic_string.h **** 	{
2657:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2658:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2659:/usr/include/c++/5/bits/basic_string.h **** #endif
2660:/usr/include/c++/5/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
2661:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_refdata();
GAS LISTING /tmp/ccX8BQhk.s 			page 117


2662:/usr/include/c++/5/bits/basic_string.h **** 	}  // XXX MT
2663:/usr/include/c++/5/bits/basic_string.h **** 
2664:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2665:/usr/include/c++/5/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
2666:/usr/include/c++/5/bits/basic_string.h ****       };
2667:/usr/include/c++/5/bits/basic_string.h **** 
2668:/usr/include/c++/5/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
2669:/usr/include/c++/5/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
2670:/usr/include/c++/5/bits/basic_string.h ****       {
2671:/usr/include/c++/5/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
2672:/usr/include/c++/5/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
2673:/usr/include/c++/5/bits/basic_string.h **** 
2674:/usr/include/c++/5/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
2675:/usr/include/c++/5/bits/basic_string.h ****       };
2676:/usr/include/c++/5/bits/basic_string.h **** 
2677:/usr/include/c++/5/bits/basic_string.h ****     public:
2678:/usr/include/c++/5/bits/basic_string.h ****       // Data Members (public):
2679:/usr/include/c++/5/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
2680:/usr/include/c++/5/bits/basic_string.h ****       // size that the allocator can hold.
2681:/usr/include/c++/5/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
2682:/usr/include/c++/5/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
2683:/usr/include/c++/5/bits/basic_string.h **** 
2684:/usr/include/c++/5/bits/basic_string.h ****     private:
2685:/usr/include/c++/5/bits/basic_string.h ****       // Data Members (private):
2686:/usr/include/c++/5/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
2687:/usr/include/c++/5/bits/basic_string.h **** 
2688:/usr/include/c++/5/bits/basic_string.h ****       _CharT*
2689:/usr/include/c++/5/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
2690:/usr/include/c++/5/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
2691:/usr/include/c++/5/bits/basic_string.h **** 
2692:/usr/include/c++/5/bits/basic_string.h ****       _CharT*
2693:/usr/include/c++/5/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
2694:/usr/include/c++/5/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
2695:/usr/include/c++/5/bits/basic_string.h **** 
2696:/usr/include/c++/5/bits/basic_string.h ****       _Rep*
2697:/usr/include/c++/5/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
2698:/usr/include/c++/5/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
2699:/usr/include/c++/5/bits/basic_string.h **** 
2700:/usr/include/c++/5/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
2701:/usr/include/c++/5/bits/basic_string.h ****       // but they do not call _M_leak.
2702:/usr/include/c++/5/bits/basic_string.h ****       iterator
2703:/usr/include/c++/5/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
2704:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data()); }
2705:/usr/include/c++/5/bits/basic_string.h **** 
2706:/usr/include/c++/5/bits/basic_string.h ****       iterator
2707:/usr/include/c++/5/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
2708:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
2709:/usr/include/c++/5/bits/basic_string.h **** 
2710:/usr/include/c++/5/bits/basic_string.h ****       void
2711:/usr/include/c++/5/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
2712:/usr/include/c++/5/bits/basic_string.h ****       {
2713:/usr/include/c++/5/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
2714:/usr/include/c++/5/bits/basic_string.h **** 	  _M_leak_hard();
2715:/usr/include/c++/5/bits/basic_string.h ****       }
2716:/usr/include/c++/5/bits/basic_string.h **** 
2717:/usr/include/c++/5/bits/basic_string.h ****       size_type
2718:/usr/include/c++/5/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
GAS LISTING /tmp/ccX8BQhk.s 			page 118


2719:/usr/include/c++/5/bits/basic_string.h ****       {
2720:/usr/include/c++/5/bits/basic_string.h **** 	if (__pos > this->size())
2721:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
2722:/usr/include/c++/5/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
2723:/usr/include/c++/5/bits/basic_string.h **** 				   __s, __pos, this->size());
2724:/usr/include/c++/5/bits/basic_string.h **** 	return __pos;
2725:/usr/include/c++/5/bits/basic_string.h ****       }
2726:/usr/include/c++/5/bits/basic_string.h **** 
2727:/usr/include/c++/5/bits/basic_string.h ****       void
2728:/usr/include/c++/5/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
2729:/usr/include/c++/5/bits/basic_string.h ****       {
2730:/usr/include/c++/5/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
2731:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
2732:/usr/include/c++/5/bits/basic_string.h ****       }
2733:/usr/include/c++/5/bits/basic_string.h **** 
2734:/usr/include/c++/5/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
2735:/usr/include/c++/5/bits/basic_string.h ****       size_type
2736:/usr/include/c++/5/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
2737:/usr/include/c++/5/bits/basic_string.h ****       {
2738:/usr/include/c++/5/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
2739:/usr/include/c++/5/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
2740:/usr/include/c++/5/bits/basic_string.h ****       }
2741:/usr/include/c++/5/bits/basic_string.h **** 
2742:/usr/include/c++/5/bits/basic_string.h ****       // True if _Rep and source do not overlap.
2743:/usr/include/c++/5/bits/basic_string.h ****       bool
2744:/usr/include/c++/5/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
2745:/usr/include/c++/5/bits/basic_string.h ****       {
2746:/usr/include/c++/5/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
2747:/usr/include/c++/5/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
2748:/usr/include/c++/5/bits/basic_string.h ****       }
2749:/usr/include/c++/5/bits/basic_string.h **** 
2750:/usr/include/c++/5/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
2751:/usr/include/c++/5/bits/basic_string.h ****       // traits_type::copy/move/assign.
2752:/usr/include/c++/5/bits/basic_string.h ****       static void
2753:/usr/include/c++/5/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2754:/usr/include/c++/5/bits/basic_string.h ****       {
2755:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2756:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
2757:/usr/include/c++/5/bits/basic_string.h **** 	else
2758:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
2759:/usr/include/c++/5/bits/basic_string.h ****       }
2760:/usr/include/c++/5/bits/basic_string.h **** 
2761:/usr/include/c++/5/bits/basic_string.h ****       static void
2762:/usr/include/c++/5/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2763:/usr/include/c++/5/bits/basic_string.h ****       {
2764:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2765:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
2766:/usr/include/c++/5/bits/basic_string.h **** 	else
2767:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
2768:/usr/include/c++/5/bits/basic_string.h ****       }
2769:/usr/include/c++/5/bits/basic_string.h **** 
2770:/usr/include/c++/5/bits/basic_string.h ****       static void
2771:/usr/include/c++/5/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
2772:/usr/include/c++/5/bits/basic_string.h ****       {
2773:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2774:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
2775:/usr/include/c++/5/bits/basic_string.h **** 	else
GAS LISTING /tmp/ccX8BQhk.s 			page 119


2776:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
2777:/usr/include/c++/5/bits/basic_string.h ****       }
2778:/usr/include/c++/5/bits/basic_string.h **** 
2779:/usr/include/c++/5/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
2780:/usr/include/c++/5/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
2781:/usr/include/c++/5/bits/basic_string.h ****       template<class _Iterator>
2782:/usr/include/c++/5/bits/basic_string.h ****         static void
2783:/usr/include/c++/5/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
2784:/usr/include/c++/5/bits/basic_string.h ****         {
2785:/usr/include/c++/5/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
2786:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
2787:/usr/include/c++/5/bits/basic_string.h **** 	}
2788:/usr/include/c++/5/bits/basic_string.h **** 
2789:/usr/include/c++/5/bits/basic_string.h ****       static void
2790:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
2791:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2792:/usr/include/c++/5/bits/basic_string.h **** 
2793:/usr/include/c++/5/bits/basic_string.h ****       static void
2794:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
2795:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2796:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2797:/usr/include/c++/5/bits/basic_string.h **** 
2798:/usr/include/c++/5/bits/basic_string.h ****       static void
2799:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
2800:/usr/include/c++/5/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2801:/usr/include/c++/5/bits/basic_string.h **** 
2802:/usr/include/c++/5/bits/basic_string.h ****       static void
2803:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
2804:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2805:/usr/include/c++/5/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2806:/usr/include/c++/5/bits/basic_string.h **** 
2807:/usr/include/c++/5/bits/basic_string.h ****       static int
2808:/usr/include/c++/5/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
2809:/usr/include/c++/5/bits/basic_string.h ****       {
2810:/usr/include/c++/5/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
2811:/usr/include/c++/5/bits/basic_string.h **** 
2812:/usr/include/c++/5/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
2813:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
2814:/usr/include/c++/5/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
2815:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
2816:/usr/include/c++/5/bits/basic_string.h **** 	else
2817:/usr/include/c++/5/bits/basic_string.h **** 	  return int(__d);
2818:/usr/include/c++/5/bits/basic_string.h ****       }
2819:/usr/include/c++/5/bits/basic_string.h **** 
2820:/usr/include/c++/5/bits/basic_string.h ****       void
2821:/usr/include/c++/5/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
2822:/usr/include/c++/5/bits/basic_string.h **** 
2823:/usr/include/c++/5/bits/basic_string.h ****       void
2824:/usr/include/c++/5/bits/basic_string.h ****       _M_leak_hard();
2825:/usr/include/c++/5/bits/basic_string.h **** 
2826:/usr/include/c++/5/bits/basic_string.h ****       static _Rep&
2827:/usr/include/c++/5/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
2828:/usr/include/c++/5/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
2829:/usr/include/c++/5/bits/basic_string.h **** 
2830:/usr/include/c++/5/bits/basic_string.h ****     public:
2831:/usr/include/c++/5/bits/basic_string.h ****       // Construct/copy/destroy:
2832:/usr/include/c++/5/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
GAS LISTING /tmp/ccX8BQhk.s 			page 120


2833:/usr/include/c++/5/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
2834:/usr/include/c++/5/bits/basic_string.h **** 
2835:/usr/include/c++/5/bits/basic_string.h ****       /**
2836:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
2837:/usr/include/c++/5/bits/basic_string.h ****        */
2838:/usr/include/c++/5/bits/basic_string.h ****       basic_string()
2839:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2840:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
2841:/usr/include/c++/5/bits/basic_string.h **** #else
2842:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
2843:/usr/include/c++/5/bits/basic_string.h **** #endif
2844:/usr/include/c++/5/bits/basic_string.h **** 
2845:/usr/include/c++/5/bits/basic_string.h ****       /**
2846:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
2847:/usr/include/c++/5/bits/basic_string.h ****        */
2848:/usr/include/c++/5/bits/basic_string.h ****       explicit
2849:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _Alloc& __a);
2850:/usr/include/c++/5/bits/basic_string.h **** 
2851:/usr/include/c++/5/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
2852:/usr/include/c++/5/bits/basic_string.h ****       /**
2853:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
2854:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2855:/usr/include/c++/5/bits/basic_string.h ****        */
2856:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str);
2857:/usr/include/c++/5/bits/basic_string.h ****       /**
2858:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
2859:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2860:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
2861:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
2862:/usr/include/c++/5/bits/basic_string.h ****        */
2863:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
2864:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n = npos);
2865:/usr/include/c++/5/bits/basic_string.h ****       /**
2866:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
2867:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2868:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
2869:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
2870:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use.
2871:/usr/include/c++/5/bits/basic_string.h ****        */
2872:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
2873:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
2874:/usr/include/c++/5/bits/basic_string.h **** 
2875:/usr/include/c++/5/bits/basic_string.h ****       /**
2876:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
2877:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source character %array.
2878:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
2879:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2880:/usr/include/c++/5/bits/basic_string.h ****        *
2881:/usr/include/c++/5/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
2882:/usr/include/c++/5/bits/basic_string.h ****        *  has no special meaning.
2883:/usr/include/c++/5/bits/basic_string.h ****        */
2884:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
2885:/usr/include/c++/5/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
2886:/usr/include/c++/5/bits/basic_string.h ****       /**
2887:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
2888:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source C string.
2889:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
GAS LISTING /tmp/ccX8BQhk.s 			page 121


2890:/usr/include/c++/5/bits/basic_string.h ****        */
2891:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
2892:/usr/include/c++/5/bits/basic_string.h ****       /**
2893:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
2894:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters.
2895:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to use.
2896:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2897:/usr/include/c++/5/bits/basic_string.h ****        */
2898:/usr/include/c++/5/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
2899:/usr/include/c++/5/bits/basic_string.h **** 
2900:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
2901:/usr/include/c++/5/bits/basic_string.h ****       /**
2902:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move construct string.
2903:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2904:/usr/include/c++/5/bits/basic_string.h ****        *
2905:/usr/include/c++/5/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
2906:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
2907:/usr/include/c++/5/bits/basic_string.h ****        **/
2908:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str)
2909:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2910:/usr/include/c++/5/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
2911:/usr/include/c++/5/bits/basic_string.h **** #endif
2912:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
2913:/usr/include/c++/5/bits/basic_string.h ****       {
2914:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2915:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
2916:/usr/include/c++/5/bits/basic_string.h **** #else
2917:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
2918:/usr/include/c++/5/bits/basic_string.h **** #endif
2919:/usr/include/c++/5/bits/basic_string.h ****       }
2920:/usr/include/c++/5/bits/basic_string.h **** 
2921:/usr/include/c++/5/bits/basic_string.h ****       /**
2922:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
2923:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
2924:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2925:/usr/include/c++/5/bits/basic_string.h ****        */
2926:/usr/include/c++/5/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
2927:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
2928:/usr/include/c++/5/bits/basic_string.h **** 
2929:/usr/include/c++/5/bits/basic_string.h ****       /**
2930:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
2931:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __beg  Start of range.
2932:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __end  End of range.
2933:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2934:/usr/include/c++/5/bits/basic_string.h ****        */
2935:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
2936:/usr/include/c++/5/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
2937:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
2938:/usr/include/c++/5/bits/basic_string.h **** 
2939:/usr/include/c++/5/bits/basic_string.h ****       /**
2940:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Destroy the string instance.
2941:/usr/include/c++/5/bits/basic_string.h ****        */
2942:/usr/include/c++/5/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
2943:/usr/include/c++/5/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
2944:/usr/include/c++/5/bits/basic_string.h **** 
2945:/usr/include/c++/5/bits/basic_string.h ****       /**
2946:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
GAS LISTING /tmp/ccX8BQhk.s 			page 122


2947:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2948:/usr/include/c++/5/bits/basic_string.h ****        */
2949:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2950:/usr/include/c++/5/bits/basic_string.h ****       operator=(const basic_string& __str) 
2951:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str); }
2952:/usr/include/c++/5/bits/basic_string.h **** 
2953:/usr/include/c++/5/bits/basic_string.h ****       /**
2954:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
2955:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
2956:/usr/include/c++/5/bits/basic_string.h ****        */
2957:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2958:/usr/include/c++/5/bits/basic_string.h ****       operator=(const _CharT* __s) 
2959:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__s); }
2960:/usr/include/c++/5/bits/basic_string.h **** 
2961:/usr/include/c++/5/bits/basic_string.h ****       /**
2962:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
2963:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Source character.
2964:/usr/include/c++/5/bits/basic_string.h ****        *
2965:/usr/include/c++/5/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
2966:/usr/include/c++/5/bits/basic_string.h ****        *  (*this)[0] == @a c.
2967:/usr/include/c++/5/bits/basic_string.h ****        */
2968:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2969:/usr/include/c++/5/bits/basic_string.h ****       operator=(_CharT __c) 
2970:/usr/include/c++/5/bits/basic_string.h ****       { 
2971:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(1, __c); 
2972:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
2973:/usr/include/c++/5/bits/basic_string.h ****       }
2974:/usr/include/c++/5/bits/basic_string.h **** 
2975:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
2976:/usr/include/c++/5/bits/basic_string.h ****       /**
2977:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
2978:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2979:/usr/include/c++/5/bits/basic_string.h ****        *
2980:/usr/include/c++/5/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
2981:/usr/include/c++/5/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
2982:/usr/include/c++/5/bits/basic_string.h ****        **/
2983:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
2984:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2985:/usr/include/c++/5/bits/basic_string.h ****       operator=(basic_string&& __str)
2986:/usr/include/c++/5/bits/basic_string.h ****       {
2987:/usr/include/c++/5/bits/basic_string.h **** 	// NB: DR 1204.
2988:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
2989:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
2990:/usr/include/c++/5/bits/basic_string.h ****       }
2991:/usr/include/c++/5/bits/basic_string.h **** 
2992:/usr/include/c++/5/bits/basic_string.h ****       /**
2993:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
2994:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
2995:/usr/include/c++/5/bits/basic_string.h ****        */
2996:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2997:/usr/include/c++/5/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
2998:/usr/include/c++/5/bits/basic_string.h ****       {
2999:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3000:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3001:/usr/include/c++/5/bits/basic_string.h ****       }
3002:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3003:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 123


3004:/usr/include/c++/5/bits/basic_string.h ****       // Iterators:
3005:/usr/include/c++/5/bits/basic_string.h ****       /**
3006:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3007:/usr/include/c++/5/bits/basic_string.h ****        *  the %string.  Unshares the string.
3008:/usr/include/c++/5/bits/basic_string.h ****        */
3009:/usr/include/c++/5/bits/basic_string.h ****       iterator
3010:/usr/include/c++/5/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3011:/usr/include/c++/5/bits/basic_string.h ****       {
3012:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3013:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data());
3014:/usr/include/c++/5/bits/basic_string.h ****       }
3015:/usr/include/c++/5/bits/basic_string.h **** 
3016:/usr/include/c++/5/bits/basic_string.h ****       /**
3017:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3018:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
3019:/usr/include/c++/5/bits/basic_string.h ****        */
3020:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3021:/usr/include/c++/5/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3022:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3023:/usr/include/c++/5/bits/basic_string.h **** 
3024:/usr/include/c++/5/bits/basic_string.h ****       /**
3025:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3026:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3027:/usr/include/c++/5/bits/basic_string.h ****        */
3028:/usr/include/c++/5/bits/basic_string.h ****       iterator
3029:/usr/include/c++/5/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3030:/usr/include/c++/5/bits/basic_string.h ****       {
3031:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3032:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3033:/usr/include/c++/5/bits/basic_string.h ****       }
3034:/usr/include/c++/5/bits/basic_string.h **** 
3035:/usr/include/c++/5/bits/basic_string.h ****       /**
3036:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3037:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
3038:/usr/include/c++/5/bits/basic_string.h ****        */
3039:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3040:/usr/include/c++/5/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3041:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3042:/usr/include/c++/5/bits/basic_string.h **** 
3043:/usr/include/c++/5/bits/basic_string.h ****       /**
3044:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3045:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3046:/usr/include/c++/5/bits/basic_string.h ****        *  order.  Unshares the string.
3047:/usr/include/c++/5/bits/basic_string.h ****        */
3048:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
3049:/usr/include/c++/5/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3050:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3051:/usr/include/c++/5/bits/basic_string.h **** 
3052:/usr/include/c++/5/bits/basic_string.h ****       /**
3053:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3054:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3055:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
3056:/usr/include/c++/5/bits/basic_string.h ****        */
3057:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3058:/usr/include/c++/5/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3059:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3060:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 124


3061:/usr/include/c++/5/bits/basic_string.h ****       /**
3062:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3063:/usr/include/c++/5/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3064:/usr/include/c++/5/bits/basic_string.h ****        *  element order.  Unshares the string.
3065:/usr/include/c++/5/bits/basic_string.h ****        */
3066:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
3067:/usr/include/c++/5/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3068:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3069:/usr/include/c++/5/bits/basic_string.h **** 
3070:/usr/include/c++/5/bits/basic_string.h ****       /**
3071:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3072:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3073:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
3074:/usr/include/c++/5/bits/basic_string.h ****        */
3075:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3076:/usr/include/c++/5/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3077:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3078:/usr/include/c++/5/bits/basic_string.h **** 
3079:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3080:/usr/include/c++/5/bits/basic_string.h ****       /**
3081:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3082:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
3083:/usr/include/c++/5/bits/basic_string.h ****        */
3084:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3085:/usr/include/c++/5/bits/basic_string.h ****       cbegin() const noexcept
3086:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3087:/usr/include/c++/5/bits/basic_string.h **** 
3088:/usr/include/c++/5/bits/basic_string.h ****       /**
3089:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3090:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
3091:/usr/include/c++/5/bits/basic_string.h ****        */
3092:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3093:/usr/include/c++/5/bits/basic_string.h ****       cend() const noexcept
3094:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3095:/usr/include/c++/5/bits/basic_string.h **** 
3096:/usr/include/c++/5/bits/basic_string.h ****       /**
3097:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3098:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3099:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
3100:/usr/include/c++/5/bits/basic_string.h ****        */
3101:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3102:/usr/include/c++/5/bits/basic_string.h ****       crbegin() const noexcept
3103:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3104:/usr/include/c++/5/bits/basic_string.h **** 
3105:/usr/include/c++/5/bits/basic_string.h ****       /**
3106:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3107:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3108:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
3109:/usr/include/c++/5/bits/basic_string.h ****        */
3110:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3111:/usr/include/c++/5/bits/basic_string.h ****       crend() const noexcept
3112:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3113:/usr/include/c++/5/bits/basic_string.h **** #endif
3114:/usr/include/c++/5/bits/basic_string.h **** 
3115:/usr/include/c++/5/bits/basic_string.h ****     public:
3116:/usr/include/c++/5/bits/basic_string.h ****       // Capacity:
3117:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
GAS LISTING /tmp/ccX8BQhk.s 			page 125


3118:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
3119:/usr/include/c++/5/bits/basic_string.h ****       size_type
3120:/usr/include/c++/5/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3121:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3122:/usr/include/c++/5/bits/basic_string.h **** 
3123:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3124:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
3125:/usr/include/c++/5/bits/basic_string.h ****       size_type
3126:/usr/include/c++/5/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3127:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3128:/usr/include/c++/5/bits/basic_string.h **** 
3129:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3130:/usr/include/c++/5/bits/basic_string.h ****       size_type
3131:/usr/include/c++/5/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3132:/usr/include/c++/5/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3133:/usr/include/c++/5/bits/basic_string.h **** 
3134:/usr/include/c++/5/bits/basic_string.h ****       /**
3135:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3136:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3137:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3138:/usr/include/c++/5/bits/basic_string.h ****        *
3139:/usr/include/c++/5/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3140:/usr/include/c++/5/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3141:/usr/include/c++/5/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3142:/usr/include/c++/5/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3143:/usr/include/c++/5/bits/basic_string.h ****        */
3144:/usr/include/c++/5/bits/basic_string.h ****       void
3145:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3146:/usr/include/c++/5/bits/basic_string.h **** 
3147:/usr/include/c++/5/bits/basic_string.h ****       /**
3148:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3149:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3150:/usr/include/c++/5/bits/basic_string.h ****        *
3151:/usr/include/c++/5/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3152:/usr/include/c++/5/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3153:/usr/include/c++/5/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3154:/usr/include/c++/5/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3155:/usr/include/c++/5/bits/basic_string.h ****        *  setting them to 0.
3156:/usr/include/c++/5/bits/basic_string.h ****        */
3157:/usr/include/c++/5/bits/basic_string.h ****       void
3158:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n)
3159:/usr/include/c++/5/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3160:/usr/include/c++/5/bits/basic_string.h **** 
3161:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3162:/usr/include/c++/5/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3163:/usr/include/c++/5/bits/basic_string.h ****       void
3164:/usr/include/c++/5/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3165:/usr/include/c++/5/bits/basic_string.h ****       {
3166:/usr/include/c++/5/bits/basic_string.h **** #if __cpp_exceptions
3167:/usr/include/c++/5/bits/basic_string.h **** 	if (capacity() > size())
3168:/usr/include/c++/5/bits/basic_string.h **** 	  {
3169:/usr/include/c++/5/bits/basic_string.h **** 	    try
3170:/usr/include/c++/5/bits/basic_string.h **** 	      { reserve(0); }
3171:/usr/include/c++/5/bits/basic_string.h **** 	    catch(...)
3172:/usr/include/c++/5/bits/basic_string.h **** 	      { }
3173:/usr/include/c++/5/bits/basic_string.h **** 	  }
3174:/usr/include/c++/5/bits/basic_string.h **** #endif
GAS LISTING /tmp/ccX8BQhk.s 			page 126


3175:/usr/include/c++/5/bits/basic_string.h ****       }
3176:/usr/include/c++/5/bits/basic_string.h **** #endif
3177:/usr/include/c++/5/bits/basic_string.h **** 
3178:/usr/include/c++/5/bits/basic_string.h ****       /**
3179:/usr/include/c++/5/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3180:/usr/include/c++/5/bits/basic_string.h ****        *  before needing to allocate more memory.
3181:/usr/include/c++/5/bits/basic_string.h ****        */
3182:/usr/include/c++/5/bits/basic_string.h ****       size_type
3183:/usr/include/c++/5/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3184:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3185:/usr/include/c++/5/bits/basic_string.h **** 
3186:/usr/include/c++/5/bits/basic_string.h ****       /**
3187:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3188:/usr/include/c++/5/bits/basic_string.h ****        *          characters.
3189:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3190:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3191:/usr/include/c++/5/bits/basic_string.h ****        *
3192:/usr/include/c++/5/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3193:/usr/include/c++/5/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3194:/usr/include/c++/5/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3195:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3196:/usr/include/c++/5/bits/basic_string.h ****        *
3197:/usr/include/c++/5/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3198:/usr/include/c++/5/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3199:/usr/include/c++/5/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3200:/usr/include/c++/5/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3201:/usr/include/c++/5/bits/basic_string.h ****        *  data.
3202:/usr/include/c++/5/bits/basic_string.h ****        */
3203:/usr/include/c++/5/bits/basic_string.h ****       void
3204:/usr/include/c++/5/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3205:/usr/include/c++/5/bits/basic_string.h **** 
3206:/usr/include/c++/5/bits/basic_string.h ****       /**
3207:/usr/include/c++/5/bits/basic_string.h ****        *  Erases the string, making it empty.
3208:/usr/include/c++/5/bits/basic_string.h ****        */
3209:/usr/include/c++/5/bits/basic_string.h ****       // PR 56166: this should not throw.
3210:/usr/include/c++/5/bits/basic_string.h ****       void
3211:/usr/include/c++/5/bits/basic_string.h ****       clear()
3212:/usr/include/c++/5/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
3213:/usr/include/c++/5/bits/basic_string.h **** 
3214:/usr/include/c++/5/bits/basic_string.h ****       /**
3215:/usr/include/c++/5/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
3216:/usr/include/c++/5/bits/basic_string.h ****        *  <code>*this == ""</code>.
3217:/usr/include/c++/5/bits/basic_string.h ****        */
3218:/usr/include/c++/5/bits/basic_string.h ****       bool
3219:/usr/include/c++/5/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
3220:/usr/include/c++/5/bits/basic_string.h ****       { return this->size() == 0; }
3221:/usr/include/c++/5/bits/basic_string.h **** 
3222:/usr/include/c++/5/bits/basic_string.h ****       // Element access:
3223:/usr/include/c++/5/bits/basic_string.h ****       /**
3224:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3225:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3226:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
3227:/usr/include/c++/5/bits/basic_string.h ****        *
3228:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3229:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3230:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3231:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
GAS LISTING /tmp/ccX8BQhk.s 			page 127


3232:/usr/include/c++/5/bits/basic_string.h ****        */
3233:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3234:/usr/include/c++/5/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
3235:/usr/include/c++/5/bits/basic_string.h ****       {
3236:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
3237:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
3238:/usr/include/c++/5/bits/basic_string.h ****       }
3239:/usr/include/c++/5/bits/basic_string.h **** 
3240:/usr/include/c++/5/bits/basic_string.h ****       /**
3241:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3242:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3243:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3244:/usr/include/c++/5/bits/basic_string.h ****        *
3245:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3246:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3247:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3248:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)  Unshares the string.
3249:/usr/include/c++/5/bits/basic_string.h ****        */
3250:/usr/include/c++/5/bits/basic_string.h ****       reference
3251:/usr/include/c++/5/bits/basic_string.h ****       operator[](size_type __pos)
3252:/usr/include/c++/5/bits/basic_string.h ****       {
3253:/usr/include/c++/5/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
3254:/usr/include/c++/5/bits/basic_string.h **** 	// and in C++11 mode.
3255:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
3256:/usr/include/c++/5/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
3257:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
3258:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3259:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
3260:/usr/include/c++/5/bits/basic_string.h ****       }
3261:/usr/include/c++/5/bits/basic_string.h **** 
3262:/usr/include/c++/5/bits/basic_string.h ****       /**
3263:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3264:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
3265:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
3266:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3267:/usr/include/c++/5/bits/basic_string.h ****        *
3268:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3269:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3270:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
3271:/usr/include/c++/5/bits/basic_string.h ****        */
3272:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3273:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n) const
3274:/usr/include/c++/5/bits/basic_string.h ****       {
3275:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= this->size())
3276:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3277:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3278:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
3279:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
3280:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
3281:/usr/include/c++/5/bits/basic_string.h ****       }
3282:/usr/include/c++/5/bits/basic_string.h **** 
3283:/usr/include/c++/5/bits/basic_string.h ****       /**
3284:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3285:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
3286:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3287:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3288:/usr/include/c++/5/bits/basic_string.h ****        *
GAS LISTING /tmp/ccX8BQhk.s 			page 128


3289:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3290:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3291:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
3292:/usr/include/c++/5/bits/basic_string.h ****        *  unsharing the string.
3293:/usr/include/c++/5/bits/basic_string.h ****        */
3294:/usr/include/c++/5/bits/basic_string.h ****       reference
3295:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n)
3296:/usr/include/c++/5/bits/basic_string.h ****       {
3297:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= size())
3298:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3299:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3300:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
3301:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
3302:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3303:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
3304:/usr/include/c++/5/bits/basic_string.h ****       }
3305:/usr/include/c++/5/bits/basic_string.h **** 
3306:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3307:/usr/include/c++/5/bits/basic_string.h ****       /**
3308:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
3309:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3310:/usr/include/c++/5/bits/basic_string.h ****        */
3311:/usr/include/c++/5/bits/basic_string.h ****       reference
3312:/usr/include/c++/5/bits/basic_string.h ****       front()
3313:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
3314:/usr/include/c++/5/bits/basic_string.h **** 
3315:/usr/include/c++/5/bits/basic_string.h ****       /**
3316:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
3317:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3318:/usr/include/c++/5/bits/basic_string.h ****        */
3319:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3320:/usr/include/c++/5/bits/basic_string.h ****       front() const _GLIBCXX_NOEXCEPT
3321:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
3322:/usr/include/c++/5/bits/basic_string.h **** 
3323:/usr/include/c++/5/bits/basic_string.h ****       /**
3324:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
3325:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3326:/usr/include/c++/5/bits/basic_string.h ****        */
3327:/usr/include/c++/5/bits/basic_string.h ****       reference
3328:/usr/include/c++/5/bits/basic_string.h ****       back()
3329:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
3330:/usr/include/c++/5/bits/basic_string.h **** 
3331:/usr/include/c++/5/bits/basic_string.h ****       /**
3332:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
3333:/usr/include/c++/5/bits/basic_string.h ****        *  last element of the %string.
3334:/usr/include/c++/5/bits/basic_string.h ****        */
3335:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3336:/usr/include/c++/5/bits/basic_string.h ****       back() const _GLIBCXX_NOEXCEPT
3337:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
3338:/usr/include/c++/5/bits/basic_string.h **** #endif
3339:/usr/include/c++/5/bits/basic_string.h **** 
3340:/usr/include/c++/5/bits/basic_string.h ****       // Modifiers:
3341:/usr/include/c++/5/bits/basic_string.h ****       /**
3342:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
3343:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3344:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3345:/usr/include/c++/5/bits/basic_string.h ****        */
GAS LISTING /tmp/ccX8BQhk.s 			page 129


3346:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3347:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const basic_string& __str)
3348:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__str); }
3349:/usr/include/c++/5/bits/basic_string.h **** 
3350:/usr/include/c++/5/bits/basic_string.h ****       /**
3351:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
3352:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3353:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3354:/usr/include/c++/5/bits/basic_string.h ****        */
3355:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3356:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const _CharT* __s)
3357:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__s); }
3358:/usr/include/c++/5/bits/basic_string.h **** 
3359:/usr/include/c++/5/bits/basic_string.h ****       /**
3360:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a character.
3361:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to append.
3362:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3363:/usr/include/c++/5/bits/basic_string.h ****        */
3364:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3365:/usr/include/c++/5/bits/basic_string.h ****       operator+=(_CharT __c)
3366:/usr/include/c++/5/bits/basic_string.h ****       { 
3367:/usr/include/c++/5/bits/basic_string.h **** 	this->push_back(__c);
3368:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3369:/usr/include/c++/5/bits/basic_string.h ****       }
3370:/usr/include/c++/5/bits/basic_string.h **** 
3371:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3372:/usr/include/c++/5/bits/basic_string.h ****       /**
3373:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
3374:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
3375:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3376:/usr/include/c++/5/bits/basic_string.h ****        */
3377:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3378:/usr/include/c++/5/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
3379:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3380:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3381:/usr/include/c++/5/bits/basic_string.h **** 
3382:/usr/include/c++/5/bits/basic_string.h ****       /**
3383:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
3384:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3385:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3386:/usr/include/c++/5/bits/basic_string.h ****        */
3387:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3388:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str);
3389:/usr/include/c++/5/bits/basic_string.h **** 
3390:/usr/include/c++/5/bits/basic_string.h ****       /**
3391:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a substring.
3392:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3393:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
3394:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3395:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3396:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
3397:/usr/include/c++/5/bits/basic_string.h ****        *
3398:/usr/include/c++/5/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
3399:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
3400:/usr/include/c++/5/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
3401:/usr/include/c++/5/bits/basic_string.h ****        *  remainder of @a __str is appended.
3402:/usr/include/c++/5/bits/basic_string.h ****        */
GAS LISTING /tmp/ccX8BQhk.s 			page 130


3403:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3404:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
3405:/usr/include/c++/5/bits/basic_string.h **** 
3406:/usr/include/c++/5/bits/basic_string.h ****       /**
3407:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C substring.
3408:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3409:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3410:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3411:/usr/include/c++/5/bits/basic_string.h ****        */
3412:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3413:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
3414:/usr/include/c++/5/bits/basic_string.h **** 
3415:/usr/include/c++/5/bits/basic_string.h ****       /**
3416:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
3417:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3418:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3419:/usr/include/c++/5/bits/basic_string.h ****        */
3420:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3421:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s)
3422:/usr/include/c++/5/bits/basic_string.h ****       {
3423:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3424:/usr/include/c++/5/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
3425:/usr/include/c++/5/bits/basic_string.h ****       }
3426:/usr/include/c++/5/bits/basic_string.h **** 
3427:/usr/include/c++/5/bits/basic_string.h ****       /**
3428:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append multiple characters.
3429:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3430:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
3431:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3432:/usr/include/c++/5/bits/basic_string.h ****        *
3433:/usr/include/c++/5/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
3434:/usr/include/c++/5/bits/basic_string.h ****        */
3435:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3436:/usr/include/c++/5/bits/basic_string.h ****       append(size_type __n, _CharT __c);
3437:/usr/include/c++/5/bits/basic_string.h **** 
3438:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3439:/usr/include/c++/5/bits/basic_string.h ****       /**
3440:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
3441:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
3442:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3443:/usr/include/c++/5/bits/basic_string.h ****        */
3444:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3445:/usr/include/c++/5/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
3446:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3447:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3448:/usr/include/c++/5/bits/basic_string.h **** 
3449:/usr/include/c++/5/bits/basic_string.h ****       /**
3450:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a range of characters.
3451:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3452:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3453:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3454:/usr/include/c++/5/bits/basic_string.h ****        *
3455:/usr/include/c++/5/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
3456:/usr/include/c++/5/bits/basic_string.h ****        */
3457:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3458:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
3459:/usr/include/c++/5/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
GAS LISTING /tmp/ccX8BQhk.s 			page 131


3460:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
3461:/usr/include/c++/5/bits/basic_string.h **** 
3462:/usr/include/c++/5/bits/basic_string.h ****       /**
3463:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a single character.
3464:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to append.
3465:/usr/include/c++/5/bits/basic_string.h ****        */
3466:/usr/include/c++/5/bits/basic_string.h ****       void
3467:/usr/include/c++/5/bits/basic_string.h ****       push_back(_CharT __c)
3468:/usr/include/c++/5/bits/basic_string.h ****       { 
3469:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
3470:/usr/include/c++/5/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
3471:/usr/include/c++/5/bits/basic_string.h **** 	  this->reserve(__len);
3472:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
3473:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
3474:/usr/include/c++/5/bits/basic_string.h ****       }
3475:/usr/include/c++/5/bits/basic_string.h **** 
3476:/usr/include/c++/5/bits/basic_string.h ****       /**
3477:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
3478:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
3479:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3480:/usr/include/c++/5/bits/basic_string.h ****        */
3481:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3482:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str);
3483:/usr/include/c++/5/bits/basic_string.h **** 
3484:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3485:/usr/include/c++/5/bits/basic_string.h ****       /**
3486:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
3487:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
3488:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3489:/usr/include/c++/5/bits/basic_string.h ****        *
3490:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
3491:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3492:/usr/include/c++/5/bits/basic_string.h ****        */
3493:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
3494:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3495:/usr/include/c++/5/bits/basic_string.h ****       assign(basic_string&& __str)
3496:/usr/include/c++/5/bits/basic_string.h ****       {
3497:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
3498:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3499:/usr/include/c++/5/bits/basic_string.h ****       }
3500:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3501:/usr/include/c++/5/bits/basic_string.h **** 
3502:/usr/include/c++/5/bits/basic_string.h ****       /**
3503:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
3504:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to use.
3505:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
3506:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
3507:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3508:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
3509:/usr/include/c++/5/bits/basic_string.h ****        *
3510:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
3511:/usr/include/c++/5/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
3512:/usr/include/c++/5/bits/basic_string.h ****        *  is larger than the number of available characters in @a
3513:/usr/include/c++/5/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
3514:/usr/include/c++/5/bits/basic_string.h ****        */
3515:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3516:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
GAS LISTING /tmp/ccX8BQhk.s 			page 132


3517:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str._M_data()
3518:/usr/include/c++/5/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
3519:/usr/include/c++/5/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
3520:/usr/include/c++/5/bits/basic_string.h **** 
3521:/usr/include/c++/5/bits/basic_string.h ****       /**
3522:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a C substring.
3523:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
3524:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
3525:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3526:/usr/include/c++/5/bits/basic_string.h ****        *
3527:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
3528:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
3529:/usr/include/c++/5/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
3530:/usr/include/c++/5/bits/basic_string.h ****        */
3531:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3532:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
3533:/usr/include/c++/5/bits/basic_string.h **** 
3534:/usr/include/c++/5/bits/basic_string.h ****       /**
3535:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
3536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
3537:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3538:/usr/include/c++/5/bits/basic_string.h ****        *
3539:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
3540:/usr/include/c++/5/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
3541:/usr/include/c++/5/bits/basic_string.h ****        *  function returns.
3542:/usr/include/c++/5/bits/basic_string.h ****        */
3543:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3544:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s)
3545:/usr/include/c++/5/bits/basic_string.h ****       {
3546:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3547:/usr/include/c++/5/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
3548:/usr/include/c++/5/bits/basic_string.h ****       }
3549:/usr/include/c++/5/bits/basic_string.h **** 
3550:/usr/include/c++/5/bits/basic_string.h ****       /**
3551:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
3552:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
3553:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
3554:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3555:/usr/include/c++/5/bits/basic_string.h ****        *
3556:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
3557:/usr/include/c++/5/bits/basic_string.h ****        *  character @a __c.
3558:/usr/include/c++/5/bits/basic_string.h ****        */
3559:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3560:/usr/include/c++/5/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
3561:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
3562:/usr/include/c++/5/bits/basic_string.h **** 
3563:/usr/include/c++/5/bits/basic_string.h ****       /**
3564:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
3565:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3566:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3567:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3568:/usr/include/c++/5/bits/basic_string.h ****        *
3569:/usr/include/c++/5/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
3570:/usr/include/c++/5/bits/basic_string.h ****       */
3571:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3572:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
3573:/usr/include/c++/5/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
GAS LISTING /tmp/ccX8BQhk.s 			page 133


3574:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
3575:/usr/include/c++/5/bits/basic_string.h **** 
3576:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3577:/usr/include/c++/5/bits/basic_string.h ****       /**
3578:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
3579:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
3580:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3581:/usr/include/c++/5/bits/basic_string.h ****        */
3582:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3583:/usr/include/c++/5/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
3584:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
3585:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3586:/usr/include/c++/5/bits/basic_string.h **** 
3587:/usr/include/c++/5/bits/basic_string.h ****       /**
3588:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
3589:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3590:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
3591:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3592:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3593:/usr/include/c++/5/bits/basic_string.h ****        *
3594:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
3595:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
3596:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3597:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3598:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3599:/usr/include/c++/5/bits/basic_string.h ****       */
3600:/usr/include/c++/5/bits/basic_string.h ****       void
3601:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
3602:/usr/include/c++/5/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
3603:/usr/include/c++/5/bits/basic_string.h **** 
3604:/usr/include/c++/5/bits/basic_string.h ****       /**
3605:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
3606:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3607:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
3608:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
3609:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3610:/usr/include/c++/5/bits/basic_string.h ****        *
3611:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
3612:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3613:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3614:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3615:/usr/include/c++/5/bits/basic_string.h ****       */
3616:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3617:/usr/include/c++/5/bits/basic_string.h ****         void
3618:/usr/include/c++/5/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
3619:/usr/include/c++/5/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
3620:/usr/include/c++/5/bits/basic_string.h **** 
3621:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3622:/usr/include/c++/5/bits/basic_string.h ****       /**
3623:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
3624:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3625:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
3626:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3627:/usr/include/c++/5/bits/basic_string.h ****        */
3628:/usr/include/c++/5/bits/basic_string.h ****       void
3629:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
3630:/usr/include/c++/5/bits/basic_string.h ****       {
GAS LISTING /tmp/ccX8BQhk.s 			page 134


3631:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3632:/usr/include/c++/5/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
3633:/usr/include/c++/5/bits/basic_string.h ****       }
3634:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3635:/usr/include/c++/5/bits/basic_string.h **** 
3636:/usr/include/c++/5/bits/basic_string.h ****       /**
3637:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert value of a string.
3638:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3639:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
3640:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3641:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3642:/usr/include/c++/5/bits/basic_string.h ****        *
3643:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
3644:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3645:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3646:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3647:/usr/include/c++/5/bits/basic_string.h ****       */
3648:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3649:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
3650:/usr/include/c++/5/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
3651:/usr/include/c++/5/bits/basic_string.h **** 
3652:/usr/include/c++/5/bits/basic_string.h ****       /**
3653:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a substring.
3654:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3655:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
3656:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
3657:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
3658:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3659:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3660:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
3661:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
3662:/usr/include/c++/5/bits/basic_string.h ****        *
3663:/usr/include/c++/5/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
3664:/usr/include/c++/5/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
3665:/usr/include/c++/5/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
3666:/usr/include/c++/5/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
3667:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
3668:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
3669:/usr/include/c++/5/bits/basic_string.h ****       */
3670:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3671:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
3672:/usr/include/c++/5/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
3673:/usr/include/c++/5/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
3674:/usr/include/c++/5/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
3675:/usr/include/c++/5/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
3676:/usr/include/c++/5/bits/basic_string.h **** 
3677:/usr/include/c++/5/bits/basic_string.h ****       /**
3678:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C substring.
3679:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3680:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
3681:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
3682:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3683:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3684:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3685:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3686:/usr/include/c++/5/bits/basic_string.h ****        *
3687:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
GAS LISTING /tmp/ccX8BQhk.s 			page 135


3688:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
3689:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
3690:/usr/include/c++/5/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
3691:/usr/include/c++/5/bits/basic_string.h ****        *  doesn't change if an error is thrown.
3692:/usr/include/c++/5/bits/basic_string.h ****       */
3693:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3694:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
3695:/usr/include/c++/5/bits/basic_string.h **** 
3696:/usr/include/c++/5/bits/basic_string.h ****       /**
3697:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C string.
3698:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3699:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
3700:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3701:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3702:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3703:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3704:/usr/include/c++/5/bits/basic_string.h ****        *
3705:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
3706:/usr/include/c++/5/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
3707:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
3708:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
3709:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3710:/usr/include/c++/5/bits/basic_string.h ****       */
3711:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3712:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
3713:/usr/include/c++/5/bits/basic_string.h ****       {
3714:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3715:/usr/include/c++/5/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
3716:/usr/include/c++/5/bits/basic_string.h ****       }
3717:/usr/include/c++/5/bits/basic_string.h **** 
3718:/usr/include/c++/5/bits/basic_string.h ****       /**
3719:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
3720:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
3721:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
3722:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3723:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3724:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3725:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3726:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3727:/usr/include/c++/5/bits/basic_string.h ****        *
3728:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
3729:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
3730:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
3731:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3732:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3733:/usr/include/c++/5/bits/basic_string.h ****       */
3734:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3735:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
3736:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
3737:/usr/include/c++/5/bits/basic_string.h **** 			      size_type(0), __n, __c); }
3738:/usr/include/c++/5/bits/basic_string.h **** 
3739:/usr/include/c++/5/bits/basic_string.h ****       /**
3740:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert one character.
3741:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
3742:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3743:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
3744:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
GAS LISTING /tmp/ccX8BQhk.s 			page 136


3745:/usr/include/c++/5/bits/basic_string.h ****        *
3746:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
3747:/usr/include/c++/5/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
3748:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
3749:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3750:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3751:/usr/include/c++/5/bits/basic_string.h ****       */
3752:/usr/include/c++/5/bits/basic_string.h ****       iterator
3753:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
3754:/usr/include/c++/5/bits/basic_string.h ****       {
3755:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3756:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
3757:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
3758:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
3759:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
3760:/usr/include/c++/5/bits/basic_string.h ****       }
3761:/usr/include/c++/5/bits/basic_string.h **** 
3762:/usr/include/c++/5/bits/basic_string.h ****       /**
3763:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove characters.
3764:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
3765:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
3766:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3767:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3768:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3769:/usr/include/c++/5/bits/basic_string.h ****        *
3770:/usr/include/c++/5/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
3771:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
3772:/usr/include/c++/5/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
3773:/usr/include/c++/5/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
3774:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3775:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3776:/usr/include/c++/5/bits/basic_string.h ****       */
3777:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3778:/usr/include/c++/5/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
3779:/usr/include/c++/5/bits/basic_string.h ****       { 
3780:/usr/include/c++/5/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
3781:/usr/include/c++/5/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
3782:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3783:/usr/include/c++/5/bits/basic_string.h ****       }
3784:/usr/include/c++/5/bits/basic_string.h **** 
3785:/usr/include/c++/5/bits/basic_string.h ****       /**
3786:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove one character.
3787:/usr/include/c++/5/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
3788:/usr/include/c++/5/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
3789:/usr/include/c++/5/bits/basic_string.h ****        *
3790:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
3791:/usr/include/c++/5/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
3792:/usr/include/c++/5/bits/basic_string.h ****       */
3793:/usr/include/c++/5/bits/basic_string.h ****       iterator
3794:/usr/include/c++/5/bits/basic_string.h ****       erase(iterator __position)
3795:/usr/include/c++/5/bits/basic_string.h ****       {
3796:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
3797:/usr/include/c++/5/bits/basic_string.h **** 				 && __position < _M_iend());
3798:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
3799:/usr/include/c++/5/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
3800:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
3801:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
GAS LISTING /tmp/ccX8BQhk.s 			page 137


3802:/usr/include/c++/5/bits/basic_string.h ****       }
3803:/usr/include/c++/5/bits/basic_string.h **** 
3804:/usr/include/c++/5/bits/basic_string.h ****       /**
3805:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove a range of characters.
3806:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
3807:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
3808:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
3809:/usr/include/c++/5/bits/basic_string.h ****        *
3810:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
3811:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
3812:/usr/include/c++/5/bits/basic_string.h ****       */
3813:/usr/include/c++/5/bits/basic_string.h ****       iterator
3814:/usr/include/c++/5/bits/basic_string.h ****       erase(iterator __first, iterator __last);
3815:/usr/include/c++/5/bits/basic_string.h ****  
3816:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3817:/usr/include/c++/5/bits/basic_string.h ****       /**
3818:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove the last character.
3819:/usr/include/c++/5/bits/basic_string.h ****        *
3820:/usr/include/c++/5/bits/basic_string.h ****        *  The string must be non-empty.
3821:/usr/include/c++/5/bits/basic_string.h ****        */
3822:/usr/include/c++/5/bits/basic_string.h ****       void
3823:/usr/include/c++/5/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
3824:/usr/include/c++/5/bits/basic_string.h ****       { erase(size()-1, 1); }
3825:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3826:/usr/include/c++/5/bits/basic_string.h **** 
3827:/usr/include/c++/5/bits/basic_string.h ****       /**
3828:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
3829:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3830:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
3831:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
3832:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3833:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3834:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3835:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3836:/usr/include/c++/5/bits/basic_string.h ****        *
3837:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
3838:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
3839:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
3840:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
3841:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
3842:/usr/include/c++/5/bits/basic_string.h ****        *  error is thrown.
3843:/usr/include/c++/5/bits/basic_string.h ****       */
3844:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3845:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
3846:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
3847:/usr/include/c++/5/bits/basic_string.h **** 
3848:/usr/include/c++/5/bits/basic_string.h ****       /**
3849:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
3850:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
3851:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3852:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
3853:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
3854:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
3855:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3856:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
3857:/usr/include/c++/5/bits/basic_string.h ****        *  __str.size().
3858:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
GAS LISTING /tmp/ccX8BQhk.s 			page 138


3859:/usr/include/c++/5/bits/basic_string.h ****        *
3860:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
3861:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
3862:/usr/include/c++/5/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
3863:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
3864:/usr/include/c++/5/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
3865:/usr/include/c++/5/bits/basic_string.h ****       */
3866:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3867:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
3868:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
3869:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
3870:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
3871:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
3872:/usr/include/c++/5/bits/basic_string.h **** 
3873:/usr/include/c++/5/bits/basic_string.h ****       /**
3874:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
3875:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3876:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3877:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
3878:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
3879:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3880:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
3881:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3882:/usr/include/c++/5/bits/basic_string.h ****        *
3883:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
3884:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
3885:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
3886:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
3887:/usr/include/c++/5/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
3888:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
3889:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
3890:/usr/include/c++/5/bits/basic_string.h ****       */
3891:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3892:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
3893:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2);
3894:/usr/include/c++/5/bits/basic_string.h **** 
3895:/usr/include/c++/5/bits/basic_string.h ****       /**
3896:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
3897:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3898:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3899:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
3900:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3901:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
3902:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3903:/usr/include/c++/5/bits/basic_string.h ****        *
3904:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
3905:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
3906:/usr/include/c++/5/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
3907:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
3908:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3909:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3910:/usr/include/c++/5/bits/basic_string.h ****       */
3911:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3912:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
3913:/usr/include/c++/5/bits/basic_string.h ****       {
3914:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3915:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
GAS LISTING /tmp/ccX8BQhk.s 			page 139


3916:/usr/include/c++/5/bits/basic_string.h ****       }
3917:/usr/include/c++/5/bits/basic_string.h **** 
3918:/usr/include/c++/5/bits/basic_string.h ****       /**
3919:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
3920:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3921:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3922:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
3923:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
3924:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3925:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
3926:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3927:/usr/include/c++/5/bits/basic_string.h ****        *
3928:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
3929:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
3930:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
3931:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
3932:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
3933:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
3934:/usr/include/c++/5/bits/basic_string.h ****       */
3935:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3936:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
3937:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
3938:/usr/include/c++/5/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
3939:/usr/include/c++/5/bits/basic_string.h **** 
3940:/usr/include/c++/5/bits/basic_string.h ****       /**
3941:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
3942:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3943:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3944:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String value to insert.
3945:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3946:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3947:/usr/include/c++/5/bits/basic_string.h ****        *
3948:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3949:/usr/include/c++/5/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
3950:/usr/include/c++/5/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
3951:/usr/include/c++/5/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
3952:/usr/include/c++/5/bits/basic_string.h ****       */
3953:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3954:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
3955:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
3956:/usr/include/c++/5/bits/basic_string.h **** 
3957:/usr/include/c++/5/bits/basic_string.h ****       /**
3958:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
3959:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3960:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3961:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
3962:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
3963:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3964:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3965:/usr/include/c++/5/bits/basic_string.h ****        *
3966:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3967:/usr/include/c++/5/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
3968:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
3969:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
3970:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3971:/usr/include/c++/5/bits/basic_string.h ****       */
3972:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/ccX8BQhk.s 			page 140


3973:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
3974:/usr/include/c++/5/bits/basic_string.h ****       {
3975:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
3976:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
3977:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
3978:/usr/include/c++/5/bits/basic_string.h ****       }
3979:/usr/include/c++/5/bits/basic_string.h **** 
3980:/usr/include/c++/5/bits/basic_string.h ****       /**
3981:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
3982:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3983:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3984:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
3985:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3986:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3987:/usr/include/c++/5/bits/basic_string.h ****        *
3988:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3989:/usr/include/c++/5/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
3990:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
3991:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
3992:/usr/include/c++/5/bits/basic_string.h ****       */
3993:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3994:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
3995:/usr/include/c++/5/bits/basic_string.h ****       {
3996:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3997:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
3998:/usr/include/c++/5/bits/basic_string.h ****       }
3999:/usr/include/c++/5/bits/basic_string.h **** 
4000:/usr/include/c++/5/bits/basic_string.h ****       /**
4001:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4002:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4003:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4004:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4005:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
4006:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4007:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4008:/usr/include/c++/5/bits/basic_string.h ****        *
4009:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4010:/usr/include/c++/5/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4011:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4012:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4013:/usr/include/c++/5/bits/basic_string.h ****       */
4014:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4015:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4016:/usr/include/c++/5/bits/basic_string.h ****       {
4017:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4018:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4019:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4020:/usr/include/c++/5/bits/basic_string.h ****       }
4021:/usr/include/c++/5/bits/basic_string.h **** 
4022:/usr/include/c++/5/bits/basic_string.h ****       /**
4023:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4024:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4025:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4026:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4027:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4028:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4029:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
GAS LISTING /tmp/ccX8BQhk.s 			page 141


4030:/usr/include/c++/5/bits/basic_string.h ****        *
4031:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4032:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4033:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4034:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4035:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
4036:/usr/include/c++/5/bits/basic_string.h ****       */
4037:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
4038:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
4039:/usr/include/c++/5/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4040:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4041:/usr/include/c++/5/bits/basic_string.h ****         {
4042:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4043:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4044:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4045:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4046:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4047:/usr/include/c++/5/bits/basic_string.h **** 	}
4048:/usr/include/c++/5/bits/basic_string.h **** 
4049:/usr/include/c++/5/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4050:/usr/include/c++/5/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4051:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4052:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4053:/usr/include/c++/5/bits/basic_string.h ****       {
4054:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4055:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4056:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4057:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4058:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4059:/usr/include/c++/5/bits/basic_string.h ****       }
4060:/usr/include/c++/5/bits/basic_string.h **** 
4061:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4062:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4063:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4064:/usr/include/c++/5/bits/basic_string.h ****       {
4065:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4066:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4067:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4068:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4069:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4070:/usr/include/c++/5/bits/basic_string.h ****       }
4071:/usr/include/c++/5/bits/basic_string.h **** 
4072:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4073:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4074:/usr/include/c++/5/bits/basic_string.h ****       {
4075:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4076:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4077:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4078:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4079:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4080:/usr/include/c++/5/bits/basic_string.h ****       }
4081:/usr/include/c++/5/bits/basic_string.h **** 
4082:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4083:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4084:/usr/include/c++/5/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
4085:/usr/include/c++/5/bits/basic_string.h ****       {
4086:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
GAS LISTING /tmp/ccX8BQhk.s 			page 142


4087:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4088:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4089:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4090:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4091:/usr/include/c++/5/bits/basic_string.h ****       }
4092:/usr/include/c++/5/bits/basic_string.h ****       
4093:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
4094:/usr/include/c++/5/bits/basic_string.h ****       /**
4095:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
4096:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4097:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4098:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4099:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4100:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4101:/usr/include/c++/5/bits/basic_string.h ****        *
4102:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4103:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4104:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4105:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4106:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
4107:/usr/include/c++/5/bits/basic_string.h ****       */
4108:/usr/include/c++/5/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
4109:/usr/include/c++/5/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
4110:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
4111:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
4112:/usr/include/c++/5/bits/basic_string.h **** 
4113:/usr/include/c++/5/bits/basic_string.h ****     private:
4114:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
4115:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
4116:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
4117:/usr/include/c++/5/bits/basic_string.h **** 			    _Integer __val, __true_type)
4118:/usr/include/c++/5/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
4119:/usr/include/c++/5/bits/basic_string.h **** 
4120:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
4121:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
4122:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
4123:/usr/include/c++/5/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
4124:/usr/include/c++/5/bits/basic_string.h **** 
4125:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4126:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
4127:/usr/include/c++/5/bits/basic_string.h **** 		     _CharT __c);
4128:/usr/include/c++/5/bits/basic_string.h **** 
4129:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4130:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
4131:/usr/include/c++/5/bits/basic_string.h **** 		      size_type __n2);
4132:/usr/include/c++/5/bits/basic_string.h **** 
4133:/usr/include/c++/5/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
4134:/usr/include/c++/5/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
4135:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4136:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4137:/usr/include/c++/5/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
4138:/usr/include/c++/5/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
4139:/usr/include/c++/5/bits/basic_string.h **** 	{
4140:/usr/include/c++/5/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
4141:/usr/include/c++/5/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
4142:/usr/include/c++/5/bits/basic_string.h **** 	}
4143:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 143


4144:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4145:/usr/include/c++/5/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
4146:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
4147:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4148:/usr/include/c++/5/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
4149:/usr/include/c++/5/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
4150:/usr/include/c++/5/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
4151:/usr/include/c++/5/bits/basic_string.h **** 				    __end, __a); }
4152:/usr/include/c++/5/bits/basic_string.h **** 
4153:/usr/include/c++/5/bits/basic_string.h ****       static _CharT*
4154:/usr/include/c++/5/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
4155:/usr/include/c++/5/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
4156:/usr/include/c++/5/bits/basic_string.h **** 
4157:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4158:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4159:/usr/include/c++/5/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
4160:/usr/include/c++/5/bits/basic_string.h **** 	{
4161:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
4162:/usr/include/c++/5/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
4163:/usr/include/c++/5/bits/basic_string.h ****         }
4164:/usr/include/c++/5/bits/basic_string.h **** 
4165:/usr/include/c++/5/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
4166:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4167:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4168:/usr/include/c++/5/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
4169:/usr/include/c++/5/bits/basic_string.h **** 		      input_iterator_tag);
4170:/usr/include/c++/5/bits/basic_string.h **** 
4171:/usr/include/c++/5/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
4172:/usr/include/c++/5/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
4173:/usr/include/c++/5/bits/basic_string.h ****       template<class _FwdIterator>
4174:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4175:/usr/include/c++/5/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
4176:/usr/include/c++/5/bits/basic_string.h **** 		     forward_iterator_tag);
4177:/usr/include/c++/5/bits/basic_string.h **** 
4178:/usr/include/c++/5/bits/basic_string.h ****       static _CharT*
4179:/usr/include/c++/5/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
4180:/usr/include/c++/5/bits/basic_string.h **** 
4181:/usr/include/c++/5/bits/basic_string.h ****     public:
4182:/usr/include/c++/5/bits/basic_string.h **** 
4183:/usr/include/c++/5/bits/basic_string.h ****       /**
4184:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy substring into C string.
4185:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to copy value into.
4186:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
4187:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
4188:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Number of characters actually copied
4189:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4190:/usr/include/c++/5/bits/basic_string.h ****        *
4191:/usr/include/c++/5/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
4192:/usr/include/c++/5/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
4193:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.
4194:/usr/include/c++/5/bits/basic_string.h ****       */
4195:/usr/include/c++/5/bits/basic_string.h ****       size_type
4196:/usr/include/c++/5/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
4197:/usr/include/c++/5/bits/basic_string.h **** 
4198:/usr/include/c++/5/bits/basic_string.h ****       /**
4199:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Swap contents with another string.
4200:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String to swap with.
GAS LISTING /tmp/ccX8BQhk.s 			page 144


4201:/usr/include/c++/5/bits/basic_string.h ****        *
4202:/usr/include/c++/5/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
4203:/usr/include/c++/5/bits/basic_string.h ****        *  time.
4204:/usr/include/c++/5/bits/basic_string.h ****       */
4205:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
4206:/usr/include/c++/5/bits/basic_string.h ****       void
4207:/usr/include/c++/5/bits/basic_string.h ****       swap(basic_string& __s);
4208:/usr/include/c++/5/bits/basic_string.h **** 
4209:/usr/include/c++/5/bits/basic_string.h ****       // String operations:
4210:/usr/include/c++/5/bits/basic_string.h ****       /**
4211:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
4212:/usr/include/c++/5/bits/basic_string.h ****        *
4213:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4214:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
4215:/usr/include/c++/5/bits/basic_string.h ****       */
4216:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
4217:/usr/include/c++/5/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
4218:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
4219:/usr/include/c++/5/bits/basic_string.h **** 
4220:/usr/include/c++/5/bits/basic_string.h ****       /**
4221:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
4222:/usr/include/c++/5/bits/basic_string.h ****        *
4223:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4224:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
4225:/usr/include/c++/5/bits/basic_string.h ****       */
4226:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
4227:/usr/include/c++/5/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
4228:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
4229:/usr/include/c++/5/bits/basic_string.h **** 
4230:/usr/include/c++/5/bits/basic_string.h ****       /**
4231:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
4232:/usr/include/c++/5/bits/basic_string.h ****       */
4233:/usr/include/c++/5/bits/basic_string.h ****       allocator_type
4234:/usr/include/c++/5/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
4235:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
4236:/usr/include/c++/5/bits/basic_string.h **** 
4237:/usr/include/c++/5/bits/basic_string.h ****       /**
4238:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C substring.
4239:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4240:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4241:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
4242:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4243:/usr/include/c++/5/bits/basic_string.h ****        *
4244:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
4245:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4246:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
4247:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4248:/usr/include/c++/5/bits/basic_string.h ****       */
4249:/usr/include/c++/5/bits/basic_string.h ****       size_type
4250:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
4251:/usr/include/c++/5/bits/basic_string.h **** 
4252:/usr/include/c++/5/bits/basic_string.h ****       /**
4253:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a string.
4254:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
4255:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4256:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4257:/usr/include/c++/5/bits/basic_string.h ****        *
GAS LISTING /tmp/ccX8BQhk.s 			page 145


4258:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
4259:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
4260:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns npos.
4261:/usr/include/c++/5/bits/basic_string.h ****       */
4262:/usr/include/c++/5/bits/basic_string.h ****       size_type
4263:/usr/include/c++/5/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
4264:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4265:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
4266:/usr/include/c++/5/bits/basic_string.h **** 
4267:/usr/include/c++/5/bits/basic_string.h ****       /**
4268:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C string.
4269:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4270:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4271:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4272:/usr/include/c++/5/bits/basic_string.h ****        *
4273:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
4274:/usr/include/c++/5/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
4275:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
4276:/usr/include/c++/5/bits/basic_string.h ****       */
4277:/usr/include/c++/5/bits/basic_string.h ****       size_type
4278:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
4279:/usr/include/c++/5/bits/basic_string.h ****       {
4280:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4281:/usr/include/c++/5/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
4282:/usr/include/c++/5/bits/basic_string.h ****       }
4283:/usr/include/c++/5/bits/basic_string.h **** 
4284:/usr/include/c++/5/bits/basic_string.h ****       /**
4285:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
4286:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4287:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4288:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4289:/usr/include/c++/5/bits/basic_string.h ****        *
4290:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
4291:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4292:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4293:/usr/include/c++/5/bits/basic_string.h ****       */
4294:/usr/include/c++/5/bits/basic_string.h ****       size_type
4295:/usr/include/c++/5/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
4296:/usr/include/c++/5/bits/basic_string.h **** 
4297:/usr/include/c++/5/bits/basic_string.h ****       /**
4298:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a string.
4299:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
4300:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4301:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
4302:/usr/include/c++/5/bits/basic_string.h ****        *
4303:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
4304:/usr/include/c++/5/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
4305:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
4306:/usr/include/c++/5/bits/basic_string.h ****       */
4307:/usr/include/c++/5/bits/basic_string.h ****       size_type
4308:/usr/include/c++/5/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
4309:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4310:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
4311:/usr/include/c++/5/bits/basic_string.h **** 
4312:/usr/include/c++/5/bits/basic_string.h ****       /**
4313:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
4314:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
GAS LISTING /tmp/ccX8BQhk.s 			page 146


4315:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4316:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4317:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
4318:/usr/include/c++/5/bits/basic_string.h ****        *
4319:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
4320:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4321:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
4322:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4323:/usr/include/c++/5/bits/basic_string.h ****       */
4324:/usr/include/c++/5/bits/basic_string.h ****       size_type
4325:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
4326:/usr/include/c++/5/bits/basic_string.h **** 
4327:/usr/include/c++/5/bits/basic_string.h ****       /**
4328:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C string.
4329:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4330:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
4331:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
4332:/usr/include/c++/5/bits/basic_string.h ****        *
4333:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
4334:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
4335:/usr/include/c++/5/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
4336:/usr/include/c++/5/bits/basic_string.h ****       */
4337:/usr/include/c++/5/bits/basic_string.h ****       size_type
4338:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
4339:/usr/include/c++/5/bits/basic_string.h ****       {
4340:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4341:/usr/include/c++/5/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
4342:/usr/include/c++/5/bits/basic_string.h ****       }
4343:/usr/include/c++/5/bits/basic_string.h **** 
4344:/usr/include/c++/5/bits/basic_string.h ****       /**
4345:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
4346:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4347:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4348:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4349:/usr/include/c++/5/bits/basic_string.h ****        *
4350:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4351:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4352:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4353:/usr/include/c++/5/bits/basic_string.h ****       */
4354:/usr/include/c++/5/bits/basic_string.h ****       size_type
4355:/usr/include/c++/5/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
4356:/usr/include/c++/5/bits/basic_string.h **** 
4357:/usr/include/c++/5/bits/basic_string.h ****       /**
4358:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of string.
4359:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
4360:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4361:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4362:/usr/include/c++/5/bits/basic_string.h ****        *
4363:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4364:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
4365:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4366:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4367:/usr/include/c++/5/bits/basic_string.h ****       */
4368:/usr/include/c++/5/bits/basic_string.h ****       size_type
4369:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
4370:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4371:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
GAS LISTING /tmp/ccX8BQhk.s 			page 147


4372:/usr/include/c++/5/bits/basic_string.h **** 
4373:/usr/include/c++/5/bits/basic_string.h ****       /**
4374:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
4375:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
4376:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4377:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4378:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4379:/usr/include/c++/5/bits/basic_string.h ****        *
4380:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4381:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4382:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
4383:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4384:/usr/include/c++/5/bits/basic_string.h ****       */
4385:/usr/include/c++/5/bits/basic_string.h ****       size_type
4386:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
4387:/usr/include/c++/5/bits/basic_string.h **** 
4388:/usr/include/c++/5/bits/basic_string.h ****       /**
4389:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
4390:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
4391:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4392:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4393:/usr/include/c++/5/bits/basic_string.h ****        *
4394:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4395:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4396:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4397:/usr/include/c++/5/bits/basic_string.h ****       */
4398:/usr/include/c++/5/bits/basic_string.h ****       size_type
4399:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
4400:/usr/include/c++/5/bits/basic_string.h ****       {
4401:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4402:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
4403:/usr/include/c++/5/bits/basic_string.h ****       }
4404:/usr/include/c++/5/bits/basic_string.h **** 
4405:/usr/include/c++/5/bits/basic_string.h ****       /**
4406:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
4407:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4408:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4409:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4410:/usr/include/c++/5/bits/basic_string.h ****        *
4411:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
4412:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
4413:/usr/include/c++/5/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
4414:/usr/include/c++/5/bits/basic_string.h ****        *
4415:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
4416:/usr/include/c++/5/bits/basic_string.h ****       */
4417:/usr/include/c++/5/bits/basic_string.h ****       size_type
4418:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
4419:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__c, __pos); }
4420:/usr/include/c++/5/bits/basic_string.h **** 
4421:/usr/include/c++/5/bits/basic_string.h ****       /**
4422:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
4423:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
4424:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4425:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4426:/usr/include/c++/5/bits/basic_string.h ****        *
4427:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4428:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
GAS LISTING /tmp/ccX8BQhk.s 			page 148


4429:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4430:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4431:/usr/include/c++/5/bits/basic_string.h ****       */
4432:/usr/include/c++/5/bits/basic_string.h ****       size_type
4433:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
4434:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4435:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
4436:/usr/include/c++/5/bits/basic_string.h **** 
4437:/usr/include/c++/5/bits/basic_string.h ****       /**
4438:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
4439:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
4440:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4441:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4442:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4443:/usr/include/c++/5/bits/basic_string.h ****        *
4444:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4445:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4446:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
4447:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4448:/usr/include/c++/5/bits/basic_string.h ****       */
4449:/usr/include/c++/5/bits/basic_string.h ****       size_type
4450:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
4451:/usr/include/c++/5/bits/basic_string.h **** 
4452:/usr/include/c++/5/bits/basic_string.h ****       /**
4453:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
4454:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
4455:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4456:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4457:/usr/include/c++/5/bits/basic_string.h ****        *
4458:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4459:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4460:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4461:/usr/include/c++/5/bits/basic_string.h ****       */
4462:/usr/include/c++/5/bits/basic_string.h ****       size_type
4463:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
4464:/usr/include/c++/5/bits/basic_string.h ****       {
4465:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4466:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
4467:/usr/include/c++/5/bits/basic_string.h ****       }
4468:/usr/include/c++/5/bits/basic_string.h **** 
4469:/usr/include/c++/5/bits/basic_string.h ****       /**
4470:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
4471:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4472:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4473:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4474:/usr/include/c++/5/bits/basic_string.h ****        *
4475:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4476:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4477:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4478:/usr/include/c++/5/bits/basic_string.h ****        *
4479:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
4480:/usr/include/c++/5/bits/basic_string.h ****       */
4481:/usr/include/c++/5/bits/basic_string.h ****       size_type
4482:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
4483:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
4484:/usr/include/c++/5/bits/basic_string.h **** 
4485:/usr/include/c++/5/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccX8BQhk.s 			page 149


4486:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
4487:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
4488:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4489:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4490:/usr/include/c++/5/bits/basic_string.h ****        *
4491:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
4492:/usr/include/c++/5/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
4493:/usr/include/c++/5/bits/basic_string.h ****        *  was found.  If not found, returns npos.
4494:/usr/include/c++/5/bits/basic_string.h ****       */
4495:/usr/include/c++/5/bits/basic_string.h ****       size_type
4496:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
4497:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4498:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
4499:/usr/include/c++/5/bits/basic_string.h **** 
4500:/usr/include/c++/5/bits/basic_string.h ****       /**
4501:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
4502:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4503:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4504:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
4505:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4506:/usr/include/c++/5/bits/basic_string.h ****        *
4507:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4508:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
4509:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4510:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4511:/usr/include/c++/5/bits/basic_string.h ****       */
4512:/usr/include/c++/5/bits/basic_string.h ****       size_type
4513:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
4514:/usr/include/c++/5/bits/basic_string.h **** 			size_type __n) const;
4515:/usr/include/c++/5/bits/basic_string.h **** 
4516:/usr/include/c++/5/bits/basic_string.h ****       /**
4517:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
4518:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4519:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4520:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4521:/usr/include/c++/5/bits/basic_string.h ****        *
4522:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4523:/usr/include/c++/5/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
4524:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4525:/usr/include/c++/5/bits/basic_string.h ****       */
4526:/usr/include/c++/5/bits/basic_string.h ****       size_type
4527:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
4528:/usr/include/c++/5/bits/basic_string.h ****       {
4529:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4530:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
4531:/usr/include/c++/5/bits/basic_string.h ****       }
4532:/usr/include/c++/5/bits/basic_string.h **** 
4533:/usr/include/c++/5/bits/basic_string.h ****       /**
4534:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a different character.
4535:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
4536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4537:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4538:/usr/include/c++/5/bits/basic_string.h ****        *
4539:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
4540:/usr/include/c++/5/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
4541:/usr/include/c++/5/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
4542:/usr/include/c++/5/bits/basic_string.h ****       */
GAS LISTING /tmp/ccX8BQhk.s 			page 150


4543:/usr/include/c++/5/bits/basic_string.h ****       size_type
4544:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
4545:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4546:/usr/include/c++/5/bits/basic_string.h **** 
4547:/usr/include/c++/5/bits/basic_string.h ****       /**
4548:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
4549:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
4550:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4551:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4552:/usr/include/c++/5/bits/basic_string.h ****        *
4553:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4554:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
4555:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4556:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4557:/usr/include/c++/5/bits/basic_string.h ****       */
4558:/usr/include/c++/5/bits/basic_string.h ****       size_type
4559:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
4560:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4561:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
4562:/usr/include/c++/5/bits/basic_string.h **** 
4563:/usr/include/c++/5/bits/basic_string.h ****       /**
4564:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
4565:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4566:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4567:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
4568:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4569:/usr/include/c++/5/bits/basic_string.h ****        *
4570:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
4571:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
4572:/usr/include/c++/5/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
4573:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4574:/usr/include/c++/5/bits/basic_string.h ****       */
4575:/usr/include/c++/5/bits/basic_string.h ****       size_type
4576:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
4577:/usr/include/c++/5/bits/basic_string.h **** 		       size_type __n) const;
4578:/usr/include/c++/5/bits/basic_string.h ****       /**
4579:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
4580:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4581:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4582:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4583:/usr/include/c++/5/bits/basic_string.h ****        *
4584:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4585:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
4586:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4587:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4588:/usr/include/c++/5/bits/basic_string.h ****       */
4589:/usr/include/c++/5/bits/basic_string.h ****       size_type
4590:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
4591:/usr/include/c++/5/bits/basic_string.h ****       {
4592:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4593:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
4594:/usr/include/c++/5/bits/basic_string.h ****       }
4595:/usr/include/c++/5/bits/basic_string.h **** 
4596:/usr/include/c++/5/bits/basic_string.h ****       /**
4597:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a different character.
4598:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
4599:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
GAS LISTING /tmp/ccX8BQhk.s 			page 151


4600:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4601:/usr/include/c++/5/bits/basic_string.h ****        *
4602:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
4603:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
4604:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4605:/usr/include/c++/5/bits/basic_string.h ****       */
4606:/usr/include/c++/5/bits/basic_string.h ****       size_type
4607:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
4608:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4609:/usr/include/c++/5/bits/basic_string.h **** 
4610:/usr/include/c++/5/bits/basic_string.h ****       /**
4611:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Get a substring.
4612:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
4613:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
4614:/usr/include/c++/5/bits/basic_string.h ****        *  @return  The new string.
4615:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4616:/usr/include/c++/5/bits/basic_string.h ****        *
4617:/usr/include/c++/5/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
4618:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
4619:/usr/include/c++/5/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
4620:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
4621:/usr/include/c++/5/bits/basic_string.h ****       */
4622:/usr/include/c++/5/bits/basic_string.h ****       basic_string
4623:/usr/include/c++/5/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
4624:/usr/include/c++/5/bits/basic_string.h ****       { return basic_string(*this,
4625:/usr/include/c++/5/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
4626:/usr/include/c++/5/bits/basic_string.h **** 
4627:/usr/include/c++/5/bits/basic_string.h ****       /**
4628:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a string.
4629:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4630:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4631:/usr/include/c++/5/bits/basic_string.h ****        *
4632:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
4633:/usr/include/c++/5/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
4634:/usr/include/c++/5/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
4635:/usr/include/c++/5/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
4636:/usr/include/c++/5/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
4637:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
4638:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4639:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
4640:/usr/include/c++/5/bits/basic_string.h ****       */
4641:/usr/include/c++/5/bits/basic_string.h ****       int
4642:/usr/include/c++/5/bits/basic_string.h ****       compare(const basic_string& __str) const
4643:/usr/include/c++/5/bits/basic_string.h ****       {
4644:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
4645:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __osize = __str.size();
4646:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
4647:/usr/include/c++/5/bits/basic_string.h **** 
4648:/usr/include/c++/5/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
4649:/usr/include/c++/5/bits/basic_string.h **** 	if (!__r)
4650:/usr/include/c++/5/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
4651:/usr/include/c++/5/bits/basic_string.h **** 	return __r;
4652:/usr/include/c++/5/bits/basic_string.h ****       }
4653:/usr/include/c++/5/bits/basic_string.h **** 
4654:/usr/include/c++/5/bits/basic_string.h ****       /**
4655:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a string.
4656:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
GAS LISTING /tmp/ccX8BQhk.s 			page 152


4657:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
4658:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4659:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4660:/usr/include/c++/5/bits/basic_string.h ****        *
4661:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
4662:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
4663:/usr/include/c++/5/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
4664:/usr/include/c++/5/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
4665:/usr/include/c++/5/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
4666:/usr/include/c++/5/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
4667:/usr/include/c++/5/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
4668:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling
4669:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
4670:/usr/include/c++/5/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
4671:/usr/include/c++/5/bits/basic_string.h ****        *  the shorter one is ordered first.
4672:/usr/include/c++/5/bits/basic_string.h ****       */
4673:/usr/include/c++/5/bits/basic_string.h ****       int
4674:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
4675:/usr/include/c++/5/bits/basic_string.h **** 
4676:/usr/include/c++/5/bits/basic_string.h ****       /**
4677:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
4678:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
4679:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4680:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4681:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
4682:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
4683:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4684:/usr/include/c++/5/bits/basic_string.h ****        *
4685:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4686:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
4687:/usr/include/c++/5/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
4688:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
4689:/usr/include/c++/5/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
4690:/usr/include/c++/5/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
4691:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
4692:/usr/include/c++/5/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
4693:/usr/include/c++/5/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
4694:/usr/include/c++/5/bits/basic_string.h ****        *  calling
4695:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
4696:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4697:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
4698:/usr/include/c++/5/bits/basic_string.h ****       */
4699:/usr/include/c++/5/bits/basic_string.h ****       int
4700:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
4701:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
4702:/usr/include/c++/5/bits/basic_string.h **** 
4703:/usr/include/c++/5/bits/basic_string.h ****       /**
4704:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a C string.
4705:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
4706:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4707:/usr/include/c++/5/bits/basic_string.h ****        *
4708:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
4709:/usr/include/c++/5/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
4710:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
4711:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
4712:/usr/include/c++/5/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
4713:/usr/include/c++/5/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
GAS LISTING /tmp/ccX8BQhk.s 			page 153


4714:/usr/include/c++/5/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
4715:/usr/include/c++/5/bits/basic_string.h ****        *  ordered first.
4716:/usr/include/c++/5/bits/basic_string.h ****       */
4717:/usr/include/c++/5/bits/basic_string.h ****       int
4718:/usr/include/c++/5/bits/basic_string.h ****       compare(const _CharT* __s) const;
4719:/usr/include/c++/5/bits/basic_string.h **** 
4720:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4721:/usr/include/c++/5/bits/basic_string.h ****       // 5 String::compare specification questionable
4722:/usr/include/c++/5/bits/basic_string.h ****       /**
4723:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
4724:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4725:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4726:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
4727:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4728:/usr/include/c++/5/bits/basic_string.h ****        *
4729:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4730:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
4731:/usr/include/c++/5/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
4732:/usr/include/c++/5/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
4733:/usr/include/c++/5/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
4734:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
4735:/usr/include/c++/5/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
4736:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two string by calling
4737:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
4738:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4739:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
4740:/usr/include/c++/5/bits/basic_string.h ****       */
4741:/usr/include/c++/5/bits/basic_string.h ****       int
4742:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
4743:/usr/include/c++/5/bits/basic_string.h **** 
4744:/usr/include/c++/5/bits/basic_string.h ****       /**
4745:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
4746:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4747:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4748:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  character %array to compare against.
4749:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
4750:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4751:/usr/include/c++/5/bits/basic_string.h ****        *
4752:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4753:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
4754:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
4755:/usr/include/c++/5/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
4756:/usr/include/c++/5/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
4757:/usr/include/c++/5/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
4758:/usr/include/c++/5/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
4759:/usr/include/c++/5/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
4760:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two strings by calling
4761:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
4762:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4763:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
4764:/usr/include/c++/5/bits/basic_string.h ****        *
4765:/usr/include/c++/5/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
4766:/usr/include/c++/5/bits/basic_string.h ****        *  no special meaning.
4767:/usr/include/c++/5/bits/basic_string.h ****       */
4768:/usr/include/c++/5/bits/basic_string.h ****       int
4769:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
4770:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2) const;
GAS LISTING /tmp/ccX8BQhk.s 			page 154


4771:/usr/include/c++/5/bits/basic_string.h ****   };
4772:/usr/include/c++/5/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
4773:/usr/include/c++/5/bits/basic_string.h **** 
4774:/usr/include/c++/5/bits/basic_string.h ****   // operator+
4775:/usr/include/c++/5/bits/basic_string.h ****   /**
4776:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate two strings.
4777:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4778:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4779:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4780:/usr/include/c++/5/bits/basic_string.h ****    */
4781:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4782:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
4783:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4784:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4785:/usr/include/c++/5/bits/basic_string.h ****     {
4786:/usr/include/c++/5/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
4787:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__rhs);
4788:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4789:/usr/include/c++/5/bits/basic_string.h ****     }
4790:/usr/include/c++/5/bits/basic_string.h **** 
4791:/usr/include/c++/5/bits/basic_string.h ****   /**
4792:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
4793:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4794:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4795:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4796:/usr/include/c++/5/bits/basic_string.h ****    */
4797:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4798:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4799:/usr/include/c++/5/bits/basic_string.h ****     operator+(const _CharT* __lhs,
4800:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4801:/usr/include/c++/5/bits/basic_string.h **** 
4802:/usr/include/c++/5/bits/basic_string.h ****   /**
4803:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate character and string.
4804:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4805:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4806:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4807:/usr/include/c++/5/bits/basic_string.h ****    */
4808:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4809:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4810:/usr/include/c++/5/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4811:/usr/include/c++/5/bits/basic_string.h **** 
4812:/usr/include/c++/5/bits/basic_string.h ****   /**
4813:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
4814:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4815:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4816:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4817:/usr/include/c++/5/bits/basic_string.h ****    */
4818:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4819:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4820:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4821:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __rhs)
4822:/usr/include/c++/5/bits/basic_string.h ****     {
4823:/usr/include/c++/5/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
4824:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__rhs);
4825:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4826:/usr/include/c++/5/bits/basic_string.h ****     }
4827:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 155


4828:/usr/include/c++/5/bits/basic_string.h ****   /**
4829:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate string and character.
4830:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4831:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4832:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4833:/usr/include/c++/5/bits/basic_string.h ****    */
4834:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4835:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4836:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
4837:/usr/include/c++/5/bits/basic_string.h ****     {
4838:/usr/include/c++/5/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
4839:/usr/include/c++/5/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
4840:/usr/include/c++/5/bits/basic_string.h ****       __string_type __str(__lhs);
4841:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
4842:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4843:/usr/include/c++/5/bits/basic_string.h ****     }
4844:/usr/include/c++/5/bits/basic_string.h **** 
4845:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
4846:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4847:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4848:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4849:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4850:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
4851:/usr/include/c++/5/bits/basic_string.h **** 
4852:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4853:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4854:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4855:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4856:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
4857:/usr/include/c++/5/bits/basic_string.h **** 
4858:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4859:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4860:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4861:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4862:/usr/include/c++/5/bits/basic_string.h ****     {
4863:/usr/include/c++/5/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
4864:/usr/include/c++/5/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
4865:/usr/include/c++/5/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
4866:/usr/include/c++/5/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
4867:/usr/include/c++/5/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
4868:/usr/include/c++/5/bits/basic_string.h ****     }
4869:/usr/include/c++/5/bits/basic_string.h **** 
4870:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4871:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4872:/usr/include/c++/5/bits/basic_string.h ****     operator+(const _CharT* __lhs,
4873:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4874:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
4875:/usr/include/c++/5/bits/basic_string.h **** 
4876:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4877:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4878:/usr/include/c++/5/bits/basic_string.h ****     operator+(_CharT __lhs,
4879:/usr/include/c++/5/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
4880:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
4881:/usr/include/c++/5/bits/basic_string.h **** 
4882:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4883:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4884:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
GAS LISTING /tmp/ccX8BQhk.s 			page 156


4885:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __rhs)
4886:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
4887:/usr/include/c++/5/bits/basic_string.h **** 
4888:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4889:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4890:/usr/include/c++/5/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
4891:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT __rhs)
4892:/usr/include/c++/5/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
4893:/usr/include/c++/5/bits/basic_string.h **** #endif
4894:/usr/include/c++/5/bits/basic_string.h **** 
4895:/usr/include/c++/5/bits/basic_string.h ****   // operator ==
4896:/usr/include/c++/5/bits/basic_string.h ****   /**
4897:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
4898:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4899:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Second string.
4900:/usr/include/c++/5/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
4901:/usr/include/c++/5/bits/basic_string.h ****    */
4902:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4903:/usr/include/c++/5/bits/basic_string.h ****     inline bool
4904:/usr/include/c++/5/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4905:/usr/include/c++/5/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4906:/usr/include/c++/5/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
4907:/usr/include/c++/5/bits/basic_string.h **** 
4908:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT>
4909:/usr/include/c++/5/bits/basic_string.h ****     inline
4910:/usr/include/c++/5/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
4911:/usr/include/c++/5/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
4912:/usr/include/c++/5/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs)
4913:/usr/include/c++/5/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
4914:/usr/include/c++/5/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
4915:/usr/include/c++/5/bits/basic_string.h **** 						    __lhs.size())); }
4916:/usr/include/c++/5/bits/basic_string.h **** 
4917:/usr/include/c++/5/bits/basic_string.h ****   /**
4918:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
4919:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  C string.
4920:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  String.
4921:/usr/include/c++/5/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
4922:/usr/include/c++/5/bits/basic_string.h ****    */
4923:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4924:/usr/include/c++/5/bits/basic_string.h ****     inline bool
4925:/usr/include/c++/5/bits/basic_string.h ****     operator==(const _CharT* __lhs,
4926:/usr/include/c++/5/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4927:/usr/include/c++/5/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
4928:/usr/include/c++/5/bits/basic_string.h **** 
4929:/usr/include/c++/5/bits/basic_string.h ****   /**
4930:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
4931:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  String.
4932:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  C string.
4933:/usr/include/c++/5/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
4934:/usr/include/c++/5/bits/basic_string.h ****    */
4935:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4936:/usr/include/c++/5/bits/basic_string.h ****     inline bool
4937:/usr/include/c++/5/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 1481              		.loc 11 4937 0
 1482              		.cfi_startproc
 1483 0000 55       		pushq	%rbp
 1484              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccX8BQhk.s 			page 157


 1485              		.cfi_offset 6, -16
 1486 0001 4889E5   		movq	%rsp, %rbp
 1487              		.cfi_def_cfa_register 6
 1488 0004 4883EC10 		subq	$16, %rsp
 1489 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1490 000c 488975F0 		movq	%rsi, -16(%rbp)
4938:/usr/include/c++/5/bits/basic_string.h **** 	       const _CharT* __rhs)
4939:/usr/include/c++/5/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
 1491              		.loc 11 4939 0
 1492 0010 488B55F0 		movq	-16(%rbp), %rdx
 1493 0014 488B45F8 		movq	-8(%rbp), %rax
 1494 0018 4889D6   		movq	%rdx, %rsi
 1495 001b 4889C7   		movq	%rax, %rdi
 1496 001e E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 1496      00
 1497 0023 85C0     		testl	%eax, %eax
 1498 0025 0F94C0   		sete	%al
 1499 0028 C9       		leave
 1500              		.cfi_def_cfa 7, 8
 1501 0029 C3       		ret
 1502              		.cfi_endproc
 1503              	.LFE9899:
 1505              		.section	.text._ZN5boost9algorithm11replace_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 1506              		.weak	_ZN5boost9algorithm11replace_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEA2_cS8_
 1508              	_ZN5boost9algorithm11replace_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEA2_cS8_EEvRT_R
 1509              	.LFB9903:
 1510              		.file 12 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  Boost string_algo library replace.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  Copyright Pavol Droba 2002-2006.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #ifndef BOOST_STRING_REPLACE_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #define BOOST_STRING_REPLACE_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/algorithm/string/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/range/iterator_range_core.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/range/begin.hpp>
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/range/end.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/range/iterator.hpp>
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/range/const_iterator.hpp>
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/algorithm/string/find_format.hpp>
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/algorithm/string/finder.hpp>
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/algorithm/string/formatter.hpp>
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** #include <boost/algorithm/string/compare.hpp>
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** /*! \file
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****     Defines various replace algorithms. Each algorithm replaces
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****     part(s) of the input according to set of searching and replace criteria.
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** */
GAS LISTING /tmp/ccX8BQhk.s 			page 158


  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** namespace boost {
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****     namespace algorithm {
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  replace_range --------------------------------------------------------------------//
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace range algorithm
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace the given range in the input string.
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             or copied to the output iterator.
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Output An output iterator to which the result will be copied
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param SearchRange A range in the input to be substituted
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return An output iterator pointing just after the last inserted character or
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 a modified copy of the input
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****               \note The second variant of this function provides the strong exception-safety guaran
  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename OutputIteratorT,
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range1T, 
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range2T>
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline OutputIteratorT replace_range_copy(
  57:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             OutputIteratorT Output,
  58:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Input,
  59:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const iterator_range<
  60:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 BOOST_STRING_TYPENAME 
  61:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                     range_const_iterator<Range1T>::type>& SearchRange,
  62:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format)
  63:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
  64:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy(
  65:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Output,
  66:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
  67:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::range_finder(SearchRange),
  68:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format));
  69:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
  70:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  71:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace range algorithm
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
  73:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \overload
  74:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
  75:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename RangeT>
  76:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline SequenceT replace_range_copy( 
  77:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const SequenceT& Input,
  78:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const iterator_range<
  79:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 BOOST_STRING_TYPENAME 
  80:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                     range_const_iterator<SequenceT>::type>& SearchRange,
  81:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const RangeT& Format)
  82:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
  83:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy(
  84:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
  85:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::range_finder(SearchRange),
  86:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format));
  87:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
GAS LISTING /tmp/ccX8BQhk.s 			page 159


  88:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  89:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace range algorithm
  90:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
  91:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace the given range in the input string. 
  92:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             The input sequence is modified in-place.
  93:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
  94:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
  95:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param SearchRange A range in the input to be substituted
  96:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
  97:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
  98:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename RangeT>
  99:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline void replace_range( 
 100:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             SequenceT& Input,
 101:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const iterator_range<
 102:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 BOOST_STRING_TYPENAME 
 103:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                     range_iterator<SequenceT>::type>& SearchRange,
 104:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const RangeT& Format)
 105:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 106:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             ::boost::algorithm::find_format(
 107:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 108:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::range_finder(SearchRange),
 109:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format));
 110:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 111:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 112:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  replace_first --------------------------------------------------------------------//
 113:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 114:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace first algorithm
 115:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 116:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace the first match of the search substring in the input 
 117:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. 
 118:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
 119:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             or copied to the output iterator.
 120:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             
 121:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Output An output iterator to which the result will be copied
 122:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 123:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 124:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 125:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return An output iterator pointing just after the last inserted character or
 126:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                     a modified copy of the input
 127:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 128:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****               \note The second variant of this function provides the strong exception-safety guaran
 129:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 130:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<
 131:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename OutputIteratorT,
 132:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range1T, 
 133:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range2T,
 134:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range3T>
 135:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline OutputIteratorT replace_first_copy(
 136:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             OutputIteratorT Output,
 137:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Input,
 138:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Search,
 139:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range3T& Format)
 140:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 141:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy(
 142:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Output,
 143:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 144:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::first_finder(Search),
GAS LISTING /tmp/ccX8BQhk.s 			page 160


 145:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 146:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 147:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 148:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace first algorithm
 149:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 150:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \overload
 151:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 152:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 153:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline SequenceT replace_first_copy( 
 154:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const SequenceT& Input,
 155:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 156:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format )
 157:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 158:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy( 
 159:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 160:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::first_finder(Search),
 161:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 162:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 163:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 164:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace first algorithm
 165:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 166:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             replace the first match of the search substring in the input 
 167:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. The input sequence is modified in-place.
 168:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 169:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 170:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 171:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 172:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 173:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 174:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline void replace_first( 
 175:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             SequenceT& Input,
 176:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 177:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format )
 178:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 179:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             ::boost::algorithm::find_format( 
 180:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input, 
 181:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::first_finder(Search),
 182:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 183:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 184:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 185:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  replace_first ( case insensitive ) ---------------------------------------------//
 186:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 187:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace first algorithm ( case insensitive )
 188:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 189:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace the first match of the search substring in the input 
 190:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. 
 191:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
 192:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             or copied to the output iterator.
 193:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Searching is case insensitive.
 194:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 195:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Output An output iterator to which the result will be copied
 196:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 197:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 198:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 199:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Loc A locale used for case insensitive comparison
 200:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return An output iterator pointing just after the last inserted character or
 201:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 a modified copy of the input
GAS LISTING /tmp/ccX8BQhk.s 			page 161


 202:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 203:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****              \note The second variant of this function provides the strong exception-safety guarant
 204:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 205:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<
 206:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename OutputIteratorT,
 207:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range1T, 
 208:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range2T,
 209:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range3T>
 210:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline OutputIteratorT ireplace_first_copy(
 211:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             OutputIteratorT Output,
 212:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Input,
 213:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Search,
 214:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range3T& Format,
 215:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const std::locale& Loc=std::locale() )
 216:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 217:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy(
 218:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Output,
 219:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 220:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::first_finder(Search, is_iequal(Loc)),
 221:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 222:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 223:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 224:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace first algorithm ( case insensitive )
 225:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 226:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \overload
 227:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 228:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range2T, typename Range1T>
 229:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline SequenceT ireplace_first_copy( 
 230:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const SequenceT& Input,
 231:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Search,
 232:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Format,
 233:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const std::locale& Loc=std::locale() )
 234:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 235:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy( 
 236:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 237:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::first_finder(Search, is_iequal(Loc)),
 238:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 239:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 240:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 241:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace first algorithm ( case insensitive )
 242:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 243:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace the first match of the search substring in the input 
 244:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. Input sequence is modified in-place.
 245:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Searching is case insensitive.
 246:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 247:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 248:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 249:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 250:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Loc A locale used for case insensitive comparison
 251:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 252:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 253:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline void ireplace_first( 
 254:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             SequenceT& Input,
 255:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 256:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format,
 257:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const std::locale& Loc=std::locale() )
 258:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
GAS LISTING /tmp/ccX8BQhk.s 			page 162


 259:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             ::boost::algorithm::find_format( 
 260:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input, 
 261:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::first_finder(Search, is_iequal(Loc)),
 262:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 263:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 264:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 265:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  replace_last --------------------------------------------------------------------//
 266:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 267:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace last algorithm
 268:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 269:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace the last match of the search string in the input 
 270:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. 
 271:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
 272:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             or copied to the output iterator.
 273:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 274:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Output An output iterator to which the result will be copied
 275:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 276:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for
 277:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 278:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return An output iterator pointing just after the last inserted character or
 279:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                     a modified copy of the input            
 280:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 281:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****               \note The second variant of this function provides the strong exception-safety guaran
 282:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 283:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<
 284:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename OutputIteratorT,
 285:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range1T, 
 286:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range2T,
 287:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range3T>
 288:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline OutputIteratorT replace_last_copy(
 289:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             OutputIteratorT Output,
 290:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Input,
 291:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Search,
 292:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range3T& Format )
 293:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 294:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy(
 295:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Output,
 296:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 297:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::last_finder(Search),
 298:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 299:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 300:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 301:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace last algorithm
 302:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 303:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \overload
 304:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 305:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 306:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline SequenceT replace_last_copy( 
 307:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const SequenceT& Input,
 308:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 309:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format )
 310:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 311:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy( 
 312:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 313:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::last_finder(Search),
 314:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 315:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
GAS LISTING /tmp/ccX8BQhk.s 			page 163


 316:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 317:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace last algorithm
 318:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 319:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace the last match of the search string in the input 
 320:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. Input sequence is modified in-place.
 321:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 322:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 323:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 324:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 325:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 326:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 327:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline void replace_last( 
 328:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             SequenceT& Input,
 329:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 330:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format )
 331:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 332:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             ::boost::algorithm::find_format( 
 333:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input, 
 334:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::last_finder(Search),
 335:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 336:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 337:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 338:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  replace_last ( case insensitive ) -----------------------------------------------//
 339:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 340:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace last algorithm ( case insensitive )
 341:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 342:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace the last match of the search string in the input 
 343:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. 
 344:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
 345:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             or copied to the output iterator.
 346:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Searching is case insensitive.
 347:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 348:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Output An output iterator to which the result will be copied
 349:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 350:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 351:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 352:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Loc A locale used for case insensitive comparison
 353:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return An output iterator pointing just after the last inserted character or
 354:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                     a modified copy of the input  
 355:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 356:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \note The second variant of this function provides the strong exception-safety guarante
 357:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 358:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<
 359:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename OutputIteratorT,
 360:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range1T, 
 361:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range2T,
 362:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range3T>
 363:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline OutputIteratorT ireplace_last_copy(
 364:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             OutputIteratorT Output,
 365:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Input,
 366:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Search,
 367:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range3T& Format,
 368:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const std::locale& Loc=std::locale() )
 369:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 370:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy(
 371:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Output,
 372:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
GAS LISTING /tmp/ccX8BQhk.s 			page 164


 373:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::last_finder(Search, is_iequal(Loc)),
 374:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 375:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 376:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 377:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace last algorithm ( case insensitive )
 378:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 379:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \overload
 380:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 381:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 382:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline SequenceT ireplace_last_copy( 
 383:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const SequenceT& Input,
 384:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 385:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format,
 386:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const std::locale& Loc=std::locale() )
 387:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 388:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy( 
 389:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 390:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::last_finder(Search, is_iequal(Loc)),
 391:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 392:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 393:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 394:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace last algorithm ( case insensitive )
 395:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 396:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace the last match of the search string in the input 
 397:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string.The input sequence is modified in-place.
 398:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Searching is case insensitive.
 399:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 400:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 401:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 402:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 403:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Loc A locale used for case insensitive comparison
 404:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return A reference to the modified input
 405:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 406:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 407:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline void ireplace_last( 
 408:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             SequenceT& Input,
 409:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 410:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format,
 411:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const std::locale& Loc=std::locale() )
 412:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 413:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             ::boost::algorithm::find_format( 
 414:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input, 
 415:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::last_finder(Search, is_iequal(Loc)),
 416:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 417:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 418:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 419:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  replace_nth --------------------------------------------------------------------//
 420:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 421:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace nth algorithm
 422:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 423:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace an Nth (zero-indexed) match of the search string in the input 
 424:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. 
 425:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
 426:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             or copied to the output iterator.
 427:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 428:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Output An output iterator to which the result will be copied
 429:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
GAS LISTING /tmp/ccX8BQhk.s 			page 165


 430:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 431:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Nth An index of the match to be replaced. The index is 0-based.
 432:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 For negative N, matches are counted from the end of string.
 433:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 434:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return An output iterator pointing just after the last inserted character or
 435:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 a modified copy of the input
 436:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 437:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \note The second variant of this function provides the strong exception-safety guarante
 438:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 439:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<
 440:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename OutputIteratorT,
 441:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range1T, 
 442:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range2T,
 443:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range3T>
 444:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline OutputIteratorT replace_nth_copy(
 445:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             OutputIteratorT Output,
 446:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Input,
 447:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Search,
 448:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             int Nth,
 449:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range3T& Format )
 450:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 451:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy(
 452:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Output,
 453:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 454:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::nth_finder(Search, Nth),
 455:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 456:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 457:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 458:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace nth algorithm
 459:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 460:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \overload
 461:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 462:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 463:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline SequenceT replace_nth_copy( 
 464:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const SequenceT& Input,
 465:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 466:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             int Nth,
 467:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format )
 468:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 469:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy( 
 470:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 471:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::nth_finder(Search, Nth),
 472:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 473:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 474:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 475:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace nth algorithm
 476:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 477:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace an Nth (zero-indexed) match of the search string in the input 
 478:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. Input sequence is modified in-place.
 479:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 480:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 481:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 482:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Nth An index of the match to be replaced. The index is 0-based.
 483:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 For negative N, matches are counted from the end of string.
 484:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 485:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 486:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
GAS LISTING /tmp/ccX8BQhk.s 			page 166


 487:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline void replace_nth( 
 488:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             SequenceT& Input,
 489:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 490:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             int Nth,
 491:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format )
 492:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 493:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             ::boost::algorithm::find_format( 
 494:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input, 
 495:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::nth_finder(Search, Nth),
 496:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 497:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 498:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 499:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  replace_nth ( case insensitive ) -----------------------------------------------//
 500:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         
 501:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace nth algorithm ( case insensitive )
 502:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 503:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace an Nth (zero-indexed) match of the search string in the input 
 504:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. 
 505:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
 506:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             or copied to the output iterator.
 507:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Searching is case insensitive.
 508:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 509:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Output An output iterator to which the result will be copied
 510:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 511:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 512:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Nth An index of the match to be replaced. The index is 0-based.
 513:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 For negative N, matches are counted from the end of string.
 514:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 515:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Loc A locale used for case insensitive comparison
 516:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return An output iterator pointing just after the last inserted character or
 517:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                     a modified copy of the input            
 518:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 519:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \note The second variant of this function provides the strong exception-safety guarante
 520:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****        */
 521:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<
 522:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename OutputIteratorT,
 523:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range1T, 
 524:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range2T,
 525:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range3T>
 526:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline OutputIteratorT ireplace_nth_copy(
 527:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             OutputIteratorT Output,
 528:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Input,
 529:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Search,
 530:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             int Nth,
 531:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range3T& Format,
 532:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const std::locale& Loc=std::locale() )
 533:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 534:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy(
 535:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Output,
 536:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 537:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::nth_finder(Search, Nth, is_iequal(Loc) ),
 538:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 539:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 540:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 541:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace nth algorithm ( case insensitive )
 542:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 543:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \overload
GAS LISTING /tmp/ccX8BQhk.s 			page 167


 544:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 545:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 546:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline SequenceT ireplace_nth_copy( 
 547:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const SequenceT& Input,
 548:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 549:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             int Nth,
 550:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format,
 551:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const std::locale& Loc=std::locale() )
 552:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 553:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_copy( 
 554:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 555:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::nth_finder(Search, Nth, is_iequal(Loc)),
 556:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 557:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 558:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 559:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace nth algorithm ( case insensitive )
 560:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 561:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace an Nth (zero-indexed) match of the search string in the input 
 562:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. Input sequence is modified in-place.
 563:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Searching is case insensitive.
 564:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 565:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 566:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 567:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Nth An index of the match to be replaced. The index is 0-based.
 568:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 For negative N, matches are counted from the end of string.
 569:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 570:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Loc A locale used for case insensitive comparison
 571:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 572:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 573:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline void ireplace_nth( 
 574:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             SequenceT& Input,
 575:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 576:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             int Nth,
 577:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format,
 578:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const std::locale& Loc=std::locale() )
 579:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 580:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             ::boost::algorithm::find_format( 
 581:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input, 
 582:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::nth_finder(Search, Nth, is_iequal(Loc)),
 583:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 584:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 585:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 586:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** //  replace_all --------------------------------------------------------------------//
 587:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 588:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace all algorithm
 589:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 590:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace all occurrences of the search string in the input 
 591:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. 
 592:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
 593:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             or copied to the output iterator.
 594:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 595:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Output An output iterator to which the result will be copied
 596:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 597:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 598:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 599:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return An output iterator pointing just after the last inserted character or
 600:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                     a modified copy of the input 
GAS LISTING /tmp/ccX8BQhk.s 			page 168


 601:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 602:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****              \note The second variant of this function provides the strong exception-safety guarant
 603:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 604:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<
 605:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename OutputIteratorT,
 606:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range1T, 
 607:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range2T,
 608:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             typename Range3T>
 609:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline OutputIteratorT replace_all_copy(
 610:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             OutputIteratorT Output,
 611:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Input,
 612:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Search,
 613:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range3T& Format )
 614:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 615:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_all_copy(
 616:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Output,
 617:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 618:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::first_finder(Search),
 619:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 620:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 621:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 622:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace all algorithm
 623:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 624:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \overload
 625:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 626:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 627:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline SequenceT replace_all_copy( 
 628:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const SequenceT& Input,
 629:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 630:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format )
 631:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 632:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             return ::boost::algorithm::find_format_all_copy( 
 633:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input,
 634:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::first_finder(Search),
 635:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 636:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 637:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 638:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         //! Replace all algorithm
 639:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         /*!
 640:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             Replace all occurrences of the search string in the input 
 641:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             with the format string. The input sequence is modified in-place.
 642:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp **** 
 643:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Input An input string
 644:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Search A substring to be searched for 
 645:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \param Format A substitute string
 646:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             \return A reference to the modified input
 647:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         */
 648:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         template<typename SequenceT, typename Range1T, typename Range2T>
 649:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         inline void replace_all( 
 1511              		.loc 12 649 0
 1512              		.cfi_startproc
 1513 0000 55       		pushq	%rbp
 1514              		.cfi_def_cfa_offset 16
 1515              		.cfi_offset 6, -16
 1516 0001 4889E5   		movq	%rsp, %rbp
 1517              		.cfi_def_cfa_register 6
 1518 0004 4155     		pushq	%r13
GAS LISTING /tmp/ccX8BQhk.s 			page 169


 1519 0006 4154     		pushq	%r12
 1520 0008 53       		pushq	%rbx
 1521 0009 4883EC48 		subq	$72, %rsp
 1522              		.cfi_offset 13, -24
 1523              		.cfi_offset 12, -32
 1524              		.cfi_offset 3, -40
 1525 000d 48897DB8 		movq	%rdi, -72(%rbp)
 1526 0011 488975B0 		movq	%rsi, -80(%rbp)
 1527 0015 488955A8 		movq	%rdx, -88(%rbp)
 1528              		.loc 12 649 0
 1529 0019 64488B04 		movq	%fs:40, %rax
 1529      25280000 
 1529      00
 1530 0022 488945D8 		movq	%rax, -40(%rbp)
 1531 0026 31C0     		xorl	%eax, %eax
 650:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             SequenceT& Input,
 651:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range1T& Search,
 652:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             const Range2T& Format )
 653:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         {
 654:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****             ::boost::algorithm::find_format_all( 
 1532              		.loc 12 654 0
 1533 0028 488B45A8 		movq	-88(%rbp), %rax
 1534 002c 4889C7   		movq	%rax, %rdi
 1535 002f E8000000 		call	_ZN5boost9algorithm15const_formatterIA2_cEENS0_6detail13const_formatFINS_14iterator_rangeINS_
 1535      00
 1536 0034 4989C4   		movq	%rax, %r12
 1537 0037 4989D5   		movq	%rdx, %r13
 1538 003a 488D45C0 		leaq	-64(%rbp), %rax
 1539 003e 488B55B0 		movq	-80(%rbp), %rdx
 1540 0042 4889D6   		movq	%rdx, %rsi
 1541 0045 4889C7   		movq	%rax, %rdi
 1542 0048 E8000000 		call	_ZN5boost9algorithm12first_finderIA2_cEENS0_6detail13first_finderFINS_20range_const_iteratorI
 1542      00
 1543 004d 4C89E1   		movq	%r12, %rcx
 1544 0050 4C89EB   		movq	%r13, %rbx
 1545 0053 4C89E0   		movq	%r12, %rax
 1546 0056 4C89EA   		movq	%r13, %rdx
 1547 0059 488B45B8 		movq	-72(%rbp), %rax
 1548 005d 4883EC08 		subq	$8, %rsp
 1549 0061 FF75D0   		pushq	-48(%rbp)
 1550 0064 FF75C8   		pushq	-56(%rbp)
 1551 0067 FF75C0   		pushq	-64(%rbp)
 1552 006a 4889CE   		movq	%rcx, %rsi
 1553 006d 4889C7   		movq	%rax, %rdi
 1554 0070 E8000000 		call	_ZN5boost9algorithm15find_format_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_
 1554      00
 1555 0075 4883C420 		addq	$32, %rsp
 655:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 Input, 
 656:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::first_finder(Search),
 657:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****                 ::boost::algorithm::const_formatter(Format) );
 658:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/replace.hpp ****         }
 1556              		.loc 12 658 0
 1557 0079 90       		nop
 1558 007a 488B45D8 		movq	-40(%rbp), %rax
 1559 007e 64483304 		xorq	%fs:40, %rax
 1559      25280000 
 1559      00
GAS LISTING /tmp/ccX8BQhk.s 			page 170


 1560 0087 7405     		je	.L79
 1561 0089 E8000000 		call	__stack_chk_fail
 1561      00
 1562              	.L79:
 1563 008e 488D65E8 		leaq	-24(%rbp), %rsp
 1564 0092 5B       		popq	%rbx
 1565 0093 415C     		popq	%r12
 1566 0095 415D     		popq	%r13
 1567 0097 5D       		popq	%rbp
 1568              		.cfi_def_cfa 7, 8
 1569 0098 C3       		ret
 1570              		.cfi_endproc
 1571              	.LFE9903:
 1573              		.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_,"axG",
 1574              		.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
 1576              	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_:
 1577              	.LFB9904:
4783:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 1578              		.loc 11 4783 0
 1579              		.cfi_startproc
 1580              		.cfi_personality 0x3,__gxx_personality_v0
 1581              		.cfi_lsda 0x3,.LLSDA9904
 1582 0000 55       		pushq	%rbp
 1583              		.cfi_def_cfa_offset 16
 1584              		.cfi_offset 6, -16
 1585 0001 4889E5   		movq	%rsp, %rbp
 1586              		.cfi_def_cfa_register 6
 1587 0004 53       		pushq	%rbx
 1588 0005 4883EC38 		subq	$56, %rsp
 1589              		.cfi_offset 3, -24
 1590 0009 48897DD8 		movq	%rdi, -40(%rbp)
 1591 000d 488975D0 		movq	%rsi, -48(%rbp)
 1592 0011 488955C8 		movq	%rdx, -56(%rbp)
4783:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 1593              		.loc 11 4783 0
 1594 0015 64488B04 		movq	%fs:40, %rax
 1594      25280000 
 1594      00
 1595 001e 488945E8 		movq	%rax, -24(%rbp)
 1596 0022 31C0     		xorl	%eax, %eax
4786:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__rhs);
 1597              		.loc 11 4786 0
 1598 0024 488B55D0 		movq	-48(%rbp), %rdx
 1599 0028 488B45D8 		movq	-40(%rbp), %rax
 1600 002c 4889D6   		movq	%rdx, %rsi
 1601 002f 4889C7   		movq	%rax, %rdi
 1602              	.LEHB17:
 1603 0032 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
 1603      00
 1604              	.LEHE17:
4787:/usr/include/c++/5/bits/basic_string.h ****       return __str;
 1605              		.loc 11 4787 0
 1606 0037 488B55C8 		movq	-56(%rbp), %rdx
 1607 003b 488B45D8 		movq	-40(%rbp), %rax
 1608 003f 4889D6   		movq	%rdx, %rsi
 1609 0042 4889C7   		movq	%rax, %rdi
 1610              	.LEHB18:
GAS LISTING /tmp/ccX8BQhk.s 			page 171


 1611 0045 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_
 1611      00
 1612              	.LEHE18:
4788:/usr/include/c++/5/bits/basic_string.h ****     }
 1613              		.loc 11 4788 0
 1614 004a EB1A     		jmp	.L85
 1615              	.L84:
 1616 004c 4889C3   		movq	%rax, %rbx
 1617 004f 488B45D8 		movq	-40(%rbp), %rax
 1618 0053 4889C7   		movq	%rax, %rdi
 1619 0056 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 1619      00
 1620 005b 4889D8   		movq	%rbx, %rax
 1621 005e 4889C7   		movq	%rax, %rdi
 1622              	.LEHB19:
 1623 0061 E8000000 		call	_Unwind_Resume
 1623      00
 1624              	.LEHE19:
 1625              	.L85:
4789:/usr/include/c++/5/bits/basic_string.h **** 
 1626              		.loc 11 4789 0
 1627 0066 488B45D8 		movq	-40(%rbp), %rax
 1628 006a 488B4DE8 		movq	-24(%rbp), %rcx
 1629 006e 6448330C 		xorq	%fs:40, %rcx
 1629      25280000 
 1629      00
 1630 0077 7405     		je	.L83
 1631 0079 E8000000 		call	__stack_chk_fail
 1631      00
 1632              	.L83:
 1633 007e 4883C438 		addq	$56, %rsp
 1634 0082 5B       		popq	%rbx
 1635 0083 5D       		popq	%rbp
 1636              		.cfi_def_cfa 7, 8
 1637 0084 C3       		ret
 1638              		.cfi_endproc
 1639              	.LFE9904:
 1640              		.section	.gcc_except_table
 1641              	.LLSDA9904:
 1642 0055 FF       		.byte	0xff
 1643 0056 FF       		.byte	0xff
 1644 0057 01       		.byte	0x1
 1645 0058 0C       		.uleb128 .LLSDACSE9904-.LLSDACSB9904
 1646              	.LLSDACSB9904:
 1647 0059 32       		.uleb128 .LEHB17-.LFB9904
 1648 005a 05       		.uleb128 .LEHE17-.LEHB17
 1649 005b 00       		.uleb128 0
 1650 005c 00       		.uleb128 0
 1651 005d 45       		.uleb128 .LEHB18-.LFB9904
 1652 005e 05       		.uleb128 .LEHE18-.LEHB18
 1653 005f 4C       		.uleb128 .L84-.LFB9904
 1654 0060 00       		.uleb128 0
 1655 0061 61       		.uleb128 .LEHB19-.LFB9904
 1656 0062 05       		.uleb128 .LEHE19-.LEHB19
 1657 0063 00       		.uleb128 0
 1658 0064 00       		.uleb128 0
 1659              	.LLSDACSE9904:
GAS LISTING /tmp/ccX8BQhk.s 			page 172


 1660              		.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_,"axG",
 1662              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 1663              		.align 2
 1664              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2I
 1666              	_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKN
 1667              	.LFB9970:
 1668              		.file 13 "/usr/include/c++/5/bits/stl_iterator.h"
   1:/usr/include/c++/5/bits/stl_iterator.h **** // Iterators -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_iterator.h **** 
   3:/usr/include/c++/5/bits/stl_iterator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_iterator.h **** //
   5:/usr/include/c++/5/bits/stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_iterator.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_iterator.h **** 
  11:/usr/include/c++/5/bits/stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_iterator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_iterator.h **** 
  16:/usr/include/c++/5/bits/stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_iterator.h **** 
  20:/usr/include/c++/5/bits/stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_iterator.h **** 
  25:/usr/include/c++/5/bits/stl_iterator.h **** /*
  26:/usr/include/c++/5/bits/stl_iterator.h ****  *
  27:/usr/include/c++/5/bits/stl_iterator.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_iterator.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_iterator.h ****  *
  30:/usr/include/c++/5/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_iterator.h ****  *
  38:/usr/include/c++/5/bits/stl_iterator.h ****  *
  39:/usr/include/c++/5/bits/stl_iterator.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_iterator.h ****  *
  42:/usr/include/c++/5/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_iterator.h ****  */
  50:/usr/include/c++/5/bits/stl_iterator.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 173


  51:/usr/include/c++/5/bits/stl_iterator.h **** /** @file bits/stl_iterator.h
  52:/usr/include/c++/5/bits/stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/5/bits/stl_iterator.h ****  *
  55:/usr/include/c++/5/bits/stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:/usr/include/c++/5/bits/stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:/usr/include/c++/5/bits/stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:/usr/include/c++/5/bits/stl_iterator.h ****  */
  59:/usr/include/c++/5/bits/stl_iterator.h **** 
  60:/usr/include/c++/5/bits/stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:/usr/include/c++/5/bits/stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:/usr/include/c++/5/bits/stl_iterator.h **** 
  63:/usr/include/c++/5/bits/stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:/usr/include/c++/5/bits/stl_iterator.h **** #include <ext/type_traits.h>
  65:/usr/include/c++/5/bits/stl_iterator.h **** #include <bits/move.h>
  66:/usr/include/c++/5/bits/stl_iterator.h **** #include <bits/ptr_traits.h>
  67:/usr/include/c++/5/bits/stl_iterator.h **** 
  68:/usr/include/c++/5/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  69:/usr/include/c++/5/bits/stl_iterator.h **** {
  70:/usr/include/c++/5/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  71:/usr/include/c++/5/bits/stl_iterator.h **** 
  72:/usr/include/c++/5/bits/stl_iterator.h ****   /**
  73:/usr/include/c++/5/bits/stl_iterator.h ****    * @addtogroup iterators
  74:/usr/include/c++/5/bits/stl_iterator.h ****    * @{
  75:/usr/include/c++/5/bits/stl_iterator.h ****    */
  76:/usr/include/c++/5/bits/stl_iterator.h **** 
  77:/usr/include/c++/5/bits/stl_iterator.h ****   // 24.4.1 Reverse iterators
  78:/usr/include/c++/5/bits/stl_iterator.h ****   /**
  79:/usr/include/c++/5/bits/stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  80:/usr/include/c++/5/bits/stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  81:/usr/include/c++/5/bits/stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  82:/usr/include/c++/5/bits/stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  83:/usr/include/c++/5/bits/stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  84:/usr/include/c++/5/bits/stl_iterator.h ****    *  @code
  85:/usr/include/c++/5/bits/stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  86:/usr/include/c++/5/bits/stl_iterator.h ****    *  @endcode
  87:/usr/include/c++/5/bits/stl_iterator.h ****    *
  88:/usr/include/c++/5/bits/stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  89:/usr/include/c++/5/bits/stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  90:/usr/include/c++/5/bits/stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  91:/usr/include/c++/5/bits/stl_iterator.h ****    *
  92:/usr/include/c++/5/bits/stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
  93:/usr/include/c++/5/bits/stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
  94:/usr/include/c++/5/bits/stl_iterator.h ****    *  the requirement that the iterators must be safe.
  95:/usr/include/c++/5/bits/stl_iterator.h ****   */
  96:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
  97:/usr/include/c++/5/bits/stl_iterator.h ****     class reverse_iterator
  98:/usr/include/c++/5/bits/stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
  99:/usr/include/c++/5/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 100:/usr/include/c++/5/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 101:/usr/include/c++/5/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 102:/usr/include/c++/5/bits/stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 103:/usr/include/c++/5/bits/stl_iterator.h ****     {
 104:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 105:/usr/include/c++/5/bits/stl_iterator.h ****       _Iterator current;
 106:/usr/include/c++/5/bits/stl_iterator.h **** 
 107:/usr/include/c++/5/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
GAS LISTING /tmp/ccX8BQhk.s 			page 174


 108:/usr/include/c++/5/bits/stl_iterator.h **** 
 109:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 110:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 111:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 112:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 113:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 114:/usr/include/c++/5/bits/stl_iterator.h **** 
 115:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 116:/usr/include/c++/5/bits/stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 117:/usr/include/c++/5/bits/stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 118:/usr/include/c++/5/bits/stl_iterator.h ****       */
 119:/usr/include/c++/5/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/5/bits/stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 121:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator() : current() { }
 122:/usr/include/c++/5/bits/stl_iterator.h **** 
 123:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 124:/usr/include/c++/5/bits/stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 125:/usr/include/c++/5/bits/stl_iterator.h ****       */
 126:/usr/include/c++/5/bits/stl_iterator.h ****       explicit
 127:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 128:/usr/include/c++/5/bits/stl_iterator.h **** 
 129:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 130:/usr/include/c++/5/bits/stl_iterator.h ****        *  The copy constructor is normal.
 131:/usr/include/c++/5/bits/stl_iterator.h ****       */
 132:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 133:/usr/include/c++/5/bits/stl_iterator.h ****       : current(__x.current) { }
 134:/usr/include/c++/5/bits/stl_iterator.h **** 
 135:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 136:/usr/include/c++/5/bits/stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 137:/usr/include/c++/5/bits/stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 138:/usr/include/c++/5/bits/stl_iterator.h ****       */
 139:/usr/include/c++/5/bits/stl_iterator.h ****       template<typename _Iter>
 140:/usr/include/c++/5/bits/stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 141:/usr/include/c++/5/bits/stl_iterator.h **** 	: current(__x.base()) { }
 142:/usr/include/c++/5/bits/stl_iterator.h **** 
 143:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 144:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 145:/usr/include/c++/5/bits/stl_iterator.h ****       */
 146:/usr/include/c++/5/bits/stl_iterator.h ****       iterator_type
 147:/usr/include/c++/5/bits/stl_iterator.h ****       base() const
 148:/usr/include/c++/5/bits/stl_iterator.h ****       { return current; }
 149:/usr/include/c++/5/bits/stl_iterator.h **** 
 150:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 151:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A reference to the value at @c --current
 152:/usr/include/c++/5/bits/stl_iterator.h ****        *
 153:/usr/include/c++/5/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 154:/usr/include/c++/5/bits/stl_iterator.h ****        *
 155:/usr/include/c++/5/bits/stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 156:/usr/include/c++/5/bits/stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 157:/usr/include/c++/5/bits/stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 158:/usr/include/c++/5/bits/stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 159:/usr/include/c++/5/bits/stl_iterator.h ****       */
 160:/usr/include/c++/5/bits/stl_iterator.h ****       reference
 161:/usr/include/c++/5/bits/stl_iterator.h ****       operator*() const
 162:/usr/include/c++/5/bits/stl_iterator.h ****       {
 163:/usr/include/c++/5/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 164:/usr/include/c++/5/bits/stl_iterator.h **** 	return *--__tmp;
GAS LISTING /tmp/ccX8BQhk.s 			page 175


 165:/usr/include/c++/5/bits/stl_iterator.h ****       }
 166:/usr/include/c++/5/bits/stl_iterator.h **** 
 167:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 168:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 169:/usr/include/c++/5/bits/stl_iterator.h ****        *
 170:/usr/include/c++/5/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 171:/usr/include/c++/5/bits/stl_iterator.h ****       */
 172:/usr/include/c++/5/bits/stl_iterator.h ****       pointer
 173:/usr/include/c++/5/bits/stl_iterator.h ****       operator->() const
 174:/usr/include/c++/5/bits/stl_iterator.h ****       { return &(operator*()); }
 175:/usr/include/c++/5/bits/stl_iterator.h **** 
 176:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 177:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  @c *this
 178:/usr/include/c++/5/bits/stl_iterator.h ****        *
 179:/usr/include/c++/5/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 180:/usr/include/c++/5/bits/stl_iterator.h ****       */
 181:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator&
 182:/usr/include/c++/5/bits/stl_iterator.h ****       operator++()
 183:/usr/include/c++/5/bits/stl_iterator.h ****       {
 184:/usr/include/c++/5/bits/stl_iterator.h **** 	--current;
 185:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 186:/usr/include/c++/5/bits/stl_iterator.h ****       }
 187:/usr/include/c++/5/bits/stl_iterator.h **** 
 188:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 189:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  The original value of @c *this
 190:/usr/include/c++/5/bits/stl_iterator.h ****        *
 191:/usr/include/c++/5/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 192:/usr/include/c++/5/bits/stl_iterator.h ****       */
 193:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator
 194:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int)
 195:/usr/include/c++/5/bits/stl_iterator.h ****       {
 196:/usr/include/c++/5/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 197:/usr/include/c++/5/bits/stl_iterator.h **** 	--current;
 198:/usr/include/c++/5/bits/stl_iterator.h **** 	return __tmp;
 199:/usr/include/c++/5/bits/stl_iterator.h ****       }
 200:/usr/include/c++/5/bits/stl_iterator.h **** 
 201:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 202:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  @c *this
 203:/usr/include/c++/5/bits/stl_iterator.h ****        *
 204:/usr/include/c++/5/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 205:/usr/include/c++/5/bits/stl_iterator.h ****       */
 206:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator&
 207:/usr/include/c++/5/bits/stl_iterator.h ****       operator--()
 208:/usr/include/c++/5/bits/stl_iterator.h ****       {
 209:/usr/include/c++/5/bits/stl_iterator.h **** 	++current;
 210:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 211:/usr/include/c++/5/bits/stl_iterator.h ****       }
 212:/usr/include/c++/5/bits/stl_iterator.h **** 
 213:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 214:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 215:/usr/include/c++/5/bits/stl_iterator.h ****        *
 216:/usr/include/c++/5/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 217:/usr/include/c++/5/bits/stl_iterator.h ****       */
 218:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator
 219:/usr/include/c++/5/bits/stl_iterator.h ****       operator--(int)
 220:/usr/include/c++/5/bits/stl_iterator.h ****       {
 221:/usr/include/c++/5/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
GAS LISTING /tmp/ccX8BQhk.s 			page 176


 222:/usr/include/c++/5/bits/stl_iterator.h **** 	++current;
 223:/usr/include/c++/5/bits/stl_iterator.h **** 	return __tmp;
 224:/usr/include/c++/5/bits/stl_iterator.h ****       }
 225:/usr/include/c++/5/bits/stl_iterator.h **** 
 226:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 227:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 228:/usr/include/c++/5/bits/stl_iterator.h ****        *
 229:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 230:/usr/include/c++/5/bits/stl_iterator.h ****       */
 231:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator
 232:/usr/include/c++/5/bits/stl_iterator.h ****       operator+(difference_type __n) const
 233:/usr/include/c++/5/bits/stl_iterator.h ****       { return reverse_iterator(current - __n); }
 234:/usr/include/c++/5/bits/stl_iterator.h **** 
 235:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 236:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  *this
 237:/usr/include/c++/5/bits/stl_iterator.h ****        *
 238:/usr/include/c++/5/bits/stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 239:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 240:/usr/include/c++/5/bits/stl_iterator.h ****       */
 241:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator&
 242:/usr/include/c++/5/bits/stl_iterator.h ****       operator+=(difference_type __n)
 243:/usr/include/c++/5/bits/stl_iterator.h ****       {
 244:/usr/include/c++/5/bits/stl_iterator.h **** 	current -= __n;
 245:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 246:/usr/include/c++/5/bits/stl_iterator.h ****       }
 247:/usr/include/c++/5/bits/stl_iterator.h **** 
 248:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 249:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 250:/usr/include/c++/5/bits/stl_iterator.h ****        *
 251:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 252:/usr/include/c++/5/bits/stl_iterator.h ****       */
 253:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator
 254:/usr/include/c++/5/bits/stl_iterator.h ****       operator-(difference_type __n) const
 255:/usr/include/c++/5/bits/stl_iterator.h ****       { return reverse_iterator(current + __n); }
 256:/usr/include/c++/5/bits/stl_iterator.h **** 
 257:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 258:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  *this
 259:/usr/include/c++/5/bits/stl_iterator.h ****        *
 260:/usr/include/c++/5/bits/stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 261:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 262:/usr/include/c++/5/bits/stl_iterator.h ****       */
 263:/usr/include/c++/5/bits/stl_iterator.h ****       reverse_iterator&
 264:/usr/include/c++/5/bits/stl_iterator.h ****       operator-=(difference_type __n)
 265:/usr/include/c++/5/bits/stl_iterator.h ****       {
 266:/usr/include/c++/5/bits/stl_iterator.h **** 	current += __n;
 267:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 268:/usr/include/c++/5/bits/stl_iterator.h ****       }
 269:/usr/include/c++/5/bits/stl_iterator.h **** 
 270:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 271:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 272:/usr/include/c++/5/bits/stl_iterator.h ****        *
 273:/usr/include/c++/5/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 274:/usr/include/c++/5/bits/stl_iterator.h ****       */
 275:/usr/include/c++/5/bits/stl_iterator.h ****       reference
 276:/usr/include/c++/5/bits/stl_iterator.h ****       operator[](difference_type __n) const
 277:/usr/include/c++/5/bits/stl_iterator.h ****       { return *(*this + __n); }
 278:/usr/include/c++/5/bits/stl_iterator.h ****     };
GAS LISTING /tmp/ccX8BQhk.s 			page 177


 279:/usr/include/c++/5/bits/stl_iterator.h **** 
 280:/usr/include/c++/5/bits/stl_iterator.h ****   //@{
 281:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 282:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 283:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 284:/usr/include/c++/5/bits/stl_iterator.h ****    *  @return  A simple bool.
 285:/usr/include/c++/5/bits/stl_iterator.h ****    *
 286:/usr/include/c++/5/bits/stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 287:/usr/include/c++/5/bits/stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 288:/usr/include/c++/5/bits/stl_iterator.h ****    *
 289:/usr/include/c++/5/bits/stl_iterator.h ****   */
 290:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 291:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 292:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 293:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 294:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 295:/usr/include/c++/5/bits/stl_iterator.h **** 
 296:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 297:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 298:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 299:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 300:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 301:/usr/include/c++/5/bits/stl_iterator.h **** 
 302:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 303:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 304:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 305:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 306:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x == __y); }
 307:/usr/include/c++/5/bits/stl_iterator.h **** 
 308:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 309:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 310:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 311:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 312:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y < __x; }
 313:/usr/include/c++/5/bits/stl_iterator.h **** 
 314:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 315:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 316:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 317:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 318:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__y < __x); }
 319:/usr/include/c++/5/bits/stl_iterator.h **** 
 320:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 321:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 322:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 323:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 324:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x < __y); }
 325:/usr/include/c++/5/bits/stl_iterator.h **** 
 326:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 327:/usr/include/c++/5/bits/stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 328:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 329:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 330:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 331:/usr/include/c++/5/bits/stl_iterator.h **** 
 332:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 333:/usr/include/c++/5/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 334:/usr/include/c++/5/bits/stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 335:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
GAS LISTING /tmp/ccX8BQhk.s 			page 178


 336:/usr/include/c++/5/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 337:/usr/include/c++/5/bits/stl_iterator.h **** 
 338:/usr/include/c++/5/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 339:/usr/include/c++/5/bits/stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 340:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 341:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 342:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 343:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 344:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 345:/usr/include/c++/5/bits/stl_iterator.h **** 
 346:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 347:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 348:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 349:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 350:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 351:/usr/include/c++/5/bits/stl_iterator.h **** 
 352:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 353:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 354:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 355:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 356:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x == __y); }
 357:/usr/include/c++/5/bits/stl_iterator.h **** 
 358:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 359:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 360:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 361:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 362:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y < __x; }
 363:/usr/include/c++/5/bits/stl_iterator.h **** 
 364:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 365:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 366:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 367:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 368:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__y < __x); }
 369:/usr/include/c++/5/bits/stl_iterator.h **** 
 370:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 371:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 372:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 373:/usr/include/c++/5/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 374:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x < __y); }
 375:/usr/include/c++/5/bits/stl_iterator.h **** 
 376:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 377:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 378:/usr/include/c++/5/bits/stl_iterator.h ****     // DR 685.
 379:/usr/include/c++/5/bits/stl_iterator.h ****     inline auto
 380:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 381:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 382:/usr/include/c++/5/bits/stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 383:/usr/include/c++/5/bits/stl_iterator.h **** #else
 384:/usr/include/c++/5/bits/stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 385:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 386:/usr/include/c++/5/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 387:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 388:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 389:/usr/include/c++/5/bits/stl_iterator.h ****   //@}
 390:/usr/include/c++/5/bits/stl_iterator.h **** 
 391:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus > 201103L
 392:/usr/include/c++/5/bits/stl_iterator.h **** #define __cpp_lib_make_reverse_iterator 201402
GAS LISTING /tmp/ccX8BQhk.s 			page 179


 393:/usr/include/c++/5/bits/stl_iterator.h **** 
 394:/usr/include/c++/5/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 395:/usr/include/c++/5/bits/stl_iterator.h ****   // DR 2285. make_reverse_iterator
 396:/usr/include/c++/5/bits/stl_iterator.h ****   /// Generator function for reverse_iterator.
 397:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 398:/usr/include/c++/5/bits/stl_iterator.h ****     inline reverse_iterator<_Iterator>
 399:/usr/include/c++/5/bits/stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 400:/usr/include/c++/5/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 401:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 402:/usr/include/c++/5/bits/stl_iterator.h **** 
 403:/usr/include/c++/5/bits/stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 404:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 405:/usr/include/c++/5/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 406:/usr/include/c++/5/bits/stl_iterator.h ****    *
 407:/usr/include/c++/5/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 408:/usr/include/c++/5/bits/stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 409:/usr/include/c++/5/bits/stl_iterator.h ****    *  push_back.
 410:/usr/include/c++/5/bits/stl_iterator.h ****    *
 411:/usr/include/c++/5/bits/stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 412:/usr/include/c++/5/bits/stl_iterator.h ****    *  save typing.
 413:/usr/include/c++/5/bits/stl_iterator.h ****   */
 414:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 415:/usr/include/c++/5/bits/stl_iterator.h ****     class back_insert_iterator
 416:/usr/include/c++/5/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 417:/usr/include/c++/5/bits/stl_iterator.h ****     {
 418:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 419:/usr/include/c++/5/bits/stl_iterator.h ****       _Container* container;
 420:/usr/include/c++/5/bits/stl_iterator.h **** 
 421:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 422:/usr/include/c++/5/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 423:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Container          container_type;
 424:/usr/include/c++/5/bits/stl_iterator.h **** 
 425:/usr/include/c++/5/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 426:/usr/include/c++/5/bits/stl_iterator.h ****       explicit
 427:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator(_Container& __x) : container(&__x) { }
 428:/usr/include/c++/5/bits/stl_iterator.h **** 
 429:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 430:/usr/include/c++/5/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 431:/usr/include/c++/5/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 432:/usr/include/c++/5/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 433:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 434:/usr/include/c++/5/bits/stl_iterator.h ****        *
 435:/usr/include/c++/5/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 436:/usr/include/c++/5/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 437:/usr/include/c++/5/bits/stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 438:/usr/include/c++/5/bits/stl_iterator.h ****        *  always append the value to the end of the container.
 439:/usr/include/c++/5/bits/stl_iterator.h ****       */
 440:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus < 201103L
 441:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 442:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 443:/usr/include/c++/5/bits/stl_iterator.h ****       {
 444:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_back(__value);
 445:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 446:/usr/include/c++/5/bits/stl_iterator.h ****       }
 447:/usr/include/c++/5/bits/stl_iterator.h **** #else
 448:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 449:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
GAS LISTING /tmp/ccX8BQhk.s 			page 180


 450:/usr/include/c++/5/bits/stl_iterator.h ****       {
 451:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_back(__value);
 452:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 453:/usr/include/c++/5/bits/stl_iterator.h ****       }
 454:/usr/include/c++/5/bits/stl_iterator.h **** 
 455:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 456:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 457:/usr/include/c++/5/bits/stl_iterator.h ****       {
 458:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_back(std::move(__value));
 459:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 460:/usr/include/c++/5/bits/stl_iterator.h ****       }
 461:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 462:/usr/include/c++/5/bits/stl_iterator.h **** 
 463:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.
 464:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 465:/usr/include/c++/5/bits/stl_iterator.h ****       operator*()
 466:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 467:/usr/include/c++/5/bits/stl_iterator.h **** 
 468:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 469:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator&
 470:/usr/include/c++/5/bits/stl_iterator.h ****       operator++()
 471:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 472:/usr/include/c++/5/bits/stl_iterator.h **** 
 473:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 474:/usr/include/c++/5/bits/stl_iterator.h ****       back_insert_iterator
 475:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int)
 476:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 477:/usr/include/c++/5/bits/stl_iterator.h ****     };
 478:/usr/include/c++/5/bits/stl_iterator.h **** 
 479:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 480:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 481:/usr/include/c++/5/bits/stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 482:/usr/include/c++/5/bits/stl_iterator.h ****    *
 483:/usr/include/c++/5/bits/stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 484:/usr/include/c++/5/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 485:/usr/include/c++/5/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 486:/usr/include/c++/5/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 487:/usr/include/c++/5/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 488:/usr/include/c++/5/bits/stl_iterator.h ****    *  types for you.
 489:/usr/include/c++/5/bits/stl_iterator.h ****   */
 490:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 491:/usr/include/c++/5/bits/stl_iterator.h ****     inline back_insert_iterator<_Container>
 492:/usr/include/c++/5/bits/stl_iterator.h ****     back_inserter(_Container& __x)
 493:/usr/include/c++/5/bits/stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 494:/usr/include/c++/5/bits/stl_iterator.h **** 
 495:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 496:/usr/include/c++/5/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 497:/usr/include/c++/5/bits/stl_iterator.h ****    *
 498:/usr/include/c++/5/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 499:/usr/include/c++/5/bits/stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 500:/usr/include/c++/5/bits/stl_iterator.h ****    *  push_front.
 501:/usr/include/c++/5/bits/stl_iterator.h ****    *
 502:/usr/include/c++/5/bits/stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 503:/usr/include/c++/5/bits/stl_iterator.h ****    *  save typing.
 504:/usr/include/c++/5/bits/stl_iterator.h ****   */
 505:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 506:/usr/include/c++/5/bits/stl_iterator.h ****     class front_insert_iterator
GAS LISTING /tmp/ccX8BQhk.s 			page 181


 507:/usr/include/c++/5/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 508:/usr/include/c++/5/bits/stl_iterator.h ****     {
 509:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 510:/usr/include/c++/5/bits/stl_iterator.h ****       _Container* container;
 511:/usr/include/c++/5/bits/stl_iterator.h **** 
 512:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 513:/usr/include/c++/5/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 514:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Container          container_type;
 515:/usr/include/c++/5/bits/stl_iterator.h **** 
 516:/usr/include/c++/5/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 517:/usr/include/c++/5/bits/stl_iterator.h ****       explicit front_insert_iterator(_Container& __x) : container(&__x) { }
 518:/usr/include/c++/5/bits/stl_iterator.h **** 
 519:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 520:/usr/include/c++/5/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 521:/usr/include/c++/5/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 522:/usr/include/c++/5/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 523:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 524:/usr/include/c++/5/bits/stl_iterator.h ****        *
 525:/usr/include/c++/5/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 526:/usr/include/c++/5/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 527:/usr/include/c++/5/bits/stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 528:/usr/include/c++/5/bits/stl_iterator.h ****        *  always prepend the value to the front of the container.
 529:/usr/include/c++/5/bits/stl_iterator.h ****       */
 530:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus < 201103L
 531:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 532:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 533:/usr/include/c++/5/bits/stl_iterator.h ****       {
 534:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_front(__value);
 535:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 536:/usr/include/c++/5/bits/stl_iterator.h ****       }
 537:/usr/include/c++/5/bits/stl_iterator.h **** #else
 538:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 539:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 540:/usr/include/c++/5/bits/stl_iterator.h ****       {
 541:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_front(__value);
 542:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 543:/usr/include/c++/5/bits/stl_iterator.h ****       }
 544:/usr/include/c++/5/bits/stl_iterator.h **** 
 545:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 546:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 547:/usr/include/c++/5/bits/stl_iterator.h ****       {
 548:/usr/include/c++/5/bits/stl_iterator.h **** 	container->push_front(std::move(__value));
 549:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 550:/usr/include/c++/5/bits/stl_iterator.h ****       }
 551:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 552:/usr/include/c++/5/bits/stl_iterator.h **** 
 553:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.
 554:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 555:/usr/include/c++/5/bits/stl_iterator.h ****       operator*()
 556:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 557:/usr/include/c++/5/bits/stl_iterator.h **** 
 558:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 559:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator&
 560:/usr/include/c++/5/bits/stl_iterator.h ****       operator++()
 561:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 562:/usr/include/c++/5/bits/stl_iterator.h **** 
 563:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
GAS LISTING /tmp/ccX8BQhk.s 			page 182


 564:/usr/include/c++/5/bits/stl_iterator.h ****       front_insert_iterator
 565:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int)
 566:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 567:/usr/include/c++/5/bits/stl_iterator.h ****     };
 568:/usr/include/c++/5/bits/stl_iterator.h **** 
 569:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 570:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 571:/usr/include/c++/5/bits/stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 572:/usr/include/c++/5/bits/stl_iterator.h ****    *
 573:/usr/include/c++/5/bits/stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 574:/usr/include/c++/5/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 575:/usr/include/c++/5/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 576:/usr/include/c++/5/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 577:/usr/include/c++/5/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 578:/usr/include/c++/5/bits/stl_iterator.h ****    *  types for you.
 579:/usr/include/c++/5/bits/stl_iterator.h ****   */
 580:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 581:/usr/include/c++/5/bits/stl_iterator.h ****     inline front_insert_iterator<_Container>
 582:/usr/include/c++/5/bits/stl_iterator.h ****     front_inserter(_Container& __x)
 583:/usr/include/c++/5/bits/stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 584:/usr/include/c++/5/bits/stl_iterator.h **** 
 585:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 586:/usr/include/c++/5/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 587:/usr/include/c++/5/bits/stl_iterator.h ****    *
 588:/usr/include/c++/5/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 589:/usr/include/c++/5/bits/stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 590:/usr/include/c++/5/bits/stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 591:/usr/include/c++/5/bits/stl_iterator.h ****    *  position.
 592:/usr/include/c++/5/bits/stl_iterator.h ****    *
 593:/usr/include/c++/5/bits/stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 594:/usr/include/c++/5/bits/stl_iterator.h ****    *  %iterator's position.)
 595:/usr/include/c++/5/bits/stl_iterator.h ****    *
 596:/usr/include/c++/5/bits/stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 597:/usr/include/c++/5/bits/stl_iterator.h ****    *  save typing.
 598:/usr/include/c++/5/bits/stl_iterator.h ****   */
 599:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container>
 600:/usr/include/c++/5/bits/stl_iterator.h ****     class insert_iterator
 601:/usr/include/c++/5/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 602:/usr/include/c++/5/bits/stl_iterator.h ****     {
 603:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 604:/usr/include/c++/5/bits/stl_iterator.h ****       _Container* container;
 605:/usr/include/c++/5/bits/stl_iterator.h ****       typename _Container::iterator iter;
 606:/usr/include/c++/5/bits/stl_iterator.h **** 
 607:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 608:/usr/include/c++/5/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 609:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Container          container_type;
 610:/usr/include/c++/5/bits/stl_iterator.h **** 
 611:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 612:/usr/include/c++/5/bits/stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 613:/usr/include/c++/5/bits/stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 614:/usr/include/c++/5/bits/stl_iterator.h ****       */
 615:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 616:/usr/include/c++/5/bits/stl_iterator.h ****       : container(&__x), iter(__i) {}
 617:/usr/include/c++/5/bits/stl_iterator.h **** 
 618:/usr/include/c++/5/bits/stl_iterator.h ****       /**
 619:/usr/include/c++/5/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 620:/usr/include/c++/5/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
GAS LISTING /tmp/ccX8BQhk.s 			page 183


 621:/usr/include/c++/5/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 622:/usr/include/c++/5/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 623:/usr/include/c++/5/bits/stl_iterator.h ****        *
 624:/usr/include/c++/5/bits/stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 625:/usr/include/c++/5/bits/stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 626:/usr/include/c++/5/bits/stl_iterator.h ****        *  value into the container at the place before the %iterator.
 627:/usr/include/c++/5/bits/stl_iterator.h ****        *
 628:/usr/include/c++/5/bits/stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 629:/usr/include/c++/5/bits/stl_iterator.h ****        *  insert values immediately after one another.  For example,
 630:/usr/include/c++/5/bits/stl_iterator.h ****        *  @code
 631:/usr/include/c++/5/bits/stl_iterator.h ****        *     // vector v contains A and Z
 632:/usr/include/c++/5/bits/stl_iterator.h ****        *
 633:/usr/include/c++/5/bits/stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 634:/usr/include/c++/5/bits/stl_iterator.h ****        *     i = 1;
 635:/usr/include/c++/5/bits/stl_iterator.h ****        *     i = 2;
 636:/usr/include/c++/5/bits/stl_iterator.h ****        *     i = 3;
 637:/usr/include/c++/5/bits/stl_iterator.h ****        *
 638:/usr/include/c++/5/bits/stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 639:/usr/include/c++/5/bits/stl_iterator.h ****        *  @endcode
 640:/usr/include/c++/5/bits/stl_iterator.h ****       */
 641:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus < 201103L
 642:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 643:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 644:/usr/include/c++/5/bits/stl_iterator.h ****       {
 645:/usr/include/c++/5/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 646:/usr/include/c++/5/bits/stl_iterator.h **** 	++iter;
 647:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 648:/usr/include/c++/5/bits/stl_iterator.h ****       }
 649:/usr/include/c++/5/bits/stl_iterator.h **** #else
 650:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 651:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 652:/usr/include/c++/5/bits/stl_iterator.h ****       {
 653:/usr/include/c++/5/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 654:/usr/include/c++/5/bits/stl_iterator.h **** 	++iter;
 655:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 656:/usr/include/c++/5/bits/stl_iterator.h ****       }
 657:/usr/include/c++/5/bits/stl_iterator.h **** 
 658:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 659:/usr/include/c++/5/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 660:/usr/include/c++/5/bits/stl_iterator.h ****       {
 661:/usr/include/c++/5/bits/stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 662:/usr/include/c++/5/bits/stl_iterator.h **** 	++iter;
 663:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 664:/usr/include/c++/5/bits/stl_iterator.h ****       }
 665:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 666:/usr/include/c++/5/bits/stl_iterator.h **** 
 667:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.
 668:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 669:/usr/include/c++/5/bits/stl_iterator.h ****       operator*()
 670:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 671:/usr/include/c++/5/bits/stl_iterator.h **** 
 672:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 673:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 674:/usr/include/c++/5/bits/stl_iterator.h ****       operator++()
 675:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 676:/usr/include/c++/5/bits/stl_iterator.h **** 
 677:/usr/include/c++/5/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
GAS LISTING /tmp/ccX8BQhk.s 			page 184


 678:/usr/include/c++/5/bits/stl_iterator.h ****       insert_iterator&
 679:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int)
 680:/usr/include/c++/5/bits/stl_iterator.h ****       { return *this; }
 681:/usr/include/c++/5/bits/stl_iterator.h ****     };
 682:/usr/include/c++/5/bits/stl_iterator.h **** 
 683:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 684:/usr/include/c++/5/bits/stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 685:/usr/include/c++/5/bits/stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 686:/usr/include/c++/5/bits/stl_iterator.h ****    *
 687:/usr/include/c++/5/bits/stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 688:/usr/include/c++/5/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 689:/usr/include/c++/5/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 690:/usr/include/c++/5/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 691:/usr/include/c++/5/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 692:/usr/include/c++/5/bits/stl_iterator.h ****    *  types for you.
 693:/usr/include/c++/5/bits/stl_iterator.h ****   */
 694:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Container, typename _Iterator>
 695:/usr/include/c++/5/bits/stl_iterator.h ****     inline insert_iterator<_Container>
 696:/usr/include/c++/5/bits/stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 697:/usr/include/c++/5/bits/stl_iterator.h ****     {
 698:/usr/include/c++/5/bits/stl_iterator.h ****       return insert_iterator<_Container>(__x,
 699:/usr/include/c++/5/bits/stl_iterator.h **** 					 typename _Container::iterator(__i));
 700:/usr/include/c++/5/bits/stl_iterator.h ****     }
 701:/usr/include/c++/5/bits/stl_iterator.h **** 
 702:/usr/include/c++/5/bits/stl_iterator.h ****   // @} group iterators
 703:/usr/include/c++/5/bits/stl_iterator.h **** 
 704:/usr/include/c++/5/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 705:/usr/include/c++/5/bits/stl_iterator.h **** } // namespace
 706:/usr/include/c++/5/bits/stl_iterator.h **** 
 707:/usr/include/c++/5/bits/stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 708:/usr/include/c++/5/bits/stl_iterator.h **** {
 709:/usr/include/c++/5/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 710:/usr/include/c++/5/bits/stl_iterator.h **** 
 711:/usr/include/c++/5/bits/stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 712:/usr/include/c++/5/bits/stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 713:/usr/include/c++/5/bits/stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 714:/usr/include/c++/5/bits/stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 715:/usr/include/c++/5/bits/stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 716:/usr/include/c++/5/bits/stl_iterator.h ****   // using this template can instantiate different types, even if the
 717:/usr/include/c++/5/bits/stl_iterator.h ****   // _Iterator parameter is the same.
 718:/usr/include/c++/5/bits/stl_iterator.h ****   using std::iterator_traits;
 719:/usr/include/c++/5/bits/stl_iterator.h ****   using std::iterator;
 720:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 721:/usr/include/c++/5/bits/stl_iterator.h ****     class __normal_iterator
 722:/usr/include/c++/5/bits/stl_iterator.h ****     {
 723:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 724:/usr/include/c++/5/bits/stl_iterator.h ****       _Iterator _M_current;
 725:/usr/include/c++/5/bits/stl_iterator.h **** 
 726:/usr/include/c++/5/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 727:/usr/include/c++/5/bits/stl_iterator.h **** 
 728:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 729:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 730:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 731:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 732:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 733:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 734:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
GAS LISTING /tmp/ccX8BQhk.s 			page 185


 735:/usr/include/c++/5/bits/stl_iterator.h **** 
 736:/usr/include/c++/5/bits/stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 737:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(_Iterator()) { }
 738:/usr/include/c++/5/bits/stl_iterator.h **** 
 739:/usr/include/c++/5/bits/stl_iterator.h ****       explicit
 740:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 741:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(__i) { }
 742:/usr/include/c++/5/bits/stl_iterator.h **** 
 743:/usr/include/c++/5/bits/stl_iterator.h ****       // Allow iterator to const_iterator conversion
 744:/usr/include/c++/5/bits/stl_iterator.h ****       template<typename _Iter>
 745:/usr/include/c++/5/bits/stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 1669              		.loc 13 745 0
 1670              		.cfi_startproc
 1671 0000 55       		pushq	%rbp
 1672              		.cfi_def_cfa_offset 16
 1673              		.cfi_offset 6, -16
 1674 0001 4889E5   		movq	%rsp, %rbp
 1675              		.cfi_def_cfa_register 6
 1676 0004 4883EC10 		subq	$16, %rsp
 1677 0008 48897DF8 		movq	%rdi, -8(%rbp)
 1678 000c 488975F0 		movq	%rsi, -16(%rbp)
 1679              	.LBB9:
 746:/usr/include/c++/5/bits/stl_iterator.h **** 			  typename __enable_if<
 747:/usr/include/c++/5/bits/stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 748:/usr/include/c++/5/bits/stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 749:/usr/include/c++/5/bits/stl_iterator.h ****         : _M_current(__i.base()) { }
 1680              		.loc 13 749 0
 1681 0010 488B45F0 		movq	-16(%rbp), %rax
 1682 0014 4889C7   		movq	%rax, %rdi
 1683 0017 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4bas
 1683      00
 1684 001c 488B10   		movq	(%rax), %rdx
 1685 001f 488B45F8 		movq	-8(%rbp), %rax
 1686 0023 488910   		movq	%rdx, (%rax)
 1687              	.LBE9:
 1688 0026 90       		nop
 1689 0027 C9       		leave
 1690              		.cfi_def_cfa 7, 8
 1691 0028 C3       		ret
 1692              		.cfi_endproc
 1693              	.LFE9970:
 1695              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1I
 1696              		.set	_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1IP
 1697              		.section	.text._ZN5boost9algorithm12first_finderIA2_cEENS0_6detail13first_finderFINS_20range_const
 1698              		.weak	_ZN5boost9algorithm12first_finderIA2_cEENS0_6detail13first_finderFINS_20range_const_iterator
 1700              	_ZN5boost9algorithm12first_finderIA2_cEENS0_6detail13first_finderFINS_20range_const_iteratorIT_vE4t
 1701              	.LFB10086:
 1702              		.file 14 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** //  Boost string_algo library finder.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** //  Copyright Pavol Droba 2002-2006.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
GAS LISTING /tmp/ccX8BQhk.s 			page 186


  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #ifndef BOOST_STRING_FINDER_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #define BOOST_STRING_FINDER_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #include <boost/algorithm/string/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #include <boost/range/iterator_range_core.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #include <boost/range/begin.hpp>
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #include <boost/range/end.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #include <boost/range/iterator.hpp>
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #include <boost/range/const_iterator.hpp>
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #include <boost/algorithm/string/constants.hpp>
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #include <boost/algorithm/string/detail/finder.hpp>
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** #include <boost/algorithm/string/compare.hpp>
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** /*! \file
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****     Defines Finder generators. Finder object is a functor which is able to 
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****     find a substring matching a specific criteria in the input.
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****     Finders are used as a pluggable components for replace, find 
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****     and split facilities. This header contains generator functions 
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****     for finders provided in this library.
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** */
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** namespace boost {
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****     namespace algorithm {
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** //  Finder generators ------------------------------------------//
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****         
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****         //! "First" finder 
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****         /*!
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****             Construct the \c first_finder. The finder searches for the first
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****             occurrence of the string in a given input.
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****             The result is given as an \c iterator_range delimiting the match.
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp **** 
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****             \param Search A substring to be searched for.
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****             \param Comp An element comparison predicate
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****             \return An instance of the \c first_finder object
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****         */
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****         template<typename RangeT>
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****         inline detail::first_finderF<
  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****             BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type,
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****             is_equal>
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****         first_finder( const RangeT& Search )
 1703              		.loc 14 53 0
 1704              		.cfi_startproc
 1705 0000 55       		pushq	%rbp
 1706              		.cfi_def_cfa_offset 16
 1707              		.cfi_offset 6, -16
 1708 0001 4889E5   		movq	%rsp, %rbp
 1709              		.cfi_def_cfa_register 6
 1710 0004 53       		pushq	%rbx
 1711 0005 4883EC38 		subq	$56, %rsp
 1712              		.cfi_offset 3, -24
 1713 0009 48897DC8 		movq	%rdi, -56(%rbp)
 1714 000d 488975C0 		movq	%rsi, -64(%rbp)
 1715              		.loc 14 53 0
GAS LISTING /tmp/ccX8BQhk.s 			page 187


 1716 0011 64488B04 		movq	%fs:40, %rax
 1716      25280000 
 1716      00
 1717 001a 488945E8 		movq	%rax, -24(%rbp)
 1718 001e 31C0     		xorl	%eax, %eax
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****         {
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****             return 
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****                 detail::first_finderF<
  57:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****                     BOOST_STRING_TYPENAME 
  58:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****                         range_const_iterator<RangeT>::type,
  59:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****                         is_equal>( ::boost::as_literal(Search), is_equal() ) ;
 1719              		.loc 14 59 0
 1720 0020 488B45C0 		movq	-64(%rbp), %rax
 1721 0024 4889C7   		movq	%rax, %rdi
 1722 0027 E8000000 		call	_ZN5boost10as_literalIcLm2EEENS_14iterator_rangeIPKT_EERAT0__S3_
 1722      00
 1723 002c 488945D0 		movq	%rax, -48(%rbp)
 1724 0030 488955D8 		movq	%rdx, -40(%rbp)
 1725 0034 488D55D0 		leaq	-48(%rbp), %rdx
 1726 0038 488B45C8 		movq	-56(%rbp), %rax
 1727 003c 4883EC08 		subq	$8, %rsp
 1728 0040 53       		pushq	%rbx
 1729 0041 4889D6   		movq	%rdx, %rsi
 1730 0044 4889C7   		movq	%rax, %rdi
 1731 0047 E8000000 		call	_ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC1INS_14iterator_rangeIS4_EEEERKT
 1731      00
 1732 004c 4883C410 		addq	$16, %rsp
  60:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/finder.hpp ****         }
 1733              		.loc 14 60 0
 1734 0050 488B45C8 		movq	-56(%rbp), %rax
 1735 0054 488B4DE8 		movq	-24(%rbp), %rcx
 1736 0058 6448330C 		xorq	%fs:40, %rcx
 1736      25280000 
 1736      00
 1737 0061 7405     		je	.L89
 1738 0063 E8000000 		call	__stack_chk_fail
 1738      00
 1739              	.L89:
 1740 0068 488B5DF8 		movq	-8(%rbp), %rbx
 1741 006c C9       		leave
 1742              		.cfi_def_cfa 7, 8
 1743 006d C3       		ret
 1744              		.cfi_endproc
 1745              	.LFE10086:
 1747              		.section	.text._ZN5boost9algorithm15const_formatterIA2_cEENS0_6detail13const_formatFINS_14iterator
 1748              		.weak	_ZN5boost9algorithm15const_formatterIA2_cEENS0_6detail13const_formatFINS_14iterator_rangeINS
 1750              	_ZN5boost9algorithm15const_formatterIA2_cEENS0_6detail13const_formatFINS_14iterator_rangeINS_20rang
 1751              	.LFB10087:
 1752              		.file 15 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** //  Boost string_algo library formatter.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** //  Copyright Pavol Droba 2002-2003.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 188


   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** #ifndef BOOST_STRING_FORMATTER_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** #define BOOST_STRING_FORMATTER_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** #include <boost/detail/iterator.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** #include <boost/range/value_type.hpp>
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** #include <boost/range/iterator_range_core.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** #include <boost/range/as_literal.hpp>
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** #include <boost/algorithm/string/detail/formatter.hpp>
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** /*! \file
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****     Defines Formatter generators. Formatter is a functor which formats
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****     a string according to given parameters. A Formatter works
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****     in conjunction with a Finder. A Finder can provide additional information
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****     for a specific Formatter. An example of such a cooperation is regex_finder
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****     and regex_formatter.
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****     Formatters are used as pluggable components for replace facilities. 
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****     This header contains generator functions for the Formatters provided in this library.
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** */
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** namespace boost {
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****     namespace algorithm {
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** // generic formatters  ---------------------------------------------------------------//
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****         //! Constant formatter
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****         /*!
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****             Constructs a \c const_formatter. Const formatter always returns
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****             the same value, regardless of the parameter.
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp **** 
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****             \param Format A predefined value used as a result for formatting
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****             \return An instance of the \c const_formatter object.
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****         */
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****         template<typename RangeT>
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****         inline detail::const_formatF<
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****             iterator_range<
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****                 BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type> >
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****         const_formatter(const RangeT& Format)
 1753              		.loc 15 49 0
 1754              		.cfi_startproc
 1755 0000 55       		pushq	%rbp
 1756              		.cfi_def_cfa_offset 16
 1757              		.cfi_offset 6, -16
 1758 0001 4889E5   		movq	%rsp, %rbp
 1759              		.cfi_def_cfa_register 6
 1760 0004 4883EC40 		subq	$64, %rsp
 1761 0008 48897DC8 		movq	%rdi, -56(%rbp)
 1762              		.loc 15 49 0
 1763 000c 64488B04 		movq	%fs:40, %rax
 1763      25280000 
 1763      00
 1764 0015 488945F8 		movq	%rax, -8(%rbp)
 1765 0019 31C0     		xorl	%eax, %eax
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****         {
GAS LISTING /tmp/ccX8BQhk.s 			page 189


  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****             return detail::const_formatF<
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****                 iterator_range<
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****                     BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type> >(::boost::as_literal
 1766              		.loc 15 53 0
 1767 001b 488B45C8 		movq	-56(%rbp), %rax
 1768 001f 4889C7   		movq	%rax, %rdi
 1769 0022 E8000000 		call	_ZN5boost10as_literalIcLm2EEENS_14iterator_rangeIPKT_EERAT0__S3_
 1769      00
 1770 0027 488945D0 		movq	%rax, -48(%rbp)
 1771 002b 488955D8 		movq	%rdx, -40(%rbp)
 1772 002f 488D55D0 		leaq	-48(%rbp), %rdx
 1773 0033 488D45E0 		leaq	-32(%rbp), %rax
 1774 0037 4889D6   		movq	%rdx, %rsi
 1775 003a 4889C7   		movq	%rax, %rdi
 1776 003d E8000000 		call	_ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC1ERKS6_
 1776      00
 1777 0042 488B45E0 		movq	-32(%rbp), %rax
 1778 0046 488B55E8 		movq	-24(%rbp), %rdx
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/formatter.hpp ****         }
 1779              		.loc 15 54 0
 1780 004a 488B4DF8 		movq	-8(%rbp), %rcx
 1781 004e 6448330C 		xorq	%fs:40, %rcx
 1781      25280000 
 1781      00
 1782 0057 7405     		je	.L92
 1783 0059 E8000000 		call	__stack_chk_fail
 1783      00
 1784              	.L92:
 1785 005e C9       		leave
 1786              		.cfi_def_cfa 7, 8
 1787 005f C3       		ret
 1788              		.cfi_endproc
 1789              	.LFE10087:
 1791              		.section	.text._ZN5boost9algorithm15find_format_allINSt7__cxx1112basic_stringIcSt11char_traitsIcES
 1792              		.weak	_ZN5boost9algorithm15find_format_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0
 1794              	_ZN5boost9algorithm15find_format_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_6detai
 1795              	.LFB10088:
 1796              		.file 16 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** //  Boost string_algo library find_format.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** //  Copyright Pavol Droba 2002-2003.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #ifndef BOOST_STRING_FIND_FORMAT_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #define BOOST_STRING_FIND_FORMAT_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <deque>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <boost/detail/iterator.hpp>
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <boost/range/iterator_range_core.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <boost/range/begin.hpp>
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <boost/range/end.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <boost/range/const_iterator.hpp>
GAS LISTING /tmp/ccX8BQhk.s 			page 190


  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <boost/range/as_literal.hpp>
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <boost/algorithm/string/concept.hpp>
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <boost/algorithm/string/detail/find_format.hpp>
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** #include <boost/algorithm/string/detail/find_format_all.hpp>
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** /*! \file
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****     Defines generic replace algorithms. Each algorithm replaces
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****     part(s) of the input. The part to be replaced is looked up using a Finder object.
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****     Result of finding is then used by a Formatter object to generate the replacement.
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** */
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** namespace boost {
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****     namespace algorithm {
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** // generic replace  -----------------------------------------------------------------//
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         //! Generic replace algorithm
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         /*!
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             Use the Finder to search for a substring. Use the Formatter to format
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             this substring and replace it in the input.
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             or copied to the output iterator.
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****     
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Output An output iterator to which the result will be copied
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Input An input sequence
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Finder A Finder object used to search for a match to be replaced
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Formatter A Formatter object used to format a match
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \return An output iterator pointing just after the last inserted character or
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 a modified copy of the input
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \note The second variant of this function provides the strong exception-safety guarante
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         */
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         template< 
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename OutputIteratorT,
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename RangeT,
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FinderT,
  57:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FormatterT>
  58:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         inline OutputIteratorT find_format_copy(
  59:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             OutputIteratorT Output,
  60:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             const RangeT& Input,
  61:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FinderT Finder,
  62:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FormatterT Formatter )
  63:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         {
  64:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             // Concept check
  65:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT((
  66:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FinderConcept<
  67:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,
  68:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type>
  69:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
  70:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT((
  71:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FormatterConcept<
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FormatterT,
  73:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type>
  74:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
  75:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  76:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             iterator_range<BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type> lit_input(::bo
GAS LISTING /tmp/ccX8BQhk.s 			page 191


  77:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  78:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             return detail::find_format_copy_impl(
  79:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Output,
  80:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 lit_input,
  81:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Formatter,
  82:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Finder( ::boost::begin(lit_input), ::boost::end(lit_input) ) );
  83:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         }
  84:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
  85:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         //! Generic replace algorithm
  86:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         /*!
  87:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \overload
  88:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         */
  89:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         template< 
  90:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename SequenceT, 
  91:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FinderT,
  92:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FormatterT>
  93:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         inline SequenceT find_format_copy(
  94:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             const SequenceT& Input,
  95:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FinderT Finder,
  96:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FormatterT Formatter )
  97:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         {
  98:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             // Concept check
  99:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT((
 100:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FinderConcept<
 101:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,
 102:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     BOOST_STRING_TYPENAME range_const_iterator<SequenceT>::type>
 103:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 104:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT((
 105:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FormatterConcept<
 106:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FormatterT,
 107:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,BOOST_STRING_TYPENAME range_const_iterator<SequenceT>::type>
 108:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 109:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 110:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             return detail::find_format_copy_impl(
 111:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Input,
 112:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Formatter,
 113:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Finder(::boost::begin(Input), ::boost::end(Input)));
 114:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         }
 115:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 116:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         //! Generic replace algorithm
 117:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         /*!
 118:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             Use the Finder to search for a substring. Use the Formatter to format
 119:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             this substring and replace it in the input. The input is modified in-place.
 120:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 121:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Input An input sequence
 122:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Finder A Finder object used to search for a match to be replaced
 123:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Formatter A Formatter object used to format a match
 124:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         */
 125:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         template<
 126:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename SequenceT,
 127:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FinderT,
 128:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FormatterT>
 129:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         inline void find_format( 
 130:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             SequenceT& Input,
 131:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FinderT Finder,
 132:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FormatterT Formatter)
 133:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         {
GAS LISTING /tmp/ccX8BQhk.s 			page 192


 134:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             // Concept check
 135:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT((
 136:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FinderConcept<
 137:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,
 138:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     BOOST_STRING_TYPENAME range_const_iterator<SequenceT>::type>
 139:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 140:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT(( 
 141:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FormatterConcept<
 142:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FormatterT,
 143:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,BOOST_STRING_TYPENAME range_const_iterator<SequenceT>::type>
 144:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 145:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 146:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             detail::find_format_impl(
 147:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Input,
 148:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Formatter,
 149:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Finder(::boost::begin(Input), ::boost::end(Input)));
 150:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         }
 151:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 152:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 153:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** //  find_format_all generic ----------------------------------------------------------------//
 154:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 155:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         //! Generic replace all algorithm
 156:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         /*!
 157:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             Use the Finder to search for a substring. Use the Formatter to format
 158:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             this substring and replace it in the input. Repeat this for all matching
 159:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             substrings.
 160:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             The result is a modified copy of the input. It is returned as a sequence 
 161:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             or copied to the output iterator.
 162:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 163:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Output An output iterator to which the result will be copied
 164:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Input An input sequence
 165:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Finder A Finder object used to search for a match to be replaced
 166:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Formatter A Formatter object used to format a match
 167:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \return An output iterator pointing just after the last inserted character or
 168:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 a modified copy of the input
 169:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 170:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****              \note The second variant of this function provides the strong exception-safety guarant
 171:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         */
 172:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         template< 
 173:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename OutputIteratorT,
 174:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename RangeT,
 175:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FinderT,
 176:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FormatterT>
 177:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         inline OutputIteratorT find_format_all_copy(
 178:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             OutputIteratorT Output,
 179:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             const RangeT& Input,
 180:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FinderT Finder,
 181:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FormatterT Formatter)
 182:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         {
 183:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             // Concept check
 184:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT(( 
 185:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FinderConcept<
 186:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,
 187:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type>
 188:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 189:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT(( 
 190:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FormatterConcept<
GAS LISTING /tmp/ccX8BQhk.s 			page 193


 191:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FormatterT,
 192:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type>
 193:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 194:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 195:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             iterator_range<BOOST_STRING_TYPENAME range_const_iterator<RangeT>::type> lit_input(::bo
 196:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 197:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             return detail::find_format_all_copy_impl(
 198:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Output,
 199:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 lit_input,
 200:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Finder,
 201:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Formatter,
 202:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Finder(::boost::begin(lit_input), ::boost::end(lit_input)));
 203:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         }
 204:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 205:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         //! Generic replace all algorithm
 206:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         /*!
 207:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \overload
 208:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         */
 209:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         template< 
 210:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename SequenceT, 
 211:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FinderT,
 212:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FormatterT >
 213:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         inline SequenceT find_format_all_copy(
 214:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             const SequenceT& Input,
 215:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FinderT Finder,
 216:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FormatterT Formatter )
 217:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         {
 218:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             // Concept check
 219:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT((
 220:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FinderConcept<
 221:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,
 222:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     BOOST_STRING_TYPENAME range_const_iterator<SequenceT>::type>
 223:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 224:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT((
 225:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FormatterConcept<
 226:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FormatterT,
 227:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,BOOST_STRING_TYPENAME range_const_iterator<SequenceT>::type>
 228:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 229:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 230:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             return detail::find_format_all_copy_impl(
 231:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Input,
 232:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Finder,
 233:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Formatter,
 234:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Finder( ::boost::begin(Input), ::boost::end(Input) ) );
 235:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         }
 236:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 237:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         //! Generic replace all algorithm
 238:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         /*!
 239:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             Use the Finder to search for a substring. Use the Formatter to format
 240:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             this substring and replace it in the input. Repeat this for all matching
 241:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             substrings.The input is modified in-place.
 242:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 243:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Input An input sequence
 244:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Finder A Finder object used to search for a match to be replaced
 245:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             \param Formatter A Formatter object used to format a match
 246:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         */
 247:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         template<
GAS LISTING /tmp/ccX8BQhk.s 			page 194


 248:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename SequenceT,
 249:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FinderT,
 250:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             typename FormatterT >
 251:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         inline void find_format_all( 
 1797              		.loc 16 251 0
 1798              		.cfi_startproc
 1799 0000 55       		pushq	%rbp
 1800              		.cfi_def_cfa_offset 16
 1801              		.cfi_offset 6, -16
 1802 0001 4889E5   		movq	%rsp, %rbp
 1803              		.cfi_def_cfa_register 6
 1804 0004 53       		pushq	%rbx
 1805 0005 4883EC28 		subq	$40, %rsp
 1806              		.cfi_offset 3, -24
 1807 0009 48897DE8 		movq	%rdi, -24(%rbp)
 1808 000d 4889F0   		movq	%rsi, %rax
 1809 0010 4889D1   		movq	%rdx, %rcx
 1810 0013 4889CA   		movq	%rcx, %rdx
 1811 0016 488945D0 		movq	%rax, -48(%rbp)
 1812 001a 488955D8 		movq	%rdx, -40(%rbp)
 252:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             SequenceT& Input,
 253:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FinderT Finder,
 254:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             FormatterT Formatter )
 255:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         {
 256:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             // Concept check
 257:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT((
 258:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FinderConcept<
 259:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,
 260:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     BOOST_STRING_TYPENAME range_const_iterator<SequenceT>::type>
 261:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 262:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             BOOST_CONCEPT_ASSERT((
 263:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 FormatterConcept<
 264:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FormatterT,
 265:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                     FinderT,BOOST_STRING_TYPENAME range_const_iterator<SequenceT>::type>
 266:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 ));
 267:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 268:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****             detail::find_format_all_impl(
 1813              		.loc 16 268 0
 1814 001e 488B45E8 		movq	-24(%rbp), %rax
 1815 0022 4889C7   		movq	%rax, %rdi
 1816 0025 E8000000 		call	_ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14r
 1816      00
 1817 002a 4889C3   		movq	%rax, %rbx
 1818 002d 488B45E8 		movq	-24(%rbp), %rax
 1819 0031 4889C7   		movq	%rax, %rdi
 1820 0034 E8000000 		call	_ZN5boost17range_adl_barrier5beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_1
 1820      00
 1821 0039 4889DA   		movq	%rbx, %rdx
 1822 003c 4889C6   		movq	%rax, %rsi
 1823 003f 488D7D10 		leaq	16(%rbp), %rdi
 1824 0043 E8000000 		call	_ZNK5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEclIN9__gnu_cxx17__normal_iterato
 1824      00
 1825 0048 4889C1   		movq	%rax, %rcx
 1826 004b 4889D3   		movq	%rdx, %rbx
 1827 004e 4889D7   		movq	%rdx, %rdi
 1828 0051 488B75D0 		movq	-48(%rbp), %rsi
 1829 0055 488B55D8 		movq	-40(%rbp), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 195


 1830 0059 488B45E8 		movq	-24(%rbp), %rax
 1831 005d 4883EC08 		subq	$8, %rsp
 1832 0061 FF7520   		pushq	32(%rbp)
 1833 0064 FF7518   		pushq	24(%rbp)
 1834 0067 FF7510   		pushq	16(%rbp)
 1835 006a 4989F8   		movq	%rdi, %r8
 1836 006d 4889C7   		movq	%rax, %rdi
 1837 0070 E8000000 		call	_ZN5boost9algorithm6detail20find_format_all_implINSt7__cxx1112basic_stringIcSt11char_traitsIc
 1837      00
 1838 0075 4883C420 		addq	$32, %rsp
 269:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Input,
 270:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Finder,
 271:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Formatter,
 272:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****                 Finder(::boost::begin(Input), ::boost::end(Input)));
 273:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp **** 
 274:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/find_format.hpp ****         }
 1839              		.loc 16 274 0
 1840 0079 90       		nop
 1841 007a 488B5DF8 		movq	-8(%rbp), %rbx
 1842 007e C9       		leave
 1843              		.cfi_def_cfa 7, 8
 1844 007f C3       		ret
 1845              		.cfi_endproc
 1846              	.LFE10088:
 1848              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 1849              		.align 2
 1850              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ER
 1852              	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_:
 1853              	.LFB10120:
 740:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(__i) { }
 1854              		.loc 13 740 0
 1855              		.cfi_startproc
 1856 0000 55       		pushq	%rbp
 1857              		.cfi_def_cfa_offset 16
 1858              		.cfi_offset 6, -16
 1859 0001 4889E5   		movq	%rsp, %rbp
 1860              		.cfi_def_cfa_register 6
 1861 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1862 0008 488975F0 		movq	%rsi, -16(%rbp)
 1863              	.LBB10:
 741:/usr/include/c++/5/bits/stl_iterator.h **** 
 1864              		.loc 13 741 0
 1865 000c 488B45F0 		movq	-16(%rbp), %rax
 1866 0010 488B10   		movq	(%rax), %rdx
 1867 0013 488B45F8 		movq	-8(%rbp), %rax
 1868 0017 488910   		movq	%rdx, (%rax)
 1869              	.LBE10:
 1870 001a 90       		nop
 1871 001b 5D       		popq	%rbp
 1872              		.cfi_def_cfa 7, 8
 1873 001c C3       		ret
 1874              		.cfi_endproc
 1875              	.LFE10120:
 1877              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ER
 1878              		.set	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERK
 1879              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 1880              		.align 2
GAS LISTING /tmp/ccX8BQhk.s 			page 196


 1881              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4ba
 1883              	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv:
 1884              	.LFB10122:
 750:/usr/include/c++/5/bits/stl_iterator.h **** 
 751:/usr/include/c++/5/bits/stl_iterator.h ****       // Forward iterator requirements
 752:/usr/include/c++/5/bits/stl_iterator.h ****       reference
 753:/usr/include/c++/5/bits/stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 754:/usr/include/c++/5/bits/stl_iterator.h ****       { return *_M_current; }
 755:/usr/include/c++/5/bits/stl_iterator.h **** 
 756:/usr/include/c++/5/bits/stl_iterator.h ****       pointer
 757:/usr/include/c++/5/bits/stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 758:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
 759:/usr/include/c++/5/bits/stl_iterator.h **** 
 760:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator&
 761:/usr/include/c++/5/bits/stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 762:/usr/include/c++/5/bits/stl_iterator.h ****       {
 763:/usr/include/c++/5/bits/stl_iterator.h **** 	++_M_current;
 764:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 765:/usr/include/c++/5/bits/stl_iterator.h ****       }
 766:/usr/include/c++/5/bits/stl_iterator.h **** 
 767:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator
 768:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 769:/usr/include/c++/5/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 770:/usr/include/c++/5/bits/stl_iterator.h **** 
 771:/usr/include/c++/5/bits/stl_iterator.h ****       // Bidirectional iterator requirements
 772:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator&
 773:/usr/include/c++/5/bits/stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
 774:/usr/include/c++/5/bits/stl_iterator.h ****       {
 775:/usr/include/c++/5/bits/stl_iterator.h **** 	--_M_current;
 776:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 777:/usr/include/c++/5/bits/stl_iterator.h ****       }
 778:/usr/include/c++/5/bits/stl_iterator.h **** 
 779:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator
 780:/usr/include/c++/5/bits/stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 781:/usr/include/c++/5/bits/stl_iterator.h ****       { return __normal_iterator(_M_current--); }
 782:/usr/include/c++/5/bits/stl_iterator.h **** 
 783:/usr/include/c++/5/bits/stl_iterator.h ****       // Random access iterator requirements
 784:/usr/include/c++/5/bits/stl_iterator.h ****       reference
 785:/usr/include/c++/5/bits/stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 786:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current[__n]; }
 787:/usr/include/c++/5/bits/stl_iterator.h **** 
 788:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator&
 789:/usr/include/c++/5/bits/stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 790:/usr/include/c++/5/bits/stl_iterator.h ****       { _M_current += __n; return *this; }
 791:/usr/include/c++/5/bits/stl_iterator.h **** 
 792:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator
 793:/usr/include/c++/5/bits/stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 794:/usr/include/c++/5/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 795:/usr/include/c++/5/bits/stl_iterator.h **** 
 796:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator&
 797:/usr/include/c++/5/bits/stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 798:/usr/include/c++/5/bits/stl_iterator.h ****       { _M_current -= __n; return *this; }
 799:/usr/include/c++/5/bits/stl_iterator.h **** 
 800:/usr/include/c++/5/bits/stl_iterator.h ****       __normal_iterator
 801:/usr/include/c++/5/bits/stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 802:/usr/include/c++/5/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 803:/usr/include/c++/5/bits/stl_iterator.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 197


 804:/usr/include/c++/5/bits/stl_iterator.h ****       const _Iterator&
 805:/usr/include/c++/5/bits/stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
 1885              		.loc 13 805 0
 1886              		.cfi_startproc
 1887 0000 55       		pushq	%rbp
 1888              		.cfi_def_cfa_offset 16
 1889              		.cfi_offset 6, -16
 1890 0001 4889E5   		movq	%rsp, %rbp
 1891              		.cfi_def_cfa_register 6
 1892 0004 48897DF8 		movq	%rdi, -8(%rbp)
 806:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
 1893              		.loc 13 806 0
 1894 0008 488B45F8 		movq	-8(%rbp), %rax
 1895 000c 5D       		popq	%rbp
 1896              		.cfi_def_cfa 7, 8
 1897 000d C3       		ret
 1898              		.cfi_endproc
 1899              	.LFE10122:
 1901              		.section	.text._ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldt
 1902              		.weak	_ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseE
 1904              	_ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseEcldtfp0
 1905              	.LFB10124:
 807:/usr/include/c++/5/bits/stl_iterator.h ****     };
 808:/usr/include/c++/5/bits/stl_iterator.h **** 
 809:/usr/include/c++/5/bits/stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
 810:/usr/include/c++/5/bits/stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
 811:/usr/include/c++/5/bits/stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
 812:/usr/include/c++/5/bits/stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
 813:/usr/include/c++/5/bits/stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
 814:/usr/include/c++/5/bits/stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
 815:/usr/include/c++/5/bits/stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
 816:/usr/include/c++/5/bits/stl_iterator.h **** 
 817:/usr/include/c++/5/bits/stl_iterator.h ****   // Forward iterator requirements
 818:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 819:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 820:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
 821:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 822:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 823:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 824:/usr/include/c++/5/bits/stl_iterator.h **** 
 825:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 826:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 827:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 828:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 829:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 830:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 831:/usr/include/c++/5/bits/stl_iterator.h **** 
 832:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 833:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 834:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 835:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 836:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 837:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 838:/usr/include/c++/5/bits/stl_iterator.h **** 
 839:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 840:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 841:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
GAS LISTING /tmp/ccX8BQhk.s 			page 198


 842:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 843:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 844:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 845:/usr/include/c++/5/bits/stl_iterator.h **** 
 846:/usr/include/c++/5/bits/stl_iterator.h ****   // Random access iterator requirements
 847:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 848:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 849:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
 850:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 851:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 852:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 853:/usr/include/c++/5/bits/stl_iterator.h **** 
 854:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 855:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 856:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
 857:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 858:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 859:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 860:/usr/include/c++/5/bits/stl_iterator.h **** 
 861:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 862:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 863:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
 864:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 865:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 866:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 867:/usr/include/c++/5/bits/stl_iterator.h **** 
 868:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 869:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 870:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
 871:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 872:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 873:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 874:/usr/include/c++/5/bits/stl_iterator.h **** 
 875:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 876:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 877:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 878:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 879:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 880:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 881:/usr/include/c++/5/bits/stl_iterator.h **** 
 882:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 883:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 884:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
 885:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 886:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 887:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 888:/usr/include/c++/5/bits/stl_iterator.h **** 
 889:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 890:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 891:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 892:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 893:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 894:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 895:/usr/include/c++/5/bits/stl_iterator.h **** 
 896:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 897:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
 898:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
GAS LISTING /tmp/ccX8BQhk.s 			page 199


 899:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 900:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 901:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 902:/usr/include/c++/5/bits/stl_iterator.h **** 
 903:/usr/include/c++/5/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 904:/usr/include/c++/5/bits/stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
 905:/usr/include/c++/5/bits/stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 906:/usr/include/c++/5/bits/stl_iterator.h ****   // parameters.
 907:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 908:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 909:/usr/include/c++/5/bits/stl_iterator.h ****     // DR 685.
 910:/usr/include/c++/5/bits/stl_iterator.h ****     inline auto
 911:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 1906              		.loc 13 911 0
 1907              		.cfi_startproc
 1908 0000 55       		pushq	%rbp
 1909              		.cfi_def_cfa_offset 16
 1910              		.cfi_offset 6, -16
 1911 0001 4889E5   		movq	%rsp, %rbp
 1912              		.cfi_def_cfa_register 6
 1913 0004 53       		pushq	%rbx
 1914 0005 4883EC18 		subq	$24, %rsp
 1915              		.cfi_offset 3, -24
 1916 0009 48897DE8 		movq	%rdi, -24(%rbp)
 1917 000d 488975E0 		movq	%rsi, -32(%rbp)
 912:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
 913:/usr/include/c++/5/bits/stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
 914:/usr/include/c++/5/bits/stl_iterator.h **** #else
 915:/usr/include/c++/5/bits/stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
 916:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 917:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 918:/usr/include/c++/5/bits/stl_iterator.h **** #endif
 919:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 1918              		.loc 13 919 0
 1919 0011 488B45E8 		movq	-24(%rbp), %rax
 1920 0015 4889C7   		movq	%rax, %rdi
 1921 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4ba
 1921      00
 1922 001d 488B00   		movq	(%rax), %rax
 1923 0020 4889C3   		movq	%rax, %rbx
 1924 0023 488B45E0 		movq	-32(%rbp), %rax
 1925 0027 4889C7   		movq	%rax, %rdi
 1926 002a E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4bas
 1926      00
 1927 002f 488B00   		movq	(%rax), %rax
 1928 0032 4829C3   		subq	%rax, %rbx
 1929 0035 4889D8   		movq	%rbx, %rax
 1930 0038 4883C418 		addq	$24, %rsp
 1931 003c 5B       		popq	%rbx
 1932 003d 5D       		popq	%rbp
 1933              		.cfi_def_cfa 7, 8
 1934 003e C3       		ret
 1935              		.cfi_endproc
 1936              	.LFE10124:
 1938              		.section	.text._ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__nor
 1939              		.weak	_ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_itera
 1941              	_ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_iteratorIT_T
GAS LISTING /tmp/ccX8BQhk.s 			page 200


 1942              	.LFB10125:
 920:/usr/include/c++/5/bits/stl_iterator.h **** 
 921:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 922:/usr/include/c++/5/bits/stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
 923:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 1943              		.loc 13 923 0
 1944              		.cfi_startproc
 1945 0000 55       		pushq	%rbp
 1946              		.cfi_def_cfa_offset 16
 1947              		.cfi_offset 6, -16
 1948 0001 4889E5   		movq	%rsp, %rbp
 1949              		.cfi_def_cfa_register 6
 1950 0004 53       		pushq	%rbx
 1951 0005 4883EC18 		subq	$24, %rsp
 1952              		.cfi_offset 3, -24
 1953 0009 48897DE8 		movq	%rdi, -24(%rbp)
 1954 000d 488975E0 		movq	%rsi, -32(%rbp)
 924:/usr/include/c++/5/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 925:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 926:/usr/include/c++/5/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 1955              		.loc 13 926 0
 1956 0011 488B45E8 		movq	-24(%rbp), %rax
 1957 0015 4889C7   		movq	%rax, %rdi
 1958 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4ba
 1958      00
 1959 001d 488B00   		movq	(%rax), %rax
 1960 0020 4889C3   		movq	%rax, %rbx
 1961 0023 488B45E0 		movq	-32(%rbp), %rax
 1962 0027 4889C7   		movq	%rax, %rdi
 1963 002a E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4ba
 1963      00
 1964 002f 488B00   		movq	(%rax), %rax
 1965 0032 4829C3   		subq	%rax, %rbx
 1966 0035 4889D8   		movq	%rbx, %rax
 1967 0038 4883C418 		addq	$24, %rsp
 1968 003c 5B       		popq	%rbx
 1969 003d 5D       		popq	%rbp
 1970              		.cfi_def_cfa 7, 8
 1971 003e C3       		ret
 1972              		.cfi_endproc
 1973              	.LFE10125:
 1975              		.section	.text._ZN5boost10as_literalIcLm2EEENS_14iterator_rangeIPKT_EERAT0__S3_,"axG",@progbits,_Z
 1976              		.weak	_ZN5boost10as_literalIcLm2EEENS_14iterator_rangeIPKT_EERAT0__S3_
 1978              	_ZN5boost10as_literalIcLm2EEENS_14iterator_rangeIPKT_EERAT0__S3_:
 1979              	.LFB10203:
  63:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  64:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #ifndef BOOST_NO_CWCHAR
  65:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         inline bool is_char_ptr( wchar_t* )
  66:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
  67:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****             return true;
  68:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
  69:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  70:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         inline bool is_char_ptr( const wchar_t* )
  71:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
  72:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****             return true;
  73:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
  74:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** #endif
GAS LISTING /tmp/ccX8BQhk.s 			page 201


  75:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  76:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         template< class T >
  77:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         inline long is_char_ptr( const T& /* r */ )
  78:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
  79:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****             return 0L;
  80:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
  81:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  82:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         template< class T >
  83:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         inline iterator_range<T*>
  84:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         make_range( T* const r, bool )
  85:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
  86:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****             return iterator_range<T*>( r, r + length(r) );
  87:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
  88:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  89:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         template< class T >
  90:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         inline iterator_range<BOOST_DEDUCED_TYPENAME range_iterator<T>::type>
  91:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         make_range( T& r, long )
  92:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
  93:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****             return boost::make_iterator_range( r );
  94:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
  95:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  96:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     }
  97:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
  98:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     template< class Range >
  99:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     inline iterator_range<BOOST_DEDUCED_TYPENAME range_iterator<Range>::type>
 100:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     as_literal( Range& r )
 101:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     {
 102:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         return range_detail::make_range( r, range_detail::is_char_ptr(r) );
 103:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     }
 104:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
 105:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     template< class Range >
 106:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     inline iterator_range<BOOST_DEDUCED_TYPENAME range_iterator<const Range>::type>
 107:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     as_literal( const Range& r )
 108:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     {
 109:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         return range_detail::make_range( r, range_detail::is_char_ptr(r) );
 110:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     }
 111:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
 112:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     template< class Char, std::size_t sz >
 113:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     inline iterator_range<Char*> as_literal( Char (&arr)[sz] )
 114:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     {
 115:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         return range_detail::make_range( arr, range_detail::is_char_ptr(arr) );
 116:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     }
 117:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
 118:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     template< class Char, std::size_t sz >
 119:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     inline iterator_range<const Char*> as_literal( const Char (&arr)[sz] )
 1980              		.loc 4 119 0
 1981              		.cfi_startproc
 1982 0000 55       		pushq	%rbp
 1983              		.cfi_def_cfa_offset 16
 1984              		.cfi_offset 6, -16
 1985 0001 4889E5   		movq	%rsp, %rbp
 1986              		.cfi_def_cfa_register 6
 1987 0004 4883EC10 		subq	$16, %rsp
 1988 0008 48897DF8 		movq	%rdi, -8(%rbp)
 120:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     {
 121:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         return range_detail::make_range( arr, range_detail::is_char_ptr(arr) );
 1989              		.loc 4 121 0
GAS LISTING /tmp/ccX8BQhk.s 			page 202


 1990 000c 488B45F8 		movq	-8(%rbp), %rax
 1991 0010 4889C7   		movq	%rax, %rdi
 1992 0013 E8000000 		call	_ZN5boost12range_detail11is_char_ptrEPKc
 1992      00
 1993 0018 0FB6D0   		movzbl	%al, %edx
 1994 001b 488B45F8 		movq	-8(%rbp), %rax
 1995 001f 89D6     		movl	%edx, %esi
 1996 0021 4889C7   		movq	%rax, %rdi
 1997 0024 E8000000 		call	_ZN5boost12range_detail10make_rangeIKcEENS_14iterator_rangeIPT_EES5_b
 1997      00
 122:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****     }
 1998              		.loc 4 122 0
 1999 0029 C9       		leave
 2000              		.cfi_def_cfa 7, 8
 2001 002a C3       		ret
 2002              		.cfi_endproc
 2003              	.LFE10203:
 2005              		.section	.text._ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC2INS_14iterator_rangeI
 2006              		.align 2
 2007              		.weak	_ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC2INS_14iterator_rangeIS4_EEEERK
 2009              	_ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC2INS_14iterator_rangeIS4_EEEERKT_S5_:
 2010              	.LFB10205:
 2011              		.file 17 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** //  Boost string_algo library finder.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** //  Copyright Pavol Droba 2002-2006.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #ifndef BOOST_STRING_FINDER_DETAIL_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #define BOOST_STRING_FINDER_DETAIL_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #include <boost/algorithm/string/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #include <boost/algorithm/string/constants.hpp>
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #include <boost/detail/iterator.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #include <boost/range/iterator_range_core.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #include <boost/range/begin.hpp>
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #include <boost/range/end.hpp>
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #include <boost/range/empty.hpp>
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** #include <boost/range/as_literal.hpp>
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** namespace boost {
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****     namespace algorithm {
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****         namespace detail {
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** //  find first functor -----------------------------------------------//
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****             // find a subsequence in the sequence ( functor )
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****             /*
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 Returns a pair <begin,end> marking the subsequence in the sequence.
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 If the find fails, functor returns <End,End>
GAS LISTING /tmp/ccX8BQhk.s 			page 203


  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****             */
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****             template<typename SearchIteratorT,typename PredicateT>
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****             struct first_finderF
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****             {
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 typedef SearchIteratorT search_iterator_type;
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 // Construction
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 template< typename SearchT >
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 first_finderF( const SearchT& Search, PredicateT Comp ) :
 2012              		.loc 17 43 0
 2013              		.cfi_startproc
 2014 0000 55       		pushq	%rbp
 2015              		.cfi_def_cfa_offset 16
 2016              		.cfi_offset 6, -16
 2017 0001 4889E5   		movq	%rsp, %rbp
 2018              		.cfi_def_cfa_register 6
 2019 0004 53       		pushq	%rbx
 2020 0005 4883EC18 		subq	$24, %rsp
 2021              		.cfi_offset 3, -24
 2022 0009 48897DE8 		movq	%rdi, -24(%rbp)
 2023 000d 488975E0 		movq	%rsi, -32(%rbp)
 2024              	.LBB11:
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     m_Search(::boost::begin(Search), ::boost::end(Search)), m_Comp(Comp) {}
 2025              		.loc 17 44 0
 2026 0011 488B45E0 		movq	-32(%rbp), %rax
 2027 0015 4889C7   		movq	%rax, %rdi
 2028 0018 E8000000 		call	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS
 2028      00
 2029 001d 4889C3   		movq	%rax, %rbx
 2030 0020 488B45E0 		movq	-32(%rbp), %rax
 2031 0024 4889C7   		movq	%rax, %rdi
 2032 0027 E8000000 		call	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeE
 2032      00
 2033 002c 4889C1   		movq	%rax, %rcx
 2034 002f 488B45E8 		movq	-24(%rbp), %rax
 2035 0033 4889DA   		movq	%rbx, %rdx
 2036 0036 4889CE   		movq	%rcx, %rsi
 2037 0039 4889C7   		movq	%rax, %rdi
 2038 003c E8000000 		call	_ZN5boost14iterator_rangeIPKcEC1IS2_EET_S5_
 2038      00
 2039              	.LBE11:
 2040 0041 90       		nop
 2041 0042 4883C418 		addq	$24, %rsp
 2042 0046 5B       		popq	%rbx
 2043 0047 5D       		popq	%rbp
 2044              		.cfi_def_cfa 7, 8
 2045 0048 C3       		ret
 2046              		.cfi_endproc
 2047              	.LFE10205:
 2049              		.weak	_ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC1INS_14iterator_rangeIS4_EEEERK
 2050              		.set	_ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC1INS_14iterator_rangeIS4_EEEERKT
 2051              		.section	.text._ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC2ERKS6_,"axG",
 2052              		.align 2
 2053              		.weak	_ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC2ERKS6_
 2055              	_ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC2ERKS6_:
 2056              	.LFB10208:
 2057              		.file 18 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp"
GAS LISTING /tmp/ccX8BQhk.s 			page 204


   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** //  Boost string_algo library formatter.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** //  Copyright Pavol Droba 2002-2003.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** //  See http://www.boost.org for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** #ifndef BOOST_STRING_FORMATTER_DETAIL_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** #define BOOST_STRING_FORMATTER_DETAIL_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** #include <boost/range/iterator_range_core.hpp>
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** #include <boost/range/begin.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** #include <boost/range/end.hpp>
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** #include <boost/range/const_iterator.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** #include <boost/algorithm/string/detail/util.hpp>
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** //  generic replace functors -----------------------------------------------//
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** namespace boost {
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****     namespace algorithm {
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****         namespace detail {
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** //  const format functor ----------------------------------------------------//
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****             // constant format functor
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****             template<typename RangeT>
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****             struct const_formatF
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****             {
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****             private:
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 typedef BOOST_STRING_TYPENAME
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                     range_const_iterator<RangeT>::type format_iterator;
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 typedef iterator_range<format_iterator> result_type;
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****             
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****             public:
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 // Construction
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 const_formatF(const RangeT& Format) :
 2058              		.loc 18 41 0
 2059              		.cfi_startproc
 2060 0000 55       		pushq	%rbp
 2061              		.cfi_def_cfa_offset 16
 2062              		.cfi_offset 6, -16
 2063 0001 4889E5   		movq	%rsp, %rbp
 2064              		.cfi_def_cfa_register 6
 2065 0004 53       		pushq	%rbx
 2066 0005 4883EC18 		subq	$24, %rsp
 2067              		.cfi_offset 3, -24
 2068 0009 48897DE8 		movq	%rdi, -24(%rbp)
 2069 000d 488975E0 		movq	%rsi, -32(%rbp)
 2070              	.LBB12:
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                     m_Format(::boost::begin(Format), ::boost::end(Format)) {}
 2071              		.loc 18 42 0
 2072 0011 488B45E0 		movq	-32(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 205


 2073 0015 4889C7   		movq	%rax, %rdi
 2074 0018 E8000000 		call	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS
 2074      00
 2075 001d 4889C3   		movq	%rax, %rbx
 2076 0020 488B45E0 		movq	-32(%rbp), %rax
 2077 0024 4889C7   		movq	%rax, %rdi
 2078 0027 E8000000 		call	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeE
 2078      00
 2079 002c 4889C1   		movq	%rax, %rcx
 2080 002f 488B45E8 		movq	-24(%rbp), %rax
 2081 0033 4889DA   		movq	%rbx, %rdx
 2082 0036 4889CE   		movq	%rcx, %rsi
 2083 0039 4889C7   		movq	%rax, %rdi
 2084 003c E8000000 		call	_ZN5boost14iterator_rangeIPKcEC1IS2_EET_S5_
 2084      00
 2085              	.LBE12:
 2086 0041 90       		nop
 2087 0042 4883C418 		addq	$24, %rsp
 2088 0046 5B       		popq	%rbx
 2089 0047 5D       		popq	%rbp
 2090              		.cfi_def_cfa 7, 8
 2091 0048 C3       		ret
 2092              		.cfi_endproc
 2093              	.LFE10208:
 2095              		.weak	_ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC1ERKS6_
 2096              		.set	_ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC1ERKS6_,_ZN5boost9algori
 2097              		.section	.text._ZN5boost17range_adl_barrier5beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 2098              		.weak	_ZN5boost17range_adl_barrier5beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_
 2100              	_ZN5boost17range_adl_barrier5beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range
 2101              	.LFB10214:
 2102              		.file 19 "/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** // Boost.Range library
   2:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** //
   3:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** //  Copyright Thorsten Ottosen 2003-2004. Use, modification and
   4:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** //  distribution is subject to the Boost Software License, Version
   5:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** //  1.0. (See accompanying file LICENSE_1_0.txt or copy at
   6:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
   7:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** //
   8:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** // For more information, see http://www.boost.org/libs/range/
   9:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** //
  10:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #ifndef BOOST_RANGE_BEGIN_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #define BOOST_RANGE_BEGIN_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #if defined(_MSC_VER)
  15:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** # pragma once
  16:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #endif
  17:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  18:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #include <boost/range/config.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  20:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #ifdef BOOST_NO_FUNCTION_TEMPLATE_ORDERING
  21:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #include <boost/range/detail/begin.hpp>
  22:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #else
  23:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  24:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #include <boost/range/iterator.hpp>
  25:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  26:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** namespace boost
GAS LISTING /tmp/ccX8BQhk.s 			page 206


  27:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** {
  28:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  29:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
  30:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** namespace range_detail
  31:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** {
  32:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #endif
  33:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  34:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     //////////////////////////////////////////////////////////////////////
  35:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     // primary template
  36:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     //////////////////////////////////////////////////////////////////////
  37:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  38:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     template< typename C >
  39:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     inline BOOST_DEDUCED_TYPENAME range_iterator<C>::type
  40:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     range_begin( C& c )
  41:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     {
  42:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         //
  43:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         // If you get a compile-error here, it is most likely because
  44:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         // you have not implemented range_begin() properly in
  45:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         // the namespace of C
  46:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         //
  47:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         return c.begin();
  48:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     }
  49:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  50:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     //////////////////////////////////////////////////////////////////////
  51:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     // pair
  52:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     //////////////////////////////////////////////////////////////////////
  53:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  54:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     template< typename Iterator >
  55:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     inline Iterator range_begin( const std::pair<Iterator,Iterator>& p )
  56:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     {
  57:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         return p.first;
  58:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     }
  59:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  60:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     template< typename Iterator >
  61:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     inline Iterator range_begin( std::pair<Iterator,Iterator>& p )
  62:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     {
  63:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         return p.first;
  64:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     }
  65:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  66:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     //////////////////////////////////////////////////////////////////////
  67:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     // array
  68:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     //////////////////////////////////////////////////////////////////////
  69:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  70:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     //
  71:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     // May this be discarded? Or is it needed for bad compilers?
  72:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     //
  73:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     template< typename T, std::size_t sz >
  74:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     inline const T* range_begin( const T (&a)[sz] )
  75:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     {
  76:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         return a;
  77:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     }
  78:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  79:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     template< typename T, std::size_t sz >
  80:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     inline T* range_begin( T (&a)[sz] )
  81:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     {
  82:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****         return a;
  83:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     }
GAS LISTING /tmp/ccX8BQhk.s 			page 207


  84:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  85:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  86:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
  87:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** } // namespace 'range_detail'
  88:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #endif
  89:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  90:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** // Use a ADL namespace barrier to avoid ambiguity with other unqualified
  91:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** // calls. This is particularly important with C++0x encouraging
  92:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** // unqualified calls to begin/end.
  93:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** namespace range_adl_barrier
  94:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** {
  95:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
  96:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** template< class T >
  97:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** inline BOOST_DEDUCED_TYPENAME range_iterator<T>::type begin( T& r )
 2103              		.loc 19 97 0
 2104              		.cfi_startproc
 2105 0000 55       		pushq	%rbp
 2106              		.cfi_def_cfa_offset 16
 2107              		.cfi_offset 6, -16
 2108 0001 4889E5   		movq	%rsp, %rbp
 2109              		.cfi_def_cfa_register 6
 2110 0004 4883EC10 		subq	$16, %rsp
 2111 0008 48897DF8 		movq	%rdi, -8(%rbp)
  98:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** {
  99:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
 100:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     using namespace range_detail;
 101:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #endif
 102:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     return range_begin( r );
 2112              		.loc 19 102 0
 2113 000c 488B45F8 		movq	-8(%rbp), %rax
 2114 0010 4889C7   		movq	%rax, %rdi
 2115 0013 E8000000 		call	_ZN5boost12range_detail11range_beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS
 2115      00
 103:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** }
 2116              		.loc 19 103 0
 2117 0018 C9       		leave
 2118              		.cfi_def_cfa 7, 8
 2119 0019 C3       		ret
 2120              		.cfi_endproc
 2121              	.LFE10214:
 2123              		.section	.text._ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 2124              		.weak	_ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14
 2126              	_ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_i
 2127              	.LFB10215:
 2128              		.file 20 "/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** // Boost.Range library
   2:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** //
   3:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** //  Copyright Thorsten Ottosen 2003-2004. Use, modification and
   4:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** //  distribution is subject to the Boost Software License, Version
   5:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** //  1.0. (See accompanying file LICENSE_1_0.txt or copy at
   6:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
   7:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** //
   8:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** // For more information, see http://www.boost.org/libs/range/
   9:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** //
  10:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #ifndef BOOST_RANGE_END_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #define BOOST_RANGE_END_HPP
GAS LISTING /tmp/ccX8BQhk.s 			page 208


  13:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #if defined(_MSC_VER)
  15:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** # pragma once
  16:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #endif
  17:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  18:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #include <boost/range/config.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  20:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #ifdef BOOST_NO_FUNCTION_TEMPLATE_ORDERING
  21:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #include <boost/range/detail/end.hpp>
  22:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #else
  23:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  24:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #include <boost/range/detail/implementation_help.hpp>
  25:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #include <boost/range/iterator.hpp>
  26:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #include <boost/range/const_iterator.hpp>
  27:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  28:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** namespace boost
  29:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** {
  30:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  31:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
  32:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** namespace range_detail
  33:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** {
  34:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #endif
  35:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  36:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         //////////////////////////////////////////////////////////////////////
  37:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         // primary template
  38:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         //////////////////////////////////////////////////////////////////////
  39:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         template< typename C >
  40:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         inline BOOST_DEDUCED_TYPENAME range_iterator<C>::type
  41:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         range_end( C& c )
  42:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         {
  43:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             //
  44:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             // If you get a compile-error here, it is most likely because
  45:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             // you have not implemented range_begin() properly in
  46:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             // the namespace of C
  47:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             //
  48:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             return c.end();
  49:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         }
  50:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  51:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         //////////////////////////////////////////////////////////////////////
  52:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         // pair
  53:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         //////////////////////////////////////////////////////////////////////
  54:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  55:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         template< typename Iterator >
  56:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         inline Iterator range_end( const std::pair<Iterator,Iterator>& p )
  57:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         {
  58:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             return p.second;
  59:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         }
  60:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  61:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         template< typename Iterator >
  62:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         inline Iterator range_end( std::pair<Iterator,Iterator>& p )
  63:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         {
  64:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             return p.second;
  65:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         }
  66:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  67:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         //////////////////////////////////////////////////////////////////////
  68:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         // array
  69:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         //////////////////////////////////////////////////////////////////////
GAS LISTING /tmp/ccX8BQhk.s 			page 209


  70:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  71:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         template< typename T, std::size_t sz >
  72:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         inline const T* range_end( const T (&a)[sz] )
  73:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         {
  74:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             return range_detail::array_end<T,sz>( a );
  75:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         }
  76:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  77:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         template< typename T, std::size_t sz >
  78:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         inline T* range_end( T (&a)[sz] )
  79:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         {
  80:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****             return range_detail::array_end<T,sz>( a );
  81:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         }
  82:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  83:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
  84:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** } // namespace 'range_detail'
  85:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #endif
  86:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  87:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** namespace range_adl_barrier
  88:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** {
  89:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  90:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** template< class T >
  91:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** inline BOOST_DEDUCED_TYPENAME range_iterator<T>::type end( T& r )
 2129              		.loc 20 91 0
 2130              		.cfi_startproc
 2131 0000 55       		pushq	%rbp
 2132              		.cfi_def_cfa_offset 16
 2133              		.cfi_offset 6, -16
 2134 0001 4889E5   		movq	%rsp, %rbp
 2135              		.cfi_def_cfa_register 6
 2136 0004 4883EC10 		subq	$16, %rsp
 2137 0008 48897DF8 		movq	%rdi, -8(%rbp)
  92:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** {
  93:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
  94:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****     using namespace range_detail;
  95:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #endif
  96:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****     return range_end( r );
 2138              		.loc 20 96 0
 2139 000c 488B45F8 		movq	-8(%rbp), %rax
 2140 0010 4889C7   		movq	%rax, %rdi
 2141 0013 E8000000 		call	_ZN5boost12range_detail9range_endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14
 2141      00
  97:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** }
 2142              		.loc 20 97 0
 2143 0018 C9       		leave
 2144              		.cfi_def_cfa 7, 8
 2145 0019 C3       		ret
 2146              		.cfi_endproc
 2147              	.LFE10215:
 2149              		.section	.text._ZNK5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEclIN9__gnu_cxx17__norm
 2150              		.align 2
 2151              		.weak	_ZNK5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEclIN9__gnu_cxx17__normal_iterat
 2153              	_ZNK5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEclIN9__gnu_cxx17__normal_iteratorIPcNS
 2154              	.LFB10216:
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 first_finderF(
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         search_iterator_type SearchBegin,
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         search_iterator_type SearchEnd,
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         PredicateT Comp ) :
GAS LISTING /tmp/ccX8BQhk.s 			page 210


  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     m_Search(SearchBegin, SearchEnd), m_Comp(Comp) {}
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 // Operation
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 template< typename ForwardIteratorT >
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 iterator_range<ForwardIteratorT>
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 operator()(
 2155              		.loc 17 54 0
 2156              		.cfi_startproc
 2157              		.cfi_personality 0x3,__gxx_personality_v0
 2158              		.cfi_lsda 0x3,.LLSDA10216
 2159 0000 55       		pushq	%rbp
 2160              		.cfi_def_cfa_offset 16
 2161              		.cfi_offset 6, -16
 2162 0001 4889E5   		movq	%rsp, %rbp
 2163              		.cfi_def_cfa_register 6
 2164 0004 4883EC70 		subq	$112, %rsp
 2165 0008 48897DA8 		movq	%rdi, -88(%rbp)
 2166 000c 488975A0 		movq	%rsi, -96(%rbp)
 2167 0010 48895590 		movq	%rdx, -112(%rbp)
 2168              		.loc 17 54 0
 2169 0014 64488B04 		movq	%fs:40, %rax
 2169      25280000 
 2169      00
 2170 001d 488945F8 		movq	%rax, -8(%rbp)
 2171 0021 31C0     		xorl	%eax, %eax
 2172              	.LBB13:
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     ForwardIteratorT Begin,
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     ForwardIteratorT End ) const
  57:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 {
  58:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     typedef iterator_range<ForwardIteratorT> result_type;
  59:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     typedef ForwardIteratorT input_iterator_type;
  60:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  61:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     // Outer loop
  62:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     for(input_iterator_type OuterIt=Begin;
 2173              		.loc 17 62 0
 2174 0023 488B45A0 		movq	-96(%rbp), %rax
 2175 0027 488945B0 		movq	%rax, -80(%rbp)
 2176              	.L119:
 2177              		.loc 17 62 0 is_stmt 0 discriminator 1
 2178 002b 488D5590 		leaq	-112(%rbp), %rdx
 2179 002f 488D45B0 		leaq	-80(%rbp), %rax
 2180 0033 4889D6   		movq	%rdx, %rsi
 2181 0036 4889C7   		movq	%rax, %rdi
 2182 0039 E8000000 		call	_ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iter
 2182      00
 2183 003e 84C0     		testb	%al, %al
 2184 0040 0F840F01 		je	.L110
 2184      0000
 2185              	.LBB14:
  63:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         OuterIt!=End;
  64:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         ++OuterIt)
  65:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     {
  66:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         // Sanity check
  67:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         if( boost::empty(m_Search) )
 2186              		.loc 17 67 0 is_stmt 1
 2187 0046 488B45A8 		movq	-88(%rbp), %rax
 2188 004a 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 211


 2189              	.LEHB20:
 2190 004d E8000000 		call	_ZN5boost5emptyINS_14iterator_rangeIPKcEEEEbRKT_
 2190      00
 2191 0052 84C0     		testb	%al, %al
 2192 0054 7424     		je	.L111
  68:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                             return result_type( End, End );
 2193              		.loc 17 68 0
 2194 0056 488B5590 		movq	-112(%rbp), %rdx
 2195 005a 488B4D90 		movq	-112(%rbp), %rcx
 2196 005e 488D45D0 		leaq	-48(%rbp), %rax
 2197 0062 4889CE   		movq	%rcx, %rsi
 2198 0065 4889C7   		movq	%rax, %rdi
 2199 0068 E8000000 		call	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11cha
 2199      00
 2200              		.loc 17 68 0 is_stmt 0 discriminator 1
 2201 006d 488B45D0 		movq	-48(%rbp), %rax
 2202 0071 488B55D8 		movq	-40(%rbp), %rdx
 2203 0075 E9FA0000 		jmp	.L120
 2203      00
 2204              	.L111:
  69:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  70:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         input_iterator_type InnerIt=OuterIt;
 2205              		.loc 17 70 0 is_stmt 1
 2206 007a 488B45B0 		movq	-80(%rbp), %rax
 2207 007e 488945C0 		movq	%rax, -64(%rbp)
  71:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         search_iterator_type SubstrIt=m_Search.begin();
 2208              		.loc 17 71 0
 2209 0082 488B45A8 		movq	-88(%rbp), %rax
 2210 0086 4889C7   		movq	%rax, %rdi
 2211 0089 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traver
 2211      00
 2212 008e 488945C8 		movq	%rax, -56(%rbp)
 2213              	.L117:
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         for(;
  73:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                             InnerIt!=End && SubstrIt!=m_Search.end();
 2214              		.loc 17 73 0 discriminator 7
 2215 0092 488D5590 		leaq	-112(%rbp), %rdx
 2216 0096 488D45C0 		leaq	-64(%rbp), %rax
 2217 009a 4889D6   		movq	%rdx, %rsi
 2218 009d 4889C7   		movq	%rax, %rdi
 2219 00a0 E8000000 		call	_ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iter
 2219      00
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         for(;
 2220              		.loc 17 72 0 discriminator 7
 2221 00a5 84C0     		testb	%al, %al
 2222 00a7 7419     		je	.L113
 2223              		.loc 17 73 0 discriminator 1
 2224 00a9 488B45A8 		movq	-88(%rbp), %rax
 2225 00ad 4889C7   		movq	%rax, %rdi
 2226 00b0 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traver
 2226      00
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         for(;
 2227              		.loc 17 72 0 discriminator 1
 2228 00b5 483B45C8 		cmpq	-56(%rbp), %rax
 2229 00b9 7407     		je	.L113
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         for(;
 2230              		.loc 17 72 0 is_stmt 0 discriminator 3
GAS LISTING /tmp/ccX8BQhk.s 			page 212


 2231 00bb B8010000 		movl	$1, %eax
 2231      00
 2232 00c0 EB05     		jmp	.L114
 2233              	.L113:
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         for(;
 2234              		.loc 17 72 0 discriminator 4
 2235 00c2 B8000000 		movl	$0, %eax
 2235      00
 2236              	.L114:
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         for(;
 2237              		.loc 17 72 0 discriminator 6
 2238 00c7 84C0     		testb	%al, %al
 2239 00c9 7441     		je	.L115
  74:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                             ++InnerIt,++SubstrIt)
  75:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         {
  76:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                             if( !( m_Comp(*InnerIt,*SubstrIt) ) )
 2240              		.loc 17 76 0 is_stmt 1
 2241 00cb 488D45C0 		leaq	-64(%rbp), %rax
 2242 00cf 4889C7   		movq	%rax, %rdi
 2243 00d2 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv
 2243      00
 2244 00d7 4889C6   		movq	%rax, %rsi
 2245 00da 488B45A8 		movq	-88(%rbp), %rax
 2246 00de 488D4810 		leaq	16(%rax), %rcx
 2247 00e2 488B45C8 		movq	-56(%rbp), %rax
 2248 00e6 4889C2   		movq	%rax, %rdx
 2249 00e9 4889CF   		movq	%rcx, %rdi
 2250 00ec E8000000 		call	_ZNK5boost9algorithm8is_equalclIccEEbRKT_RKT0_
 2250      00
 2251 00f1 83F001   		xorl	$1, %eax
 2252 00f4 84C0     		testb	%al, %al
 2253 00f6 7513     		jne	.L125
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         for(;
 2254              		.loc 17 72 0
 2255 00f8 488D45C0 		leaq	-64(%rbp), %rax
 2256 00fc 4889C7   		movq	%rax, %rdi
 2257 00ff E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv
 2257      00
 2258 0104 488345C8 		addq	$1, -56(%rbp)
 2258      01
 2259 0109 EB87     		jmp	.L117
 2260              	.L125:
  77:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                                 break;
 2261              		.loc 17 77 0
 2262 010b 90       		nop
 2263              	.L115:
  78:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         }
  79:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  80:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         // Substring matching succeeded
  81:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         if ( SubstrIt==m_Search.end() )
 2264              		.loc 17 81 0
 2265 010c 488B45A8 		movq	-88(%rbp), %rax
 2266 0110 4889C7   		movq	%rax, %rdi
 2267 0113 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traver
 2267      00
 2268 0118 483B45C8 		cmpq	-56(%rbp), %rax
 2269 011c 0F94C0   		sete	%al
GAS LISTING /tmp/ccX8BQhk.s 			page 213


 2270 011f 84C0     		testb	%al, %al
 2271 0121 7421     		je	.L118
  82:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                             return result_type( OuterIt, InnerIt );
 2272              		.loc 17 82 0
 2273 0123 488B55C0 		movq	-64(%rbp), %rdx
 2274 0127 488B4DB0 		movq	-80(%rbp), %rcx
 2275 012b 488D45E0 		leaq	-32(%rbp), %rax
 2276 012f 4889CE   		movq	%rcx, %rsi
 2277 0132 4889C7   		movq	%rax, %rdi
 2278 0135 E8000000 		call	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11cha
 2278      00
 2279              	.LEHE20:
 2280              		.loc 17 82 0 is_stmt 0 discriminator 1
 2281 013a 488B45E0 		movq	-32(%rbp), %rax
 2282 013e 488B55E8 		movq	-24(%rbp), %rdx
 2283 0142 EB30     		jmp	.L120
 2284              	.L118:
 2285              	.LBE14:
  62:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                         OuterIt!=End;
 2286              		.loc 17 62 0 is_stmt 1
 2287 0144 488D45B0 		leaq	-80(%rbp), %rax
 2288 0148 4889C7   		movq	%rax, %rdi
 2289 014b E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv
 2289      00
 2290 0150 E9D6FEFF 		jmp	.L119
 2290      FF
 2291              	.L110:
 2292              	.LBE13:
  83:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     }
  84:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp **** 
  85:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                     return result_type( End, End );
 2293              		.loc 17 85 0
 2294 0155 488B5590 		movq	-112(%rbp), %rdx
 2295 0159 488B4D90 		movq	-112(%rbp), %rcx
 2296 015d 488D45E0 		leaq	-32(%rbp), %rax
 2297 0161 4889CE   		movq	%rcx, %rsi
 2298 0164 4889C7   		movq	%rax, %rdi
 2299              	.LEHB21:
 2300 0167 E8000000 		call	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11cha
 2300      00
 2301 016c 488B45E0 		movq	-32(%rbp), %rax
 2302 0170 488B55E8 		movq	-24(%rbp), %rdx
 2303              	.L120:
  86:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/finder.hpp ****                 }
 2304              		.loc 17 86 0 discriminator 2
 2305 0174 488B4DF8 		movq	-8(%rbp), %rcx
 2306 0178 6448330C 		xorq	%fs:40, %rcx
 2306      25280000 
 2306      00
 2307 0181 740F     		je	.L122
 2308 0183 EB08     		jmp	.L124
 2309              	.L123:
 2310 0185 4889C7   		movq	%rax, %rdi
 2311 0188 E8000000 		call	_Unwind_Resume
 2311      00
 2312              	.LEHE21:
 2313              	.L124:
GAS LISTING /tmp/ccX8BQhk.s 			page 214


 2314              		.loc 17 86 0 is_stmt 0
 2315 018d E8000000 		call	__stack_chk_fail
 2315      00
 2316              	.L122:
 2317 0192 C9       		leave
 2318              		.cfi_def_cfa 7, 8
 2319 0193 C3       		ret
 2320              		.cfi_endproc
 2321              	.LFE10216:
 2322              		.section	.gcc_except_table
 2323              	.LLSDA10216:
 2324 0065 FF       		.byte	0xff
 2325 0066 FF       		.byte	0xff
 2326 0067 01       		.byte	0x1
 2327 0068 0B       		.uleb128 .LLSDACSE10216-.LLSDACSB10216
 2328              	.LLSDACSB10216:
 2329 0069 4D       		.uleb128 .LEHB20-.LFB10216
 2330 006a ED01     		.uleb128 .LEHE20-.LEHB20
 2331 006c 8503     		.uleb128 .L123-.LFB10216
 2332 006e 00       		.uleb128 0
 2333 006f E702     		.uleb128 .LEHB21-.LFB10216
 2334 0071 26       		.uleb128 .LEHE21-.LEHB21
 2335 0072 00       		.uleb128 0
 2336 0073 00       		.uleb128 0
 2337              	.LLSDACSE10216:
 2338              		.section	.text._ZNK5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEclIN9__gnu_cxx17__norm
 2340              		.section	.text._ZN5boost9algorithm6detail20find_format_all_implINSt7__cxx1112basic_stringIcSt11cha
 2341              		.weak	_ZN5boost9algorithm6detail20find_format_all_implINSt7__cxx1112basic_stringIcSt11char_traitsI
 2343              	_ZN5boost9algorithm6detail20find_format_all_implINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 2344              	.LFB10217:
 2345              		.file 21 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** //  Boost string_algo library find_format_all.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** //  Copyright Pavol Droba 2002-2003.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** #ifndef BOOST_STRING_FIND_FORMAT_ALL_DETAIL_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** #define BOOST_STRING_FIND_FORMAT_ALL_DETAIL_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** #include <boost/algorithm/string/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** #include <boost/range/iterator_range_core.hpp>
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** #include <boost/range/const_iterator.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** #include <boost/range/value_type.hpp>
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** #include <boost/algorithm/string/detail/find_format_store.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** #include <boost/algorithm/string/detail/replace_storage.hpp>
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** namespace boost {
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****     namespace algorithm {
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****         namespace detail {
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** // find_format_all_copy (iterator variant) implementation ---------------------------//
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 215


  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****            template< 
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename OutputIteratorT,
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename InputT,
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FinderT,
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FormatterT,
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FindResultT,
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FormatResultT >
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             inline OutputIteratorT find_format_all_copy_impl2(
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 OutputIteratorT Output,
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const InputT& Input,
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FinderT Finder,
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FormatterT Formatter,
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const FindResultT& FindResult,
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const FormatResultT& FormatResult )
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             {       
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typedef BOOST_STRING_TYPENAME 
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     range_const_iterator<InputT>::type input_iterator_type; 
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typedef find_format_store<
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         input_iterator_type, 
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         FormatterT,
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         FormatResultT > store_type;
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Create store for the find result
  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 store_type M( FindResult, FormatResult, Formatter );
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Initialize last match
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 input_iterator_type LastMatch=::boost::begin(Input);
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Iterate through all matches
  57:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 while( M )
  58:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 {
  59:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Copy the beginning of the sequence
  60:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     Output = std::copy( LastMatch, M.begin(), Output );
  61:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Copy formatted result
  62:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     Output = std::copy( ::boost::begin(M.format_result()), ::boost::end(M.format_re
  63:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  64:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Proceed to the next match
  65:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     LastMatch=M.end();
  66:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     M=Finder( LastMatch, ::boost::end(Input) );
  67:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
  68:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  69:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Copy the rest of the sequence
  70:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 Output = std::copy( LastMatch, ::boost::end(Input), Output );
  71:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 return Output;
  73:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             }
  74:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
  75:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             template< 
  76:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename OutputIteratorT,
  77:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename InputT,
  78:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FinderT,
  79:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FormatterT,
  80:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FindResultT >
  81:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             inline OutputIteratorT find_format_all_copy_impl(
  82:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 OutputIteratorT Output,
  83:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const InputT& Input,
GAS LISTING /tmp/ccX8BQhk.s 			page 216


  84:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FinderT Finder,
  85:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FormatterT Formatter,
  86:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const FindResultT& FindResult )
  87:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             {   
  88:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 if( ::boost::algorithm::detail::check_find_result(Input, FindResult) ) {
  89:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     return ::boost::algorithm::detail::find_format_all_copy_impl2( 
  90:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Output,
  91:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Input,
  92:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Finder,
  93:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Formatter,
  94:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         FindResult,
  95:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Formatter(FindResult) );
  96:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 } else {
  97:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     return std::copy( ::boost::begin(Input), ::boost::end(Input), Output );
  98:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
  99:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             }
 100:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 101:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****  // find_format_all_copy implementation ----------------------------------------------//
 102:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 103:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****            template< 
 104:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename InputT, 
 105:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FinderT,
 106:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FormatterT,
 107:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FindResultT,
 108:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FormatResultT >
 109:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             inline InputT find_format_all_copy_impl2(
 110:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const InputT& Input,
 111:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FinderT Finder,
 112:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FormatterT Formatter,
 113:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const FindResultT& FindResult,
 114:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const FormatResultT& FormatResult)
 115:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             {
 116:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typedef BOOST_STRING_TYPENAME 
 117:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     range_const_iterator<InputT>::type input_iterator_type; 
 118:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 119:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typedef find_format_store<
 120:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         input_iterator_type, 
 121:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         FormatterT,
 122:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         FormatResultT > store_type;
 123:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 124:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Create store for the find result
 125:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 store_type M( FindResult, FormatResult, Formatter );
 126:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 127:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Initialize last match
 128:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 input_iterator_type LastMatch=::boost::begin(Input);
 129:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 130:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Output temporary
 131:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 InputT Output;
 132:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 133:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Iterate through all matches
 134:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 while( M )
 135:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 {
 136:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Copy the beginning of the sequence
 137:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     boost::algorithm::detail::insert( Output, ::boost::end(Output), LastMatch, M.be
 138:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Copy formatted result
 139:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     boost::algorithm::detail::insert( Output, ::boost::end(Output), M.format_result
 140:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 217


 141:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Proceed to the next match
 142:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     LastMatch=M.end();
 143:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     M=Finder( LastMatch, ::boost::end(Input) );
 144:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
 145:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 146:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Copy the rest of the sequence
 147:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 ::boost::algorithm::detail::insert( Output, ::boost::end(Output), LastMatch, ::boos
 148:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 149:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 return Output;
 150:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             }
 151:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 152:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             template< 
 153:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename InputT, 
 154:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FinderT,
 155:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FormatterT,
 156:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FindResultT >
 157:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             inline InputT find_format_all_copy_impl(
 158:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const InputT& Input,
 159:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FinderT Finder,
 160:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FormatterT Formatter,
 161:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 const FindResultT& FindResult)
 162:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             {
 163:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 if( ::boost::algorithm::detail::check_find_result(Input, FindResult) ) {
 164:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     return ::boost::algorithm::detail::find_format_all_copy_impl2(
 165:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Input,
 166:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Finder,
 167:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Formatter,
 168:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         FindResult,
 169:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Formatter(FindResult) );
 170:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 } else {
 171:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     return Input;
 172:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
 173:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             }
 174:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 175:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****  // find_format_all implementation ------------------------------------------------//
 176:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****         
 177:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             template<
 178:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename InputT,
 179:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FinderT,
 180:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FormatterT,
 181:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FindResultT,
 182:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FormatResultT >
 183:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             inline void find_format_all_impl2( 
 184:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 InputT& Input,
 185:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FinderT Finder,
 186:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FormatterT Formatter,
 187:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FindResultT FindResult,
 188:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FormatResultT FormatResult)
 189:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             {
 190:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typedef BOOST_STRING_TYPENAME 
 191:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     range_iterator<InputT>::type input_iterator_type; 
 192:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typedef find_format_store<
 193:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         input_iterator_type, 
 194:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         FormatterT,
 195:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         FormatResultT > store_type;
 196:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 197:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Create store for the find result
GAS LISTING /tmp/ccX8BQhk.s 			page 218


 198:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 store_type M( FindResult, FormatResult, Formatter );
 199:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****           
 200:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Instantiate replacement storage
 201:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 std::deque<
 202:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     BOOST_STRING_TYPENAME range_value<InputT>::type> Storage;
 203:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 204:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // Initialize replacement iterators
 205:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 input_iterator_type InsertIt=::boost::begin(Input);
 206:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 input_iterator_type SearchIt=::boost::begin(Input);
 207:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 
 208:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 while( M )
 209:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 {
 210:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // process the segment
 211:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     InsertIt=process_segment( 
 212:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Storage,
 213:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Input,
 214:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         InsertIt,
 215:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         SearchIt,
 216:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         M.begin() );
 217:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     
 218:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Adjust search iterator
 219:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     SearchIt=M.end();
 220:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 221:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Copy formatted replace to the storage
 222:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     ::boost::algorithm::detail::copy_to_storage( Storage, M.format_result() );
 223:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 224:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Find range for a next match
 225:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     M=Finder( SearchIt, ::boost::end(Input) );
 226:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
 227:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 228:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 // process the last segment
 229:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 InsertIt=::boost::algorithm::detail::process_segment( 
 230:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     Storage,
 231:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     Input,
 232:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     InsertIt,
 233:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     SearchIt,
 234:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     ::boost::end(Input) );
 235:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 
 236:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 if ( Storage.empty() )
 237:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 {
 238:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Truncate input
 239:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     ::boost::algorithm::detail::erase( Input, InsertIt, ::boost::end(Input) );
 240:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
 241:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 else
 242:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 {
 243:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     // Copy remaining data to the end of input
 244:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     ::boost::algorithm::detail::insert( Input, ::boost::end(Input), Storage.begin()
 245:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
 246:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             }
 247:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 248:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             template<
 249:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename InputT,
 250:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FinderT,
 251:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FormatterT,
 252:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 typename FindResultT >
 253:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             inline void find_format_all_impl( 
 2346              		.loc 21 253 0 is_stmt 1
GAS LISTING /tmp/ccX8BQhk.s 			page 219


 2347              		.cfi_startproc
 2348 0000 55       		pushq	%rbp
 2349              		.cfi_def_cfa_offset 16
 2350              		.cfi_offset 6, -16
 2351 0001 4889E5   		movq	%rsp, %rbp
 2352              		.cfi_def_cfa_register 6
 2353 0004 53       		pushq	%rbx
 2354 0005 4883EC58 		subq	$88, %rsp
 2355              		.cfi_offset 3, -24
 2356 0009 48897DC8 		movq	%rdi, -56(%rbp)
 2357 000d 4889F0   		movq	%rsi, %rax
 2358 0010 4889D6   		movq	%rdx, %rsi
 2359 0013 4889F2   		movq	%rsi, %rdx
 2360 0016 488945B0 		movq	%rax, -80(%rbp)
 2361 001a 488955B8 		movq	%rdx, -72(%rbp)
 2362 001e 4889C8   		movq	%rcx, %rax
 2363 0021 4C89C1   		movq	%r8, %rcx
 2364 0024 4889CA   		movq	%rcx, %rdx
 2365 0027 488945A0 		movq	%rax, -96(%rbp)
 2366 002b 488955A8 		movq	%rdx, -88(%rbp)
 2367              		.loc 21 253 0
 2368 002f 64488B04 		movq	%fs:40, %rax
 2368      25280000 
 2368      00
 2369 0038 488945E8 		movq	%rax, -24(%rbp)
 2370 003c 31C0     		xorl	%eax, %eax
 254:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 InputT& Input,
 255:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FinderT Finder,
 256:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FormatterT Formatter,
 257:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 FindResultT FindResult)
 258:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             {
 259:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 if( ::boost::algorithm::detail::check_find_result(Input, FindResult) ) {
 2371              		.loc 21 259 0
 2372 003e 488D55A0 		leaq	-96(%rbp), %rdx
 2373 0042 488B45C8 		movq	-56(%rbp), %rax
 2374 0046 4889D6   		movq	%rdx, %rsi
 2375 0049 4889C7   		movq	%rax, %rdi
 2376 004c E8000000 		call	_ZN5boost9algorithm6detail17check_find_resultINSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 2376      00
 2377 0051 84C0     		testb	%al, %al
 2378 0053 7463     		je	.L129
 260:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     ::boost::algorithm::detail::find_format_all_impl2(
 261:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Input,
 262:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Finder,
 263:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Formatter,
 264:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         FindResult,
 265:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Formatter(FindResult) );
 2379              		.loc 21 265 0
 2380 0055 488D55A0 		leaq	-96(%rbp), %rdx
 2381 0059 488D45B0 		leaq	-80(%rbp), %rax
 2382 005d 4889D6   		movq	%rdx, %rsi
 2383 0060 4889C7   		movq	%rax, %rdi
 2384 0063 E8000000 		call	_ZNK5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEclINS3_IN9__gnu_cxx17__n
 2384      00
 2385 0068 4889C3   		movq	%rax, %rbx
 260:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     ::boost::algorithm::detail::find_format_all_impl2(
 2386              		.loc 21 260 0
GAS LISTING /tmp/ccX8BQhk.s 			page 220


 2387 006b 488D4DA0 		leaq	-96(%rbp), %rcx
 2388 006f 488D45D0 		leaq	-48(%rbp), %rax
 2389 0073 BA000000 		movl	$0, %edx
 2389      00
 2390 0078 4889CE   		movq	%rcx, %rsi
 2391 007b 4889C7   		movq	%rax, %rdi
 2392 007e E8000000 		call	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11cha
 2392      00
 2393 0083 488B4DD0 		movq	-48(%rbp), %rcx
 2394 0087 488B7DD8 		movq	-40(%rbp), %rdi
 2395 008b 488B75B0 		movq	-80(%rbp), %rsi
 2396 008f 488B55B8 		movq	-72(%rbp), %rdx
 2397 0093 488B45C8 		movq	-56(%rbp), %rax
 2398 0097 4883EC08 		subq	$8, %rsp
 2399 009b FF7308   		pushq	8(%rbx)
 2400 009e FF33     		pushq	(%rbx)
 2401 00a0 FF7520   		pushq	32(%rbp)
 2402 00a3 FF7518   		pushq	24(%rbp)
 2403 00a6 FF7510   		pushq	16(%rbp)
 2404 00a9 4989F8   		movq	%rdi, %r8
 2405 00ac 4889C7   		movq	%rax, %rdi
 2406 00af E8000000 		call	_ZN5boost9algorithm6detail21find_format_all_impl2INSt7__cxx1112basic_stringIcSt11char_traitsI
 2406      00
 2407 00b4 4883C430 		addq	$48, %rsp
 2408              	.L129:
 266:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
 267:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****             }
 2409              		.loc 21 267 0
 2410 00b8 90       		nop
 2411 00b9 488B45E8 		movq	-24(%rbp), %rax
 2412 00bd 64483304 		xorq	%fs:40, %rax
 2412      25280000 
 2412      00
 2413 00c6 7405     		je	.L128
 2414 00c8 E8000000 		call	__stack_chk_fail
 2414      00
 2415              	.L128:
 2416 00cd 488B5DF8 		movq	-8(%rbp), %rbx
 2417 00d1 C9       		leave
 2418              		.cfi_def_cfa 7, 8
 2419 00d2 C3       		ret
 2420              		.cfi_endproc
 2421              	.LFE10217:
 2423              		.section	.text._ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm,"axG",@progbits,_ZNSt16allocator
 2424              		.weak	_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm
 2426              	_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm:
 2427              	.LFB10218:
 2428              		.file 22 "/usr/include/c++/5/bits/alloc_traits.h"
   1:/usr/include/c++/5/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/usr/include/c++/5/bits/alloc_traits.h **** 
   3:/usr/include/c++/5/bits/alloc_traits.h **** // Copyright (C) 2011-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/alloc_traits.h **** //
   5:/usr/include/c++/5/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/alloc_traits.h **** // any later version.
GAS LISTING /tmp/ccX8BQhk.s 			page 221


  10:/usr/include/c++/5/bits/alloc_traits.h **** 
  11:/usr/include/c++/5/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/alloc_traits.h **** 
  16:/usr/include/c++/5/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/alloc_traits.h **** 
  20:/usr/include/c++/5/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/alloc_traits.h **** 
  25:/usr/include/c++/5/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/usr/include/c++/5/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/5/bits/alloc_traits.h ****  */
  29:/usr/include/c++/5/bits/alloc_traits.h **** 
  30:/usr/include/c++/5/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/usr/include/c++/5/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/usr/include/c++/5/bits/alloc_traits.h **** 
  33:/usr/include/c++/5/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/usr/include/c++/5/bits/alloc_traits.h **** 
  35:/usr/include/c++/5/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/usr/include/c++/5/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
  37:/usr/include/c++/5/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/usr/include/c++/5/bits/alloc_traits.h **** 
  39:/usr/include/c++/5/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  40:/usr/include/c++/5/bits/alloc_traits.h **** {
  41:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/usr/include/c++/5/bits/alloc_traits.h **** 
  43:/usr/include/c++/5/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp>
  44:/usr/include/c++/5/bits/alloc_traits.h ****     class __alloctr_rebind_helper
  45:/usr/include/c++/5/bits/alloc_traits.h ****     {
  46:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp2>
  47:/usr/include/c++/5/bits/alloc_traits.h **** 	static constexpr true_type
  48:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_chk(typename _Alloc2::template rebind<_Tp2>::other*);
  49:/usr/include/c++/5/bits/alloc_traits.h **** 
  50:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename, typename>
  51:/usr/include/c++/5/bits/alloc_traits.h **** 	static constexpr false_type
  52:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_chk(...);
  53:/usr/include/c++/5/bits/alloc_traits.h **** 
  54:/usr/include/c++/5/bits/alloc_traits.h ****     public:
  55:/usr/include/c++/5/bits/alloc_traits.h ****       using __type = decltype(_S_chk<_Alloc, _Tp>(nullptr));
  56:/usr/include/c++/5/bits/alloc_traits.h ****     };
  57:/usr/include/c++/5/bits/alloc_traits.h **** 
  58:/usr/include/c++/5/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp,
  59:/usr/include/c++/5/bits/alloc_traits.h **** 	   bool = __alloctr_rebind_helper<_Alloc, _Tp>::__type::value>
  60:/usr/include/c++/5/bits/alloc_traits.h ****     struct __alloctr_rebind;
  61:/usr/include/c++/5/bits/alloc_traits.h **** 
  62:/usr/include/c++/5/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp>
  63:/usr/include/c++/5/bits/alloc_traits.h ****     struct __alloctr_rebind<_Alloc, _Tp, true>
  64:/usr/include/c++/5/bits/alloc_traits.h ****     {
  65:/usr/include/c++/5/bits/alloc_traits.h ****       typedef typename _Alloc::template rebind<_Tp>::other __type;
  66:/usr/include/c++/5/bits/alloc_traits.h ****     };
GAS LISTING /tmp/ccX8BQhk.s 			page 222


  67:/usr/include/c++/5/bits/alloc_traits.h **** 
  68:/usr/include/c++/5/bits/alloc_traits.h ****   template<template<typename, typename...> class _Alloc, typename _Tp,
  69:/usr/include/c++/5/bits/alloc_traits.h **** 	   typename _Up, typename... _Args>
  70:/usr/include/c++/5/bits/alloc_traits.h ****     struct __alloctr_rebind<_Alloc<_Up, _Args...>, _Tp, false>
  71:/usr/include/c++/5/bits/alloc_traits.h ****     {
  72:/usr/include/c++/5/bits/alloc_traits.h ****       typedef _Alloc<_Tp, _Args...> __type;
  73:/usr/include/c++/5/bits/alloc_traits.h ****     };
  74:/usr/include/c++/5/bits/alloc_traits.h **** 
  75:/usr/include/c++/5/bits/alloc_traits.h ****   template<typename _Alloc, typename _Tp>
  76:/usr/include/c++/5/bits/alloc_traits.h ****     using __alloc_rebind = typename __alloctr_rebind<_Alloc, _Tp>::__type;
  77:/usr/include/c++/5/bits/alloc_traits.h **** 
  78:/usr/include/c++/5/bits/alloc_traits.h ****   /**
  79:/usr/include/c++/5/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/usr/include/c++/5/bits/alloc_traits.h ****    * @ingroup allocators
  81:/usr/include/c++/5/bits/alloc_traits.h ****   */
  82:/usr/include/c++/5/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/usr/include/c++/5/bits/alloc_traits.h ****     struct allocator_traits
  84:/usr/include/c++/5/bits/alloc_traits.h ****     {
  85:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocator type
  86:/usr/include/c++/5/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocated type
  88:/usr/include/c++/5/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/usr/include/c++/5/bits/alloc_traits.h **** 
  90:/usr/include/c++/5/bits/alloc_traits.h **** #define _GLIBCXX_ALLOC_TR_NESTED_TYPE(_NTYPE, _ALT) \
  91:/usr/include/c++/5/bits/alloc_traits.h ****   private: \
  92:/usr/include/c++/5/bits/alloc_traits.h ****   template<typename _Tp> \
  93:/usr/include/c++/5/bits/alloc_traits.h ****     static typename _Tp::_NTYPE _S_##_NTYPE##_helper(_Tp*); \
  94:/usr/include/c++/5/bits/alloc_traits.h ****   static _ALT _S_##_NTYPE##_helper(...); \
  95:/usr/include/c++/5/bits/alloc_traits.h ****     typedef decltype(_S_##_NTYPE##_helper((_Alloc*)0)) __##_NTYPE; \
  96:/usr/include/c++/5/bits/alloc_traits.h ****   public:
  97:/usr/include/c++/5/bits/alloc_traits.h **** 
  98:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_ALLOC_TR_NESTED_TYPE(pointer, value_type*)
  99:/usr/include/c++/5/bits/alloc_traits.h **** 
 100:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 101:/usr/include/c++/5/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
 102:/usr/include/c++/5/bits/alloc_traits.h ****        *
 103:/usr/include/c++/5/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
 104:/usr/include/c++/5/bits/alloc_traits.h ****       */
 105:/usr/include/c++/5/bits/alloc_traits.h ****       typedef __pointer pointer;
 106:/usr/include/c++/5/bits/alloc_traits.h **** 
 107:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_ALLOC_TR_NESTED_TYPE(const_pointer,
 108:/usr/include/c++/5/bits/alloc_traits.h ****   typename pointer_traits<pointer>::template rebind<const value_type>)
 109:/usr/include/c++/5/bits/alloc_traits.h **** 
 110:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 111:/usr/include/c++/5/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 112:/usr/include/c++/5/bits/alloc_traits.h ****        *
 113:/usr/include/c++/5/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 114:/usr/include/c++/5/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 115:/usr/include/c++/5/bits/alloc_traits.h ****       */
 116:/usr/include/c++/5/bits/alloc_traits.h ****       typedef __const_pointer const_pointer;
 117:/usr/include/c++/5/bits/alloc_traits.h **** 
 118:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_ALLOC_TR_NESTED_TYPE(void_pointer,
 119:/usr/include/c++/5/bits/alloc_traits.h ****   typename pointer_traits<pointer>::template rebind<void>)
 120:/usr/include/c++/5/bits/alloc_traits.h **** 
 121:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 122:/usr/include/c++/5/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 123:/usr/include/c++/5/bits/alloc_traits.h ****        *
GAS LISTING /tmp/ccX8BQhk.s 			page 223


 124:/usr/include/c++/5/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 125:/usr/include/c++/5/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 126:/usr/include/c++/5/bits/alloc_traits.h ****       */
 127:/usr/include/c++/5/bits/alloc_traits.h ****       typedef __void_pointer void_pointer;
 128:/usr/include/c++/5/bits/alloc_traits.h **** 
 129:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_ALLOC_TR_NESTED_TYPE(const_void_pointer,
 130:/usr/include/c++/5/bits/alloc_traits.h ****   typename pointer_traits<pointer>::template rebind<const void>)
 131:/usr/include/c++/5/bits/alloc_traits.h **** 
 132:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 133:/usr/include/c++/5/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 134:/usr/include/c++/5/bits/alloc_traits.h ****        *
 135:/usr/include/c++/5/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 136:/usr/include/c++/5/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 137:/usr/include/c++/5/bits/alloc_traits.h ****       */
 138:/usr/include/c++/5/bits/alloc_traits.h ****       typedef __const_void_pointer const_void_pointer;
 139:/usr/include/c++/5/bits/alloc_traits.h **** 
 140:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_ALLOC_TR_NESTED_TYPE(difference_type,
 141:/usr/include/c++/5/bits/alloc_traits.h **** 			      typename pointer_traits<pointer>::difference_type)
 142:/usr/include/c++/5/bits/alloc_traits.h **** 
 143:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 144:/usr/include/c++/5/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 145:/usr/include/c++/5/bits/alloc_traits.h ****        *
 146:/usr/include/c++/5/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 147:/usr/include/c++/5/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 148:/usr/include/c++/5/bits/alloc_traits.h ****       */
 149:/usr/include/c++/5/bits/alloc_traits.h ****       typedef __difference_type difference_type;
 150:/usr/include/c++/5/bits/alloc_traits.h **** 
 151:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_ALLOC_TR_NESTED_TYPE(size_type,
 152:/usr/include/c++/5/bits/alloc_traits.h **** 			      typename make_unsigned<difference_type>::type)
 153:/usr/include/c++/5/bits/alloc_traits.h **** 
 154:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 155:/usr/include/c++/5/bits/alloc_traits.h ****        * @brief   The allocator's size type
 156:/usr/include/c++/5/bits/alloc_traits.h ****        *
 157:/usr/include/c++/5/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 158:/usr/include/c++/5/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 159:/usr/include/c++/5/bits/alloc_traits.h ****       */
 160:/usr/include/c++/5/bits/alloc_traits.h ****       typedef __size_type size_type;
 161:/usr/include/c++/5/bits/alloc_traits.h **** 
 162:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_ALLOC_TR_NESTED_TYPE(propagate_on_container_copy_assignment,
 163:/usr/include/c++/5/bits/alloc_traits.h **** 			      false_type)
 164:/usr/include/c++/5/bits/alloc_traits.h **** 
 165:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 166:/usr/include/c++/5/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 167:/usr/include/c++/5/bits/alloc_traits.h ****        *
 168:/usr/include/c++/5/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 169:/usr/include/c++/5/bits/alloc_traits.h ****        * otherwise @c false_type
 170:/usr/include/c++/5/bits/alloc_traits.h ****       */
 171:/usr/include/c++/5/bits/alloc_traits.h ****       typedef __propagate_on_container_copy_assignment
 172:/usr/include/c++/5/bits/alloc_traits.h **** 	propagate_on_container_copy_assignment;
 173:/usr/include/c++/5/bits/alloc_traits.h **** 
 174:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_ALLOC_TR_NESTED_TYPE(propagate_on_container_move_assignment,
 175:/usr/include/c++/5/bits/alloc_traits.h **** 			      false_type)
 176:/usr/include/c++/5/bits/alloc_traits.h **** 
 177:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 178:/usr/include/c++/5/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 179:/usr/include/c++/5/bits/alloc_traits.h ****        *
 180:/usr/include/c++/5/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
GAS LISTING /tmp/ccX8BQhk.s 			page 224


 181:/usr/include/c++/5/bits/alloc_traits.h ****        * otherwise @c false_type
 182:/usr/include/c++/5/bits/alloc_traits.h ****       */
 183:/usr/include/c++/5/bits/alloc_traits.h ****       typedef __propagate_on_container_move_assignment
 184:/usr/include/c++/5/bits/alloc_traits.h **** 	propagate_on_container_move_assignment;
 185:/usr/include/c++/5/bits/alloc_traits.h **** 
 186:/usr/include/c++/5/bits/alloc_traits.h **** _GLIBCXX_ALLOC_TR_NESTED_TYPE(propagate_on_container_swap,
 187:/usr/include/c++/5/bits/alloc_traits.h **** 			      false_type)
 188:/usr/include/c++/5/bits/alloc_traits.h **** 
 189:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 190:/usr/include/c++/5/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 191:/usr/include/c++/5/bits/alloc_traits.h ****        *
 192:/usr/include/c++/5/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 193:/usr/include/c++/5/bits/alloc_traits.h ****        * otherwise @c false_type
 194:/usr/include/c++/5/bits/alloc_traits.h ****       */
 195:/usr/include/c++/5/bits/alloc_traits.h ****       typedef __propagate_on_container_swap propagate_on_container_swap;
 196:/usr/include/c++/5/bits/alloc_traits.h **** 
 197:/usr/include/c++/5/bits/alloc_traits.h **** #undef _GLIBCXX_ALLOC_TR_NESTED_TYPE
 198:/usr/include/c++/5/bits/alloc_traits.h **** 
 199:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp>
 200:/usr/include/c++/5/bits/alloc_traits.h **** 	using rebind_alloc = typename __alloctr_rebind<_Alloc, _Tp>::__type;
 201:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp>
 202:/usr/include/c++/5/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 203:/usr/include/c++/5/bits/alloc_traits.h **** 
 204:/usr/include/c++/5/bits/alloc_traits.h ****     private:
 205:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2>
 206:/usr/include/c++/5/bits/alloc_traits.h **** 	struct __allocate_helper
 207:/usr/include/c++/5/bits/alloc_traits.h **** 	{
 208:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename _Alloc3,
 209:/usr/include/c++/5/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc3*>()->allocate(
 210:/usr/include/c++/5/bits/alloc_traits.h **** 		  std::declval<size_type>(),
 211:/usr/include/c++/5/bits/alloc_traits.h **** 		  std::declval<const_void_pointer>()))>
 212:/usr/include/c++/5/bits/alloc_traits.h **** 	    static true_type __test(int);
 213:/usr/include/c++/5/bits/alloc_traits.h **** 
 214:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename>
 215:/usr/include/c++/5/bits/alloc_traits.h **** 	    static false_type __test(...);
 216:/usr/include/c++/5/bits/alloc_traits.h **** 
 217:/usr/include/c++/5/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 218:/usr/include/c++/5/bits/alloc_traits.h **** 	};
 219:/usr/include/c++/5/bits/alloc_traits.h **** 
 220:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2>
 221:/usr/include/c++/5/bits/alloc_traits.h **** 	using __has_allocate = typename __allocate_helper<_Alloc2>::type;
 222:/usr/include/c++/5/bits/alloc_traits.h **** 
 223:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2,
 224:/usr/include/c++/5/bits/alloc_traits.h **** 	       typename = _Require<__has_allocate<_Alloc2>>>
 225:/usr/include/c++/5/bits/alloc_traits.h **** 	static pointer
 226:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint)
 227:/usr/include/c++/5/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 228:/usr/include/c++/5/bits/alloc_traits.h **** 
 229:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2, typename _UnusedHint,
 230:/usr/include/c++/5/bits/alloc_traits.h **** 	       typename = _Require<__not_<__has_allocate<_Alloc2>>>>
 231:/usr/include/c++/5/bits/alloc_traits.h **** 	static pointer
 232:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, _UnusedHint)
 233:/usr/include/c++/5/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
 234:/usr/include/c++/5/bits/alloc_traits.h **** 
 235:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 236:/usr/include/c++/5/bits/alloc_traits.h **** 	struct __construct_helper
 237:/usr/include/c++/5/bits/alloc_traits.h **** 	{
GAS LISTING /tmp/ccX8BQhk.s 			page 225


 238:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 239:/usr/include/c++/5/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 240:/usr/include/c++/5/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 241:/usr/include/c++/5/bits/alloc_traits.h **** 	    static true_type __test(int);
 242:/usr/include/c++/5/bits/alloc_traits.h **** 
 243:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename>
 244:/usr/include/c++/5/bits/alloc_traits.h **** 	    static false_type __test(...);
 245:/usr/include/c++/5/bits/alloc_traits.h **** 
 246:/usr/include/c++/5/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 247:/usr/include/c++/5/bits/alloc_traits.h **** 	};
 248:/usr/include/c++/5/bits/alloc_traits.h **** 
 249:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 250:/usr/include/c++/5/bits/alloc_traits.h **** 	using __has_construct
 251:/usr/include/c++/5/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 252:/usr/include/c++/5/bits/alloc_traits.h **** 
 253:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 254:/usr/include/c++/5/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 255:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 256:/usr/include/c++/5/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 257:/usr/include/c++/5/bits/alloc_traits.h **** 
 258:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 259:/usr/include/c++/5/bits/alloc_traits.h **** 	static
 260:/usr/include/c++/5/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 261:/usr/include/c++/5/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 262:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 263:/usr/include/c++/5/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 264:/usr/include/c++/5/bits/alloc_traits.h **** 
 265:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp>
 266:/usr/include/c++/5/bits/alloc_traits.h **** 	struct __destroy_helper
 267:/usr/include/c++/5/bits/alloc_traits.h **** 	{
 268:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 269:/usr/include/c++/5/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->destroy(
 270:/usr/include/c++/5/bits/alloc_traits.h **** 		  std::declval<_Tp*>()))>
 271:/usr/include/c++/5/bits/alloc_traits.h **** 	    static true_type __test(int);
 272:/usr/include/c++/5/bits/alloc_traits.h **** 
 273:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename>
 274:/usr/include/c++/5/bits/alloc_traits.h **** 	    static false_type __test(...);
 275:/usr/include/c++/5/bits/alloc_traits.h **** 
 276:/usr/include/c++/5/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 277:/usr/include/c++/5/bits/alloc_traits.h **** 	};
 278:/usr/include/c++/5/bits/alloc_traits.h **** 
 279:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp>
 280:/usr/include/c++/5/bits/alloc_traits.h **** 	using __has_destroy = typename __destroy_helper<_Tp>::type;
 281:/usr/include/c++/5/bits/alloc_traits.h **** 
 282:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp>
 283:/usr/include/c++/5/bits/alloc_traits.h **** 	static _Require<__has_destroy<_Tp>>
 284:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_destroy(_Alloc& __a, _Tp* __p)
 285:/usr/include/c++/5/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 286:/usr/include/c++/5/bits/alloc_traits.h **** 
 287:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp>
 288:/usr/include/c++/5/bits/alloc_traits.h **** 	static _Require<__not_<__has_destroy<_Tp>>>
 289:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_destroy(_Alloc&, _Tp* __p)
 290:/usr/include/c++/5/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 291:/usr/include/c++/5/bits/alloc_traits.h **** 
 292:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2>
 293:/usr/include/c++/5/bits/alloc_traits.h **** 	struct __maxsize_helper
 294:/usr/include/c++/5/bits/alloc_traits.h **** 	{
GAS LISTING /tmp/ccX8BQhk.s 			page 226


 295:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename _Alloc3,
 296:/usr/include/c++/5/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc3*>()->max_size())>
 297:/usr/include/c++/5/bits/alloc_traits.h **** 	    static true_type __test(int);
 298:/usr/include/c++/5/bits/alloc_traits.h **** 
 299:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename>
 300:/usr/include/c++/5/bits/alloc_traits.h **** 	    static false_type __test(...);
 301:/usr/include/c++/5/bits/alloc_traits.h **** 
 302:/usr/include/c++/5/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc2>(0));
 303:/usr/include/c++/5/bits/alloc_traits.h **** 	};
 304:/usr/include/c++/5/bits/alloc_traits.h **** 
 305:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2>
 306:/usr/include/c++/5/bits/alloc_traits.h **** 	using __has_max_size = typename __maxsize_helper<_Alloc2>::type;
 307:/usr/include/c++/5/bits/alloc_traits.h **** 
 308:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2,
 309:/usr/include/c++/5/bits/alloc_traits.h **** 	       typename = _Require<__has_max_size<_Alloc2>>>
 310:/usr/include/c++/5/bits/alloc_traits.h **** 	static size_type
 311:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 312:/usr/include/c++/5/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 313:/usr/include/c++/5/bits/alloc_traits.h **** 
 314:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2,
 315:/usr/include/c++/5/bits/alloc_traits.h **** 	       typename = _Require<__not_<__has_max_size<_Alloc2>>>>
 316:/usr/include/c++/5/bits/alloc_traits.h **** 	static size_type
 317:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 318:/usr/include/c++/5/bits/alloc_traits.h **** 	{ return __gnu_cxx::__numeric_traits<size_type>::__max; }
 319:/usr/include/c++/5/bits/alloc_traits.h **** 
 320:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2>
 321:/usr/include/c++/5/bits/alloc_traits.h **** 	struct __select_helper
 322:/usr/include/c++/5/bits/alloc_traits.h **** 	{
 323:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename _Alloc3, typename
 324:/usr/include/c++/5/bits/alloc_traits.h **** 	    = decltype(std::declval<_Alloc3*>()
 325:/usr/include/c++/5/bits/alloc_traits.h **** 		->select_on_container_copy_construction())>
 326:/usr/include/c++/5/bits/alloc_traits.h **** 	    static true_type __test(int);
 327:/usr/include/c++/5/bits/alloc_traits.h **** 
 328:/usr/include/c++/5/bits/alloc_traits.h **** 	  template<typename>
 329:/usr/include/c++/5/bits/alloc_traits.h **** 	    static false_type __test(...);
 330:/usr/include/c++/5/bits/alloc_traits.h **** 
 331:/usr/include/c++/5/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc2>(0));
 332:/usr/include/c++/5/bits/alloc_traits.h **** 	};
 333:/usr/include/c++/5/bits/alloc_traits.h **** 
 334:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2>
 335:/usr/include/c++/5/bits/alloc_traits.h **** 	using __has_soccc = typename __select_helper<_Alloc2>::type;
 336:/usr/include/c++/5/bits/alloc_traits.h **** 
 337:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2,
 338:/usr/include/c++/5/bits/alloc_traits.h **** 	       typename = _Require<__has_soccc<_Alloc2>>>
 339:/usr/include/c++/5/bits/alloc_traits.h **** 	static _Alloc2
 340:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 341:/usr/include/c++/5/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 342:/usr/include/c++/5/bits/alloc_traits.h **** 
 343:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Alloc2,
 344:/usr/include/c++/5/bits/alloc_traits.h **** 	       typename = _Require<__not_<__has_soccc<_Alloc2>>>>
 345:/usr/include/c++/5/bits/alloc_traits.h **** 	static _Alloc2
 346:/usr/include/c++/5/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 347:/usr/include/c++/5/bits/alloc_traits.h **** 	{ return __a; }
 348:/usr/include/c++/5/bits/alloc_traits.h **** 
 349:/usr/include/c++/5/bits/alloc_traits.h ****     public:
 350:/usr/include/c++/5/bits/alloc_traits.h **** 
 351:/usr/include/c++/5/bits/alloc_traits.h ****       /**
GAS LISTING /tmp/ccX8BQhk.s 			page 227


 352:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 353:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 354:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 355:/usr/include/c++/5/bits/alloc_traits.h ****        *
 356:/usr/include/c++/5/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 357:/usr/include/c++/5/bits/alloc_traits.h ****       */
 358:/usr/include/c++/5/bits/alloc_traits.h ****       static pointer
 359:/usr/include/c++/5/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 360:/usr/include/c++/5/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 361:/usr/include/c++/5/bits/alloc_traits.h **** 
 362:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 363:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 364:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 365:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 366:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 367:/usr/include/c++/5/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 368:/usr/include/c++/5/bits/alloc_traits.h ****        *          of type @c value_type
 369:/usr/include/c++/5/bits/alloc_traits.h ****        *
 370:/usr/include/c++/5/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 371:/usr/include/c++/5/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 372:/usr/include/c++/5/bits/alloc_traits.h ****       */
 373:/usr/include/c++/5/bits/alloc_traits.h ****       static pointer
 374:/usr/include/c++/5/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 375:/usr/include/c++/5/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint); }
 376:/usr/include/c++/5/bits/alloc_traits.h **** 
 377:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 378:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 379:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 380:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 381:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 382:/usr/include/c++/5/bits/alloc_traits.h ****        *
 383:/usr/include/c++/5/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 384:/usr/include/c++/5/bits/alloc_traits.h ****       */
 385:/usr/include/c++/5/bits/alloc_traits.h ****       static void deallocate(_Alloc& __a, pointer __p, size_type __n)
 386:/usr/include/c++/5/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 387:/usr/include/c++/5/bits/alloc_traits.h **** 
 388:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 389:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 390:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 391:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 392:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 393:/usr/include/c++/5/bits/alloc_traits.h ****        *
 394:/usr/include/c++/5/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 395:/usr/include/c++/5/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 396:/usr/include/c++/5/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 397:/usr/include/c++/5/bits/alloc_traits.h ****        *  arguments @a __args...
 398:/usr/include/c++/5/bits/alloc_traits.h ****       */
 399:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 400:/usr/include/c++/5/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 401:/usr/include/c++/5/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 402:/usr/include/c++/5/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 403:/usr/include/c++/5/bits/alloc_traits.h **** 
 404:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 405:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 406:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 407:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 408:/usr/include/c++/5/bits/alloc_traits.h ****        *
GAS LISTING /tmp/ccX8BQhk.s 			page 228


 409:/usr/include/c++/5/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 410:/usr/include/c++/5/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 411:/usr/include/c++/5/bits/alloc_traits.h ****       */
 412:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Tp>
 413:/usr/include/c++/5/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 414:/usr/include/c++/5/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p); }
 415:/usr/include/c++/5/bits/alloc_traits.h **** 
 416:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 417:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 418:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 419:/usr/include/c++/5/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 420:/usr/include/c++/5/bits/alloc_traits.h ****        *
 421:/usr/include/c++/5/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 422:/usr/include/c++/5/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 423:/usr/include/c++/5/bits/alloc_traits.h ****       */
 424:/usr/include/c++/5/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 425:/usr/include/c++/5/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 426:/usr/include/c++/5/bits/alloc_traits.h **** 
 427:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 428:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 429:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 430:/usr/include/c++/5/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 431:/usr/include/c++/5/bits/alloc_traits.h ****        *
 432:/usr/include/c++/5/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 433:/usr/include/c++/5/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 434:/usr/include/c++/5/bits/alloc_traits.h ****       */
 435:/usr/include/c++/5/bits/alloc_traits.h ****       static _Alloc
 436:/usr/include/c++/5/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 437:/usr/include/c++/5/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 438:/usr/include/c++/5/bits/alloc_traits.h ****     };
 439:/usr/include/c++/5/bits/alloc_traits.h **** 
 440:/usr/include/c++/5/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 441:/usr/include/c++/5/bits/alloc_traits.h ****   template<typename _Tp>
 442:/usr/include/c++/5/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 443:/usr/include/c++/5/bits/alloc_traits.h ****     {
 444:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocator type
 445:/usr/include/c++/5/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 446:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocated type
 447:/usr/include/c++/5/bits/alloc_traits.h ****       using value_type = _Tp;
 448:/usr/include/c++/5/bits/alloc_traits.h **** 
 449:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocator's pointer type.
 450:/usr/include/c++/5/bits/alloc_traits.h ****       using pointer = _Tp*;
 451:/usr/include/c++/5/bits/alloc_traits.h **** 
 452:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 453:/usr/include/c++/5/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 454:/usr/include/c++/5/bits/alloc_traits.h **** 
 455:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 456:/usr/include/c++/5/bits/alloc_traits.h ****       using void_pointer = void*;
 457:/usr/include/c++/5/bits/alloc_traits.h **** 
 458:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 459:/usr/include/c++/5/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 460:/usr/include/c++/5/bits/alloc_traits.h **** 
 461:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocator's difference type
 462:/usr/include/c++/5/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 463:/usr/include/c++/5/bits/alloc_traits.h **** 
 464:/usr/include/c++/5/bits/alloc_traits.h ****       /// The allocator's size type
 465:/usr/include/c++/5/bits/alloc_traits.h ****       using size_type = std::size_t;
GAS LISTING /tmp/ccX8BQhk.s 			page 229


 466:/usr/include/c++/5/bits/alloc_traits.h **** 
 467:/usr/include/c++/5/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 468:/usr/include/c++/5/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 469:/usr/include/c++/5/bits/alloc_traits.h **** 
 470:/usr/include/c++/5/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 471:/usr/include/c++/5/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 472:/usr/include/c++/5/bits/alloc_traits.h **** 
 473:/usr/include/c++/5/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 474:/usr/include/c++/5/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 475:/usr/include/c++/5/bits/alloc_traits.h **** 
 476:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Up>
 477:/usr/include/c++/5/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 478:/usr/include/c++/5/bits/alloc_traits.h **** 
 479:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Up>
 480:/usr/include/c++/5/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 481:/usr/include/c++/5/bits/alloc_traits.h **** 
 482:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 483:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 484:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 485:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 486:/usr/include/c++/5/bits/alloc_traits.h ****        *
 487:/usr/include/c++/5/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 488:/usr/include/c++/5/bits/alloc_traits.h ****       */
 489:/usr/include/c++/5/bits/alloc_traits.h ****       static pointer
 490:/usr/include/c++/5/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 491:/usr/include/c++/5/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 492:/usr/include/c++/5/bits/alloc_traits.h **** 
 493:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 494:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 495:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 496:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 497:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 498:/usr/include/c++/5/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 499:/usr/include/c++/5/bits/alloc_traits.h ****        *          of type @c value_type
 500:/usr/include/c++/5/bits/alloc_traits.h ****        *
 501:/usr/include/c++/5/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 502:/usr/include/c++/5/bits/alloc_traits.h ****       */
 503:/usr/include/c++/5/bits/alloc_traits.h ****       static pointer
 504:/usr/include/c++/5/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 505:/usr/include/c++/5/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 506:/usr/include/c++/5/bits/alloc_traits.h **** 
 507:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 508:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 509:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 510:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 511:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 512:/usr/include/c++/5/bits/alloc_traits.h ****        *
 513:/usr/include/c++/5/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 514:/usr/include/c++/5/bits/alloc_traits.h ****       */
 515:/usr/include/c++/5/bits/alloc_traits.h ****       static void
 516:/usr/include/c++/5/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 2429              		.loc 22 516 0
 2430              		.cfi_startproc
 2431 0000 55       		pushq	%rbp
 2432              		.cfi_def_cfa_offset 16
 2433              		.cfi_offset 6, -16
 2434 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 230


 2435              		.cfi_def_cfa_register 6
 2436 0004 4883EC20 		subq	$32, %rsp
 2437 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2438 000c 488975F0 		movq	%rsi, -16(%rbp)
 2439 0010 488955E8 		movq	%rdx, -24(%rbp)
 517:/usr/include/c++/5/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2440              		.loc 22 517 0
 2441 0014 488B55E8 		movq	-24(%rbp), %rdx
 2442 0018 488B4DF0 		movq	-16(%rbp), %rcx
 2443 001c 488B45F8 		movq	-8(%rbp), %rax
 2444 0020 4889CE   		movq	%rcx, %rsi
 2445 0023 4889C7   		movq	%rax, %rdi
 2446 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm
 2446      00
 2447 002b 90       		nop
 2448 002c C9       		leave
 2449              		.cfi_def_cfa 7, 8
 2450 002d C3       		ret
 2451              		.cfi_endproc
 2452              	.LFE10218:
 2454              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcES
 2455              		.align 2
 2456              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4b
 2458              	_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv:
 2459              	.LFB10242:
 805:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
 2460              		.loc 13 805 0
 2461              		.cfi_startproc
 2462 0000 55       		pushq	%rbp
 2463              		.cfi_def_cfa_offset 16
 2464              		.cfi_offset 6, -16
 2465 0001 4889E5   		movq	%rsp, %rbp
 2466              		.cfi_def_cfa_register 6
 2467 0004 48897DF8 		movq	%rdi, -8(%rbp)
 806:/usr/include/c++/5/bits/stl_iterator.h ****     };
 2468              		.loc 13 806 0
 2469 0008 488B45F8 		movq	-8(%rbp), %rax
 2470 000c 5D       		popq	%rbp
 2471              		.cfi_def_cfa 7, 8
 2472 000d C3       		ret
 2473              		.cfi_endproc
 2474              	.LFE10242:
 2476              		.section	.text._ZN5boost12range_detail10make_rangeIKcEENS_14iterator_rangeIPT_EES5_b,"axG",@progbi
 2477              		.weak	_ZN5boost12range_detail10make_rangeIKcEENS_14iterator_rangeIPT_EES5_b
 2479              	_ZN5boost12range_detail10make_rangeIKcEENS_14iterator_rangeIPT_EES5_b:
 2480              	.LFB10295:
  84:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
 2481              		.loc 4 84 0
 2482              		.cfi_startproc
 2483 0000 55       		pushq	%rbp
 2484              		.cfi_def_cfa_offset 16
 2485              		.cfi_offset 6, -16
 2486 0001 4889E5   		movq	%rsp, %rbp
 2487              		.cfi_def_cfa_register 6
 2488 0004 4883EC30 		subq	$48, %rsp
 2489 0008 48897DD8 		movq	%rdi, -40(%rbp)
 2490 000c 89F0     		movl	%esi, %eax
GAS LISTING /tmp/ccX8BQhk.s 			page 231


 2491 000e 8845D4   		movb	%al, -44(%rbp)
  84:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         {
 2492              		.loc 4 84 0
 2493 0011 64488B04 		movq	%fs:40, %rax
 2493      25280000 
 2493      00
 2494 001a 488945F8 		movq	%rax, -8(%rbp)
 2495 001e 31C0     		xorl	%eax, %eax
  86:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp ****         }
 2496              		.loc 4 86 0
 2497 0020 488B45D8 		movq	-40(%rbp), %rax
 2498 0024 4889C7   		movq	%rax, %rdi
 2499 0027 E8000000 		call	_ZN5boost12range_detail6lengthEPKc
 2499      00
 2500 002c 4889C2   		movq	%rax, %rdx
 2501 002f 488B45D8 		movq	-40(%rbp), %rax
 2502 0033 4801C2   		addq	%rax, %rdx
 2503 0036 488B4DD8 		movq	-40(%rbp), %rcx
 2504 003a 488D45E0 		leaq	-32(%rbp), %rax
 2505 003e 4889CE   		movq	%rcx, %rsi
 2506 0041 4889C7   		movq	%rax, %rdi
 2507 0044 E8000000 		call	_ZN5boost14iterator_rangeIPKcEC1IS2_EET_S5_
 2507      00
 2508 0049 488B45E0 		movq	-32(%rbp), %rax
 2509 004d 488B55E8 		movq	-24(%rbp), %rdx
  87:/home/brendan/Boost/boost_1_60_0/boost/range/as_literal.hpp **** 
 2510              		.loc 4 87 0
 2511 0051 488B4DF8 		movq	-8(%rbp), %rcx
 2512 0055 6448330C 		xorq	%fs:40, %rcx
 2512      25280000 
 2512      00
 2513 005e 7405     		je	.L135
 2514 0060 E8000000 		call	__stack_chk_fail
 2514      00
 2515              	.L135:
 2516 0065 C9       		leave
 2517              		.cfi_def_cfa 7, 8
 2518 0066 C3       		ret
 2519              		.cfi_endproc
 2520              	.LFE10295:
 2522              		.section	.text._ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIK
 2523              		.weak	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4type
 2525              	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS8_:
 2526              	.LFB10296:
 104:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
 105:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** template< class T >
 106:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** inline BOOST_DEDUCED_TYPENAME range_iterator<const T>::type begin( const T& r )
 2527              		.loc 19 106 0
 2528              		.cfi_startproc
 2529 0000 55       		pushq	%rbp
 2530              		.cfi_def_cfa_offset 16
 2531              		.cfi_offset 6, -16
 2532 0001 4889E5   		movq	%rsp, %rbp
 2533              		.cfi_def_cfa_register 6
 2534 0004 4883EC10 		subq	$16, %rsp
 2535 0008 48897DF8 		movq	%rdi, -8(%rbp)
 107:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** {
GAS LISTING /tmp/ccX8BQhk.s 			page 232


 108:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
 109:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     using namespace range_detail;
 110:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** #endif
 111:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     return range_begin( r );
 2536              		.loc 19 111 0
 2537 000c 488B45F8 		movq	-8(%rbp), %rax
 2538 0010 4889C7   		movq	%rax, %rdi
 2539 0013 E8000000 		call	_ZN5boost12range_detail11range_beginIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4typ
 2539      00
 112:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** }
 2540              		.loc 19 112 0
 2541 0018 C9       		leave
 2542              		.cfi_def_cfa 7, 8
 2543 0019 C3       		ret
 2544              		.cfi_endproc
 2545              	.LFE10296:
 2547              		.section	.text._ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_
 2548              		.weak	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeER
 2550              	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS8_:
 2551              	.LFB10297:
  98:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
  99:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** template< class T >
 100:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** inline BOOST_DEDUCED_TYPENAME range_iterator<const T>::type end( const T& r )
 2552              		.loc 20 100 0
 2553              		.cfi_startproc
 2554 0000 55       		pushq	%rbp
 2555              		.cfi_def_cfa_offset 16
 2556              		.cfi_offset 6, -16
 2557 0001 4889E5   		movq	%rsp, %rbp
 2558              		.cfi_def_cfa_register 6
 2559 0004 4883EC10 		subq	$16, %rsp
 2560 0008 48897DF8 		movq	%rdi, -8(%rbp)
 101:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** {
 102:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #if !BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
 103:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****     using namespace range_detail;
 104:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** #endif
 105:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****     return range_end( r );
 2561              		.loc 20 105 0
 2562 000c 488B45F8 		movq	-8(%rbp), %rax
 2563 0010 4889C7   		movq	%rax, %rdi
 2564 0013 E8000000 		call	_ZN5boost12range_detail9range_endIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4typeER
 2564      00
 106:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** }
 2565              		.loc 20 106 0
 2566 0018 C9       		leave
 2567              		.cfi_def_cfa 7, 8
 2568 0019 C3       		ret
 2569              		.cfi_endproc
 2570              	.LFE10297:
 2572              		.section	.text._ZN5boost14iterator_rangeIPKcEC2IS2_EET_S5_,"axG",@progbits,_ZN5boost14iterator_ran
 2573              		.align 2
 2574              		.weak	_ZN5boost14iterator_rangeIPKcEC2IS2_EET_S5_
 2576              	_ZN5boost14iterator_rangeIPKcEC2IS2_EET_S5_:
 2577              	.LFB10299:
 2578              		.file 23 "/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** // Boost.Range library
   2:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** //
GAS LISTING /tmp/ccX8BQhk.s 			page 233


   3:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** //  Copyright Neil Groves & Thorsten Ottosen & Pavol Droba 2003-2004.
   4:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** //  Use, modification and distribution is subject to the Boost Software
   5:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** //  License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
   6:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
   7:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** //
   8:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** // For more information, see http://www.boost.org/libs/range/
   9:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** //
  10:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** // Credits:
  11:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** // 'michel' reported Trac 9072 which included a patch for allowing references
  12:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** // to function types.
  13:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** //
  14:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #ifndef BOOST_RANGE_ITERATOR_RANGE_CORE_HPP_INCLUDED
  15:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #define BOOST_RANGE_ITERATOR_RANGE_CORE_HPP_INCLUDED
  16:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
  17:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/config.hpp> // Define __STL_CONFIG_H, if appropriate.
  18:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/detail/workaround.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
  20:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #if BOOST_WORKAROUND(BOOST_MSVC, BOOST_TESTED_AT(1500))
  21:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     #pragma warning( push )
  22:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     #pragma warning( disable : 4996 )
  23:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #endif
  24:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
  25:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/assert.hpp>
  26:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/iterator/iterator_traits.hpp>
  27:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/iterator/iterator_facade.hpp>
  28:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/mpl/if.hpp>
  29:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/mpl/not.hpp>
  30:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/mpl/or.hpp>
  31:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/type_traits/is_abstract.hpp>
  32:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/type_traits/is_array.hpp>
  33:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/type_traits/is_base_and_derived.hpp>
  34:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/type_traits/is_convertible.hpp>
  35:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/type_traits/is_function.hpp>
  36:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/type_traits/is_pointer.hpp>
  37:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/type_traits/is_same.hpp>
  38:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/range/functions.hpp>
  39:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/range/iterator.hpp>
  40:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/range/difference_type.hpp>
  41:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/range/has_range_iterator.hpp>
  42:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/range/algorithm/equal.hpp>
  43:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/range/detail/safe_bool.hpp>
  44:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <boost/utility/enable_if.hpp>
  45:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <iterator>
  46:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <algorithm>
  47:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** #include <cstddef>
  48:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
  49:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** /*! \file
  50:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     Defines the \c iterator_class and related functions.
  51:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     \c iterator_range is a simple wrapper of iterator pair idiom. It provides
  52:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     a rich subset of Container interface.
  53:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** */
  54:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
  55:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
  56:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** namespace boost
  57:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
  58:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     namespace iterator_range_detail
  59:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
GAS LISTING /tmp/ccX8BQhk.s 			page 234


  60:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         //
  61:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         // The functions adl_begin and adl_end are implemented in a separate
  62:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         // class for gcc-2.9x
  63:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         //
  64:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         template<class IteratorT>
  65:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         struct iterator_range_impl {
  66:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template< class ForwardRange >
  67:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             static IteratorT adl_begin( ForwardRange& r )
  68:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
  69:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 return IteratorT( boost::begin( r ) );
  70:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
  71:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
  72:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template< class ForwardRange >
  73:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             static IteratorT adl_end( ForwardRange& r )
  74:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
  75:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 return IteratorT( boost::end( r ) );
  76:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
  77:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         };
  78:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
  79:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         template< class Left, class Right >
  80:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         inline bool less_than( const Left& l, const Right& r )
  81:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         {
  82:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             return std::lexicographical_compare( boost::begin(l),
  83:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                                                  boost::end(l),
  84:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                                                  boost::begin(r),
  85:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                                                  boost::end(r) );
  86:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         }
  87:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         
  88:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         template< class Left, class Right >
  89:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         inline bool greater_than( const Left& l, const Right& r )
  90:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         {
  91:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             return iterator_range_detail::less_than(r,l);
  92:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         }
  93:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         
  94:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         template< class Left, class Right >
  95:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         inline bool less_or_equal_than( const Left& l, const Right& r )
  96:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         {
  97:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             return !iterator_range_detail::less_than(r,l);
  98:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         }
  99:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         
 100:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         template< class Left, class Right >
 101:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         inline bool greater_or_equal_than( const Left& l, const Right& r )
 102:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         {
 103:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             return !iterator_range_detail::less_than(l,r);
 104:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         }
 105:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 106:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         // This version is maintained since it is used in other boost libraries
 107:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         // such as Boost.Assign
 108:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         template< class Left, class Right >
 109:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         inline bool equal(const Left& l, const Right& r)
 110:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         {
 111:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             return boost::equal(l, r);
 112:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         }
 113:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 114:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** struct range_tag
 115:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 116:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
GAS LISTING /tmp/ccX8BQhk.s 			page 235


 117:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 118:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** struct const_range_tag
 119:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 120:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
 121:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 122:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** struct iterator_range_tag
 123:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 124:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
 125:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 126:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** typedef char (&incrementable_t)[1];
 127:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** typedef char (&bidirectional_t)[2];
 128:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** typedef char (&random_access_t)[3];
 129:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 130:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** incrementable_t test_traversal_tag(boost::incrementable_traversal_tag);
 131:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** bidirectional_t test_traversal_tag(boost::bidirectional_traversal_tag);
 132:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** random_access_t test_traversal_tag(boost::random_access_traversal_tag);
 133:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 134:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** template<std::size_t S>
 135:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** struct pure_iterator_traversal_impl
 136:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 137:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef boost::incrementable_traversal_tag type;
 138:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
 139:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 140:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** template<>
 141:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** struct pure_iterator_traversal_impl<sizeof(bidirectional_t)>
 142:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 143:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef boost::bidirectional_traversal_tag type;
 144:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
 145:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 146:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** template<>
 147:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** struct pure_iterator_traversal_impl<sizeof(random_access_t)>
 148:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 149:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef boost::random_access_traversal_tag type;
 150:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
 151:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 152:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** template<typename IteratorT>
 153:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** struct pure_iterator_traversal
 154:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 155:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef
 156:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         BOOST_DEDUCED_TYPENAME iterator_traversal<IteratorT>::type
 157:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     traversal_t;
 158:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     BOOST_STATIC_CONSTANT(
 159:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         std::size_t,
 160:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         traversal_i = sizeof(iterator_range_detail::test_traversal_tag((traversal_t())))
 161:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     );
 162:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef
 163:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         BOOST_DEDUCED_TYPENAME pure_iterator_traversal_impl<traversal_i>::type
 164:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     type;
 165:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
 166:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 167:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** template<class IteratorT, class TraversalTag>
 168:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** class iterator_range_base
 169:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     : public iterator_range_tag
 170:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 171:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef range_detail::safe_bool<
 172:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 IteratorT iterator_range_base<IteratorT, TraversalTag>::*
 173:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     > safe_bool_t;
GAS LISTING /tmp/ccX8BQhk.s 			page 236


 174:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 175:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef iterator_range_base<IteratorT, TraversalTag> type;
 176:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 177:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** protected:
 178:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef iterator_range_impl<IteratorT> impl;
 179:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 180:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** public:
 181:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME
 182:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         safe_bool_t::unspecified_bool_type unspecified_bool_type;
 183:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 184:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME
 185:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         iterator_value<IteratorT>::type value_type;
 186:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 187:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME
 188:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         iterator_difference<IteratorT>::type difference_type;
 189:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 190:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef std::size_t size_type; // note: must be unsigned
 191:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 192:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     // Needed because value-type is the same for
 193:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     // const and non-const iterators
 194:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME
 195:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 iterator_reference<IteratorT>::type reference;
 196:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 197:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     //! const_iterator type
 198:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     /*!
 199:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         There is no distinction between const_iterator and iterator.
 200:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         These typedefs are provides to fulfill container interface
 201:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     */
 202:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef IteratorT const_iterator;
 203:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     //! iterator type
 204:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef IteratorT iterator;
 205:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 206:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** protected:
 207:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     iterator_range_base()
 208:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : m_Begin()
 209:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         , m_End()
 210:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 211:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 212:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 213:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     template<class Iterator>
 214:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     iterator_range_base(Iterator Begin, Iterator End)
 215:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : m_Begin(Begin)
 216:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         , m_End(End)
 217:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 218:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 219:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 220:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** public:
 221:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     IteratorT begin() const
 222:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 223:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return m_Begin;
 224:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 225:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 226:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     IteratorT end() const
 227:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 228:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return m_End;
 229:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 230:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 237


 231:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     bool empty() const
 232:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 233:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return m_Begin == m_End;
 234:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 235:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 236:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     operator unspecified_bool_type() const
 237:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 238:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return safe_bool_t::to_unspecified_bool(
 239:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     m_Begin != m_End, &iterator_range_base::m_Begin);
 240:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 241:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 242:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     bool operator!() const
 243:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 244:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return empty();
 245:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 246:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 247:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     bool equal(const iterator_range_base& r) const
 248:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 249:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return m_Begin == r.m_Begin && m_End == r.m_End;
 250:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 251:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 252:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    reference front() const
 253:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    {
 254:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****        BOOST_ASSERT(!empty());
 255:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****        return *m_Begin;
 256:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    }
 257:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 258:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    void drop_front()
 259:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    {
 260:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****        BOOST_ASSERT(!empty());
 261:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****        ++m_Begin;
 262:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    }
 263:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 264:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    void drop_front(difference_type n)
 265:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    {
 266:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****        BOOST_ASSERT(n >= difference_type());
 267:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****        std::advance(this->m_Begin, n);
 268:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    }
 269:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    
 270:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    // Deprecated
 271:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****    void pop_front() { drop_front(); }
 272:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 273:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** protected:
 274:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     template<class Iterator>
 275:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     void assign(Iterator first, Iterator last)
 276:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 277:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         m_Begin = first;
 278:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         m_End = last;
 279:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 280:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 281:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     template<class SinglePassRange>
 282:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     void assign(const SinglePassRange& r)
 283:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 284:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         m_Begin = impl::adl_begin(r);
 285:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         m_End = impl::adl_end(r);
 286:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 287:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 238


 288:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     template<class SinglePassRange>
 289:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     void assign(SinglePassRange& r)
 290:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 291:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         m_Begin = impl::adl_begin(r);
 292:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         m_End = impl::adl_end(r);
 293:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 294:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 295:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     IteratorT m_Begin;
 296:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     IteratorT m_End;
 297:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
 298:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 299:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** template<class IteratorT>
 300:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** class iterator_range_base<IteratorT, bidirectional_traversal_tag>
 301:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : public iterator_range_base<IteratorT, incrementable_traversal_tag>
 302:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 303:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef iterator_range_base<IteratorT, incrementable_traversal_tag> base_type;
 304:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 305:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** protected:
 306:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     iterator_range_base()
 307:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 308:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 309:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 310:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     template<class Iterator>
 311:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     iterator_range_base(Iterator first, Iterator last)
 312:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : base_type(first, last)
 313:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 314:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 315:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 316:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** public:
 317:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME base_type::difference_type difference_type;
 318:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME base_type::reference reference;
 319:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 320:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     reference back() const
 321:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 322:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         BOOST_ASSERT(!this->empty());
 323:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return *boost::prior(this->m_End);
 324:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 325:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 326:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     void drop_back()
 327:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 328:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         BOOST_ASSERT(!this->empty());
 329:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         --this->m_End;
 330:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 331:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 332:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     void drop_back(difference_type n)
 333:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 334:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         BOOST_ASSERT(n >= difference_type());
 335:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         std::advance(this->m_End, -n);
 336:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 337:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     
 338:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     // Deprecated
 339:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     void pop_back() { drop_back(); }
 340:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
 341:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 342:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** template<class IteratorT>
 343:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** class iterator_range_base<IteratorT, random_access_traversal_tag>
 344:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : public iterator_range_base<IteratorT, bidirectional_traversal_tag>
GAS LISTING /tmp/ccX8BQhk.s 			page 239


 345:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 346:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef iterator_range_base<
 347:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 IteratorT, bidirectional_traversal_tag> base_type;
 348:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 349:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** public:
 350:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME
 351:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         boost::mpl::if_<
 352:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             boost::mpl::or_<
 353:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 boost::is_abstract<
 354:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     BOOST_DEDUCED_TYPENAME base_type::value_type
 355:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 >,
 356:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 boost::is_array<
 357:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     BOOST_DEDUCED_TYPENAME base_type::value_type
 358:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 >,
 359:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 boost::is_function<
 360:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     BOOST_DEDUCED_TYPENAME base_type::value_type
 361:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 >
 362:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             >,
 363:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             BOOST_DEDUCED_TYPENAME base_type::reference,
 364:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             BOOST_DEDUCED_TYPENAME base_type::value_type
 365:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         >::type abstract_value_type;
 366:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 367:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     // Rationale:
 368:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     // typedef these here to reduce verbiage in the implementation of this
 369:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     // type.
 370:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME base_type::difference_type difference_type;
 371:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME base_type::size_type size_type;
 372:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     typedef BOOST_DEDUCED_TYPENAME base_type::reference reference;
 373:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 374:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** protected:
 375:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     iterator_range_base()
 376:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 377:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 378:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 379:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     template<class Iterator>
 380:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     iterator_range_base(Iterator first, Iterator last)
 381:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : base_type(first, last)
 382:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 383:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 384:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 385:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** public:
 386:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     reference operator[](difference_type at) const
 387:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 388:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         BOOST_ASSERT(at >= 0);
 389:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         BOOST_ASSERT(static_cast<typename base_type::size_type>(at) < size());
 390:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return this->m_Begin[at];
 391:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 392:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 393:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     //
 394:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     // When storing transform iterators, operator[]()
 395:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     // fails because it returns by reference. Therefore
 396:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     // operator()() is provided for these cases.
 397:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     //
 398:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     abstract_value_type operator()(difference_type at) const
 399:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 400:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         BOOST_ASSERT(at >= 0);
 401:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         BOOST_ASSERT(static_cast<typename base_type::size_type>(at) < size());
GAS LISTING /tmp/ccX8BQhk.s 			page 240


 402:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return this->m_Begin[at];
 403:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 404:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 405:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     BOOST_DEDUCED_TYPENAME base_type::size_type size() const
 406:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 407:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         return this->m_End - this->m_Begin;
 408:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 409:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** };
 410:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 411:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 412:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 413:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** //  iterator range template class -----------------------------------------//
 414:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 415:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         //! iterator_range class
 416:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         /*!
 417:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             An \c iterator_range delimits a range in a sequence by beginning and ending iterators.
 418:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             An iterator_range can be passed to an algorithm which requires a sequence as an input.
 419:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             For example, the \c toupper() function may be used most frequently on strings,
 420:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             but can also be used on iterator_ranges:
 421:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 422:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             \code
 423:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 boost::tolower( find( s, "UPPERCASE STRING" ) );
 424:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             \endcode
 425:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 426:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             Many algorithms working with sequences take a pair of iterators,
 427:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             delimiting a working range, as an arguments. The \c iterator_range class is an
 428:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             encapsulation of a range identified by a pair of iterators.
 429:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             It provides a collection interface,
 430:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             so it is possible to pass an instance to an algorithm requiring a collection as an inpu
 431:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         */
 432:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         template<class IteratorT>
 433:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         class iterator_range
 434:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             : public iterator_range_detail::iterator_range_base<
 435:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     IteratorT,
 436:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     BOOST_DEDUCED_TYPENAME iterator_range_detail::pure_iterator_traversal<IteratorT
 437:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 >
 438:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         {
 439:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             typedef iterator_range_detail::iterator_range_base<
 440:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     IteratorT,
 441:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     BOOST_DEDUCED_TYPENAME iterator_range_detail::pure_iterator_traversal<IteratorT
 442:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             > base_type;
 443:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 444:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template<class Source>
 445:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             struct is_compatible_range_
 446:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****               : is_convertible<
 447:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     BOOST_DEDUCED_TYPENAME mpl::eval_if<
 448:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                         has_range_iterator<Source>,
 449:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                         range_iterator<Source>,
 450:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                         mpl::identity<void>
 451:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     >::type,
 452:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     BOOST_DEDUCED_TYPENAME base_type::iterator
 453:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 >
 454:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 455:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             };
 456:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 457:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template<class Source>
 458:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             struct is_compatible_range
GAS LISTING /tmp/ccX8BQhk.s 			page 241


 459:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 : mpl::and_<
 460:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     mpl::not_<
 461:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                         is_convertible<
 462:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                             Source,
 463:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                             BOOST_DEDUCED_TYPENAME base_type::iterator
 464:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                         >
 465:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     >,
 466:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     is_compatible_range_<Source>
 467:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 >
 468:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 469:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             };
 470:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 471:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         protected:
 472:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             typedef iterator_range_detail::iterator_range_impl<IteratorT> impl;
 473:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 474:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         public:
 475:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             typedef iterator_range<IteratorT> type;
 476:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 477:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             iterator_range()
 478:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 479:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 480:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 481:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template<class Iterator>
 482:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             iterator_range(Iterator first, Iterator last)
 2579              		.loc 23 482 0
 2580              		.cfi_startproc
 2581 0000 55       		pushq	%rbp
 2582              		.cfi_def_cfa_offset 16
 2583              		.cfi_offset 6, -16
 2584 0001 4889E5   		movq	%rsp, %rbp
 2585              		.cfi_def_cfa_register 6
 2586 0004 4883EC20 		subq	$32, %rsp
 2587 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2588 000c 488975F0 		movq	%rsi, -16(%rbp)
 2589 0010 488955E8 		movq	%rdx, -24(%rbp)
 2590              	.LBB15:
 483:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 : base_type(first, last)
 2591              		.loc 23 483 0
 2592 0014 488B45F8 		movq	-8(%rbp), %rax
 2593 0018 488B55E8 		movq	-24(%rbp), %rdx
 2594 001c 488B4DF0 		movq	-16(%rbp), %rcx
 2595 0020 4889CE   		movq	%rcx, %rsi
 2596 0023 4889C7   		movq	%rax, %rdi
 2597 0026 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_travers
 2597      00
 2598              	.LBE15:
 484:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 485:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 2599              		.loc 23 485 0
 2600 002b 90       		nop
 2601 002c C9       		leave
 2602              		.cfi_def_cfa 7, 8
 2603 002d C3       		ret
 2604              		.cfi_endproc
 2605              	.LFE10299:
 2607              		.weak	_ZN5boost14iterator_rangeIPKcEC1IS2_EET_S5_
 2608              		.set	_ZN5boost14iterator_rangeIPKcEC1IS2_EET_S5_,_ZN5boost14iterator_rangeIPKcEC2IS2_EET_S5_
GAS LISTING /tmp/ccX8BQhk.s 			page 242


 2609              		.section	.text._ZN5boost12range_detail11range_beginINSt7__cxx1112basic_stringIcSt11char_traitsIcES
 2610              		.weak	_ZN5boost12range_detail11range_beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEN
 2612              	_ZN5boost12range_detail11range_beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14ran
 2613              	.LFB10303:
  40:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     {
 2614              		.loc 19 40 0
 2615              		.cfi_startproc
 2616 0000 55       		pushq	%rbp
 2617              		.cfi_def_cfa_offset 16
 2618              		.cfi_offset 6, -16
 2619 0001 4889E5   		movq	%rsp, %rbp
 2620              		.cfi_def_cfa_register 6
 2621 0004 4883EC10 		subq	$16, %rsp
 2622 0008 48897DF8 		movq	%rdi, -8(%rbp)
  47:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     }
 2623              		.loc 19 47 0
 2624 000c 488B45F8 		movq	-8(%rbp), %rax
 2625 0010 4889C7   		movq	%rax, %rdi
 2626 0013 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
 2626      00
  48:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
 2627              		.loc 19 48 0
 2628 0018 C9       		leave
 2629              		.cfi_def_cfa 7, 8
 2630 0019 C3       		ret
 2631              		.cfi_endproc
 2632              	.LFE10303:
 2634              		.section	.text._ZN5boost12range_detail9range_endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 2635              		.weak	_ZN5boost12range_detail9range_endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_1
 2637              	_ZN5boost12range_detail9range_endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_
 2638              	.LFB10304:
  41:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         {
 2639              		.loc 20 41 0
 2640              		.cfi_startproc
 2641 0000 55       		pushq	%rbp
 2642              		.cfi_def_cfa_offset 16
 2643              		.cfi_offset 6, -16
 2644 0001 4889E5   		movq	%rsp, %rbp
 2645              		.cfi_def_cfa_register 6
 2646 0004 4883EC10 		subq	$16, %rsp
 2647 0008 48897DF8 		movq	%rdi, -8(%rbp)
  48:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         }
 2648              		.loc 20 48 0
 2649 000c 488B45F8 		movq	-8(%rbp), %rax
 2650 0010 4889C7   		movq	%rax, %rdi
 2651 0013 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
 2651      00
  49:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
 2652              		.loc 20 49 0
 2653 0018 C9       		leave
 2654              		.cfi_def_cfa 7, 8
 2655 0019 C3       		ret
 2656              		.cfi_endproc
 2657              	.LFE10304:
 2659              		.section	.text._ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__n
 2660              		.weak	_ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_ite
 2662              	_ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT
GAS LISTING /tmp/ccX8BQhk.s 			page 243


 2663              	.LFB10305:
 841:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 2664              		.loc 13 841 0
 2665              		.cfi_startproc
 2666 0000 55       		pushq	%rbp
 2667              		.cfi_def_cfa_offset 16
 2668              		.cfi_offset 6, -16
 2669 0001 4889E5   		movq	%rsp, %rbp
 2670              		.cfi_def_cfa_register 6
 2671 0004 53       		pushq	%rbx
 2672 0005 4883EC18 		subq	$24, %rsp
 2673              		.cfi_offset 3, -24
 2674 0009 48897DE8 		movq	%rdi, -24(%rbp)
 2675 000d 488975E0 		movq	%rsi, -32(%rbp)
 844:/usr/include/c++/5/bits/stl_iterator.h **** 
 2676              		.loc 13 844 0
 2677 0011 488B45E8 		movq	-24(%rbp), %rax
 2678 0015 4889C7   		movq	%rax, %rdi
 2679 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4bas
 2679      00
 2680 001d 488B18   		movq	(%rax), %rbx
 2681 0020 488B45E0 		movq	-32(%rbp), %rax
 2682 0024 4889C7   		movq	%rax, %rdi
 2683 0027 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4bas
 2683      00
 2684 002c 488B00   		movq	(%rax), %rax
 2685 002f 4839C3   		cmpq	%rax, %rbx
 2686 0032 0F95C0   		setne	%al
 2687 0035 4883C418 		addq	$24, %rsp
 2688 0039 5B       		popq	%rbx
 2689 003a 5D       		popq	%rbp
 2690              		.cfi_def_cfa 7, 8
 2691 003b C3       		ret
 2692              		.cfi_endproc
 2693              	.LFE10305:
 2695              		.section	.text._ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 2696              		.align 2
 2697              		.weak	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv
 2699              	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv:
 2700              	.LFB10306:
 761:/usr/include/c++/5/bits/stl_iterator.h ****       {
 2701              		.loc 13 761 0
 2702              		.cfi_startproc
 2703 0000 55       		pushq	%rbp
 2704              		.cfi_def_cfa_offset 16
 2705              		.cfi_offset 6, -16
 2706 0001 4889E5   		movq	%rsp, %rbp
 2707              		.cfi_def_cfa_register 6
 2708 0004 48897DF8 		movq	%rdi, -8(%rbp)
 763:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
 2709              		.loc 13 763 0
 2710 0008 488B45F8 		movq	-8(%rbp), %rax
 2711 000c 488B00   		movq	(%rax), %rax
 2712 000f 488D5001 		leaq	1(%rax), %rdx
 2713 0013 488B45F8 		movq	-8(%rbp), %rax
 2714 0017 488910   		movq	%rdx, (%rax)
 764:/usr/include/c++/5/bits/stl_iterator.h ****       }
GAS LISTING /tmp/ccX8BQhk.s 			page 244


 2715              		.loc 13 764 0
 2716 001a 488B45F8 		movq	-8(%rbp), %rax
 765:/usr/include/c++/5/bits/stl_iterator.h **** 
 2717              		.loc 13 765 0
 2718 001e 5D       		popq	%rbp
 2719              		.cfi_def_cfa 7, 8
 2720 001f C3       		ret
 2721              		.cfi_endproc
 2722              	.LFE10306:
 2724              		.section	.text._ZN5boost5emptyINS_14iterator_rangeIPKcEEEEbRKT_,"axG",@progbits,_ZN5boost5emptyINS
 2725              		.weak	_ZN5boost5emptyINS_14iterator_rangeIPKcEEEEbRKT_
 2727              	_ZN5boost5emptyINS_14iterator_rangeIPKcEEEEbRKT_:
 2728              	.LFB10307:
 2729              		.file 24 "/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** // Boost.Range library
   2:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** //
   3:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** //  Copyright Thorsten Ottosen 2003-2004. Use, modification and
   4:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** //  distribution is subject to the Boost Software License, Version
   5:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** //  1.0. (See accompanying file LICENSE_1_0.txt or copy at
   6:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** //  http://www.boost.org/LICENSE_1_0.txt)
   7:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** //
   8:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** // For more information, see http://www.boost.org/libs/range/
   9:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** //
  10:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** #ifndef BOOST_RANGE_EMPTY_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** #define BOOST_RANGE_EMPTY_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** #if defined(_MSC_VER)
  15:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** # pragma once
  16:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** #endif
  17:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** 
  18:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** #include <boost/range/config.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** #include <boost/range/begin.hpp>
  20:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** #include <boost/range/end.hpp>
  21:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** 
  22:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** namespace boost 
  23:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** { 
  24:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp **** 
  25:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp ****     template< class T >
  26:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp ****     inline bool empty( const T& r )
 2730              		.loc 24 26 0
 2731              		.cfi_startproc
 2732 0000 55       		pushq	%rbp
 2733              		.cfi_def_cfa_offset 16
 2734              		.cfi_offset 6, -16
 2735 0001 4889E5   		movq	%rsp, %rbp
 2736              		.cfi_def_cfa_register 6
 2737 0004 53       		pushq	%rbx
 2738 0005 4883EC18 		subq	$24, %rsp
 2739              		.cfi_offset 3, -24
 2740 0009 48897DE8 		movq	%rdi, -24(%rbp)
  27:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp ****     {
  28:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp ****         return boost::begin( r ) == boost::end( r );
 2741              		.loc 24 28 0
 2742 000d 488B45E8 		movq	-24(%rbp), %rax
 2743 0011 4889C7   		movq	%rax, %rdi
 2744 0014 E8000000 		call	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeE
GAS LISTING /tmp/ccX8BQhk.s 			page 245


 2744      00
 2745 0019 4889C3   		movq	%rax, %rbx
 2746 001c 488B45E8 		movq	-24(%rbp), %rax
 2747 0020 4889C7   		movq	%rax, %rdi
 2748 0023 E8000000 		call	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS
 2748      00
 2749 0028 4839C3   		cmpq	%rax, %rbx
 2750 002b 0F94C0   		sete	%al
  29:/home/brendan/Boost/boost_1_60_0/boost/range/empty.hpp ****     }
 2751              		.loc 24 29 0
 2752 002e 4883C418 		addq	$24, %rsp
 2753 0032 5B       		popq	%rbx
 2754 0033 5D       		popq	%rbp
 2755              		.cfi_def_cfa 7, 8
 2756 0034 C3       		ret
 2757              		.cfi_endproc
 2758              	.LFE10307:
 2760              		.section	.text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_strin
 2761              		.align 2
 2762              		.weak	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11ch
 2764              	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trai
 2765              	.LFB10309:
 482:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 : base_type(first, last)
 2766              		.loc 23 482 0
 2767              		.cfi_startproc
 2768 0000 55       		pushq	%rbp
 2769              		.cfi_def_cfa_offset 16
 2770              		.cfi_offset 6, -16
 2771 0001 4889E5   		movq	%rsp, %rbp
 2772              		.cfi_def_cfa_register 6
 2773 0004 4883EC20 		subq	$32, %rsp
 2774 0008 48897DF8 		movq	%rdi, -8(%rbp)
 2775 000c 488975F0 		movq	%rsi, -16(%rbp)
 2776 0010 488955E0 		movq	%rdx, -32(%rbp)
 2777              	.LBB16:
 483:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 2778              		.loc 23 483 0
 2779 0014 488B45F8 		movq	-8(%rbp), %rax
 2780 0018 488B55E0 		movq	-32(%rbp), %rdx
 2781 001c 488B4DF0 		movq	-16(%rbp), %rcx
 2782 0020 4889CE   		movq	%rcx, %rsi
 2783 0023 4889C7   		movq	%rax, %rdi
 2784 0026 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 2784      00
 2785              	.LBE16:
 2786              		.loc 23 485 0
 2787 002b 90       		nop
 2788 002c C9       		leave
 2789              		.cfi_def_cfa 7, 8
 2790 002d C3       		ret
 2791              		.cfi_endproc
 2792              	.LFE10309:
 2794              		.weak	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11ch
 2795              		.set	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11cha
 2796              		.section	.text._ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementa
 2797              		.align 2
 2798              		.weak	_ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_trave
GAS LISTING /tmp/ccX8BQhk.s 			page 246


 2800              	_ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_ta
 2801              	.LFB10311:
 221:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 2802              		.loc 23 221 0
 2803              		.cfi_startproc
 2804 0000 55       		pushq	%rbp
 2805              		.cfi_def_cfa_offset 16
 2806              		.cfi_offset 6, -16
 2807 0001 4889E5   		movq	%rsp, %rbp
 2808              		.cfi_def_cfa_register 6
 2809 0004 48897DF8 		movq	%rdi, -8(%rbp)
 223:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 2810              		.loc 23 223 0
 2811 0008 488B45F8 		movq	-8(%rbp), %rax
 2812 000c 488B00   		movq	(%rax), %rax
 224:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 2813              		.loc 23 224 0
 2814 000f 5D       		popq	%rbp
 2815              		.cfi_def_cfa 7, 8
 2816 0010 C3       		ret
 2817              		.cfi_endproc
 2818              	.LFE10311:
 2820              		.section	.text._ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementa
 2821              		.align 2
 2822              		.weak	_ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_trave
 2824              	_ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_ta
 2825              	.LFB10312:
 226:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 2826              		.loc 23 226 0
 2827              		.cfi_startproc
 2828 0000 55       		pushq	%rbp
 2829              		.cfi_def_cfa_offset 16
 2830              		.cfi_offset 6, -16
 2831 0001 4889E5   		movq	%rsp, %rbp
 2832              		.cfi_def_cfa_register 6
 2833 0004 48897DF8 		movq	%rdi, -8(%rbp)
 228:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 2834              		.loc 23 228 0
 2835 0008 488B45F8 		movq	-8(%rbp), %rax
 2836 000c 488B4008 		movq	8(%rax), %rax
 229:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 2837              		.loc 23 229 0
 2838 0010 5D       		popq	%rbp
 2839              		.cfi_def_cfa 7, 8
 2840 0011 C3       		ret
 2841              		.cfi_endproc
 2842              	.LFE10312:
 2844              		.section	.text._ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 2845              		.align 2
 2846              		.weak	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeE
 2848              	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv:
 2849              	.LFB10313:
 753:/usr/include/c++/5/bits/stl_iterator.h ****       { return *_M_current; }
 2850              		.loc 13 753 0
 2851              		.cfi_startproc
 2852 0000 55       		pushq	%rbp
 2853              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccX8BQhk.s 			page 247


 2854              		.cfi_offset 6, -16
 2855 0001 4889E5   		movq	%rsp, %rbp
 2856              		.cfi_def_cfa_register 6
 2857 0004 48897DF8 		movq	%rdi, -8(%rbp)
 754:/usr/include/c++/5/bits/stl_iterator.h **** 
 2858              		.loc 13 754 0
 2859 0008 488B45F8 		movq	-8(%rbp), %rax
 2860 000c 488B00   		movq	(%rax), %rax
 2861 000f 5D       		popq	%rbp
 2862              		.cfi_def_cfa 7, 8
 2863 0010 C3       		ret
 2864              		.cfi_endproc
 2865              	.LFE10313:
 2867              		.section	.text._ZNK5boost9algorithm8is_equalclIccEEbRKT_RKT0_,"axG",@progbits,_ZNK5boost9algorithm
 2868              		.align 2
 2869              		.weak	_ZNK5boost9algorithm8is_equalclIccEEbRKT_RKT0_
 2871              	_ZNK5boost9algorithm8is_equalclIccEEbRKT_RKT0_:
 2872              	.LFB10314:
 2873              		.file 25 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** //  Boost string_algo library compare.hpp header file  -------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** //  Copyright Pavol Droba 2002-2006.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** #ifndef BOOST_STRING_COMPARE_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** #define BOOST_STRING_COMPARE_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** #include <boost/algorithm/string/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** #include <locale>
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** 
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** /*! \file
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****     Defines element comparison predicates. Many algorithms in this library can
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****     take an additional argument with a predicate used to compare elements.
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****     This makes it possible, for instance, to have case insensitive versions
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****     of the algorithms.
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** */
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** 
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** namespace boost {
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****     namespace algorithm {
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** 
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****         //  is_equal functor  -----------------------------------------------//
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp **** 
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****         //! is_equal functor
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****         /*!
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****             Standard STL equal_to only handle comparison between arguments
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****             of the same type. This is a less restrictive version which wraps operator ==.
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****         */
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****         struct is_equal
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****         {
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****             //! Function operator
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****             /*!
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****                 Compare two operands for equality
GAS LISTING /tmp/ccX8BQhk.s 			page 248


  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****             */
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****             template< typename T1, typename T2 >
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****                 bool operator()( const T1& Arg1, const T2& Arg2 ) const
 2874              		.loc 25 41 0
 2875              		.cfi_startproc
 2876 0000 55       		pushq	%rbp
 2877              		.cfi_def_cfa_offset 16
 2878              		.cfi_offset 6, -16
 2879 0001 4889E5   		movq	%rsp, %rbp
 2880              		.cfi_def_cfa_register 6
 2881 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2882 0008 488975F0 		movq	%rsi, -16(%rbp)
 2883 000c 488955E8 		movq	%rdx, -24(%rbp)
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****             {
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****                 return Arg1==Arg2;
 2884              		.loc 25 43 0
 2885 0010 488B45F0 		movq	-16(%rbp), %rax
 2886 0014 0FB610   		movzbl	(%rax), %edx
 2887 0017 488B45E8 		movq	-24(%rbp), %rax
 2888 001b 0FB600   		movzbl	(%rax), %eax
 2889 001e 38C2     		cmpb	%al, %dl
 2890 0020 0F94C0   		sete	%al
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/compare.hpp ****             }
 2891              		.loc 25 44 0
 2892 0023 5D       		popq	%rbp
 2893              		.cfi_def_cfa 7, 8
 2894 0024 C3       		ret
 2895              		.cfi_endproc
 2896              	.LFE10314:
 2898              		.section	.text._ZN5boost9algorithm6detail17check_find_resultINSt7__cxx1112basic_stringIcSt11char_t
 2899              		.weak	_ZN5boost9algorithm6detail17check_find_resultINSt7__cxx1112basic_stringIcSt11char_traitsIcES
 2901              	_ZN5boost9algorithm6detail17check_find_resultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN
 2902              	.LFB10315:
 2903              		.file 26 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** //  Boost string_algo library find_format_store.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** //  Copyright Pavol Droba 2002-2003.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** #ifndef BOOST_STRING_FIND_FORMAT_STORE_DETAIL_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** #define BOOST_STRING_FIND_FORMAT_STORE_DETAIL_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** #include <boost/algorithm/string/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** #include <boost/range/iterator_range_core.hpp>
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** namespace boost {
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****     namespace algorithm {
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****         namespace detail {
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** //  temporary format and find result storage --------------------------------//
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** #if BOOST_WORKAROUND(BOOST_MSVC, >= 1400)
GAS LISTING /tmp/ccX8BQhk.s 			page 249


  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** #pragma warning(push)
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** #pragma warning(disable:4512) //assignment operator could not be generated
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** #endif
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             template< 
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 typename ForwardIteratorT,
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 typename FormatterT,
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 typename FormatResultT >
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             class find_format_store : 
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 public iterator_range<ForwardIteratorT>
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             {
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             public:
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 // typedefs
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 typedef iterator_range<ForwardIteratorT> base_type;
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 typedef FormatterT  formatter_type;
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 typedef FormatResultT format_result_type;
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             public:
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 // Construction
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 find_format_store( 
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                         const base_type& FindResult,
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                         const format_result_type& FormatResult,
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                         const formatter_type& Formatter ) :
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     base_type(FindResult),
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     m_FormatResult(FormatResult),
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     m_Formatter(Formatter) {}
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 // Assignment
  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 template< typename FindResultT >
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 find_format_store& operator=( FindResultT FindResult )
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 {
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     iterator_range<ForwardIteratorT>::operator=(FindResult);
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     if( !this->empty() ) {
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                         m_FormatResult=m_Formatter(FindResult);
  57:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     }
  58:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     
  59:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     return *this;
  60:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 }
  61:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
  62:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 // Retrieve format result
  63:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 const format_result_type& format_result()
  64:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 {   
  65:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     return m_FormatResult;
  66:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 }
  67:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
  68:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             private:
  69:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 format_result_type m_FormatResult;
  70:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 const formatter_type& m_Formatter;
  71:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             };
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
  73:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             template<typename InputT, typename FindResultT>
  74:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             bool check_find_result(InputT&, FindResultT& FindResult)
 2904              		.loc 26 74 0
 2905              		.cfi_startproc
 2906 0000 55       		pushq	%rbp
 2907              		.cfi_def_cfa_offset 16
 2908              		.cfi_offset 6, -16
 2909 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 250


 2910              		.cfi_def_cfa_register 6
 2911 0004 4883EC30 		subq	$48, %rsp
 2912 0008 48897DD8 		movq	%rdi, -40(%rbp)
 2913 000c 488975D0 		movq	%rsi, -48(%rbp)
 2914              		.loc 26 74 0
 2915 0010 64488B04 		movq	%fs:40, %rax
 2915      25280000 
 2915      00
 2916 0019 488945F8 		movq	%rax, -8(%rbp)
 2917 001d 31C0     		xorl	%eax, %eax
  75:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             {
  76:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 typedef BOOST_STRING_TYPENAME 
  77:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     range_const_iterator<InputT>::type input_iterator_type; 
  78:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 iterator_range<input_iterator_type> ResultRange(FindResult);
 2918              		.loc 26 78 0
 2919 001f 488B4DD0 		movq	-48(%rbp), %rcx
 2920 0023 488D45E0 		leaq	-32(%rbp), %rax
 2921 0027 BA000000 		movl	$0, %edx
 2921      00
 2922 002c 4889CE   		movq	%rcx, %rsi
 2923 002f 4889C7   		movq	%rax, %rdi
 2924 0032 E8000000 		call	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11ch
 2924      00
  79:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 return !ResultRange.empty();
 2925              		.loc 26 79 0
 2926 0037 488D45E0 		leaq	-32(%rbp), %rax
 2927 003b 4889C7   		movq	%rax, %rdi
 2928 003e E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7
 2928      00
 2929 0043 83F001   		xorl	$1, %eax
  80:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****             }
 2930              		.loc 26 80 0
 2931 0046 488B55F8 		movq	-8(%rbp), %rdx
 2932 004a 64483314 		xorq	%fs:40, %rdx
 2932      25280000 
 2932      00
 2933 0053 7405     		je	.L162
 2934 0055 E8000000 		call	__stack_chk_fail
 2934      00
 2935              	.L162:
 2936 005a C9       		leave
 2937              		.cfi_def_cfa 7, 8
 2938 005b C3       		ret
 2939              		.cfi_endproc
 2940              	.LFE10315:
 2942              		.section	.text._ZNK5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEclINS3_IN9__gn
 2943              		.align 2
 2944              		.weak	_ZNK5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEclINS3_IN9__gnu_cxx17__
 2946              	_ZNK5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEclINS3_IN9__gnu_cxx17__normal_
 2947              	.LFB10316:
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 // Operation
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** #if BOOST_WORKAROUND(__BORLANDC__, BOOST_TESTED_AT(0x564))
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 template<typename Range2T>
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 result_type& operator()(const Range2T&)
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 {
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                     return m_Format;
GAS LISTING /tmp/ccX8BQhk.s 			page 251


  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 }
  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** #endif
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp **** 
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 template<typename Range2T>
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 const result_type& operator()(const Range2T&) const
 2948              		.loc 18 54 0
 2949              		.cfi_startproc
 2950 0000 55       		pushq	%rbp
 2951              		.cfi_def_cfa_offset 16
 2952              		.cfi_offset 6, -16
 2953 0001 4889E5   		movq	%rsp, %rbp
 2954              		.cfi_def_cfa_register 6
 2955 0004 48897DF8 		movq	%rdi, -8(%rbp)
 2956 0008 488975F0 		movq	%rsi, -16(%rbp)
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 {
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                     return m_Format;
 2957              		.loc 18 56 0
 2958 000c 488B45F8 		movq	-8(%rbp), %rax
  57:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/formatter.hpp ****                 }
 2959              		.loc 18 57 0
 2960 0010 5D       		popq	%rbp
 2961              		.cfi_def_cfa 7, 8
 2962 0011 C3       		ret
 2963              		.cfi_endproc
 2964              	.LFE10316:
 2966              		.section	.text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_strin
 2967              		.align 2
 2968              		.weak	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11ch
 2970              	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trai
 2971              	.LFB10318:
 486:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 487:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template<class SinglePassRange>
 488:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             iterator_range(
 489:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 const SinglePassRange& r,
 490:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 BOOST_DEDUCED_TYPENAME ::boost::enable_if<
 491:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     is_compatible_range<const SinglePassRange>
 492:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 >::type* = 0
 493:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             )
 494:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 : base_type(impl::adl_begin(r), impl::adl_end(r))
 495:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 496:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 497:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 498:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template<class SinglePassRange>
 499:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             iterator_range(
 2972              		.loc 23 499 0
 2973              		.cfi_startproc
 2974 0000 55       		pushq	%rbp
 2975              		.cfi_def_cfa_offset 16
 2976              		.cfi_offset 6, -16
 2977 0001 4889E5   		movq	%rsp, %rbp
 2978              		.cfi_def_cfa_register 6
 2979 0004 53       		pushq	%rbx
 2980 0005 4883EC28 		subq	$40, %rsp
 2981              		.cfi_offset 3, -24
 2982 0009 48897DE8 		movq	%rdi, -24(%rbp)
 2983 000d 488975E0 		movq	%rsi, -32(%rbp)
 2984 0011 488955D8 		movq	%rdx, -40(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 252


 2985              	.LBB17:
 500:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 SinglePassRange& r,
 501:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 BOOST_DEDUCED_TYPENAME ::boost::enable_if<
 502:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     is_compatible_range<SinglePassRange>
 503:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 >::type* = 0
 504:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             )
 505:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 : base_type(impl::adl_begin(r), impl::adl_end(r))
 2986              		.loc 23 505 0
 2987 0015 488B45E0 		movq	-32(%rbp), %rax
 2988 0019 4889C7   		movq	%rax, %rdi
 2989 001c E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 2989      00
 2990 0021 4889C3   		movq	%rax, %rbx
 2991 0024 488B45E0 		movq	-32(%rbp), %rax
 2992 0028 4889C7   		movq	%rax, %rdi
 2993 002b E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 2993      00
 2994 0030 4889C1   		movq	%rax, %rcx
 2995 0033 488B45E8 		movq	-24(%rbp), %rax
 2996 0037 4889DA   		movq	%rbx, %rdx
 2997 003a 4889CE   		movq	%rcx, %rsi
 2998 003d 4889C7   		movq	%rax, %rdi
 2999 0040 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 2999      00
 3000              	.LBE17:
 506:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 507:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 3001              		.loc 23 507 0
 3002 0045 90       		nop
 3003 0046 4883C428 		addq	$40, %rsp
 3004 004a 5B       		popq	%rbx
 3005 004b 5D       		popq	%rbp
 3006              		.cfi_def_cfa 7, 8
 3007 004c C3       		ret
 3008              		.cfi_endproc
 3009              	.LFE10318:
 3011              		.weak	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11ch
 3012              		.set	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11cha
 3013              		.section	.text._ZN5boost9algorithm6detail21find_format_all_impl2INSt7__cxx1112basic_stringIcSt11ch
 3014              		.weak	_ZN5boost9algorithm6detail21find_format_all_impl2INSt7__cxx1112basic_stringIcSt11char_traits
 3016              	_ZN5boost9algorithm6detail21find_format_all_impl2INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 3017              	.LFB10320:
 183:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 InputT& Input,
 3018              		.loc 21 183 0
 3019              		.cfi_startproc
 3020              		.cfi_personality 0x3,__gxx_personality_v0
 3021              		.cfi_lsda 0x3,.LLSDA10320
 3022 0000 55       		pushq	%rbp
 3023              		.cfi_def_cfa_offset 16
 3024              		.cfi_offset 6, -16
 3025 0001 4889E5   		movq	%rsp, %rbp
 3026              		.cfi_def_cfa_register 6
 3027 0004 53       		pushq	%rbx
 3028 0005 4881EC28 		subq	$296, %rsp
 3028      010000
 3029              		.cfi_offset 3, -24
 3030 000c 4889BDF8 		movq	%rdi, -264(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 253


 3030      FEFFFF
 3031 0013 4889F0   		movq	%rsi, %rax
 3032 0016 4889D6   		movq	%rdx, %rsi
 3033 0019 4889F2   		movq	%rsi, %rdx
 3034 001c 488985E0 		movq	%rax, -288(%rbp)
 3034      FEFFFF
 3035 0023 488995E8 		movq	%rdx, -280(%rbp)
 3035      FEFFFF
 3036 002a 4889C8   		movq	%rcx, %rax
 3037 002d 4C89C1   		movq	%r8, %rcx
 3038 0030 4889CA   		movq	%rcx, %rdx
 3039 0033 488985D0 		movq	%rax, -304(%rbp)
 3039      FEFFFF
 3040 003a 488995D8 		movq	%rdx, -296(%rbp)
 3040      FEFFFF
 183:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 InputT& Input,
 3041              		.loc 21 183 0
 3042 0041 64488B04 		movq	%fs:40, %rax
 3042      25280000 
 3042      00
 3043 004a 488945E8 		movq	%rax, -24(%rbp)
 3044 004e 31C0     		xorl	%eax, %eax
 198:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****           
 3045              		.loc 21 198 0
 3046 0050 488D8DE0 		leaq	-288(%rbp), %rcx
 3046      FEFFFF
 3047 0057 488D5528 		leaq	40(%rbp), %rdx
 3048 005b 488DB5D0 		leaq	-304(%rbp), %rsi
 3048      FEFFFF
 3049 0062 488D8560 		leaq	-160(%rbp), %rax
 3049      FFFFFF
 3050 0069 4889C7   		movq	%rax, %rdi
 3051 006c E8000000 		call	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112b
 3051      00
 202:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 3052              		.loc 21 202 0
 3053 0071 488D4590 		leaq	-112(%rbp), %rax
 3054 0075 4889C7   		movq	%rax, %rdi
 3055              	.LEHB22:
 3056 0078 E8000000 		call	_ZNSt5dequeIcSaIcEEC1Ev
 3056      00
 3057              	.LEHE22:
 205:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 input_iterator_type SearchIt=::boost::begin(Input);
 3058              		.loc 21 205 0
 3059 007d 488B85F8 		movq	-264(%rbp), %rax
 3059      FEFFFF
 3060 0084 4889C7   		movq	%rax, %rdi
 3061 0087 E8000000 		call	_ZN5boost17range_adl_barrier5beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_1
 3061      00
 3062 008c 48898500 		movq	%rax, -256(%rbp)
 3062      FFFFFF
 206:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 
 3063              		.loc 21 206 0
 3064 0093 488B85F8 		movq	-264(%rbp), %rax
 3064      FEFFFF
 3065 009a 4889C7   		movq	%rax, %rdi
 3066 009d E8000000 		call	_ZN5boost17range_adl_barrier5beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_1
GAS LISTING /tmp/ccX8BQhk.s 			page 254


 3066      00
 3067 00a2 48898510 		movq	%rax, -240(%rbp)
 3067      FFFFFF
 3068              	.L168:
 208:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 {
 3069              		.loc 21 208 0
 3070 00a9 488D8560 		leaq	-160(%rbp), %rax
 3070      FFFFFF
 3071 00b0 4889C7   		movq	%rax, %rdi
 3072              	.LEHB23:
 3073 00b3 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 3073      00
 3074 00b8 4883F8FF 		cmpq	$-1, %rax
 3075 00bc 0F95C0   		setne	%al
 3076 00bf 84C0     		testb	%al, %al
 3077 00c1 0F84B600 		je	.L167
 3077      0000
 211:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                         Storage,
 3078              		.loc 21 211 0
 3079 00c7 488D8560 		leaq	-160(%rbp), %rax
 3079      FFFFFF
 3080 00ce 4889C7   		movq	%rax, %rdi
 3081 00d1 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 3081      00
 3082 00d6 4889C7   		movq	%rax, %rdi
 3083 00d9 488B8D10 		movq	-240(%rbp), %rcx
 3083      FFFFFF
 3084 00e0 488B9500 		movq	-256(%rbp), %rdx
 3084      FFFFFF
 3085 00e7 488BB5F8 		movq	-264(%rbp), %rsi
 3085      FEFFFF
 3086 00ee 488D4590 		leaq	-112(%rbp), %rax
 3087 00f2 4989F8   		movq	%rdi, %r8
 3088 00f5 4889C7   		movq	%rax, %rdi
 3089 00f8 E8000000 		call	_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEENSt7__cxx1112basic_stringIcSt11ch
 3089      00
 3090 00fd 48898500 		movq	%rax, -256(%rbp)
 3090      FFFFFF
 219:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 3091              		.loc 21 219 0
 3092 0104 488D8560 		leaq	-160(%rbp), %rax
 3092      FFFFFF
 3093 010b 4889C7   		movq	%rax, %rdi
 3094 010e E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 3094      00
 3095 0113 48898510 		movq	%rax, -240(%rbp)
 3095      FFFFFF
 222:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 3096              		.loc 21 222 0
 3097 011a 488D8560 		leaq	-160(%rbp), %rax
 3097      FFFFFF
 3098 0121 4889C7   		movq	%rax, %rdi
 3099 0124 E8000000 		call	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112b
 3099      00
 3100 0129 4889C2   		movq	%rax, %rdx
 3101 012c 488D4590 		leaq	-112(%rbp), %rax
 3102 0130 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccX8BQhk.s 			page 255


 3103 0133 4889C7   		movq	%rax, %rdi
 3104 0136 E8000000 		call	_ZN5boost9algorithm6detail15copy_to_storageISt5dequeIcSaIcEENS_14iterator_rangeIPKcEEEEvRT_RK
 3104      00
 225:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
 3105              		.loc 21 225 0
 3106 013b 488B85F8 		movq	-264(%rbp), %rax
 3106      FEFFFF
 3107 0142 4889C7   		movq	%rax, %rdi
 3108 0145 E8000000 		call	_ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14r
 3108      00
 3109 014a 4889C2   		movq	%rax, %rdx
 3110 014d 488B8510 		movq	-240(%rbp), %rax
 3110      FFFFFF
 3111 0154 4889C6   		movq	%rax, %rsi
 3112 0157 488D7D10 		leaq	16(%rbp), %rdi
 3113 015b E8000000 		call	_ZNK5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEclIN9__gnu_cxx17__normal_iterato
 3113      00
 3114 0160 4889C1   		movq	%rax, %rcx
 3115 0163 4889D3   		movq	%rdx, %rbx
 3116 0166 488D8560 		leaq	-160(%rbp), %rax
 3116      FFFFFF
 3117 016d 4889CE   		movq	%rcx, %rsi
 3118 0170 4889C7   		movq	%rax, %rdi
 3119 0173 E8000000 		call	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112b
 3119      00
 208:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 {
 3120              		.loc 21 208 0
 3121 0178 E92CFFFF 		jmp	.L168
 3121      FF
 3122              	.L167:
 229:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                     Storage,
 3123              		.loc 21 229 0
 3124 017d 488B85F8 		movq	-264(%rbp), %rax
 3124      FEFFFF
 3125 0184 4889C7   		movq	%rax, %rdi
 3126 0187 E8000000 		call	_ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14r
 3126      00
 3127 018c 4889C7   		movq	%rax, %rdi
 3128 018f 488B8D10 		movq	-240(%rbp), %rcx
 3128      FFFFFF
 3129 0196 488B9500 		movq	-256(%rbp), %rdx
 3129      FFFFFF
 3130 019d 488BB5F8 		movq	-264(%rbp), %rsi
 3130      FEFFFF
 3131 01a4 488D4590 		leaq	-112(%rbp), %rax
 3132 01a8 4989F8   		movq	%rdi, %r8
 3133 01ab 4889C7   		movq	%rax, %rdi
 3134 01ae E8000000 		call	_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEENSt7__cxx1112basic_stringIcSt11ch
 3134      00
 3135 01b3 48898500 		movq	%rax, -256(%rbp)
 3135      FFFFFF
 236:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 {
 3136              		.loc 21 236 0
 3137 01ba 488D4590 		leaq	-112(%rbp), %rax
 3138 01be 4889C7   		movq	%rax, %rdi
 3139 01c1 E8000000 		call	_ZNKSt5dequeIcSaIcEE5emptyEv
 3139      00
GAS LISTING /tmp/ccX8BQhk.s 			page 256


 3140 01c6 84C0     		testb	%al, %al
 3141 01c8 742D     		je	.L169
 239:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
 3142              		.loc 21 239 0
 3143 01ca 488B85F8 		movq	-264(%rbp), %rax
 3143      FEFFFF
 3144 01d1 4889C7   		movq	%rax, %rdi
 3145 01d4 E8000000 		call	_ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14r
 3145      00
 3146 01d9 4889C2   		movq	%rax, %rdx
 3147 01dc 488B8D00 		movq	-256(%rbp), %rcx
 3147      FFFFFF
 3148 01e3 488B85F8 		movq	-264(%rbp), %rax
 3148      FEFFFF
 3149 01ea 4889CE   		movq	%rcx, %rsi
 3150 01ed 4889C7   		movq	%rax, %rdi
 3151 01f0 E8000000 		call	_ZN5boost9algorithm6detail5eraseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENT_8it
 3151      00
 3152              	.LEHE23:
 3153 01f5 EB5B     		jmp	.L170
 3154              	.L169:
 244:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp ****                 }
 3155              		.loc 21 244 0
 3156 01f7 488D8540 		leaq	-192(%rbp), %rax
 3156      FFFFFF
 3157 01fe 488D5590 		leaq	-112(%rbp), %rdx
 3158 0202 4889D6   		movq	%rdx, %rsi
 3159 0205 4889C7   		movq	%rax, %rdi
 3160 0208 E8000000 		call	_ZNSt5dequeIcSaIcEE3endEv
 3160      00
 3161 020d 488D8520 		leaq	-224(%rbp), %rax
 3161      FFFFFF
 3162 0214 488D5590 		leaq	-112(%rbp), %rdx
 3163 0218 4889D6   		movq	%rdx, %rsi
 3164 021b 4889C7   		movq	%rax, %rdi
 3165 021e E8000000 		call	_ZNSt5dequeIcSaIcEE5beginEv
 3165      00
 3166 0223 488B85F8 		movq	-264(%rbp), %rax
 3166      FEFFFF
 3167 022a 4889C7   		movq	%rax, %rdi
 3168 022d E8000000 		call	_ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14r
 3168      00
 3169 0232 4889C6   		movq	%rax, %rsi
 3170 0235 488D8D40 		leaq	-192(%rbp), %rcx
 3170      FFFFFF
 3171 023c 488D9520 		leaq	-224(%rbp), %rdx
 3171      FFFFFF
 3172 0243 488B85F8 		movq	-264(%rbp), %rax
 3172      FEFFFF
 3173 024a 4889C7   		movq	%rax, %rdi
 3174              	.LEHB24:
 3175 024d E8000000 		call	_ZN5boost9algorithm6detail6insertINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt15_De
 3175      00
 3176              	.LEHE24:
 3177              	.L170:
 202:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 3178              		.loc 21 202 0
GAS LISTING /tmp/ccX8BQhk.s 			page 257


 3179 0252 488D4590 		leaq	-112(%rbp), %rax
 3180 0256 4889C7   		movq	%rax, %rdi
 3181 0259 E8000000 		call	_ZNSt5dequeIcSaIcEED1Ev
 3181      00
 246:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 3182              		.loc 21 246 0
 3183 025e 90       		nop
 3184 025f 488B45E8 		movq	-24(%rbp), %rax
 3185 0263 64483304 		xorq	%fs:40, %rax
 3185      25280000 
 3185      00
 3186 026c 7426     		je	.L173
 3187 026e EB1F     		jmp	.L176
 3188              	.L175:
 3189 0270 4889C3   		movq	%rax, %rbx
 3190 0273 EB03     		jmp	.L172
 3191              	.L174:
 3192 0275 4889C3   		movq	%rax, %rbx
 3193              	.L172:
 202:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 3194              		.loc 21 202 0
 3195 0278 488D4590 		leaq	-112(%rbp), %rax
 3196 027c 4889C7   		movq	%rax, %rdi
 3197 027f E8000000 		call	_ZNSt5dequeIcSaIcEED1Ev
 3197      00
 3198 0284 4889D8   		movq	%rbx, %rax
 3199 0287 4889C7   		movq	%rax, %rdi
 3200              	.LEHB25:
 3201 028a E8000000 		call	_Unwind_Resume
 3201      00
 3202              	.LEHE25:
 3203              	.L176:
 246:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_all.hpp **** 
 3204              		.loc 21 246 0
 3205 028f E8000000 		call	__stack_chk_fail
 3205      00
 3206              	.L173:
 3207 0294 4881C428 		addq	$296, %rsp
 3207      010000
 3208 029b 5B       		popq	%rbx
 3209 029c 5D       		popq	%rbp
 3210              		.cfi_def_cfa 7, 8
 3211 029d C3       		ret
 3212              		.cfi_endproc
 3213              	.LFE10320:
 3214              		.section	.gcc_except_table
 3215              	.LLSDA10320:
 3216 0074 FF       		.byte	0xff
 3217 0075 FF       		.byte	0xff
 3218 0076 01       		.byte	0x1
 3219 0077 16       		.uleb128 .LLSDACSE10320-.LLSDACSB10320
 3220              	.LLSDACSB10320:
 3221 0078 78       		.uleb128 .LEHB22-.LFB10320
 3222 0079 05       		.uleb128 .LEHE22-.LEHB22
 3223 007a 00       		.uleb128 0
 3224 007b 00       		.uleb128 0
 3225 007c B301     		.uleb128 .LEHB23-.LFB10320
GAS LISTING /tmp/ccX8BQhk.s 			page 258


 3226 007e C202     		.uleb128 .LEHE23-.LEHB23
 3227 0080 F504     		.uleb128 .L174-.LFB10320
 3228 0082 00       		.uleb128 0
 3229 0083 CD04     		.uleb128 .LEHB24-.LFB10320
 3230 0085 05       		.uleb128 .LEHE24-.LEHB24
 3231 0086 F004     		.uleb128 .L175-.LFB10320
 3232 0088 00       		.uleb128 0
 3233 0089 8A05     		.uleb128 .LEHB25-.LFB10320
 3234 008b 05       		.uleb128 .LEHE25-.LEHB25
 3235 008c 00       		.uleb128 0
 3236 008d 00       		.uleb128 0
 3237              	.LLSDACSE10320:
 3238              		.section	.text._ZN5boost9algorithm6detail21find_format_all_impl2INSt7__cxx1112basic_stringIcSt11ch
 3240              		.section	.text._ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm,"axG",@progbits,_ZN9__gnu_cxx13new_
 3241              		.align 2
 3242              		.weak	_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm
 3244              	_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm:
 3245              	.LFB10321:
 3246              		.file 27 "/usr/include/c++/5/ext/new_allocator.h"
   1:/usr/include/c++/5/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/5/ext/new_allocator.h **** 
   3:/usr/include/c++/5/ext/new_allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/new_allocator.h **** //
   5:/usr/include/c++/5/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/ext/new_allocator.h **** // any later version.
  10:/usr/include/c++/5/ext/new_allocator.h **** 
  11:/usr/include/c++/5/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/ext/new_allocator.h **** 
  16:/usr/include/c++/5/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/new_allocator.h **** 
  20:/usr/include/c++/5/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/new_allocator.h **** 
  25:/usr/include/c++/5/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/usr/include/c++/5/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/new_allocator.h ****  */
  28:/usr/include/c++/5/ext/new_allocator.h **** 
  29:/usr/include/c++/5/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/usr/include/c++/5/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/usr/include/c++/5/ext/new_allocator.h **** 
  32:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/usr/include/c++/5/ext/new_allocator.h **** #include <new>
  34:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/usr/include/c++/5/ext/new_allocator.h **** #include <bits/move.h>
  36:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/usr/include/c++/5/ext/new_allocator.h **** #include <type_traits>
  38:/usr/include/c++/5/ext/new_allocator.h **** #endif
GAS LISTING /tmp/ccX8BQhk.s 			page 259


  39:/usr/include/c++/5/ext/new_allocator.h **** 
  40:/usr/include/c++/5/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/5/ext/new_allocator.h **** {
  42:/usr/include/c++/5/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/5/ext/new_allocator.h **** 
  44:/usr/include/c++/5/ext/new_allocator.h ****   using std::size_t;
  45:/usr/include/c++/5/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/usr/include/c++/5/ext/new_allocator.h **** 
  47:/usr/include/c++/5/ext/new_allocator.h ****   /**
  48:/usr/include/c++/5/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/usr/include/c++/5/ext/new_allocator.h ****    *  @ingroup allocators
  50:/usr/include/c++/5/ext/new_allocator.h ****    *
  51:/usr/include/c++/5/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  52:/usr/include/c++/5/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/usr/include/c++/5/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/usr/include/c++/5/ext/new_allocator.h ****    *
  55:/usr/include/c++/5/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/usr/include/c++/5/ext/new_allocator.h ****    */
  57:/usr/include/c++/5/ext/new_allocator.h ****   template<typename _Tp>
  58:/usr/include/c++/5/ext/new_allocator.h ****     class new_allocator
  59:/usr/include/c++/5/ext/new_allocator.h ****     {
  60:/usr/include/c++/5/ext/new_allocator.h ****     public:
  61:/usr/include/c++/5/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/usr/include/c++/5/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/usr/include/c++/5/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/usr/include/c++/5/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/usr/include/c++/5/ext/new_allocator.h **** 
  69:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  70:/usr/include/c++/5/ext/new_allocator.h ****         struct rebind
  71:/usr/include/c++/5/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  72:/usr/include/c++/5/ext/new_allocator.h **** 
  73:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/usr/include/c++/5/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/usr/include/c++/5/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/usr/include/c++/5/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/usr/include/c++/5/ext/new_allocator.h **** #endif
  78:/usr/include/c++/5/ext/new_allocator.h **** 
  79:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/usr/include/c++/5/ext/new_allocator.h **** 
  81:/usr/include/c++/5/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  82:/usr/include/c++/5/ext/new_allocator.h **** 
  83:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Tp1>
  84:/usr/include/c++/5/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  85:/usr/include/c++/5/ext/new_allocator.h **** 
  86:/usr/include/c++/5/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  87:/usr/include/c++/5/ext/new_allocator.h **** 
  88:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  89:/usr/include/c++/5/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  90:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  91:/usr/include/c++/5/ext/new_allocator.h **** 
  92:/usr/include/c++/5/ext/new_allocator.h ****       const_pointer
  93:/usr/include/c++/5/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  94:/usr/include/c++/5/ext/new_allocator.h ****       { return std::__addressof(__x); }
  95:/usr/include/c++/5/ext/new_allocator.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 260


  96:/usr/include/c++/5/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  97:/usr/include/c++/5/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  98:/usr/include/c++/5/ext/new_allocator.h ****       pointer
  99:/usr/include/c++/5/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
 100:/usr/include/c++/5/ext/new_allocator.h ****       { 
 101:/usr/include/c++/5/ext/new_allocator.h **** 	if (__n > this->max_size())
 102:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 103:/usr/include/c++/5/ext/new_allocator.h **** 
 104:/usr/include/c++/5/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 105:/usr/include/c++/5/ext/new_allocator.h ****       }
 106:/usr/include/c++/5/ext/new_allocator.h **** 
 107:/usr/include/c++/5/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 108:/usr/include/c++/5/ext/new_allocator.h ****       void
 109:/usr/include/c++/5/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 3247              		.loc 27 109 0
 3248              		.cfi_startproc
 3249 0000 55       		pushq	%rbp
 3250              		.cfi_def_cfa_offset 16
 3251              		.cfi_offset 6, -16
 3252 0001 4889E5   		movq	%rsp, %rbp
 3253              		.cfi_def_cfa_register 6
 3254 0004 4883EC20 		subq	$32, %rsp
 3255 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3256 000c 488975F0 		movq	%rsi, -16(%rbp)
 3257 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 3258              		.loc 27 110 0
 3259 0014 488B45F0 		movq	-16(%rbp), %rax
 3260 0018 4889C7   		movq	%rax, %rdi
 3261 001b E8000000 		call	_ZdlPv
 3261      00
 3262 0020 90       		nop
 3263 0021 C9       		leave
 3264              		.cfi_def_cfa 7, 8
 3265 0022 C3       		ret
 3266              		.cfi_endproc
 3267              	.LFE10321:
 3269              		.section	.text._ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_,"axG",@progbits,
 3270              		.weak	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
 3272              	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_:
 3273              	.LFB10328:
 3274              		.file 28 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h"
   1:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
   3:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** //
   5:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  11:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 261


  16:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  20:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  25:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** /*
  26:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *
  27:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *
  30:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *
  38:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *
  39:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *
  42:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  */
  50:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  51:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *
  55:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****  */
  58:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  59:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  62:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  64:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** #include <debug/debug.h>
  66:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  67:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** {
  69:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  71:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  72:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     inline typename iterator_traits<_InputIterator>::difference_type
GAS LISTING /tmp/ccX8BQhk.s 			page 262


  73:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  74:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****                input_iterator_tag)
  75:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     {
  76:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       // concept requirements
  77:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  78:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  79:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  80:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       while (__first != __last)
  81:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 	{
  82:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 	  ++__first;
  83:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 	  ++__n;
  84:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 	}
  85:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       return __n;
  86:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
  87:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  88:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  89:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     inline typename iterator_traits<_RandomAccessIterator>::difference_type
  90:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  91:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
  92:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     {
  93:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       // concept requirements
  94:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
  95:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
  96:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       return __last - __first;
  97:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
  98:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
  99:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   /**
 100:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 101:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 102:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 103:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 104:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *
 105:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 106:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 107:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  n may be negative.
 108:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *
 109:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 110:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 111:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   */
 112:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 113:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     inline typename iterator_traits<_InputIterator>::difference_type
 114:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 3275              		.loc 28 114 0
 3276              		.cfi_startproc
 3277 0000 55       		pushq	%rbp
 3278              		.cfi_def_cfa_offset 16
 3279              		.cfi_offset 6, -16
 3280 0001 4889E5   		movq	%rsp, %rbp
 3281              		.cfi_def_cfa_register 6
 3282 0004 53       		pushq	%rbx
 3283 0005 4883EC28 		subq	$40, %rsp
 3284              		.cfi_offset 3, -24
 3285 0009 48897DD8 		movq	%rdi, -40(%rbp)
 3286 000d 488975D0 		movq	%rsi, -48(%rbp)
 3287              		.loc 28 114 0
 3288 0011 64488B04 		movq	%fs:40, %rax
 3288      25280000 
GAS LISTING /tmp/ccX8BQhk.s 			page 263


 3288      00
 3289 001a 488945E8 		movq	%rax, -24(%rbp)
 3290 001e 31C0     		xorl	%eax, %eax
 115:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     {
 116:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       // concept requirements -- taken care of in __distance
 117:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       return std::__distance(__first, __last,
 118:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 			     std::__iterator_category(__first));
 3291              		.loc 28 118 0
 3292 0020 488D45D8 		leaq	-40(%rbp), %rax
 3293 0024 4889C7   		movq	%rax, %rdi
 3294 0027 E8000000 		call	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
 3294      00
 117:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 			     std::__iterator_category(__first));
 3295              		.loc 28 117 0
 3296 002c 488B45D8 		movq	-40(%rbp), %rax
 3297              		.loc 28 118 0
 3298 0030 488B55D0 		movq	-48(%rbp), %rdx
 3299 0034 4883EC08 		subq	$8, %rsp
 3300 0038 53       		pushq	%rbx
 3301 0039 4889D6   		movq	%rdx, %rsi
 3302 003c 4889C7   		movq	%rax, %rdi
 3303 003f E8000000 		call	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterat
 3303      00
 3304 0044 4883C410 		addq	$16, %rsp
 119:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
 3305              		.loc 28 119 0
 3306 0048 488B4DE8 		movq	-24(%rbp), %rcx
 3307 004c 6448330C 		xorq	%fs:40, %rcx
 3307      25280000 
 3307      00
 3308 0055 7405     		je	.L180
 3309 0057 E8000000 		call	__stack_chk_fail
 3309      00
 3310              	.L180:
 3311 005c 488B5DF8 		movq	-8(%rbp), %rbx
 3312 0060 C9       		leave
 3313              		.cfi_def_cfa 7, 8
 3314 0061 C3       		ret
 3315              		.cfi_endproc
 3316              	.LFE10328:
 3318              		.section	.text._ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_,"axG",@progbits,_ZNSt16allocator_trai
 3319              		.weak	_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_
 3321              	_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_:
 3322              	.LFB10330:
 518:/usr/include/c++/5/bits/alloc_traits.h **** 
 519:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 520:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Up
 521:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 522:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 523:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 524:/usr/include/c++/5/bits/alloc_traits.h ****        *
 525:/usr/include/c++/5/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 526:/usr/include/c++/5/bits/alloc_traits.h ****       */
 527:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 528:/usr/include/c++/5/bits/alloc_traits.h **** 	static void
 529:/usr/include/c++/5/bits/alloc_traits.h **** 	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 530:/usr/include/c++/5/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
GAS LISTING /tmp/ccX8BQhk.s 			page 264


 531:/usr/include/c++/5/bits/alloc_traits.h **** 
 532:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 533:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 534:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 535:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 536:/usr/include/c++/5/bits/alloc_traits.h ****        *
 537:/usr/include/c++/5/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 538:/usr/include/c++/5/bits/alloc_traits.h ****       */
 539:/usr/include/c++/5/bits/alloc_traits.h ****       template<typename _Up>
 540:/usr/include/c++/5/bits/alloc_traits.h **** 	static void
 541:/usr/include/c++/5/bits/alloc_traits.h **** 	destroy(allocator_type& __a, _Up* __p)
 542:/usr/include/c++/5/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 543:/usr/include/c++/5/bits/alloc_traits.h **** 
 544:/usr/include/c++/5/bits/alloc_traits.h ****       /**
 545:/usr/include/c++/5/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 546:/usr/include/c++/5/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 547:/usr/include/c++/5/bits/alloc_traits.h ****        *  @return @c __a.max_size()
 548:/usr/include/c++/5/bits/alloc_traits.h ****       */
 549:/usr/include/c++/5/bits/alloc_traits.h ****       static size_type
 550:/usr/include/c++/5/bits/alloc_traits.h ****       max_size(const allocator_type& __a) noexcept
 3323              		.loc 22 550 0
 3324              		.cfi_startproc
 3325 0000 55       		pushq	%rbp
 3326              		.cfi_def_cfa_offset 16
 3327              		.cfi_offset 6, -16
 3328 0001 4889E5   		movq	%rsp, %rbp
 3329              		.cfi_def_cfa_register 6
 3330 0004 4883EC10 		subq	$16, %rsp
 3331 0008 48897DF8 		movq	%rdi, -8(%rbp)
 551:/usr/include/c++/5/bits/alloc_traits.h ****       { return __a.max_size(); }
 3332              		.loc 22 551 0
 3333 000c 488B45F8 		movq	-8(%rbp), %rax
 3334 0010 4889C7   		movq	%rax, %rdi
 3335 0013 E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv
 3335      00
 3336 0018 C9       		leave
 3337              		.cfi_def_cfa 7, 8
 3338 0019 C3       		ret
 3339              		.cfi_endproc
 3340              	.LFE10330:
 3342              		.section	.text._ZSt3maxImERKT_S2_S2_,"axG",@progbits,_ZSt3maxImERKT_S2_S2_,comdat
 3343              		.weak	_ZSt3maxImERKT_S2_S2_
 3345              	_ZSt3maxImERKT_S2_S2_:
 3346              	.LFB10361:
 3347              		.file 29 "/usr/include/c++/5/bits/stl_algobase.h"
   1:/usr/include/c++/5/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_algobase.h **** 
   3:/usr/include/c++/5/bits/stl_algobase.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_algobase.h **** //
   5:/usr/include/c++/5/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_algobase.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_algobase.h **** 
  11:/usr/include/c++/5/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
GAS LISTING /tmp/ccX8BQhk.s 			page 265


  13:/usr/include/c++/5/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_algobase.h **** 
  16:/usr/include/c++/5/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_algobase.h **** 
  20:/usr/include/c++/5/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_algobase.h **** 
  25:/usr/include/c++/5/bits/stl_algobase.h **** /*
  26:/usr/include/c++/5/bits/stl_algobase.h ****  *
  27:/usr/include/c++/5/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_algobase.h ****  *
  30:/usr/include/c++/5/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_algobase.h ****  *
  38:/usr/include/c++/5/bits/stl_algobase.h ****  *
  39:/usr/include/c++/5/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_algobase.h ****  *
  42:/usr/include/c++/5/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_algobase.h ****  */
  50:/usr/include/c++/5/bits/stl_algobase.h **** 
  51:/usr/include/c++/5/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/c++/5/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/c++/5/bits/stl_algobase.h ****  */
  55:/usr/include/c++/5/bits/stl_algobase.h **** 
  56:/usr/include/c++/5/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/c++/5/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/c++/5/bits/stl_algobase.h **** 
  59:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/c++/5/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/c++/5/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/c++/5/bits/stl_algobase.h **** #include <debug/debug.h>
GAS LISTING /tmp/ccX8BQhk.s 			page 266


  70:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/c++/5/bits/stl_algobase.h **** 
  73:/usr/include/c++/5/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/5/bits/stl_algobase.h **** {
  75:/usr/include/c++/5/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/5/bits/stl_algobase.h **** 
  77:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/usr/include/c++/5/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/usr/include/c++/5/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/usr/include/c++/5/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/usr/include/c++/5/bits/stl_algobase.h ****     struct __iter_swap
  83:/usr/include/c++/5/bits/stl_algobase.h ****     {
  84:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/usr/include/c++/5/bits/stl_algobase.h ****         static void
  86:/usr/include/c++/5/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/usr/include/c++/5/bits/stl_algobase.h ****         {
  88:/usr/include/c++/5/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/usr/include/c++/5/bits/stl_algobase.h ****             _ValueType1;
  90:/usr/include/c++/5/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/usr/include/c++/5/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/usr/include/c++/5/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/usr/include/c++/5/bits/stl_algobase.h **** 	}
  94:/usr/include/c++/5/bits/stl_algobase.h ****     };
  95:/usr/include/c++/5/bits/stl_algobase.h **** 
  96:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
  97:/usr/include/c++/5/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/usr/include/c++/5/bits/stl_algobase.h ****     {
  99:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/usr/include/c++/5/bits/stl_algobase.h ****         static void 
 101:/usr/include/c++/5/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/usr/include/c++/5/bits/stl_algobase.h ****         {
 103:/usr/include/c++/5/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/usr/include/c++/5/bits/stl_algobase.h ****         }
 105:/usr/include/c++/5/bits/stl_algobase.h ****     };
 106:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 107:/usr/include/c++/5/bits/stl_algobase.h **** 
 108:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 109:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/usr/include/c++/5/bits/stl_algobase.h ****    *
 115:/usr/include/c++/5/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/usr/include/c++/5/bits/stl_algobase.h ****    *  iterators themselves.
 117:/usr/include/c++/5/bits/stl_algobase.h ****   */
 118:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/usr/include/c++/5/bits/stl_algobase.h ****     inline void
 120:/usr/include/c++/5/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/usr/include/c++/5/bits/stl_algobase.h ****     {
 122:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 123:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator2>)
GAS LISTING /tmp/ccX8BQhk.s 			page 267


 127:/usr/include/c++/5/bits/stl_algobase.h **** 
 128:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/usr/include/c++/5/bits/stl_algobase.h **** 	_ValueType1;
 131:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/usr/include/c++/5/bits/stl_algobase.h **** 	_ValueType2;
 133:/usr/include/c++/5/bits/stl_algobase.h **** 
 134:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/usr/include/c++/5/bits/stl_algobase.h **** 
 139:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/usr/include/c++/5/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/usr/include/c++/5/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/usr/include/c++/5/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/usr/include/c++/5/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/usr/include/c++/5/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/usr/include/c++/5/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/usr/include/c++/5/bits/stl_algobase.h **** #else
 148:/usr/include/c++/5/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 150:/usr/include/c++/5/bits/stl_algobase.h ****     }
 151:/usr/include/c++/5/bits/stl_algobase.h **** 
 152:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 153:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/usr/include/c++/5/bits/stl_algobase.h ****    *
 160:/usr/include/c++/5/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/usr/include/c++/5/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/usr/include/c++/5/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/usr/include/c++/5/bits/stl_algobase.h ****   */
 164:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 165:/usr/include/c++/5/bits/stl_algobase.h ****     _ForwardIterator2
 166:/usr/include/c++/5/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/usr/include/c++/5/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/usr/include/c++/5/bits/stl_algobase.h ****     {
 169:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 170:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/usr/include/c++/5/bits/stl_algobase.h **** 
 176:/usr/include/c++/5/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 177:/usr/include/c++/5/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/usr/include/c++/5/bits/stl_algobase.h ****       return __first2;
 179:/usr/include/c++/5/bits/stl_algobase.h ****     }
 180:/usr/include/c++/5/bits/stl_algobase.h **** 
 181:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 182:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
GAS LISTING /tmp/ccX8BQhk.s 			page 268


 184:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/usr/include/c++/5/bits/stl_algobase.h ****    *
 188:/usr/include/c++/5/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/usr/include/c++/5/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/usr/include/c++/5/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/usr/include/c++/5/bits/stl_algobase.h ****   */
 192:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 193:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 195:/usr/include/c++/5/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/usr/include/c++/5/bits/stl_algobase.h ****     {
 197:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 198:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:/usr/include/c++/5/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/usr/include/c++/5/bits/stl_algobase.h ****       if (__b < __a)
 201:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 202:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 203:/usr/include/c++/5/bits/stl_algobase.h ****     }
 204:/usr/include/c++/5/bits/stl_algobase.h **** 
 205:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 206:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/usr/include/c++/5/bits/stl_algobase.h ****    *
 212:/usr/include/c++/5/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/usr/include/c++/5/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/usr/include/c++/5/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/usr/include/c++/5/bits/stl_algobase.h ****   */
 216:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 217:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 219:/usr/include/c++/5/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 3348              		.loc 29 219 0
 3349              		.cfi_startproc
 3350 0000 55       		pushq	%rbp
 3351              		.cfi_def_cfa_offset 16
 3352              		.cfi_offset 6, -16
 3353 0001 4889E5   		movq	%rsp, %rbp
 3354              		.cfi_def_cfa_register 6
 3355 0004 48897DF8 		movq	%rdi, -8(%rbp)
 3356 0008 488975F0 		movq	%rsi, -16(%rbp)
 220:/usr/include/c++/5/bits/stl_algobase.h ****     {
 221:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 222:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/usr/include/c++/5/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/usr/include/c++/5/bits/stl_algobase.h ****       if (__a < __b)
 3357              		.loc 29 224 0
 3358 000c 488B45F8 		movq	-8(%rbp), %rax
 3359 0010 488B10   		movq	(%rax), %rdx
 3360 0013 488B45F0 		movq	-16(%rbp), %rax
 3361 0017 488B00   		movq	(%rax), %rax
 3362 001a 4839C2   		cmpq	%rax, %rdx
 3363 001d 7306     		jnb	.L184
GAS LISTING /tmp/ccX8BQhk.s 			page 269


 225:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 3364              		.loc 29 225 0
 3365 001f 488B45F0 		movq	-16(%rbp), %rax
 3366 0023 EB04     		jmp	.L185
 3367              	.L184:
 226:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 3368              		.loc 29 226 0
 3369 0025 488B45F8 		movq	-8(%rbp), %rax
 3370              	.L185:
 227:/usr/include/c++/5/bits/stl_algobase.h ****     }
 3371              		.loc 29 227 0
 3372 0029 5D       		popq	%rbp
 3373              		.cfi_def_cfa 7, 8
 3374 002a C3       		ret
 3375              		.cfi_endproc
 3376              	.LFE10361:
 3378              		.section	.text._ZN5boost12range_detail11range_beginIKNS_14iterator_rangeIPKcEEEENS_14range_iterato
 3379              		.weak	_ZN5boost12range_detail11range_beginIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4ty
 3381              	_ZN5boost12range_detail11range_beginIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4typeERS8_
 3382              	.LFB10366:
  40:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     {
 3383              		.loc 19 40 0
 3384              		.cfi_startproc
 3385 0000 55       		pushq	%rbp
 3386              		.cfi_def_cfa_offset 16
 3387              		.cfi_offset 6, -16
 3388 0001 4889E5   		movq	%rsp, %rbp
 3389              		.cfi_def_cfa_register 6
 3390 0004 4883EC10 		subq	$16, %rsp
 3391 0008 48897DF8 		movq	%rdi, -8(%rbp)
  47:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     }
 3392              		.loc 19 47 0
 3393 000c 488B45F8 		movq	-8(%rbp), %rax
 3394 0010 4889C7   		movq	%rax, %rdi
 3395 0013 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traver
 3395      00
  48:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
 3396              		.loc 19 48 0
 3397 0018 C9       		leave
 3398              		.cfi_def_cfa 7, 8
 3399 0019 C3       		ret
 3400              		.cfi_endproc
 3401              	.LFE10366:
 3403              		.section	.text._ZN5boost12range_detail9range_endIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT
 3404              		.weak	_ZN5boost12range_detail9range_endIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4typeE
 3406              	_ZN5boost12range_detail9range_endIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4typeERS8_:
 3407              	.LFB10367:
  41:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         {
 3408              		.loc 20 41 0
 3409              		.cfi_startproc
 3410 0000 55       		pushq	%rbp
 3411              		.cfi_def_cfa_offset 16
 3412              		.cfi_offset 6, -16
 3413 0001 4889E5   		movq	%rsp, %rbp
 3414              		.cfi_def_cfa_register 6
 3415 0004 4883EC10 		subq	$16, %rsp
 3416 0008 48897DF8 		movq	%rdi, -8(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 270


  48:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         }
 3417              		.loc 20 48 0
 3418 000c 488B45F8 		movq	-8(%rbp), %rax
 3419 0010 4889C7   		movq	%rax, %rdi
 3420 0013 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traver
 3420      00
  49:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
 3421              		.loc 20 49 0
 3422 0018 C9       		leave
 3423              		.cfi_def_cfa 7, 8
 3424 0019 C3       		ret
 3425              		.cfi_endproc
 3426              	.LFE10367:
 3428              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_acce
 3429              		.align 2
 3430              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traver
 3432              	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traversal_tag
 3433              	.LFB10369:
 380:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : base_type(first, last)
 3434              		.loc 23 380 0
 3435              		.cfi_startproc
 3436 0000 55       		pushq	%rbp
 3437              		.cfi_def_cfa_offset 16
 3438              		.cfi_offset 6, -16
 3439 0001 4889E5   		movq	%rsp, %rbp
 3440              		.cfi_def_cfa_register 6
 3441 0004 4883EC20 		subq	$32, %rsp
 3442 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3443 000c 488975F0 		movq	%rsi, -16(%rbp)
 3444 0010 488955E8 		movq	%rdx, -24(%rbp)
 3445              	.LBB18:
 381:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 3446              		.loc 23 381 0
 3447 0014 488B45F8 		movq	-8(%rbp), %rax
 3448 0018 488B55E8 		movq	-24(%rbp), %rdx
 3449 001c 488B4DF0 		movq	-16(%rbp), %rcx
 3450 0020 4889CE   		movq	%rcx, %rsi
 3451 0023 4889C7   		movq	%rax, %rdi
 3452 0026 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_travers
 3452      00
 3453              	.LBE18:
 383:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 3454              		.loc 23 383 0
 3455 002b 90       		nop
 3456 002c C9       		leave
 3457              		.cfi_def_cfa 7, 8
 3458 002d C3       		ret
 3459              		.cfi_endproc
 3460              	.LFE10369:
 3462              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traver
 3463              		.set	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_travers
 3464              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterato
 3465              		.align 2
 3466              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 3468              	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx111
 3469              	.LFB10377:
 380:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : base_type(first, last)
GAS LISTING /tmp/ccX8BQhk.s 			page 271


 3470              		.loc 23 380 0
 3471              		.cfi_startproc
 3472 0000 55       		pushq	%rbp
 3473              		.cfi_def_cfa_offset 16
 3474              		.cfi_offset 6, -16
 3475 0001 4889E5   		movq	%rsp, %rbp
 3476              		.cfi_def_cfa_register 6
 3477 0004 4883EC20 		subq	$32, %rsp
 3478 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3479 000c 488975F0 		movq	%rsi, -16(%rbp)
 3480 0010 488955E0 		movq	%rdx, -32(%rbp)
 3481              	.LBB19:
 381:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 3482              		.loc 23 381 0
 3483 0014 488B45F8 		movq	-8(%rbp), %rax
 3484 0018 488B55E0 		movq	-32(%rbp), %rdx
 3485 001c 488B4DF0 		movq	-16(%rbp), %rcx
 3486 0020 4889CE   		movq	%rcx, %rsi
 3487 0023 4889C7   		movq	%rax, %rdi
 3488 0026 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 3488      00
 3489              	.LBE19:
 383:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 3490              		.loc 23 383 0
 3491 002b 90       		nop
 3492 002c C9       		leave
 3493              		.cfi_def_cfa 7, 8
 3494 002d C3       		ret
 3495              		.cfi_endproc
 3496              	.LFE10377:
 3498              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 3499              		.set	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 3500              		.section	.text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stri
 3501              		.align 2
 3502              		.weak	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11c
 3504              	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_tra
 3505              	.LFB10380:
 499:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 SinglePassRange& r,
 3506              		.loc 23 499 0
 3507              		.cfi_startproc
 3508 0000 55       		pushq	%rbp
 3509              		.cfi_def_cfa_offset 16
 3510              		.cfi_offset 6, -16
 3511 0001 4889E5   		movq	%rsp, %rbp
 3512              		.cfi_def_cfa_register 6
 3513 0004 53       		pushq	%rbx
 3514 0005 4883EC28 		subq	$40, %rsp
 3515              		.cfi_offset 3, -24
 3516 0009 48897DE8 		movq	%rdi, -24(%rbp)
 3517 000d 488975E0 		movq	%rsi, -32(%rbp)
 3518 0011 488955D8 		movq	%rdx, -40(%rbp)
 3519              	.LBB20:
 505:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 3520              		.loc 23 505 0
 3521 0015 488B45E0 		movq	-32(%rbp), %rax
 3522 0019 4889C7   		movq	%rax, %rdi
 3523 001c E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7_
GAS LISTING /tmp/ccX8BQhk.s 			page 272


 3523      00
 3524 0021 4889C3   		movq	%rax, %rbx
 3525 0024 488B45E0 		movq	-32(%rbp), %rax
 3526 0028 4889C7   		movq	%rax, %rdi
 3527 002b E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7_
 3527      00
 3528 0030 4889C1   		movq	%rax, %rcx
 3529 0033 488B45E8 		movq	-24(%rbp), %rax
 3530 0037 4889DA   		movq	%rbx, %rdx
 3531 003a 4889CE   		movq	%rcx, %rsi
 3532 003d 4889C7   		movq	%rax, %rdi
 3533 0040 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7_
 3533      00
 3534              	.LBE20:
 3535              		.loc 23 507 0
 3536 0045 90       		nop
 3537 0046 4883C428 		addq	$40, %rsp
 3538 004a 5B       		popq	%rbx
 3539 004b 5D       		popq	%rbp
 3540              		.cfi_def_cfa 7, 8
 3541 004c C3       		ret
 3542              		.cfi_endproc
 3543              	.LFE10380:
 3545              		.weak	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11c
 3546              		.set	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11ch
 3547              		.section	.text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterat
 3548              		.align 2
 3549              		.weak	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt
 3551              	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1
 3552              	.LFB10382:
 231:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 3553              		.loc 23 231 0
 3554              		.cfi_startproc
 3555 0000 55       		pushq	%rbp
 3556              		.cfi_def_cfa_offset 16
 3557              		.cfi_offset 6, -16
 3558 0001 4889E5   		movq	%rsp, %rbp
 3559              		.cfi_def_cfa_register 6
 3560 0004 4883EC10 		subq	$16, %rsp
 3561 0008 48897DF8 		movq	%rdi, -8(%rbp)
 233:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 3562              		.loc 23 233 0
 3563 000c 488B45F8 		movq	-8(%rbp), %rax
 3564 0010 488D5008 		leaq	8(%rax), %rdx
 3565 0014 488B45F8 		movq	-8(%rbp), %rax
 3566 0018 4889D6   		movq	%rdx, %rsi
 3567 001b 4889C7   		movq	%rax, %rdi
 3568 001e E8000000 		call	_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_ite
 3568      00
 234:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 3569              		.loc 23 234 0
 3570 0023 C9       		leave
 3571              		.cfi_def_cfa 7, 8
 3572 0024 C3       		ret
 3573              		.cfi_endproc
 3574              	.LFE10382:
 3576              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iterato
GAS LISTING /tmp/ccX8BQhk.s 			page 273


 3577              		.weak	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 3579              	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx111
 3580              	.LFB10383:
  67:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 3581              		.loc 23 67 0
 3582              		.cfi_startproc
 3583 0000 55       		pushq	%rbp
 3584              		.cfi_def_cfa_offset 16
 3585              		.cfi_offset 6, -16
 3586 0001 4889E5   		movq	%rsp, %rbp
 3587              		.cfi_def_cfa_register 6
 3588 0004 4883EC10 		subq	$16, %rsp
 3589 0008 48897DF8 		movq	%rdi, -8(%rbp)
  69:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 3590              		.loc 23 69 0
 3591 000c 488B45F8 		movq	-8(%rbp), %rax
 3592 0010 4889C7   		movq	%rax, %rdi
 3593 0013 E8000000 		call	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 3593      00
  70:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 3594              		.loc 23 70 0
 3595 0018 C9       		leave
 3596              		.cfi_def_cfa 7, 8
 3597 0019 C3       		ret
 3598              		.cfi_endproc
 3599              	.LFE10383:
 3601              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iterato
 3602              		.weak	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 3604              	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx111
 3605              	.LFB10384:
  73:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 3606              		.loc 23 73 0
 3607              		.cfi_startproc
 3608 0000 55       		pushq	%rbp
 3609              		.cfi_def_cfa_offset 16
 3610              		.cfi_offset 6, -16
 3611 0001 4889E5   		movq	%rsp, %rbp
 3612              		.cfi_def_cfa_register 6
 3613 0004 4883EC10 		subq	$16, %rsp
 3614 0008 48897DF8 		movq	%rdi, -8(%rbp)
  75:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 3615              		.loc 23 75 0
 3616 000c 488B45F8 		movq	-8(%rbp), %rax
 3617 0010 4889C7   		movq	%rax, %rdi
 3618 0013 E8000000 		call	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__c
 3618      00
  76:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         };
 3619              		.loc 23 76 0
 3620 0018 C9       		leave
 3621              		.cfi_def_cfa 7, 8
 3622 0019 C3       		ret
 3623              		.cfi_endproc
 3624              	.LFE10384:
 3626              		.section	.text._ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7
 3627              		.align 2
 3628              		.weak	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112
 3630              	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_s
GAS LISTING /tmp/ccX8BQhk.s 			page 274


 3631              	.LFB10386:
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                         const base_type& FindResult,
 3632              		.loc 26 42 0
 3633              		.cfi_startproc
 3634 0000 55       		pushq	%rbp
 3635              		.cfi_def_cfa_offset 16
 3636              		.cfi_offset 6, -16
 3637 0001 4889E5   		movq	%rsp, %rbp
 3638              		.cfi_def_cfa_register 6
 3639 0004 48897DF8 		movq	%rdi, -8(%rbp)
 3640 0008 488975F0 		movq	%rsi, -16(%rbp)
 3641 000c 488955E8 		movq	%rdx, -24(%rbp)
 3642 0010 48894DE0 		movq	%rcx, -32(%rbp)
 3643              	.LBB21:
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
 3644              		.loc 26 48 0
 3645 0014 488B4DF8 		movq	-8(%rbp), %rcx
 3646 0018 488B45F0 		movq	-16(%rbp), %rax
 3647 001c 488B5008 		movq	8(%rax), %rdx
 3648 0020 488B00   		movq	(%rax), %rax
 3649 0023 488901   		movq	%rax, (%rcx)
 3650 0026 48895108 		movq	%rdx, 8(%rcx)
 3651 002a 488B4DF8 		movq	-8(%rbp), %rcx
 3652 002e 488B45E8 		movq	-24(%rbp), %rax
 3653 0032 488B5008 		movq	8(%rax), %rdx
 3654 0036 488B00   		movq	(%rax), %rax
 3655 0039 48894110 		movq	%rax, 16(%rcx)
 3656 003d 48895118 		movq	%rdx, 24(%rcx)
 3657 0041 488B45F8 		movq	-8(%rbp), %rax
 3658 0045 488B55E0 		movq	-32(%rbp), %rdx
 3659 0049 48895020 		movq	%rdx, 32(%rax)
 3660              	.LBE21:
 3661 004d 90       		nop
 3662 004e 5D       		popq	%rbp
 3663              		.cfi_def_cfa 7, 8
 3664 004f C3       		ret
 3665              		.cfi_endproc
 3666              	.LFE10386:
 3668              		.weak	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112
 3669              		.set	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112b
 3670              		.section	.text._ZNSt5dequeIcSaIcEEC2Ev,"axG",@progbits,_ZNSt5dequeIcSaIcEEC5Ev,comdat
 3671              		.align 2
 3672              		.weak	_ZNSt5dequeIcSaIcEEC2Ev
 3674              	_ZNSt5dequeIcSaIcEEC2Ev:
 3675              	.LFB10389:
  92:/usr/include/c++/5/bits/stl_deque.h **** 
  93:/usr/include/c++/5/bits/stl_deque.h **** 
  94:/usr/include/c++/5/bits/stl_deque.h ****   /**
  95:/usr/include/c++/5/bits/stl_deque.h ****    *  @brief A deque::iterator.
  96:/usr/include/c++/5/bits/stl_deque.h ****    *
  97:/usr/include/c++/5/bits/stl_deque.h ****    *  Quite a bit of intelligence here.  Much of the functionality of
  98:/usr/include/c++/5/bits/stl_deque.h ****    *  deque is actually passed off to this class.  A deque holds two
  99:/usr/include/c++/5/bits/stl_deque.h ****    *  of these internally, marking its valid range.  Access to
 100:/usr/include/c++/5/bits/stl_deque.h ****    *  elements is done as offsets of either of those two, relying on
 101:/usr/include/c++/5/bits/stl_deque.h ****    *  operator overloading in this class.
 102:/usr/include/c++/5/bits/stl_deque.h ****    *
 103:/usr/include/c++/5/bits/stl_deque.h ****    *  All the functions are op overloads except for _M_set_node.
GAS LISTING /tmp/ccX8BQhk.s 			page 275


 104:/usr/include/c++/5/bits/stl_deque.h ****   */
 105:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 106:/usr/include/c++/5/bits/stl_deque.h ****     struct _Deque_iterator
 107:/usr/include/c++/5/bits/stl_deque.h ****     {
 108:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus < 201103L
 109:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Deque_iterator<_Tp, _Tp&, _Tp*>             iterator;
 110:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Deque_iterator<_Tp, const _Tp&, const _Tp*> const_iterator;
 111:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Tp*                                         _Elt_pointer;
 112:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Tp**                                        _Map_pointer;
 113:/usr/include/c++/5/bits/stl_deque.h **** #else
 114:/usr/include/c++/5/bits/stl_deque.h ****     private:
 115:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _Up>
 116:/usr/include/c++/5/bits/stl_deque.h **** 	using __ptr_to = typename pointer_traits<_Ptr>::template rebind<_Up>;
 117:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _CvTp>
 118:/usr/include/c++/5/bits/stl_deque.h **** 	using __iter = _Deque_iterator<_Tp, _CvTp&, __ptr_to<_CvTp>>;
 119:/usr/include/c++/5/bits/stl_deque.h ****     public:
 120:/usr/include/c++/5/bits/stl_deque.h ****       typedef __iter<_Tp>		iterator;
 121:/usr/include/c++/5/bits/stl_deque.h ****       typedef __iter<const _Tp>		const_iterator;
 122:/usr/include/c++/5/bits/stl_deque.h ****       typedef __ptr_to<_Tp>		_Elt_pointer;
 123:/usr/include/c++/5/bits/stl_deque.h ****       typedef __ptr_to<_Elt_pointer>	_Map_pointer;
 124:/usr/include/c++/5/bits/stl_deque.h **** #endif
 125:/usr/include/c++/5/bits/stl_deque.h **** 
 126:/usr/include/c++/5/bits/stl_deque.h ****       static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
 127:/usr/include/c++/5/bits/stl_deque.h ****       { return __deque_buf_size(sizeof(_Tp)); }
 128:/usr/include/c++/5/bits/stl_deque.h **** 
 129:/usr/include/c++/5/bits/stl_deque.h ****       typedef std::random_access_iterator_tag iterator_category;
 130:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Tp                             value_type;
 131:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Ptr                            pointer;
 132:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Ref                            reference;
 133:/usr/include/c++/5/bits/stl_deque.h ****       typedef size_t                          size_type;
 134:/usr/include/c++/5/bits/stl_deque.h ****       typedef ptrdiff_t                       difference_type;
 135:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Deque_iterator                 _Self;
 136:/usr/include/c++/5/bits/stl_deque.h **** 
 137:/usr/include/c++/5/bits/stl_deque.h ****       _Elt_pointer _M_cur;
 138:/usr/include/c++/5/bits/stl_deque.h ****       _Elt_pointer _M_first;
 139:/usr/include/c++/5/bits/stl_deque.h ****       _Elt_pointer _M_last;
 140:/usr/include/c++/5/bits/stl_deque.h ****       _Map_pointer _M_node;
 141:/usr/include/c++/5/bits/stl_deque.h **** 
 142:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_iterator(_Elt_pointer __x, _Map_pointer __y) _GLIBCXX_NOEXCEPT
 143:/usr/include/c++/5/bits/stl_deque.h ****       : _M_cur(__x), _M_first(*__y),
 144:/usr/include/c++/5/bits/stl_deque.h ****         _M_last(*__y + _S_buffer_size()), _M_node(__y) { }
 145:/usr/include/c++/5/bits/stl_deque.h **** 
 146:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_iterator() _GLIBCXX_NOEXCEPT
 147:/usr/include/c++/5/bits/stl_deque.h ****       : _M_cur(), _M_first(), _M_last(), _M_node() { }
 148:/usr/include/c++/5/bits/stl_deque.h **** 
 149:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_iterator(const iterator& __x) _GLIBCXX_NOEXCEPT
 150:/usr/include/c++/5/bits/stl_deque.h ****       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 151:/usr/include/c++/5/bits/stl_deque.h ****         _M_last(__x._M_last), _M_node(__x._M_node) { }
 152:/usr/include/c++/5/bits/stl_deque.h **** 
 153:/usr/include/c++/5/bits/stl_deque.h ****       iterator
 154:/usr/include/c++/5/bits/stl_deque.h ****       _M_const_cast() const _GLIBCXX_NOEXCEPT
 155:/usr/include/c++/5/bits/stl_deque.h ****       { return iterator(_M_cur, _M_node); }
 156:/usr/include/c++/5/bits/stl_deque.h **** 
 157:/usr/include/c++/5/bits/stl_deque.h ****       reference
 158:/usr/include/c++/5/bits/stl_deque.h ****       operator*() const _GLIBCXX_NOEXCEPT
 159:/usr/include/c++/5/bits/stl_deque.h ****       { return *_M_cur; }
 160:/usr/include/c++/5/bits/stl_deque.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 276


 161:/usr/include/c++/5/bits/stl_deque.h ****       pointer
 162:/usr/include/c++/5/bits/stl_deque.h ****       operator->() const _GLIBCXX_NOEXCEPT
 163:/usr/include/c++/5/bits/stl_deque.h ****       { return _M_cur; }
 164:/usr/include/c++/5/bits/stl_deque.h **** 
 165:/usr/include/c++/5/bits/stl_deque.h ****       _Self&
 166:/usr/include/c++/5/bits/stl_deque.h ****       operator++() _GLIBCXX_NOEXCEPT
 167:/usr/include/c++/5/bits/stl_deque.h ****       {
 168:/usr/include/c++/5/bits/stl_deque.h **** 	++_M_cur;
 169:/usr/include/c++/5/bits/stl_deque.h **** 	if (_M_cur == _M_last)
 170:/usr/include/c++/5/bits/stl_deque.h **** 	  {
 171:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + 1);
 172:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_cur = _M_first;
 173:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 174:/usr/include/c++/5/bits/stl_deque.h **** 	return *this;
 175:/usr/include/c++/5/bits/stl_deque.h ****       }
 176:/usr/include/c++/5/bits/stl_deque.h **** 
 177:/usr/include/c++/5/bits/stl_deque.h ****       _Self
 178:/usr/include/c++/5/bits/stl_deque.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 179:/usr/include/c++/5/bits/stl_deque.h ****       {
 180:/usr/include/c++/5/bits/stl_deque.h **** 	_Self __tmp = *this;
 181:/usr/include/c++/5/bits/stl_deque.h **** 	++*this;
 182:/usr/include/c++/5/bits/stl_deque.h **** 	return __tmp;
 183:/usr/include/c++/5/bits/stl_deque.h ****       }
 184:/usr/include/c++/5/bits/stl_deque.h **** 
 185:/usr/include/c++/5/bits/stl_deque.h ****       _Self&
 186:/usr/include/c++/5/bits/stl_deque.h ****       operator--() _GLIBCXX_NOEXCEPT
 187:/usr/include/c++/5/bits/stl_deque.h ****       {
 188:/usr/include/c++/5/bits/stl_deque.h **** 	if (_M_cur == _M_first)
 189:/usr/include/c++/5/bits/stl_deque.h **** 	  {
 190:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node - 1);
 191:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_cur = _M_last;
 192:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 193:/usr/include/c++/5/bits/stl_deque.h **** 	--_M_cur;
 194:/usr/include/c++/5/bits/stl_deque.h **** 	return *this;
 195:/usr/include/c++/5/bits/stl_deque.h ****       }
 196:/usr/include/c++/5/bits/stl_deque.h **** 
 197:/usr/include/c++/5/bits/stl_deque.h ****       _Self
 198:/usr/include/c++/5/bits/stl_deque.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 199:/usr/include/c++/5/bits/stl_deque.h ****       {
 200:/usr/include/c++/5/bits/stl_deque.h **** 	_Self __tmp = *this;
 201:/usr/include/c++/5/bits/stl_deque.h **** 	--*this;
 202:/usr/include/c++/5/bits/stl_deque.h **** 	return __tmp;
 203:/usr/include/c++/5/bits/stl_deque.h ****       }
 204:/usr/include/c++/5/bits/stl_deque.h **** 
 205:/usr/include/c++/5/bits/stl_deque.h ****       _Self&
 206:/usr/include/c++/5/bits/stl_deque.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 207:/usr/include/c++/5/bits/stl_deque.h ****       {
 208:/usr/include/c++/5/bits/stl_deque.h **** 	const difference_type __offset = __n + (_M_cur - _M_first);
 209:/usr/include/c++/5/bits/stl_deque.h **** 	if (__offset >= 0 && __offset < difference_type(_S_buffer_size()))
 210:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 211:/usr/include/c++/5/bits/stl_deque.h **** 	else
 212:/usr/include/c++/5/bits/stl_deque.h **** 	  {
 213:/usr/include/c++/5/bits/stl_deque.h **** 	    const difference_type __node_offset =
 214:/usr/include/c++/5/bits/stl_deque.h **** 	      __offset > 0 ? __offset / difference_type(_S_buffer_size())
 215:/usr/include/c++/5/bits/stl_deque.h **** 	                   : -difference_type((-__offset - 1)
 216:/usr/include/c++/5/bits/stl_deque.h **** 					      / _S_buffer_size()) - 1;
 217:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
GAS LISTING /tmp/ccX8BQhk.s 			page 277


 218:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_cur = _M_first + (__offset - __node_offset
 219:/usr/include/c++/5/bits/stl_deque.h **** 				 * difference_type(_S_buffer_size()));
 220:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 221:/usr/include/c++/5/bits/stl_deque.h **** 	return *this;
 222:/usr/include/c++/5/bits/stl_deque.h ****       }
 223:/usr/include/c++/5/bits/stl_deque.h **** 
 224:/usr/include/c++/5/bits/stl_deque.h ****       _Self
 225:/usr/include/c++/5/bits/stl_deque.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 226:/usr/include/c++/5/bits/stl_deque.h ****       {
 227:/usr/include/c++/5/bits/stl_deque.h **** 	_Self __tmp = *this;
 228:/usr/include/c++/5/bits/stl_deque.h **** 	return __tmp += __n;
 229:/usr/include/c++/5/bits/stl_deque.h ****       }
 230:/usr/include/c++/5/bits/stl_deque.h **** 
 231:/usr/include/c++/5/bits/stl_deque.h ****       _Self&
 232:/usr/include/c++/5/bits/stl_deque.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 233:/usr/include/c++/5/bits/stl_deque.h ****       { return *this += -__n; }
 234:/usr/include/c++/5/bits/stl_deque.h **** 
 235:/usr/include/c++/5/bits/stl_deque.h ****       _Self
 236:/usr/include/c++/5/bits/stl_deque.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 237:/usr/include/c++/5/bits/stl_deque.h ****       {
 238:/usr/include/c++/5/bits/stl_deque.h **** 	_Self __tmp = *this;
 239:/usr/include/c++/5/bits/stl_deque.h **** 	return __tmp -= __n;
 240:/usr/include/c++/5/bits/stl_deque.h ****       }
 241:/usr/include/c++/5/bits/stl_deque.h **** 
 242:/usr/include/c++/5/bits/stl_deque.h ****       reference
 243:/usr/include/c++/5/bits/stl_deque.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 244:/usr/include/c++/5/bits/stl_deque.h ****       { return *(*this + __n); }
 245:/usr/include/c++/5/bits/stl_deque.h **** 
 246:/usr/include/c++/5/bits/stl_deque.h ****       /** 
 247:/usr/include/c++/5/bits/stl_deque.h ****        *  Prepares to traverse new_node.  Sets everything except
 248:/usr/include/c++/5/bits/stl_deque.h ****        *  _M_cur, which should therefore be set by the caller
 249:/usr/include/c++/5/bits/stl_deque.h ****        *  immediately afterwards, based on _M_first and _M_last.
 250:/usr/include/c++/5/bits/stl_deque.h ****        */
 251:/usr/include/c++/5/bits/stl_deque.h ****       void
 252:/usr/include/c++/5/bits/stl_deque.h ****       _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT
 253:/usr/include/c++/5/bits/stl_deque.h ****       {
 254:/usr/include/c++/5/bits/stl_deque.h **** 	_M_node = __new_node;
 255:/usr/include/c++/5/bits/stl_deque.h **** 	_M_first = *__new_node;
 256:/usr/include/c++/5/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 257:/usr/include/c++/5/bits/stl_deque.h ****       }
 258:/usr/include/c++/5/bits/stl_deque.h ****     };
 259:/usr/include/c++/5/bits/stl_deque.h **** 
 260:/usr/include/c++/5/bits/stl_deque.h ****   // Note: we also provide overloads whose operands are of the same type in
 261:/usr/include/c++/5/bits/stl_deque.h ****   // order to avoid ambiguous overload resolution when std::rel_ops operators
 262:/usr/include/c++/5/bits/stl_deque.h ****   // are in scope (for additional details, see libstdc++/3628)
 263:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 264:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 265:/usr/include/c++/5/bits/stl_deque.h ****     operator==(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 266:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 267:/usr/include/c++/5/bits/stl_deque.h ****     { return __x._M_cur == __y._M_cur; }
 268:/usr/include/c++/5/bits/stl_deque.h **** 
 269:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 270:/usr/include/c++/5/bits/stl_deque.h **** 	   typename _RefR, typename _PtrR>
 271:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 272:/usr/include/c++/5/bits/stl_deque.h ****     operator==(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 273:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _RefR, _PtrR>& __y) _GLIBCXX_NOEXCEPT
 274:/usr/include/c++/5/bits/stl_deque.h ****     { return __x._M_cur == __y._M_cur; }
GAS LISTING /tmp/ccX8BQhk.s 			page 278


 275:/usr/include/c++/5/bits/stl_deque.h **** 
 276:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 277:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 278:/usr/include/c++/5/bits/stl_deque.h ****     operator!=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 279:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 280:/usr/include/c++/5/bits/stl_deque.h ****     { return !(__x == __y); }
 281:/usr/include/c++/5/bits/stl_deque.h **** 
 282:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 283:/usr/include/c++/5/bits/stl_deque.h **** 	   typename _RefR, typename _PtrR>
 284:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 285:/usr/include/c++/5/bits/stl_deque.h ****     operator!=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 286:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _RefR, _PtrR>& __y) _GLIBCXX_NOEXCEPT
 287:/usr/include/c++/5/bits/stl_deque.h ****     { return !(__x == __y); }
 288:/usr/include/c++/5/bits/stl_deque.h **** 
 289:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 290:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 291:/usr/include/c++/5/bits/stl_deque.h ****     operator<(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 292:/usr/include/c++/5/bits/stl_deque.h **** 	      const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 293:/usr/include/c++/5/bits/stl_deque.h ****     { return (__x._M_node == __y._M_node) ? (__x._M_cur < __y._M_cur)
 294:/usr/include/c++/5/bits/stl_deque.h ****                                           : (__x._M_node < __y._M_node); }
 295:/usr/include/c++/5/bits/stl_deque.h **** 
 296:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 297:/usr/include/c++/5/bits/stl_deque.h **** 	   typename _RefR, typename _PtrR>
 298:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 299:/usr/include/c++/5/bits/stl_deque.h ****     operator<(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 300:/usr/include/c++/5/bits/stl_deque.h **** 	      const _Deque_iterator<_Tp, _RefR, _PtrR>& __y) _GLIBCXX_NOEXCEPT
 301:/usr/include/c++/5/bits/stl_deque.h ****     { return (__x._M_node == __y._M_node) ? (__x._M_cur < __y._M_cur)
 302:/usr/include/c++/5/bits/stl_deque.h **** 	                                  : (__x._M_node < __y._M_node); }
 303:/usr/include/c++/5/bits/stl_deque.h **** 
 304:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 305:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 306:/usr/include/c++/5/bits/stl_deque.h ****     operator>(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 307:/usr/include/c++/5/bits/stl_deque.h **** 	      const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 308:/usr/include/c++/5/bits/stl_deque.h ****     { return __y < __x; }
 309:/usr/include/c++/5/bits/stl_deque.h **** 
 310:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 311:/usr/include/c++/5/bits/stl_deque.h **** 	   typename _RefR, typename _PtrR>
 312:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 313:/usr/include/c++/5/bits/stl_deque.h ****     operator>(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 314:/usr/include/c++/5/bits/stl_deque.h **** 	      const _Deque_iterator<_Tp, _RefR, _PtrR>& __y) _GLIBCXX_NOEXCEPT
 315:/usr/include/c++/5/bits/stl_deque.h ****     { return __y < __x; }
 316:/usr/include/c++/5/bits/stl_deque.h **** 
 317:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 318:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 319:/usr/include/c++/5/bits/stl_deque.h ****     operator<=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 320:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 321:/usr/include/c++/5/bits/stl_deque.h ****     { return !(__y < __x); }
 322:/usr/include/c++/5/bits/stl_deque.h **** 
 323:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 324:/usr/include/c++/5/bits/stl_deque.h **** 	   typename _RefR, typename _PtrR>
 325:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 326:/usr/include/c++/5/bits/stl_deque.h ****     operator<=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 327:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _RefR, _PtrR>& __y) _GLIBCXX_NOEXCEPT
 328:/usr/include/c++/5/bits/stl_deque.h ****     { return !(__y < __x); }
 329:/usr/include/c++/5/bits/stl_deque.h **** 
 330:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 331:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
GAS LISTING /tmp/ccX8BQhk.s 			page 279


 332:/usr/include/c++/5/bits/stl_deque.h ****     operator>=(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 333:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 334:/usr/include/c++/5/bits/stl_deque.h ****     { return !(__x < __y); }
 335:/usr/include/c++/5/bits/stl_deque.h **** 
 336:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 337:/usr/include/c++/5/bits/stl_deque.h **** 	   typename _RefR, typename _PtrR>
 338:/usr/include/c++/5/bits/stl_deque.h ****     inline bool
 339:/usr/include/c++/5/bits/stl_deque.h ****     operator>=(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 340:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _RefR, _PtrR>& __y) _GLIBCXX_NOEXCEPT
 341:/usr/include/c++/5/bits/stl_deque.h ****     { return !(__x < __y); }
 342:/usr/include/c++/5/bits/stl_deque.h **** 
 343:/usr/include/c++/5/bits/stl_deque.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 344:/usr/include/c++/5/bits/stl_deque.h ****   // According to the resolution of DR179 not only the various comparison
 345:/usr/include/c++/5/bits/stl_deque.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 346:/usr/include/c++/5/bits/stl_deque.h ****   // parameters.
 347:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 348:/usr/include/c++/5/bits/stl_deque.h ****     inline typename _Deque_iterator<_Tp, _Ref, _Ptr>::difference_type
 349:/usr/include/c++/5/bits/stl_deque.h ****     operator-(const _Deque_iterator<_Tp, _Ref, _Ptr>& __x,
 350:/usr/include/c++/5/bits/stl_deque.h **** 	      const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 351:/usr/include/c++/5/bits/stl_deque.h ****     {
 352:/usr/include/c++/5/bits/stl_deque.h ****       return typename _Deque_iterator<_Tp, _Ref, _Ptr>::difference_type
 353:/usr/include/c++/5/bits/stl_deque.h **** 	(_Deque_iterator<_Tp, _Ref, _Ptr>::_S_buffer_size())
 354:/usr/include/c++/5/bits/stl_deque.h **** 	* (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)
 355:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 356:/usr/include/c++/5/bits/stl_deque.h ****     }
 357:/usr/include/c++/5/bits/stl_deque.h **** 
 358:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _RefL, typename _PtrL,
 359:/usr/include/c++/5/bits/stl_deque.h **** 	   typename _RefR, typename _PtrR>
 360:/usr/include/c++/5/bits/stl_deque.h ****     inline typename _Deque_iterator<_Tp, _RefL, _PtrL>::difference_type
 361:/usr/include/c++/5/bits/stl_deque.h ****     operator-(const _Deque_iterator<_Tp, _RefL, _PtrL>& __x,
 362:/usr/include/c++/5/bits/stl_deque.h **** 	      const _Deque_iterator<_Tp, _RefR, _PtrR>& __y) _GLIBCXX_NOEXCEPT
 363:/usr/include/c++/5/bits/stl_deque.h ****     {
 364:/usr/include/c++/5/bits/stl_deque.h ****       return typename _Deque_iterator<_Tp, _RefL, _PtrL>::difference_type
 365:/usr/include/c++/5/bits/stl_deque.h **** 	(_Deque_iterator<_Tp, _RefL, _PtrL>::_S_buffer_size())
 366:/usr/include/c++/5/bits/stl_deque.h **** 	* (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)
 367:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 368:/usr/include/c++/5/bits/stl_deque.h ****     }
 369:/usr/include/c++/5/bits/stl_deque.h **** 
 370:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 371:/usr/include/c++/5/bits/stl_deque.h ****     inline _Deque_iterator<_Tp, _Ref, _Ptr>
 372:/usr/include/c++/5/bits/stl_deque.h ****     operator+(ptrdiff_t __n, const _Deque_iterator<_Tp, _Ref, _Ptr>& __x)
 373:/usr/include/c++/5/bits/stl_deque.h ****     _GLIBCXX_NOEXCEPT
 374:/usr/include/c++/5/bits/stl_deque.h ****     { return __x + __n; }
 375:/usr/include/c++/5/bits/stl_deque.h **** 
 376:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp>
 377:/usr/include/c++/5/bits/stl_deque.h ****     void
 378:/usr/include/c++/5/bits/stl_deque.h ****     fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>&,
 379:/usr/include/c++/5/bits/stl_deque.h **** 	 const _Deque_iterator<_Tp, _Tp&, _Tp*>&, const _Tp&);
 380:/usr/include/c++/5/bits/stl_deque.h **** 
 381:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp>
 382:/usr/include/c++/5/bits/stl_deque.h ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
 383:/usr/include/c++/5/bits/stl_deque.h ****     copy(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 384:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 385:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*>);
 386:/usr/include/c++/5/bits/stl_deque.h **** 
 387:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp>
 388:/usr/include/c++/5/bits/stl_deque.h ****     inline _Deque_iterator<_Tp, _Tp&, _Tp*>
GAS LISTING /tmp/ccX8BQhk.s 			page 280


 389:/usr/include/c++/5/bits/stl_deque.h ****     copy(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,
 390:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 391:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 392:/usr/include/c++/5/bits/stl_deque.h ****     { return std::copy(_Deque_iterator<_Tp, const _Tp&, const _Tp*>(__first),
 393:/usr/include/c++/5/bits/stl_deque.h **** 		       _Deque_iterator<_Tp, const _Tp&, const _Tp*>(__last),
 394:/usr/include/c++/5/bits/stl_deque.h **** 		       __result); }
 395:/usr/include/c++/5/bits/stl_deque.h **** 
 396:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp>
 397:/usr/include/c++/5/bits/stl_deque.h ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
 398:/usr/include/c++/5/bits/stl_deque.h ****     copy_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 399:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 400:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*>);
 401:/usr/include/c++/5/bits/stl_deque.h **** 
 402:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp>
 403:/usr/include/c++/5/bits/stl_deque.h ****     inline _Deque_iterator<_Tp, _Tp&, _Tp*>
 404:/usr/include/c++/5/bits/stl_deque.h ****     copy_backward(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,
 405:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 406:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 407:/usr/include/c++/5/bits/stl_deque.h ****     { return std::copy_backward(_Deque_iterator<_Tp,
 408:/usr/include/c++/5/bits/stl_deque.h **** 				const _Tp&, const _Tp*>(__first),
 409:/usr/include/c++/5/bits/stl_deque.h **** 				_Deque_iterator<_Tp,
 410:/usr/include/c++/5/bits/stl_deque.h **** 				const _Tp&, const _Tp*>(__last),
 411:/usr/include/c++/5/bits/stl_deque.h **** 				__result); }
 412:/usr/include/c++/5/bits/stl_deque.h **** 
 413:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
 414:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp>
 415:/usr/include/c++/5/bits/stl_deque.h ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
 416:/usr/include/c++/5/bits/stl_deque.h ****     move(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 417:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 418:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*>);
 419:/usr/include/c++/5/bits/stl_deque.h **** 
 420:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp>
 421:/usr/include/c++/5/bits/stl_deque.h ****     inline _Deque_iterator<_Tp, _Tp&, _Tp*>
 422:/usr/include/c++/5/bits/stl_deque.h ****     move(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,
 423:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 424:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 425:/usr/include/c++/5/bits/stl_deque.h ****     { return std::move(_Deque_iterator<_Tp, const _Tp&, const _Tp*>(__first),
 426:/usr/include/c++/5/bits/stl_deque.h **** 		       _Deque_iterator<_Tp, const _Tp&, const _Tp*>(__last),
 427:/usr/include/c++/5/bits/stl_deque.h **** 		       __result); }
 428:/usr/include/c++/5/bits/stl_deque.h **** 
 429:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp>
 430:/usr/include/c++/5/bits/stl_deque.h ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
 431:/usr/include/c++/5/bits/stl_deque.h ****     move_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 432:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, const _Tp&, const _Tp*>,
 433:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*>);
 434:/usr/include/c++/5/bits/stl_deque.h **** 
 435:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp>
 436:/usr/include/c++/5/bits/stl_deque.h ****     inline _Deque_iterator<_Tp, _Tp&, _Tp*>
 437:/usr/include/c++/5/bits/stl_deque.h ****     move_backward(_Deque_iterator<_Tp, _Tp&, _Tp*> __first,
 438:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 439:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 440:/usr/include/c++/5/bits/stl_deque.h ****     { return std::move_backward(_Deque_iterator<_Tp,
 441:/usr/include/c++/5/bits/stl_deque.h **** 				const _Tp&, const _Tp*>(__first),
 442:/usr/include/c++/5/bits/stl_deque.h **** 				_Deque_iterator<_Tp,
 443:/usr/include/c++/5/bits/stl_deque.h **** 				const _Tp&, const _Tp*>(__last),
 444:/usr/include/c++/5/bits/stl_deque.h **** 				__result); }
 445:/usr/include/c++/5/bits/stl_deque.h **** #endif
GAS LISTING /tmp/ccX8BQhk.s 			page 281


 446:/usr/include/c++/5/bits/stl_deque.h **** 
 447:/usr/include/c++/5/bits/stl_deque.h ****   /**
 448:/usr/include/c++/5/bits/stl_deque.h ****    *  Deque base class.  This class provides the unified face for %deque's
 449:/usr/include/c++/5/bits/stl_deque.h ****    *  allocation.  This class's constructor and destructor allocate and
 450:/usr/include/c++/5/bits/stl_deque.h ****    *  deallocate (but do not initialize) storage.  This makes %exception
 451:/usr/include/c++/5/bits/stl_deque.h ****    *  safety easier.
 452:/usr/include/c++/5/bits/stl_deque.h ****    *
 453:/usr/include/c++/5/bits/stl_deque.h ****    *  Nothing in this class ever constructs or destroys an actual Tp element.
 454:/usr/include/c++/5/bits/stl_deque.h ****    *  (Deque handles that itself.)  Only/All memory management is performed
 455:/usr/include/c++/5/bits/stl_deque.h ****    *  here.
 456:/usr/include/c++/5/bits/stl_deque.h ****   */
 457:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 458:/usr/include/c++/5/bits/stl_deque.h ****     class _Deque_base
 459:/usr/include/c++/5/bits/stl_deque.h ****     {
 460:/usr/include/c++/5/bits/stl_deque.h ****     protected:
 461:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
 462:/usr/include/c++/5/bits/stl_deque.h **** 	rebind<_Tp>::other _Tp_alloc_type;
 463:/usr/include/c++/5/bits/stl_deque.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	 _Alloc_traits;
 464:/usr/include/c++/5/bits/stl_deque.h **** 
 465:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus < 201103L
 466:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Tp*					_Ptr;
 467:/usr/include/c++/5/bits/stl_deque.h ****       typedef const _Tp*				_Ptr_const;
 468:/usr/include/c++/5/bits/stl_deque.h **** #else
 469:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Alloc_traits::pointer		_Ptr;
 470:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Alloc_traits::const_pointer	_Ptr_const;
 471:/usr/include/c++/5/bits/stl_deque.h **** #endif
 472:/usr/include/c++/5/bits/stl_deque.h **** 
 473:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Alloc_traits::template rebind<_Ptr>::other
 474:/usr/include/c++/5/bits/stl_deque.h **** 	_Map_alloc_type;
 475:/usr/include/c++/5/bits/stl_deque.h ****       typedef __gnu_cxx::__alloc_traits<_Map_alloc_type> _Map_alloc_traits;
 476:/usr/include/c++/5/bits/stl_deque.h **** 
 477:/usr/include/c++/5/bits/stl_deque.h ****     public:
 478:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Alloc                  allocator_type;
 479:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Alloc_traits::size_type size_type;
 480:/usr/include/c++/5/bits/stl_deque.h **** 
 481:/usr/include/c++/5/bits/stl_deque.h ****       allocator_type
 482:/usr/include/c++/5/bits/stl_deque.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 483:/usr/include/c++/5/bits/stl_deque.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 484:/usr/include/c++/5/bits/stl_deque.h **** 
 485:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Deque_iterator<_Tp, _Tp&, _Ptr>          iterator;
 486:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Deque_iterator<_Tp, const _Tp&, _Ptr_const>   const_iterator;
 487:/usr/include/c++/5/bits/stl_deque.h **** 
 488:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_base()
 489:/usr/include/c++/5/bits/stl_deque.h ****       : _M_impl()
 490:/usr/include/c++/5/bits/stl_deque.h ****       { _M_initialize_map(0); }
 491:/usr/include/c++/5/bits/stl_deque.h **** 
 492:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_base(size_t __num_elements)
 493:/usr/include/c++/5/bits/stl_deque.h ****       : _M_impl()
 494:/usr/include/c++/5/bits/stl_deque.h ****       { _M_initialize_map(__num_elements); }
 495:/usr/include/c++/5/bits/stl_deque.h **** 
 496:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_base(const allocator_type& __a, size_t __num_elements)
 497:/usr/include/c++/5/bits/stl_deque.h ****       : _M_impl(__a)
 498:/usr/include/c++/5/bits/stl_deque.h ****       { _M_initialize_map(__num_elements); }
 499:/usr/include/c++/5/bits/stl_deque.h **** 
 500:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_base(const allocator_type& __a)
 501:/usr/include/c++/5/bits/stl_deque.h ****       : _M_impl(__a)
 502:/usr/include/c++/5/bits/stl_deque.h ****       { /* Caller must initialize map. */ }
GAS LISTING /tmp/ccX8BQhk.s 			page 282


 503:/usr/include/c++/5/bits/stl_deque.h **** 
 504:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
 505:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_base(_Deque_base&& __x, false_type)
 506:/usr/include/c++/5/bits/stl_deque.h ****       : _M_impl(__x._M_move_impl())
 507:/usr/include/c++/5/bits/stl_deque.h ****       { }
 508:/usr/include/c++/5/bits/stl_deque.h **** 
 509:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_base(_Deque_base&& __x, true_type)
 510:/usr/include/c++/5/bits/stl_deque.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 511:/usr/include/c++/5/bits/stl_deque.h ****       {
 512:/usr/include/c++/5/bits/stl_deque.h **** 	_M_initialize_map(0);
 513:/usr/include/c++/5/bits/stl_deque.h **** 	if (__x._M_impl._M_map)
 514:/usr/include/c++/5/bits/stl_deque.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 515:/usr/include/c++/5/bits/stl_deque.h ****       }
 516:/usr/include/c++/5/bits/stl_deque.h **** 
 517:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_base(_Deque_base&& __x)
 518:/usr/include/c++/5/bits/stl_deque.h ****       : _Deque_base(std::move(__x),
 519:/usr/include/c++/5/bits/stl_deque.h **** 		    __gnu_cxx::__allocator_always_compares_equal<_Alloc>{})
 520:/usr/include/c++/5/bits/stl_deque.h ****       { }
 521:/usr/include/c++/5/bits/stl_deque.h **** 
 522:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_base(_Deque_base&& __x, const allocator_type& __a, size_type __n)
 523:/usr/include/c++/5/bits/stl_deque.h ****       : _M_impl(__a)
 524:/usr/include/c++/5/bits/stl_deque.h ****       {
 525:/usr/include/c++/5/bits/stl_deque.h **** 	if (__x.get_allocator() == __a)
 526:/usr/include/c++/5/bits/stl_deque.h **** 	  {
 527:/usr/include/c++/5/bits/stl_deque.h **** 	    if (__x._M_impl._M_map)
 528:/usr/include/c++/5/bits/stl_deque.h **** 	      {
 529:/usr/include/c++/5/bits/stl_deque.h **** 		_M_initialize_map(0);
 530:/usr/include/c++/5/bits/stl_deque.h **** 		this->_M_impl._M_swap_data(__x._M_impl);
 531:/usr/include/c++/5/bits/stl_deque.h **** 	      }
 532:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 533:/usr/include/c++/5/bits/stl_deque.h **** 	else
 534:/usr/include/c++/5/bits/stl_deque.h **** 	  {
 535:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_initialize_map(__n);
 536:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 537:/usr/include/c++/5/bits/stl_deque.h ****       }
 538:/usr/include/c++/5/bits/stl_deque.h **** #endif
 539:/usr/include/c++/5/bits/stl_deque.h **** 
 540:/usr/include/c++/5/bits/stl_deque.h ****       ~_Deque_base() _GLIBCXX_NOEXCEPT;
 541:/usr/include/c++/5/bits/stl_deque.h **** 
 542:/usr/include/c++/5/bits/stl_deque.h ****     protected:
 543:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename iterator::_Map_pointer _Map_pointer;
 544:/usr/include/c++/5/bits/stl_deque.h **** 
 545:/usr/include/c++/5/bits/stl_deque.h ****       //This struct encapsulates the implementation of the std::deque
 546:/usr/include/c++/5/bits/stl_deque.h ****       //standard container and at the same time makes use of the EBO
 547:/usr/include/c++/5/bits/stl_deque.h ****       //for empty allocators.
 548:/usr/include/c++/5/bits/stl_deque.h ****       struct _Deque_impl
 549:/usr/include/c++/5/bits/stl_deque.h ****       : public _Tp_alloc_type
 550:/usr/include/c++/5/bits/stl_deque.h ****       {
 551:/usr/include/c++/5/bits/stl_deque.h **** 	_Map_pointer _M_map;
 552:/usr/include/c++/5/bits/stl_deque.h **** 	size_t _M_map_size;
 553:/usr/include/c++/5/bits/stl_deque.h **** 	iterator _M_start;
 554:/usr/include/c++/5/bits/stl_deque.h **** 	iterator _M_finish;
 555:/usr/include/c++/5/bits/stl_deque.h **** 
 556:/usr/include/c++/5/bits/stl_deque.h **** 	_Deque_impl()
 557:/usr/include/c++/5/bits/stl_deque.h **** 	: _Tp_alloc_type(), _M_map(), _M_map_size(0),
 558:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_start(), _M_finish()
 559:/usr/include/c++/5/bits/stl_deque.h **** 	{ }
GAS LISTING /tmp/ccX8BQhk.s 			page 283


 560:/usr/include/c++/5/bits/stl_deque.h **** 
 561:/usr/include/c++/5/bits/stl_deque.h **** 	_Deque_impl(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 562:/usr/include/c++/5/bits/stl_deque.h **** 	: _Tp_alloc_type(__a), _M_map(), _M_map_size(0),
 563:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_start(), _M_finish()
 564:/usr/include/c++/5/bits/stl_deque.h **** 	{ }
 565:/usr/include/c++/5/bits/stl_deque.h **** 
 566:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
 567:/usr/include/c++/5/bits/stl_deque.h **** 	_Deque_impl(_Deque_impl&&) = default;
 568:/usr/include/c++/5/bits/stl_deque.h **** 
 569:/usr/include/c++/5/bits/stl_deque.h **** 	_Deque_impl(_Tp_alloc_type&& __a) noexcept
 570:/usr/include/c++/5/bits/stl_deque.h **** 	: _Tp_alloc_type(std::move(__a)), _M_map(), _M_map_size(0),
 571:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_start(), _M_finish()
 572:/usr/include/c++/5/bits/stl_deque.h **** 	{ }
 573:/usr/include/c++/5/bits/stl_deque.h **** #endif
 574:/usr/include/c++/5/bits/stl_deque.h **** 
 575:/usr/include/c++/5/bits/stl_deque.h **** 	void _M_swap_data(_Deque_impl& __x) _GLIBCXX_NOEXCEPT
 576:/usr/include/c++/5/bits/stl_deque.h **** 	{
 577:/usr/include/c++/5/bits/stl_deque.h **** 	  using std::swap;
 578:/usr/include/c++/5/bits/stl_deque.h **** 	  swap(this->_M_start, __x._M_start);
 579:/usr/include/c++/5/bits/stl_deque.h **** 	  swap(this->_M_finish, __x._M_finish);
 580:/usr/include/c++/5/bits/stl_deque.h **** 	  swap(this->_M_map, __x._M_map);
 581:/usr/include/c++/5/bits/stl_deque.h **** 	  swap(this->_M_map_size, __x._M_map_size);
 582:/usr/include/c++/5/bits/stl_deque.h **** 	}
 583:/usr/include/c++/5/bits/stl_deque.h ****       };
 584:/usr/include/c++/5/bits/stl_deque.h **** 
 585:/usr/include/c++/5/bits/stl_deque.h ****       _Tp_alloc_type&
 586:/usr/include/c++/5/bits/stl_deque.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 587:/usr/include/c++/5/bits/stl_deque.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 588:/usr/include/c++/5/bits/stl_deque.h **** 
 589:/usr/include/c++/5/bits/stl_deque.h ****       const _Tp_alloc_type&
 590:/usr/include/c++/5/bits/stl_deque.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 591:/usr/include/c++/5/bits/stl_deque.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 592:/usr/include/c++/5/bits/stl_deque.h **** 
 593:/usr/include/c++/5/bits/stl_deque.h ****       _Map_alloc_type
 594:/usr/include/c++/5/bits/stl_deque.h ****       _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
 595:/usr/include/c++/5/bits/stl_deque.h ****       { return _Map_alloc_type(_M_get_Tp_allocator()); }
 596:/usr/include/c++/5/bits/stl_deque.h **** 
 597:/usr/include/c++/5/bits/stl_deque.h ****       _Ptr
 598:/usr/include/c++/5/bits/stl_deque.h ****       _M_allocate_node()
 599:/usr/include/c++/5/bits/stl_deque.h ****       { 
 600:/usr/include/c++/5/bits/stl_deque.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;
 601:/usr/include/c++/5/bits/stl_deque.h **** 	return _Traits::allocate(_M_impl, __deque_buf_size(sizeof(_Tp)));
 602:/usr/include/c++/5/bits/stl_deque.h ****       }
 603:/usr/include/c++/5/bits/stl_deque.h **** 
 604:/usr/include/c++/5/bits/stl_deque.h ****       void
 605:/usr/include/c++/5/bits/stl_deque.h ****       _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT
 606:/usr/include/c++/5/bits/stl_deque.h ****       {
 607:/usr/include/c++/5/bits/stl_deque.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;
 608:/usr/include/c++/5/bits/stl_deque.h **** 	_Traits::deallocate(_M_impl, __p, __deque_buf_size(sizeof(_Tp)));
 609:/usr/include/c++/5/bits/stl_deque.h ****       }
 610:/usr/include/c++/5/bits/stl_deque.h **** 
 611:/usr/include/c++/5/bits/stl_deque.h ****       _Map_pointer
 612:/usr/include/c++/5/bits/stl_deque.h ****       _M_allocate_map(size_t __n)
 613:/usr/include/c++/5/bits/stl_deque.h ****       {
 614:/usr/include/c++/5/bits/stl_deque.h **** 	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 615:/usr/include/c++/5/bits/stl_deque.h **** 	return _Map_alloc_traits::allocate(__map_alloc, __n);
 616:/usr/include/c++/5/bits/stl_deque.h ****       }
GAS LISTING /tmp/ccX8BQhk.s 			page 284


 617:/usr/include/c++/5/bits/stl_deque.h **** 
 618:/usr/include/c++/5/bits/stl_deque.h ****       void
 619:/usr/include/c++/5/bits/stl_deque.h ****       _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT
 620:/usr/include/c++/5/bits/stl_deque.h ****       {
 621:/usr/include/c++/5/bits/stl_deque.h **** 	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 622:/usr/include/c++/5/bits/stl_deque.h **** 	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
 623:/usr/include/c++/5/bits/stl_deque.h ****       }
 624:/usr/include/c++/5/bits/stl_deque.h **** 
 625:/usr/include/c++/5/bits/stl_deque.h ****     protected:
 626:/usr/include/c++/5/bits/stl_deque.h ****       void _M_initialize_map(size_t);
 627:/usr/include/c++/5/bits/stl_deque.h ****       void _M_create_nodes(_Map_pointer __nstart, _Map_pointer __nfinish);
 628:/usr/include/c++/5/bits/stl_deque.h ****       void _M_destroy_nodes(_Map_pointer __nstart,
 629:/usr/include/c++/5/bits/stl_deque.h **** 			    _Map_pointer __nfinish) _GLIBCXX_NOEXCEPT;
 630:/usr/include/c++/5/bits/stl_deque.h ****       enum { _S_initial_map_size = 8 };
 631:/usr/include/c++/5/bits/stl_deque.h **** 
 632:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_impl _M_impl;
 633:/usr/include/c++/5/bits/stl_deque.h **** 
 634:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
 635:/usr/include/c++/5/bits/stl_deque.h ****     private:
 636:/usr/include/c++/5/bits/stl_deque.h ****       _Deque_impl
 637:/usr/include/c++/5/bits/stl_deque.h ****       _M_move_impl()
 638:/usr/include/c++/5/bits/stl_deque.h ****       {
 639:/usr/include/c++/5/bits/stl_deque.h **** 	if (!_M_impl._M_map)
 640:/usr/include/c++/5/bits/stl_deque.h **** 	  return std::move(_M_impl);
 641:/usr/include/c++/5/bits/stl_deque.h **** 
 642:/usr/include/c++/5/bits/stl_deque.h **** 	// Create a copy of the current allocator.
 643:/usr/include/c++/5/bits/stl_deque.h **** 	_Tp_alloc_type __alloc{_M_get_Tp_allocator()};
 644:/usr/include/c++/5/bits/stl_deque.h **** 	// Put that copy in a moved-from state.
 645:/usr/include/c++/5/bits/stl_deque.h **** 	_Tp_alloc_type __sink __attribute((__unused__)) {std::move(__alloc)};
 646:/usr/include/c++/5/bits/stl_deque.h **** 	// Create an empty map that allocates using the moved-from allocator.
 647:/usr/include/c++/5/bits/stl_deque.h **** 	_Deque_base __empty{__alloc};
 648:/usr/include/c++/5/bits/stl_deque.h **** 	__empty._M_initialize_map(0);
 649:/usr/include/c++/5/bits/stl_deque.h **** 	// Now safe to modify current allocator and perform non-throwing swaps.
 650:/usr/include/c++/5/bits/stl_deque.h **** 	_Deque_impl __ret{std::move(_M_get_Tp_allocator())};
 651:/usr/include/c++/5/bits/stl_deque.h **** 	_M_impl._M_swap_data(__ret);
 652:/usr/include/c++/5/bits/stl_deque.h **** 	_M_impl._M_swap_data(__empty._M_impl);
 653:/usr/include/c++/5/bits/stl_deque.h **** 	return __ret;
 654:/usr/include/c++/5/bits/stl_deque.h ****       }
 655:/usr/include/c++/5/bits/stl_deque.h **** #endif
 656:/usr/include/c++/5/bits/stl_deque.h ****     };
 657:/usr/include/c++/5/bits/stl_deque.h **** 
 658:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 659:/usr/include/c++/5/bits/stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 660:/usr/include/c++/5/bits/stl_deque.h ****     ~_Deque_base() _GLIBCXX_NOEXCEPT
 661:/usr/include/c++/5/bits/stl_deque.h ****     {
 662:/usr/include/c++/5/bits/stl_deque.h ****       if (this->_M_impl._M_map)
 663:/usr/include/c++/5/bits/stl_deque.h **** 	{
 664:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
 665:/usr/include/c++/5/bits/stl_deque.h **** 			   this->_M_impl._M_finish._M_node + 1);
 666:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 667:/usr/include/c++/5/bits/stl_deque.h **** 	}
 668:/usr/include/c++/5/bits/stl_deque.h ****     }
 669:/usr/include/c++/5/bits/stl_deque.h **** 
 670:/usr/include/c++/5/bits/stl_deque.h ****   /**
 671:/usr/include/c++/5/bits/stl_deque.h ****    *  @brief Layout storage.
 672:/usr/include/c++/5/bits/stl_deque.h ****    *  @param  __num_elements  The count of T's for which to allocate space
 673:/usr/include/c++/5/bits/stl_deque.h ****    *                          at first.
GAS LISTING /tmp/ccX8BQhk.s 			page 285


 674:/usr/include/c++/5/bits/stl_deque.h ****    *  @return   Nothing.
 675:/usr/include/c++/5/bits/stl_deque.h ****    *
 676:/usr/include/c++/5/bits/stl_deque.h ****    *  The initial underlying memory layout is a bit complicated...
 677:/usr/include/c++/5/bits/stl_deque.h ****   */
 678:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 679:/usr/include/c++/5/bits/stl_deque.h ****     void
 680:/usr/include/c++/5/bits/stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 681:/usr/include/c++/5/bits/stl_deque.h ****     _M_initialize_map(size_t __num_elements)
 682:/usr/include/c++/5/bits/stl_deque.h ****     {
 683:/usr/include/c++/5/bits/stl_deque.h ****       const size_t __num_nodes = (__num_elements/ __deque_buf_size(sizeof(_Tp))
 684:/usr/include/c++/5/bits/stl_deque.h **** 				  + 1);
 685:/usr/include/c++/5/bits/stl_deque.h **** 
 686:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 687:/usr/include/c++/5/bits/stl_deque.h **** 					   size_t(__num_nodes + 2));
 688:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
 689:/usr/include/c++/5/bits/stl_deque.h **** 
 690:/usr/include/c++/5/bits/stl_deque.h ****       // For "small" maps (needing less than _M_map_size nodes), allocation
 691:/usr/include/c++/5/bits/stl_deque.h ****       // starts in the middle elements and grows outwards.  So nstart may be
 692:/usr/include/c++/5/bits/stl_deque.h ****       // the beginning of _M_map, but for small maps it may be as far in as
 693:/usr/include/c++/5/bits/stl_deque.h ****       // _M_map+3.
 694:/usr/include/c++/5/bits/stl_deque.h **** 
 695:/usr/include/c++/5/bits/stl_deque.h ****       _Map_pointer __nstart = (this->_M_impl._M_map
 696:/usr/include/c++/5/bits/stl_deque.h **** 			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
 697:/usr/include/c++/5/bits/stl_deque.h ****       _Map_pointer __nfinish = __nstart + __num_nodes;
 698:/usr/include/c++/5/bits/stl_deque.h **** 
 699:/usr/include/c++/5/bits/stl_deque.h ****       __try
 700:/usr/include/c++/5/bits/stl_deque.h **** 	{ _M_create_nodes(__nstart, __nfinish); }
 701:/usr/include/c++/5/bits/stl_deque.h ****       __catch(...)
 702:/usr/include/c++/5/bits/stl_deque.h **** 	{
 703:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 704:/usr/include/c++/5/bits/stl_deque.h **** 	  this->_M_impl._M_map = _Map_pointer();
 705:/usr/include/c++/5/bits/stl_deque.h **** 	  this->_M_impl._M_map_size = 0;
 706:/usr/include/c++/5/bits/stl_deque.h **** 	  __throw_exception_again;
 707:/usr/include/c++/5/bits/stl_deque.h **** 	}
 708:/usr/include/c++/5/bits/stl_deque.h **** 
 709:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_start._M_set_node(__nstart);
 710:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_finish._M_set_node(__nfinish - 1);
 711:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
 712:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 713:/usr/include/c++/5/bits/stl_deque.h **** 					+ __num_elements
 714:/usr/include/c++/5/bits/stl_deque.h **** 					% __deque_buf_size(sizeof(_Tp)));
 715:/usr/include/c++/5/bits/stl_deque.h ****     }
 716:/usr/include/c++/5/bits/stl_deque.h **** 
 717:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 718:/usr/include/c++/5/bits/stl_deque.h ****     void
 719:/usr/include/c++/5/bits/stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 720:/usr/include/c++/5/bits/stl_deque.h ****     _M_create_nodes(_Map_pointer __nstart, _Map_pointer __nfinish)
 721:/usr/include/c++/5/bits/stl_deque.h ****     {
 722:/usr/include/c++/5/bits/stl_deque.h ****       _Map_pointer __cur;
 723:/usr/include/c++/5/bits/stl_deque.h ****       __try
 724:/usr/include/c++/5/bits/stl_deque.h **** 	{
 725:/usr/include/c++/5/bits/stl_deque.h **** 	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
 726:/usr/include/c++/5/bits/stl_deque.h **** 	    *__cur = this->_M_allocate_node();
 727:/usr/include/c++/5/bits/stl_deque.h **** 	}
 728:/usr/include/c++/5/bits/stl_deque.h ****       __catch(...)
 729:/usr/include/c++/5/bits/stl_deque.h **** 	{
 730:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_destroy_nodes(__nstart, __cur);
GAS LISTING /tmp/ccX8BQhk.s 			page 286


 731:/usr/include/c++/5/bits/stl_deque.h **** 	  __throw_exception_again;
 732:/usr/include/c++/5/bits/stl_deque.h **** 	}
 733:/usr/include/c++/5/bits/stl_deque.h ****     }
 734:/usr/include/c++/5/bits/stl_deque.h **** 
 735:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc>
 736:/usr/include/c++/5/bits/stl_deque.h ****     void
 737:/usr/include/c++/5/bits/stl_deque.h ****     _Deque_base<_Tp, _Alloc>::
 738:/usr/include/c++/5/bits/stl_deque.h ****     _M_destroy_nodes(_Map_pointer __nstart,
 739:/usr/include/c++/5/bits/stl_deque.h **** 		     _Map_pointer __nfinish) _GLIBCXX_NOEXCEPT
 740:/usr/include/c++/5/bits/stl_deque.h ****     {
 741:/usr/include/c++/5/bits/stl_deque.h ****       for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
 742:/usr/include/c++/5/bits/stl_deque.h **** 	_M_deallocate_node(*__n);
 743:/usr/include/c++/5/bits/stl_deque.h ****     }
 744:/usr/include/c++/5/bits/stl_deque.h **** 
 745:/usr/include/c++/5/bits/stl_deque.h ****   /**
 746:/usr/include/c++/5/bits/stl_deque.h ****    *  @brief  A standard container using fixed-size memory allocation and
 747:/usr/include/c++/5/bits/stl_deque.h ****    *  constant-time manipulation of elements at either end.
 748:/usr/include/c++/5/bits/stl_deque.h ****    *
 749:/usr/include/c++/5/bits/stl_deque.h ****    *  @ingroup sequences
 750:/usr/include/c++/5/bits/stl_deque.h ****    *
 751:/usr/include/c++/5/bits/stl_deque.h ****    *  @tparam _Tp  Type of element.
 752:/usr/include/c++/5/bits/stl_deque.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 753:/usr/include/c++/5/bits/stl_deque.h ****    *
 754:/usr/include/c++/5/bits/stl_deque.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 755:/usr/include/c++/5/bits/stl_deque.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 756:/usr/include/c++/5/bits/stl_deque.h ****    *  <a href="tables.html#67">sequence</a>, including the
 757:/usr/include/c++/5/bits/stl_deque.h ****    *  <a href="tables.html#68">optional sequence requirements</a>.
 758:/usr/include/c++/5/bits/stl_deque.h ****    *
 759:/usr/include/c++/5/bits/stl_deque.h ****    *  In previous HP/SGI versions of deque, there was an extra template
 760:/usr/include/c++/5/bits/stl_deque.h ****    *  parameter so users could control the node size.  This extension turned
 761:/usr/include/c++/5/bits/stl_deque.h ****    *  out to violate the C++ standard (it can be detected using template
 762:/usr/include/c++/5/bits/stl_deque.h ****    *  template parameters), and it was removed.
 763:/usr/include/c++/5/bits/stl_deque.h ****    *
 764:/usr/include/c++/5/bits/stl_deque.h ****    *  Here's how a deque<Tp> manages memory.  Each deque has 4 members:
 765:/usr/include/c++/5/bits/stl_deque.h ****    *
 766:/usr/include/c++/5/bits/stl_deque.h ****    *  - Tp**        _M_map
 767:/usr/include/c++/5/bits/stl_deque.h ****    *  - size_t      _M_map_size
 768:/usr/include/c++/5/bits/stl_deque.h ****    *  - iterator    _M_start, _M_finish
 769:/usr/include/c++/5/bits/stl_deque.h ****    *
 770:/usr/include/c++/5/bits/stl_deque.h ****    *  map_size is at least 8.  %map is an array of map_size
 771:/usr/include/c++/5/bits/stl_deque.h ****    *  pointers-to-@a nodes.  (The name %map has nothing to do with the
 772:/usr/include/c++/5/bits/stl_deque.h ****    *  std::map class, and @b nodes should not be confused with
 773:/usr/include/c++/5/bits/stl_deque.h ****    *  std::list's usage of @a node.)
 774:/usr/include/c++/5/bits/stl_deque.h ****    *
 775:/usr/include/c++/5/bits/stl_deque.h ****    *  A @a node has no specific type name as such, but it is referred
 776:/usr/include/c++/5/bits/stl_deque.h ****    *  to as @a node in this file.  It is a simple array-of-Tp.  If Tp
 777:/usr/include/c++/5/bits/stl_deque.h ****    *  is very large, there will be one Tp element per node (i.e., an
 778:/usr/include/c++/5/bits/stl_deque.h ****    *  @a array of one).  For non-huge Tp's, node size is inversely
 779:/usr/include/c++/5/bits/stl_deque.h ****    *  related to Tp size: the larger the Tp, the fewer Tp's will fit
 780:/usr/include/c++/5/bits/stl_deque.h ****    *  in a node.  The goal here is to keep the total size of a node
 781:/usr/include/c++/5/bits/stl_deque.h ****    *  relatively small and constant over different Tp's, to improve
 782:/usr/include/c++/5/bits/stl_deque.h ****    *  allocator efficiency.
 783:/usr/include/c++/5/bits/stl_deque.h ****    *
 784:/usr/include/c++/5/bits/stl_deque.h ****    *  Not every pointer in the %map array will point to a node.  If
 785:/usr/include/c++/5/bits/stl_deque.h ****    *  the initial number of elements in the deque is small, the
 786:/usr/include/c++/5/bits/stl_deque.h ****    *  /middle/ %map pointers will be valid, and the ones at the edges
 787:/usr/include/c++/5/bits/stl_deque.h ****    *  will be unused.  This same situation will arise as the %map
GAS LISTING /tmp/ccX8BQhk.s 			page 287


 788:/usr/include/c++/5/bits/stl_deque.h ****    *  grows: available %map pointers, if any, will be on the ends.  As
 789:/usr/include/c++/5/bits/stl_deque.h ****    *  new nodes are created, only a subset of the %map's pointers need
 790:/usr/include/c++/5/bits/stl_deque.h ****    *  to be copied @a outward.
 791:/usr/include/c++/5/bits/stl_deque.h ****    *
 792:/usr/include/c++/5/bits/stl_deque.h ****    *  Class invariants:
 793:/usr/include/c++/5/bits/stl_deque.h ****    * - For any nonsingular iterator i:
 794:/usr/include/c++/5/bits/stl_deque.h ****    *    - i.node points to a member of the %map array.  (Yes, you read that
 795:/usr/include/c++/5/bits/stl_deque.h ****    *      correctly:  i.node does not actually point to a node.)  The member of
 796:/usr/include/c++/5/bits/stl_deque.h ****    *      the %map array is what actually points to the node.
 797:/usr/include/c++/5/bits/stl_deque.h ****    *    - i.first == *(i.node)    (This points to the node (first Tp element).)
 798:/usr/include/c++/5/bits/stl_deque.h ****    *    - i.last  == i.first + node_size
 799:/usr/include/c++/5/bits/stl_deque.h ****    *    - i.cur is a pointer in the range [i.first, i.last).  NOTE:
 800:/usr/include/c++/5/bits/stl_deque.h ****    *      the implication of this is that i.cur is always a dereferenceable
 801:/usr/include/c++/5/bits/stl_deque.h ****    *      pointer, even if i is a past-the-end iterator.
 802:/usr/include/c++/5/bits/stl_deque.h ****    * - Start and Finish are always nonsingular iterators.  NOTE: this
 803:/usr/include/c++/5/bits/stl_deque.h ****    * means that an empty deque must have one node, a deque with <N
 804:/usr/include/c++/5/bits/stl_deque.h ****    * elements (where N is the node buffer size) must have one node, a
 805:/usr/include/c++/5/bits/stl_deque.h ****    * deque with N through (2N-1) elements must have two nodes, etc.
 806:/usr/include/c++/5/bits/stl_deque.h ****    * - For every node other than start.node and finish.node, every
 807:/usr/include/c++/5/bits/stl_deque.h ****    * element in the node is an initialized object.  If start.node ==
 808:/usr/include/c++/5/bits/stl_deque.h ****    * finish.node, then [start.cur, finish.cur) are initialized
 809:/usr/include/c++/5/bits/stl_deque.h ****    * objects, and the elements outside that range are uninitialized
 810:/usr/include/c++/5/bits/stl_deque.h ****    * storage.  Otherwise, [start.cur, start.last) and [finish.first,
 811:/usr/include/c++/5/bits/stl_deque.h ****    * finish.cur) are initialized objects, and [start.first, start.cur)
 812:/usr/include/c++/5/bits/stl_deque.h ****    * and [finish.cur, finish.last) are uninitialized storage.
 813:/usr/include/c++/5/bits/stl_deque.h ****    * - [%map, %map + map_size) is a valid, non-empty range.
 814:/usr/include/c++/5/bits/stl_deque.h ****    * - [start.node, finish.node] is a valid range contained within
 815:/usr/include/c++/5/bits/stl_deque.h ****    *   [%map, %map + map_size).
 816:/usr/include/c++/5/bits/stl_deque.h ****    * - A pointer in the range [%map, %map + map_size) points to an allocated
 817:/usr/include/c++/5/bits/stl_deque.h ****    *   node if and only if the pointer is in the range
 818:/usr/include/c++/5/bits/stl_deque.h ****    *   [start.node, finish.node].
 819:/usr/include/c++/5/bits/stl_deque.h ****    *
 820:/usr/include/c++/5/bits/stl_deque.h ****    *  Here's the magic:  nothing in deque is @b aware of the discontiguous
 821:/usr/include/c++/5/bits/stl_deque.h ****    *  storage!
 822:/usr/include/c++/5/bits/stl_deque.h ****    *
 823:/usr/include/c++/5/bits/stl_deque.h ****    *  The memory setup and layout occurs in the parent, _Base, and the iterator
 824:/usr/include/c++/5/bits/stl_deque.h ****    *  class is entirely responsible for @a leaping from one node to the next.
 825:/usr/include/c++/5/bits/stl_deque.h ****    *  All the implementation routines for deque itself work only through the
 826:/usr/include/c++/5/bits/stl_deque.h ****    *  start and finish iterators.  This keeps the routines simple and sane,
 827:/usr/include/c++/5/bits/stl_deque.h ****    *  and we can use other standard algorithms as well.
 828:/usr/include/c++/5/bits/stl_deque.h ****   */
 829:/usr/include/c++/5/bits/stl_deque.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 830:/usr/include/c++/5/bits/stl_deque.h ****     class deque : protected _Deque_base<_Tp, _Alloc>
 831:/usr/include/c++/5/bits/stl_deque.h ****     {
 832:/usr/include/c++/5/bits/stl_deque.h ****       // concept requirements
 833:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Alloc::value_type        _Alloc_value_type;
 834:/usr/include/c++/5/bits/stl_deque.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 835:/usr/include/c++/5/bits/stl_deque.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 836:/usr/include/c++/5/bits/stl_deque.h **** 
 837:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Deque_base<_Tp, _Alloc>			_Base;
 838:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 839:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Base::_Alloc_traits		_Alloc_traits;
 840:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Base::_Map_pointer		_Map_pointer;
 841:/usr/include/c++/5/bits/stl_deque.h **** 
 842:/usr/include/c++/5/bits/stl_deque.h ****     public:
 843:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Tp                                        value_type;
 844:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Alloc_traits::pointer            pointer;
GAS LISTING /tmp/ccX8BQhk.s 			page 288


 845:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 846:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Alloc_traits::reference          reference;
 847:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 848:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Base::iterator                   iterator;
 849:/usr/include/c++/5/bits/stl_deque.h ****       typedef typename _Base::const_iterator             const_iterator;
 850:/usr/include/c++/5/bits/stl_deque.h ****       typedef std::reverse_iterator<const_iterator>      const_reverse_iterator;
 851:/usr/include/c++/5/bits/stl_deque.h ****       typedef std::reverse_iterator<iterator>            reverse_iterator;
 852:/usr/include/c++/5/bits/stl_deque.h ****       typedef size_t                             size_type;
 853:/usr/include/c++/5/bits/stl_deque.h ****       typedef ptrdiff_t                          difference_type;
 854:/usr/include/c++/5/bits/stl_deque.h ****       typedef _Alloc                             allocator_type;
 855:/usr/include/c++/5/bits/stl_deque.h **** 
 856:/usr/include/c++/5/bits/stl_deque.h ****     protected:
 857:/usr/include/c++/5/bits/stl_deque.h ****       static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
 858:/usr/include/c++/5/bits/stl_deque.h ****       { return __deque_buf_size(sizeof(_Tp)); }
 859:/usr/include/c++/5/bits/stl_deque.h **** 
 860:/usr/include/c++/5/bits/stl_deque.h ****       // Functions controlling memory layout, and nothing else.
 861:/usr/include/c++/5/bits/stl_deque.h ****       using _Base::_M_initialize_map;
 862:/usr/include/c++/5/bits/stl_deque.h ****       using _Base::_M_create_nodes;
 863:/usr/include/c++/5/bits/stl_deque.h ****       using _Base::_M_destroy_nodes;
 864:/usr/include/c++/5/bits/stl_deque.h ****       using _Base::_M_allocate_node;
 865:/usr/include/c++/5/bits/stl_deque.h ****       using _Base::_M_deallocate_node;
 866:/usr/include/c++/5/bits/stl_deque.h ****       using _Base::_M_allocate_map;
 867:/usr/include/c++/5/bits/stl_deque.h ****       using _Base::_M_deallocate_map;
 868:/usr/include/c++/5/bits/stl_deque.h ****       using _Base::_M_get_Tp_allocator;
 869:/usr/include/c++/5/bits/stl_deque.h **** 
 870:/usr/include/c++/5/bits/stl_deque.h ****       /** 
 871:/usr/include/c++/5/bits/stl_deque.h ****        *  A total of four data members accumulated down the hierarchy.
 872:/usr/include/c++/5/bits/stl_deque.h ****        *  May be accessed via _M_impl.*
 873:/usr/include/c++/5/bits/stl_deque.h ****        */
 874:/usr/include/c++/5/bits/stl_deque.h ****       using _Base::_M_impl;
 875:/usr/include/c++/5/bits/stl_deque.h **** 
 876:/usr/include/c++/5/bits/stl_deque.h ****     public:
 877:/usr/include/c++/5/bits/stl_deque.h ****       // [23.2.1.1] construct/copy/destroy
 878:/usr/include/c++/5/bits/stl_deque.h ****       // (assign() and get_allocator() are also listed in this section)
 879:/usr/include/c++/5/bits/stl_deque.h **** 
 880:/usr/include/c++/5/bits/stl_deque.h ****       /**
 881:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Creates a %deque with no elements.
 882:/usr/include/c++/5/bits/stl_deque.h ****        */
 883:/usr/include/c++/5/bits/stl_deque.h ****       deque() : _Base() { }
 3676              		.loc 3 883 0
 3677              		.cfi_startproc
 3678 0000 55       		pushq	%rbp
 3679              		.cfi_def_cfa_offset 16
 3680              		.cfi_offset 6, -16
 3681 0001 4889E5   		movq	%rsp, %rbp
 3682              		.cfi_def_cfa_register 6
 3683 0004 4883EC10 		subq	$16, %rsp
 3684 0008 48897DF8 		movq	%rdi, -8(%rbp)
 3685              	.LBB22:
 3686              		.loc 3 883 0
 3687 000c 488B45F8 		movq	-8(%rbp), %rax
 3688 0010 4889C7   		movq	%rax, %rdi
 3689 0013 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEEC2Ev
 3689      00
 3690              	.LBE22:
 3691 0018 90       		nop
 3692 0019 C9       		leave
GAS LISTING /tmp/ccX8BQhk.s 			page 289


 3693              		.cfi_def_cfa 7, 8
 3694 001a C3       		ret
 3695              		.cfi_endproc
 3696              	.LFE10389:
 3698              		.weak	_ZNSt5dequeIcSaIcEEC1Ev
 3699              		.set	_ZNSt5dequeIcSaIcEEC1Ev,_ZNSt5dequeIcSaIcEEC2Ev
 3700              		.section	.text._ZNSt5dequeIcSaIcEED2Ev,"axG",@progbits,_ZNSt5dequeIcSaIcEED5Ev,comdat
 3701              		.align 2
 3702              		.weak	_ZNSt5dequeIcSaIcEED2Ev
 3704              	_ZNSt5dequeIcSaIcEED2Ev:
 3705              	.LFB10392:
 884:/usr/include/c++/5/bits/stl_deque.h **** 
 885:/usr/include/c++/5/bits/stl_deque.h ****       /**
 886:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Creates a %deque with no elements.
 887:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __a  An allocator object.
 888:/usr/include/c++/5/bits/stl_deque.h ****        */
 889:/usr/include/c++/5/bits/stl_deque.h ****       explicit
 890:/usr/include/c++/5/bits/stl_deque.h ****       deque(const allocator_type& __a)
 891:/usr/include/c++/5/bits/stl_deque.h ****       : _Base(__a, 0) { }
 892:/usr/include/c++/5/bits/stl_deque.h **** 
 893:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
 894:/usr/include/c++/5/bits/stl_deque.h ****       /**
 895:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Creates a %deque with default constructed elements.
 896:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __n  The number of elements to initially create.
 897:/usr/include/c++/5/bits/stl_deque.h ****        *
 898:/usr/include/c++/5/bits/stl_deque.h ****        *  This constructor fills the %deque with @a n default
 899:/usr/include/c++/5/bits/stl_deque.h ****        *  constructed elements.
 900:/usr/include/c++/5/bits/stl_deque.h ****        */
 901:/usr/include/c++/5/bits/stl_deque.h ****       explicit
 902:/usr/include/c++/5/bits/stl_deque.h ****       deque(size_type __n, const allocator_type& __a = allocator_type())
 903:/usr/include/c++/5/bits/stl_deque.h ****       : _Base(__a, __n)
 904:/usr/include/c++/5/bits/stl_deque.h ****       { _M_default_initialize(); }
 905:/usr/include/c++/5/bits/stl_deque.h **** 
 906:/usr/include/c++/5/bits/stl_deque.h ****       /**
 907:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Creates a %deque with copies of an exemplar element.
 908:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __n  The number of elements to initially create.
 909:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __value  An element to copy.
 910:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __a  An allocator.
 911:/usr/include/c++/5/bits/stl_deque.h ****        *
 912:/usr/include/c++/5/bits/stl_deque.h ****        *  This constructor fills the %deque with @a __n copies of @a __value.
 913:/usr/include/c++/5/bits/stl_deque.h ****        */
 914:/usr/include/c++/5/bits/stl_deque.h ****       deque(size_type __n, const value_type& __value,
 915:/usr/include/c++/5/bits/stl_deque.h **** 	    const allocator_type& __a = allocator_type())
 916:/usr/include/c++/5/bits/stl_deque.h ****       : _Base(__a, __n)
 917:/usr/include/c++/5/bits/stl_deque.h ****       { _M_fill_initialize(__value); }
 918:/usr/include/c++/5/bits/stl_deque.h **** #else
 919:/usr/include/c++/5/bits/stl_deque.h ****       /**
 920:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Creates a %deque with copies of an exemplar element.
 921:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __n  The number of elements to initially create.
 922:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __value  An element to copy.
 923:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __a  An allocator.
 924:/usr/include/c++/5/bits/stl_deque.h ****        *
 925:/usr/include/c++/5/bits/stl_deque.h ****        *  This constructor fills the %deque with @a __n copies of @a __value.
 926:/usr/include/c++/5/bits/stl_deque.h ****        */
 927:/usr/include/c++/5/bits/stl_deque.h ****       explicit
 928:/usr/include/c++/5/bits/stl_deque.h ****       deque(size_type __n, const value_type& __value = value_type(),
 929:/usr/include/c++/5/bits/stl_deque.h **** 	    const allocator_type& __a = allocator_type())
GAS LISTING /tmp/ccX8BQhk.s 			page 290


 930:/usr/include/c++/5/bits/stl_deque.h ****       : _Base(__a, __n)
 931:/usr/include/c++/5/bits/stl_deque.h ****       { _M_fill_initialize(__value); }
 932:/usr/include/c++/5/bits/stl_deque.h **** #endif
 933:/usr/include/c++/5/bits/stl_deque.h **** 
 934:/usr/include/c++/5/bits/stl_deque.h ****       /**
 935:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  %Deque copy constructor.
 936:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
 937:/usr/include/c++/5/bits/stl_deque.h ****        *
 938:/usr/include/c++/5/bits/stl_deque.h ****        *  The newly-created %deque uses a copy of the allocation object used
 939:/usr/include/c++/5/bits/stl_deque.h ****        *  by @a __x.
 940:/usr/include/c++/5/bits/stl_deque.h ****        */
 941:/usr/include/c++/5/bits/stl_deque.h ****       deque(const deque& __x)
 942:/usr/include/c++/5/bits/stl_deque.h ****       : _Base(_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()),
 943:/usr/include/c++/5/bits/stl_deque.h **** 	      __x.size())
 944:/usr/include/c++/5/bits/stl_deque.h ****       { std::__uninitialized_copy_a(__x.begin(), __x.end(), 
 945:/usr/include/c++/5/bits/stl_deque.h **** 				    this->_M_impl._M_start,
 946:/usr/include/c++/5/bits/stl_deque.h **** 				    _M_get_Tp_allocator()); }
 947:/usr/include/c++/5/bits/stl_deque.h **** 
 948:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
 949:/usr/include/c++/5/bits/stl_deque.h ****       /**
 950:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  %Deque move constructor.
 951:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
 952:/usr/include/c++/5/bits/stl_deque.h ****        *
 953:/usr/include/c++/5/bits/stl_deque.h ****        *  The newly-created %deque contains the exact contents of @a __x.
 954:/usr/include/c++/5/bits/stl_deque.h ****        *  The contents of @a __x are a valid, but unspecified %deque.
 955:/usr/include/c++/5/bits/stl_deque.h ****        */
 956:/usr/include/c++/5/bits/stl_deque.h ****       deque(deque&& __x)
 957:/usr/include/c++/5/bits/stl_deque.h ****       : _Base(std::move(__x)) { }
 958:/usr/include/c++/5/bits/stl_deque.h **** 
 959:/usr/include/c++/5/bits/stl_deque.h ****       /// Copy constructor with alternative allocator
 960:/usr/include/c++/5/bits/stl_deque.h ****       deque(const deque& __x, const allocator_type& __a)
 961:/usr/include/c++/5/bits/stl_deque.h ****       : _Base(__a, __x.size())
 962:/usr/include/c++/5/bits/stl_deque.h ****       { std::__uninitialized_copy_a(__x.begin(), __x.end(),
 963:/usr/include/c++/5/bits/stl_deque.h **** 				    this->_M_impl._M_start,
 964:/usr/include/c++/5/bits/stl_deque.h **** 				    _M_get_Tp_allocator()); }
 965:/usr/include/c++/5/bits/stl_deque.h **** 
 966:/usr/include/c++/5/bits/stl_deque.h ****       /// Move constructor with alternative allocator
 967:/usr/include/c++/5/bits/stl_deque.h ****       deque(deque&& __x, const allocator_type& __a)
 968:/usr/include/c++/5/bits/stl_deque.h ****       : _Base(std::move(__x), __a, __x.size())
 969:/usr/include/c++/5/bits/stl_deque.h ****       {
 970:/usr/include/c++/5/bits/stl_deque.h **** 	if (__x.get_allocator() != __a)
 971:/usr/include/c++/5/bits/stl_deque.h **** 	  {
 972:/usr/include/c++/5/bits/stl_deque.h **** 	    std::__uninitialized_move_a(__x.begin(), __x.end(),
 973:/usr/include/c++/5/bits/stl_deque.h **** 					this->_M_impl._M_start,
 974:/usr/include/c++/5/bits/stl_deque.h **** 					_M_get_Tp_allocator());
 975:/usr/include/c++/5/bits/stl_deque.h **** 	    __x.clear();
 976:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 977:/usr/include/c++/5/bits/stl_deque.h ****       }
 978:/usr/include/c++/5/bits/stl_deque.h **** 
 979:/usr/include/c++/5/bits/stl_deque.h ****       /**
 980:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Builds a %deque from an initializer list.
 981:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __l  An initializer_list.
 982:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __a  An allocator object.
 983:/usr/include/c++/5/bits/stl_deque.h ****        *
 984:/usr/include/c++/5/bits/stl_deque.h ****        *  Create a %deque consisting of copies of the elements in the
 985:/usr/include/c++/5/bits/stl_deque.h ****        *  initializer_list @a __l.
 986:/usr/include/c++/5/bits/stl_deque.h ****        *
GAS LISTING /tmp/ccX8BQhk.s 			page 291


 987:/usr/include/c++/5/bits/stl_deque.h ****        *  This will call the element type's copy constructor N times
 988:/usr/include/c++/5/bits/stl_deque.h ****        *  (where N is __l.size()) and do no memory reallocation.
 989:/usr/include/c++/5/bits/stl_deque.h ****        */
 990:/usr/include/c++/5/bits/stl_deque.h ****       deque(initializer_list<value_type> __l,
 991:/usr/include/c++/5/bits/stl_deque.h **** 	    const allocator_type& __a = allocator_type())
 992:/usr/include/c++/5/bits/stl_deque.h ****       : _Base(__a)
 993:/usr/include/c++/5/bits/stl_deque.h ****       {
 994:/usr/include/c++/5/bits/stl_deque.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 995:/usr/include/c++/5/bits/stl_deque.h **** 			    random_access_iterator_tag());
 996:/usr/include/c++/5/bits/stl_deque.h ****       }
 997:/usr/include/c++/5/bits/stl_deque.h **** #endif
 998:/usr/include/c++/5/bits/stl_deque.h **** 
 999:/usr/include/c++/5/bits/stl_deque.h ****       /**
1000:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Builds a %deque from a range.
1001:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __first  An input iterator.
1002:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __last  An input iterator.
1003:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __a  An allocator object.
1004:/usr/include/c++/5/bits/stl_deque.h ****        *
1005:/usr/include/c++/5/bits/stl_deque.h ****        *  Create a %deque consisting of copies of the elements from [__first,
1006:/usr/include/c++/5/bits/stl_deque.h ****        *  __last).
1007:/usr/include/c++/5/bits/stl_deque.h ****        *
1008:/usr/include/c++/5/bits/stl_deque.h ****        *  If the iterators are forward, bidirectional, or random-access, then
1009:/usr/include/c++/5/bits/stl_deque.h ****        *  this will call the elements' copy constructor N times (where N is
1010:/usr/include/c++/5/bits/stl_deque.h ****        *  distance(__first,__last)) and do no memory reallocation.  But if only
1011:/usr/include/c++/5/bits/stl_deque.h ****        *  input iterators are used, then this will do at most 2N calls to the
1012:/usr/include/c++/5/bits/stl_deque.h ****        *  copy constructor, and logN memory reallocations.
1013:/usr/include/c++/5/bits/stl_deque.h ****        */
1014:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1015:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator,
1016:/usr/include/c++/5/bits/stl_deque.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1017:/usr/include/c++/5/bits/stl_deque.h ****         deque(_InputIterator __first, _InputIterator __last,
1018:/usr/include/c++/5/bits/stl_deque.h **** 	      const allocator_type& __a = allocator_type())
1019:/usr/include/c++/5/bits/stl_deque.h **** 	: _Base(__a)
1020:/usr/include/c++/5/bits/stl_deque.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
1021:/usr/include/c++/5/bits/stl_deque.h **** #else
1022:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator>
1023:/usr/include/c++/5/bits/stl_deque.h ****         deque(_InputIterator __first, _InputIterator __last,
1024:/usr/include/c++/5/bits/stl_deque.h **** 	      const allocator_type& __a = allocator_type())
1025:/usr/include/c++/5/bits/stl_deque.h **** 	: _Base(__a)
1026:/usr/include/c++/5/bits/stl_deque.h ****         {
1027:/usr/include/c++/5/bits/stl_deque.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1028:/usr/include/c++/5/bits/stl_deque.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1029:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
1030:/usr/include/c++/5/bits/stl_deque.h **** 	}
1031:/usr/include/c++/5/bits/stl_deque.h **** #endif
1032:/usr/include/c++/5/bits/stl_deque.h **** 
1033:/usr/include/c++/5/bits/stl_deque.h ****       /**
1034:/usr/include/c++/5/bits/stl_deque.h ****        *  The dtor only erases the elements, and note that if the elements
1035:/usr/include/c++/5/bits/stl_deque.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
1036:/usr/include/c++/5/bits/stl_deque.h ****        *  way.  Managing the pointer is the user's responsibility.
1037:/usr/include/c++/5/bits/stl_deque.h ****        */
1038:/usr/include/c++/5/bits/stl_deque.h ****       ~deque()
 3706              		.loc 3 1038 0
 3707              		.cfi_startproc
 3708              		.cfi_personality 0x3,__gxx_personality_v0
 3709              		.cfi_lsda 0x3,.LLSDA10392
 3710 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 292


 3711              		.cfi_def_cfa_offset 16
 3712              		.cfi_offset 6, -16
 3713 0001 4889E5   		movq	%rsp, %rbp
 3714              		.cfi_def_cfa_register 6
 3715 0004 53       		pushq	%rbx
 3716 0005 4883EC68 		subq	$104, %rsp
 3717              		.cfi_offset 3, -24
 3718 0009 48897D98 		movq	%rdi, -104(%rbp)
 3719              		.loc 3 1038 0
 3720 000d 64488B04 		movq	%fs:40, %rax
 3720      25280000 
 3720      00
 3721 0016 488945E8 		movq	%rax, -24(%rbp)
 3722 001a 31C0     		xorl	%eax, %eax
 3723              	.LBB23:
1039:/usr/include/c++/5/bits/stl_deque.h ****       { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
 3724              		.loc 3 1039 0
 3725 001c 488B4598 		movq	-104(%rbp), %rax
 3726 0020 4889C7   		movq	%rax, %rdi
 3727 0023 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 3727      00
 3728 0028 4889C3   		movq	%rax, %rbx
 3729 002b 488D45C0 		leaq	-64(%rbp), %rax
 3730 002f 488B5598 		movq	-104(%rbp), %rdx
 3731 0033 4889D6   		movq	%rdx, %rsi
 3732 0036 4889C7   		movq	%rax, %rdi
 3733 0039 E8000000 		call	_ZNSt5dequeIcSaIcEE3endEv
 3733      00
 3734 003e 488D45A0 		leaq	-96(%rbp), %rax
 3735 0042 488B5598 		movq	-104(%rbp), %rdx
 3736 0046 4889D6   		movq	%rdx, %rsi
 3737 0049 4889C7   		movq	%rax, %rdi
 3738 004c E8000000 		call	_ZNSt5dequeIcSaIcEE5beginEv
 3738      00
 3739 0051 488D55C0 		leaq	-64(%rbp), %rdx
 3740 0055 488D75A0 		leaq	-96(%rbp), %rsi
 3741 0059 488B4598 		movq	-104(%rbp), %rax
 3742 005d 4889D9   		movq	%rbx, %rcx
 3743 0060 4889C7   		movq	%rax, %rdi
 3744 0063 E8000000 		call	_ZNSt5dequeIcSaIcEE15_M_destroy_dataESt15_Deque_iteratorIcRcPcES5_RKS0_
 3744      00
 3745 0068 488B4598 		movq	-104(%rbp), %rax
 3746 006c 4889C7   		movq	%rax, %rdi
 3747 006f E8000000 		call	_ZNSt11_Deque_baseIcSaIcEED2Ev
 3747      00
 3748              	.LBE23:
 3749 0074 90       		nop
 3750 0075 488B45E8 		movq	-24(%rbp), %rax
 3751 0079 64483304 		xorq	%fs:40, %rax
 3751      25280000 
 3751      00
 3752 0082 7405     		je	.L202
 3753 0084 E8000000 		call	__stack_chk_fail
 3753      00
 3754              	.L202:
 3755 0089 4883C468 		addq	$104, %rsp
 3756 008d 5B       		popq	%rbx
GAS LISTING /tmp/ccX8BQhk.s 			page 293


 3757 008e 5D       		popq	%rbp
 3758              		.cfi_def_cfa 7, 8
 3759 008f C3       		ret
 3760              		.cfi_endproc
 3761              	.LFE10392:
 3762              		.section	.gcc_except_table
 3763              	.LLSDA10392:
 3764 008e FF       		.byte	0xff
 3765 008f FF       		.byte	0xff
 3766 0090 01       		.byte	0x1
 3767 0091 00       		.uleb128 .LLSDACSE10392-.LLSDACSB10392
 3768              	.LLSDACSB10392:
 3769              	.LLSDACSE10392:
 3770              		.section	.text._ZNSt5dequeIcSaIcEED2Ev,"axG",@progbits,_ZNSt5dequeIcSaIcEED5Ev,comdat
 3772              		.weak	_ZNSt5dequeIcSaIcEED1Ev
 3773              		.set	_ZNSt5dequeIcSaIcEED1Ev,_ZNSt5dequeIcSaIcEED2Ev
 3774              		.section	.text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterat
 3775              		.align 2
 3776              		.weak	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7
 3778              	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx11
 3779              	.LFB10394:
 236:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 3780              		.loc 23 236 0
 3781              		.cfi_startproc
 3782 0000 55       		pushq	%rbp
 3783              		.cfi_def_cfa_offset 16
 3784              		.cfi_offset 6, -16
 3785 0001 4889E5   		movq	%rsp, %rbp
 3786              		.cfi_def_cfa_register 6
 3787 0004 4883EC10 		subq	$16, %rsp
 3788 0008 48897DF8 		movq	%rdi, -8(%rbp)
 239:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 3789              		.loc 23 239 0
 3790 000c 488B45F8 		movq	-8(%rbp), %rax
 3791 0010 488D5008 		leaq	8(%rax), %rdx
 3792 0014 488B45F8 		movq	-8(%rbp), %rax
 3793 0018 4889D6   		movq	%rdx, %rsi
 3794 001b 4889C7   		movq	%rax, %rdi
 3795 001e E8000000 		call	_ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iter
 3795      00
 238:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                     m_Begin != m_End, &iterator_range_base::m_Begin);
 3796              		.loc 23 238 0
 3797 0023 0FB6C0   		movzbl	%al, %eax
 239:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 3798              		.loc 23 239 0
 3799 0026 BE000000 		movl	$0, %esi
 3799      00
 3800 002b 89C7     		movl	%eax, %edi
 3801 002d E8000000 		call	_ZN5boost12range_detail9safe_boolIMNS_21iterator_range_detail19iterator_range_baseIN9__gnu_cx
 3801      00
 240:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 3802              		.loc 23 240 0
 3803 0032 C9       		leave
 3804              		.cfi_def_cfa 7, 8
 3805 0033 C3       		ret
 3806              		.cfi_endproc
 3807              	.LFE10394:
GAS LISTING /tmp/ccX8BQhk.s 			page 294


 3809              		.section	.text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterat
 3810              		.align 2
 3811              		.weak	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7
 3813              	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx11
 3814              	.LFB10395:
 221:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 3815              		.loc 23 221 0
 3816              		.cfi_startproc
 3817 0000 55       		pushq	%rbp
 3818              		.cfi_def_cfa_offset 16
 3819              		.cfi_offset 6, -16
 3820 0001 4889E5   		movq	%rsp, %rbp
 3821              		.cfi_def_cfa_register 6
 3822 0004 48897DF8 		movq	%rdi, -8(%rbp)
 223:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 3823              		.loc 23 223 0
 3824 0008 488B45F8 		movq	-8(%rbp), %rax
 3825 000c 488B00   		movq	(%rax), %rax
 224:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 3826              		.loc 23 224 0
 3827 000f 5D       		popq	%rbp
 3828              		.cfi_def_cfa 7, 8
 3829 0010 C3       		ret
 3830              		.cfi_endproc
 3831              	.LFE10395:
 3833              		.section	.text._ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEENSt7__cxx1112basic_stri
 3834              		.weak	_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEENSt7__cxx1112basic_stringIcSt11c
 3836              	_ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEENSt7__cxx1112basic_stringIcSt11char_tra
 3837              	.LFB10396:
 3838              		.file 30 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** //  Boost string_algo library replace_storage.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** //  Copyright Pavol Droba 2002-2003.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** #ifndef BOOST_STRING_REPLACE_STORAGE_DETAIL_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** #define BOOST_STRING_REPLACE_STORAGE_DETAIL_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** #include <boost/algorithm/string/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** #include <algorithm>
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** #include <boost/mpl/bool.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** #include <boost/algorithm/string/sequence_traits.hpp>
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** #include <boost/algorithm/string/detail/sequence.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** namespace boost {
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****     namespace algorithm {
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****         namespace detail {
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** //  storage handling routines -----------------------------------------------//
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             template< typename StorageT, typename OutputIteratorT >
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             inline OutputIteratorT move_from_storage(
GAS LISTING /tmp/ccX8BQhk.s 			page 295


  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 StorageT& Storage,
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 OutputIteratorT DestBegin,
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 OutputIteratorT DestEnd )
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             {
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 OutputIteratorT OutputIt=DestBegin;
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 while( !Storage.empty() && OutputIt!=DestEnd )
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 {
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     *OutputIt=Storage.front();
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     Storage.pop_front();
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ++OutputIt;
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 }
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 return OutputIt;
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             }
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             template< typename StorageT, typename WhatT >
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             inline void copy_to_storage(
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 StorageT& Storage,
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 const WhatT& What )
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             {
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 Storage.insert( Storage.end(), ::boost::begin(What), ::boost::end(What) );
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             }
  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** //  process segment routine -----------------------------------------------//
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             template< bool HasStableIterators >
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             struct process_segment_helper
  57:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             {
  58:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 // Optimized version of process_segment for generic sequence
  59:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 template< 
  60:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     typename StorageT,
  61:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     typename InputT,
  62:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     typename ForwardIteratorT >
  63:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 ForwardIteratorT operator()(
  64:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     StorageT& Storage,
  65:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     InputT& /*Input*/,
  66:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ForwardIteratorT InsertIt,
  67:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ForwardIteratorT SegmentBegin,
  68:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ForwardIteratorT SegmentEnd )
  69:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 {
  70:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     // Copy data from the storage until the beginning of the segment
  71:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ForwardIteratorT It=::boost::algorithm::detail::move_from_storage( Storage, Ins
  72:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  73:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     // 3 cases are possible :
  74:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     //   a) Storage is empty, It==SegmentBegin
  75:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     //   b) Storage is empty, It!=SegmentBegin
  76:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     //   c) Storage is not empty
  77:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
  78:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     if( Storage.empty() )
  79:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     {
  80:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         if( It==SegmentBegin )
  81:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         {
  82:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             // Case a) everything is grand, just return end of segment
  83:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             return SegmentEnd;
  84:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         }
GAS LISTING /tmp/ccX8BQhk.s 			page 296


  85:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         else
  86:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         {
  87:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             // Case b) move the segment backwards
  88:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             return std::copy( SegmentBegin, SegmentEnd, It );
  89:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         }
  90:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     }
  91:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     else
  92:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     {
  93:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         // Case c) -> shift the segment to the left and keep the overlap in the sto
  94:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         while( It!=SegmentEnd )
  95:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         {
  96:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             // Store value into storage
  97:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             Storage.push_back( *It );
  98:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             // Get the top from the storage and put it here
  99:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             *It=Storage.front();
 100:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             Storage.pop_front();
 101:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
 102:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             // Advance
 103:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             ++It;
 104:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         }
 105:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
 106:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         return It;
 107:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     }
 108:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 }
 109:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             };
 110:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
 111:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             template<>
 112:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             struct process_segment_helper< true >
 113:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             {
 114:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 // Optimized version of process_segment for list-like sequence
 115:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 template< 
 116:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     typename StorageT,
 117:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     typename InputT,
 118:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     typename ForwardIteratorT >
 119:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 ForwardIteratorT operator()(
 120:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     StorageT& Storage,
 121:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     InputT& Input,
 122:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ForwardIteratorT InsertIt,
 123:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ForwardIteratorT SegmentBegin,
 124:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ForwardIteratorT SegmentEnd )
 125:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
 126:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 {
 127:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     // Call replace to do the job
 128:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ::boost::algorithm::detail::replace( Input, InsertIt, SegmentBegin, Storage );
 129:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     // Empty the storage
 130:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     Storage.clear();
 131:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     // Iterators were not changed, simply return the end of segment
 132:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     return SegmentEnd;
 133:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 }
 134:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             };
 135:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
 136:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             // Process one segment in the replace_all algorithm
 137:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             template< 
 138:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 typename StorageT,
 139:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 typename InputT,
 140:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 typename ForwardIteratorT >
 141:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             inline ForwardIteratorT process_segment(
GAS LISTING /tmp/ccX8BQhk.s 			page 297


 3839              		.loc 30 141 0
 3840              		.cfi_startproc
 3841 0000 55       		pushq	%rbp
 3842              		.cfi_def_cfa_offset 16
 3843              		.cfi_offset 6, -16
 3844 0001 4889E5   		movq	%rsp, %rbp
 3845              		.cfi_def_cfa_register 6
 3846 0004 4883EC50 		subq	$80, %rsp
 3847 0008 48897DE8 		movq	%rdi, -24(%rbp)
 3848 000c 488975E0 		movq	%rsi, -32(%rbp)
 3849 0010 488955D0 		movq	%rdx, -48(%rbp)
 3850 0014 48894DC0 		movq	%rcx, -64(%rbp)
 3851 0018 4C8945B0 		movq	%r8, -80(%rbp)
 3852              		.loc 30 141 0
 3853 001c 64488B04 		movq	%fs:40, %rax
 3853      25280000 
 3853      00
 3854 0025 488945F8 		movq	%rax, -8(%rbp)
 3855 0029 31C0     		xorl	%eax, %eax
 142:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 StorageT& Storage,
 143:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 InputT& Input,
 144:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 ForwardIteratorT InsertIt,
 145:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 ForwardIteratorT SegmentBegin,
 146:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 ForwardIteratorT SegmentEnd )
 147:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             {
 148:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 return 
 149:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     process_segment_helper< 
 150:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         has_stable_iterators<InputT>::value>()(
 151:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                                 Storage, Input, InsertIt, SegmentBegin, SegmentEnd );
 3856              		.loc 30 151 0
 3857 002b 4C8B45B0 		movq	-80(%rbp), %r8
 3858 002f 488B7DC0 		movq	-64(%rbp), %rdi
 3859 0033 488B4DD0 		movq	-48(%rbp), %rcx
 3860 0037 488B55E0 		movq	-32(%rbp), %rdx
 3861 003b 488B75E8 		movq	-24(%rbp), %rsi
 3862 003f 488D45F7 		leaq	-9(%rbp), %rax
 3863 0043 4D89C1   		movq	%r8, %r9
 3864 0046 4989F8   		movq	%rdi, %r8
 3865 0049 4889C7   		movq	%rax, %rdi
 3866 004c E8000000 		call	_ZN5boost9algorithm6detail22process_segment_helperILb0EEclISt5dequeIcSaIcEENSt7__cxx1112basic
 3866      00
 152:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             }
 3867              		.loc 30 152 0
 3868 0051 488B55F8 		movq	-8(%rbp), %rdx
 3869 0055 64483314 		xorq	%fs:40, %rdx
 3869      25280000 
 3869      00
 3870 005e 7405     		je	.L209
 3871 0060 E8000000 		call	__stack_chk_fail
 3871      00
 3872              	.L209:
 3873 0065 C9       		leave
 3874              		.cfi_def_cfa 7, 8
 3875 0066 C3       		ret
 3876              		.cfi_endproc
 3877              	.LFE10396:
 3879              		.section	.text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterat
GAS LISTING /tmp/ccX8BQhk.s 			page 298


 3880              		.align 2
 3881              		.weak	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7
 3883              	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx11
 3884              	.LFB10397:
 226:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 3885              		.loc 23 226 0
 3886              		.cfi_startproc
 3887 0000 55       		pushq	%rbp
 3888              		.cfi_def_cfa_offset 16
 3889              		.cfi_offset 6, -16
 3890 0001 4889E5   		movq	%rsp, %rbp
 3891              		.cfi_def_cfa_register 6
 3892 0004 48897DF8 		movq	%rdi, -8(%rbp)
 228:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 3893              		.loc 23 228 0
 3894 0008 488B45F8 		movq	-8(%rbp), %rax
 3895 000c 488B4008 		movq	8(%rax), %rax
 229:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 3896              		.loc 23 229 0
 3897 0010 5D       		popq	%rbp
 3898              		.cfi_def_cfa 7, 8
 3899 0011 C3       		ret
 3900              		.cfi_endproc
 3901              	.LFE10397:
 3903              		.section	.text._ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7
 3904              		.align 2
 3905              		.weak	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112
 3907              	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_s
 3908              	.LFB10398:
  63:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 {   
 3909              		.loc 26 63 0
 3910              		.cfi_startproc
 3911 0000 55       		pushq	%rbp
 3912              		.cfi_def_cfa_offset 16
 3913              		.cfi_offset 6, -16
 3914 0001 4889E5   		movq	%rsp, %rbp
 3915              		.cfi_def_cfa_register 6
 3916 0004 48897DF8 		movq	%rdi, -8(%rbp)
  65:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 }
 3917              		.loc 26 65 0
 3918 0008 488B45F8 		movq	-8(%rbp), %rax
 3919 000c 4883C010 		addq	$16, %rax
  66:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
 3920              		.loc 26 66 0
 3921 0010 5D       		popq	%rbp
 3922              		.cfi_def_cfa 7, 8
 3923 0011 C3       		ret
 3924              		.cfi_endproc
 3925              	.LFE10398:
 3927              		.section	.text._ZN5boost9algorithm6detail15copy_to_storageISt5dequeIcSaIcEENS_14iterator_rangeIPKc
 3928              		.weak	_ZN5boost9algorithm6detail15copy_to_storageISt5dequeIcSaIcEENS_14iterator_rangeIPKcEEEEvRT_R
 3930              	_ZN5boost9algorithm6detail15copy_to_storageISt5dequeIcSaIcEENS_14iterator_rangeIPKcEEEEvRT_RKT0_:
 3931              	.LFB10399:
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 StorageT& Storage,
 3932              		.loc 30 45 0
 3933              		.cfi_startproc
 3934 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 299


 3935              		.cfi_def_cfa_offset 16
 3936              		.cfi_offset 6, -16
 3937 0001 4889E5   		movq	%rsp, %rbp
 3938              		.cfi_def_cfa_register 6
 3939 0004 4154     		pushq	%r12
 3940 0006 53       		pushq	%rbx
 3941 0007 4883C480 		addq	$-128, %rsp
 3942              		.cfi_offset 12, -24
 3943              		.cfi_offset 3, -32
 3944 000b 48897D98 		movq	%rdi, -104(%rbp)
 3945 000f 48897590 		movq	%rsi, -112(%rbp)
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 StorageT& Storage,
 3946              		.loc 30 45 0
 3947 0013 64488B04 		movq	%fs:40, %rax
 3947      25280000 
 3947      00
 3948 001c 488945E8 		movq	%rax, -24(%rbp)
 3949 0020 31C0     		xorl	%eax, %eax
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             }
 3950              		.loc 30 49 0
 3951 0022 488B4590 		movq	-112(%rbp), %rax
 3952 0026 4889C7   		movq	%rax, %rdi
 3953 0029 E8000000 		call	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS
 3953      00
 3954 002e 4989C4   		movq	%rax, %r12
 3955 0031 488B4590 		movq	-112(%rbp), %rax
 3956 0035 4889C7   		movq	%rax, %rdi
 3957 0038 E8000000 		call	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeE
 3957      00
 3958 003d 4889C3   		movq	%rax, %rbx
 3959 0040 488D45A0 		leaq	-96(%rbp), %rax
 3960 0044 488B5598 		movq	-104(%rbp), %rdx
 3961 0048 4889D6   		movq	%rdx, %rsi
 3962 004b 4889C7   		movq	%rax, %rdi
 3963 004e E8000000 		call	_ZNSt5dequeIcSaIcEE3endEv
 3963      00
 3964 0053 488D55A0 		leaq	-96(%rbp), %rdx
 3965 0057 488D45C0 		leaq	-64(%rbp), %rax
 3966 005b 4889D6   		movq	%rdx, %rsi
 3967 005e 4889C7   		movq	%rax, %rdi
 3968 0061 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_EC1ERKS_IcRcPcE
 3968      00
 3969 0066 488D8570 		leaq	-144(%rbp), %rax
 3969      FFFFFF
 3970 006d 488B7598 		movq	-104(%rbp), %rsi
 3971 0071 FF75D8   		pushq	-40(%rbp)
 3972 0074 FF75D0   		pushq	-48(%rbp)
 3973 0077 FF75C8   		pushq	-56(%rbp)
 3974 007a FF75C0   		pushq	-64(%rbp)
 3975 007d 4C89E1   		movq	%r12, %rcx
 3976 0080 4889DA   		movq	%rbx, %rdx
 3977 0083 4889C7   		movq	%rax, %rdi
 3978 0086 E8000000 		call	_ZNSt5dequeIcSaIcEE6insertIPKcvEESt15_Deque_iteratorIcRcPcES5_IcRS3_S4_ET_SB_
 3978      00
 3979 008b 4883C420 		addq	$32, %rsp
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
 3980              		.loc 30 50 0
GAS LISTING /tmp/ccX8BQhk.s 			page 300


 3981 008f 90       		nop
 3982 0090 488B45E8 		movq	-24(%rbp), %rax
 3983 0094 64483304 		xorq	%fs:40, %rax
 3983      25280000 
 3983      00
 3984 009d 7405     		je	.L215
 3985 009f E8000000 		call	__stack_chk_fail
 3985      00
 3986              	.L215:
 3987 00a4 488D65F0 		leaq	-16(%rbp), %rsp
 3988 00a8 5B       		popq	%rbx
 3989 00a9 415C     		popq	%r12
 3990 00ab 5D       		popq	%rbp
 3991              		.cfi_def_cfa 7, 8
 3992 00ac C3       		ret
 3993              		.cfi_endproc
 3994              	.LFE10399:
 3996              		.section	.text._ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7
 3997              		.align 2
 3998              		.weak	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112
 4000              	_ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_s
 4001              	.LFB10400:
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 {
 4002              		.loc 26 52 0
 4003              		.cfi_startproc
 4004 0000 55       		pushq	%rbp
 4005              		.cfi_def_cfa_offset 16
 4006              		.cfi_offset 6, -16
 4007 0001 4889E5   		movq	%rsp, %rbp
 4008              		.cfi_def_cfa_register 6
 4009 0004 4883EC20 		subq	$32, %rsp
 4010 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4011 000c 4889F0   		movq	%rsi, %rax
 4012 000f 4889D1   		movq	%rdx, %rcx
 4013 0012 4889CA   		movq	%rcx, %rdx
 4014 0015 488945E0 		movq	%rax, -32(%rbp)
 4015 0019 488955E8 		movq	%rdx, -24(%rbp)
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     if( !this->empty() ) {
 4016              		.loc 26 54 0
 4017 001d 488B45F8 		movq	-8(%rbp), %rax
 4018 0021 488D55E0 		leaq	-32(%rbp), %rdx
 4019 0025 4889D6   		movq	%rdx, %rsi
 4020 0028 4889C7   		movq	%rax, %rdi
 4021 002b E8000000 		call	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11cha
 4021      00
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                         m_FormatResult=m_Formatter(FindResult);
 4022              		.loc 26 55 0
 4023 0030 488B45F8 		movq	-8(%rbp), %rax
 4024 0034 4889C7   		movq	%rax, %rdi
 4025 0037 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 4025      00
 4026 003c 83F001   		xorl	$1, %eax
 4027 003f 84C0     		testb	%al, %al
 4028 0041 742A     		je	.L217
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                     }
 4029              		.loc 26 56 0
 4030 0043 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 301


 4031 0047 488B4020 		movq	32(%rax), %rax
 4032 004b 488D55E0 		leaq	-32(%rbp), %rdx
 4033 004f 4889D6   		movq	%rdx, %rsi
 4034 0052 4889C7   		movq	%rax, %rdi
 4035 0055 E8000000 		call	_ZNK5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEclINS3_IN9__gnu_cxx17__n
 4035      00
 4036 005a 488B4DF8 		movq	-8(%rbp), %rcx
 4037 005e 488B5008 		movq	8(%rax), %rdx
 4038 0062 488B00   		movq	(%rax), %rax
 4039 0065 48894110 		movq	%rax, 16(%rcx)
 4040 0069 48895118 		movq	%rdx, 24(%rcx)
 4041              	.L217:
  59:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp ****                 }
 4042              		.loc 26 59 0
 4043 006d 488B45F8 		movq	-8(%rbp), %rax
  60:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/find_format_store.hpp **** 
 4044              		.loc 26 60 0
 4045 0071 C9       		leave
 4046              		.cfi_def_cfa 7, 8
 4047 0072 C3       		ret
 4048              		.cfi_endproc
 4049              	.LFE10400:
 4051              		.section	.text._ZNKSt5dequeIcSaIcEE5emptyEv,"axG",@progbits,_ZNKSt5dequeIcSaIcEE5emptyEv,comdat
 4052              		.align 2
 4053              		.weak	_ZNKSt5dequeIcSaIcEE5emptyEv
 4055              	_ZNKSt5dequeIcSaIcEE5emptyEv:
 4056              	.LFB10401:
1040:/usr/include/c++/5/bits/stl_deque.h **** 
1041:/usr/include/c++/5/bits/stl_deque.h ****       /**
1042:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  %Deque assignment operator.
1043:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
1044:/usr/include/c++/5/bits/stl_deque.h ****        *
1045:/usr/include/c++/5/bits/stl_deque.h ****        *  All the elements of @a x are copied, but unlike the copy constructor,
1046:/usr/include/c++/5/bits/stl_deque.h ****        *  the allocator object is not copied.
1047:/usr/include/c++/5/bits/stl_deque.h ****        */
1048:/usr/include/c++/5/bits/stl_deque.h ****       deque&
1049:/usr/include/c++/5/bits/stl_deque.h ****       operator=(const deque& __x);
1050:/usr/include/c++/5/bits/stl_deque.h **** 
1051:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1052:/usr/include/c++/5/bits/stl_deque.h ****       /**
1053:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  %Deque move assignment operator.
1054:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  A %deque of identical element and allocator types.
1055:/usr/include/c++/5/bits/stl_deque.h ****        *
1056:/usr/include/c++/5/bits/stl_deque.h ****        *  The contents of @a __x are moved into this deque (without copying,
1057:/usr/include/c++/5/bits/stl_deque.h ****        *  if the allocators permit it).
1058:/usr/include/c++/5/bits/stl_deque.h ****        *  @a __x is a valid, but unspecified %deque.
1059:/usr/include/c++/5/bits/stl_deque.h ****        */
1060:/usr/include/c++/5/bits/stl_deque.h ****       deque&
1061:/usr/include/c++/5/bits/stl_deque.h ****       operator=(deque&& __x) noexcept(_Alloc_traits::_S_always_equal())
1062:/usr/include/c++/5/bits/stl_deque.h ****       {
1063:/usr/include/c++/5/bits/stl_deque.h **** 	constexpr bool __always_equal = _Alloc_traits::_S_always_equal();
1064:/usr/include/c++/5/bits/stl_deque.h **** 	_M_move_assign1(std::move(__x),
1065:/usr/include/c++/5/bits/stl_deque.h **** 		        integral_constant<bool, __always_equal>());
1066:/usr/include/c++/5/bits/stl_deque.h **** 	return *this;
1067:/usr/include/c++/5/bits/stl_deque.h ****       }
1068:/usr/include/c++/5/bits/stl_deque.h **** 
1069:/usr/include/c++/5/bits/stl_deque.h ****       /**
GAS LISTING /tmp/ccX8BQhk.s 			page 302


1070:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Assigns an initializer list to a %deque.
1071:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __l  An initializer_list.
1072:/usr/include/c++/5/bits/stl_deque.h ****        *
1073:/usr/include/c++/5/bits/stl_deque.h ****        *  This function fills a %deque with copies of the elements in the
1074:/usr/include/c++/5/bits/stl_deque.h ****        *  initializer_list @a __l.
1075:/usr/include/c++/5/bits/stl_deque.h ****        *
1076:/usr/include/c++/5/bits/stl_deque.h ****        *  Note that the assignment completely changes the %deque and that the
1077:/usr/include/c++/5/bits/stl_deque.h ****        *  resulting %deque's size is the same as the number of elements
1078:/usr/include/c++/5/bits/stl_deque.h ****        *  assigned.  Old data may be lost.
1079:/usr/include/c++/5/bits/stl_deque.h ****        */
1080:/usr/include/c++/5/bits/stl_deque.h ****       deque&
1081:/usr/include/c++/5/bits/stl_deque.h ****       operator=(initializer_list<value_type> __l)
1082:/usr/include/c++/5/bits/stl_deque.h ****       {
1083:/usr/include/c++/5/bits/stl_deque.h **** 	this->assign(__l.begin(), __l.end());
1084:/usr/include/c++/5/bits/stl_deque.h **** 	return *this;
1085:/usr/include/c++/5/bits/stl_deque.h ****       }
1086:/usr/include/c++/5/bits/stl_deque.h **** #endif
1087:/usr/include/c++/5/bits/stl_deque.h **** 
1088:/usr/include/c++/5/bits/stl_deque.h ****       /**
1089:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Assigns a given value to a %deque.
1090:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __n  Number of elements to be assigned.
1091:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __val  Value to be assigned.
1092:/usr/include/c++/5/bits/stl_deque.h ****        *
1093:/usr/include/c++/5/bits/stl_deque.h ****        *  This function fills a %deque with @a n copies of the given
1094:/usr/include/c++/5/bits/stl_deque.h ****        *  value.  Note that the assignment completely changes the
1095:/usr/include/c++/5/bits/stl_deque.h ****        *  %deque and that the resulting %deque's size is the same as
1096:/usr/include/c++/5/bits/stl_deque.h ****        *  the number of elements assigned.  Old data may be lost.
1097:/usr/include/c++/5/bits/stl_deque.h ****        */
1098:/usr/include/c++/5/bits/stl_deque.h ****       void
1099:/usr/include/c++/5/bits/stl_deque.h ****       assign(size_type __n, const value_type& __val)
1100:/usr/include/c++/5/bits/stl_deque.h ****       { _M_fill_assign(__n, __val); }
1101:/usr/include/c++/5/bits/stl_deque.h **** 
1102:/usr/include/c++/5/bits/stl_deque.h ****       /**
1103:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Assigns a range to a %deque.
1104:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __first  An input iterator.
1105:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __last   An input iterator.
1106:/usr/include/c++/5/bits/stl_deque.h ****        *
1107:/usr/include/c++/5/bits/stl_deque.h ****        *  This function fills a %deque with copies of the elements in the
1108:/usr/include/c++/5/bits/stl_deque.h ****        *  range [__first,__last).
1109:/usr/include/c++/5/bits/stl_deque.h ****        *
1110:/usr/include/c++/5/bits/stl_deque.h ****        *  Note that the assignment completely changes the %deque and that the
1111:/usr/include/c++/5/bits/stl_deque.h ****        *  resulting %deque's size is the same as the number of elements
1112:/usr/include/c++/5/bits/stl_deque.h ****        *  assigned.  Old data may be lost.
1113:/usr/include/c++/5/bits/stl_deque.h ****        */
1114:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1115:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator,
1116:/usr/include/c++/5/bits/stl_deque.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1117:/usr/include/c++/5/bits/stl_deque.h ****         void
1118:/usr/include/c++/5/bits/stl_deque.h ****         assign(_InputIterator __first, _InputIterator __last)
1119:/usr/include/c++/5/bits/stl_deque.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
1120:/usr/include/c++/5/bits/stl_deque.h **** #else
1121:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator>
1122:/usr/include/c++/5/bits/stl_deque.h ****         void
1123:/usr/include/c++/5/bits/stl_deque.h ****         assign(_InputIterator __first, _InputIterator __last)
1124:/usr/include/c++/5/bits/stl_deque.h ****         {
1125:/usr/include/c++/5/bits/stl_deque.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1126:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
GAS LISTING /tmp/ccX8BQhk.s 			page 303


1127:/usr/include/c++/5/bits/stl_deque.h **** 	}
1128:/usr/include/c++/5/bits/stl_deque.h **** #endif
1129:/usr/include/c++/5/bits/stl_deque.h **** 
1130:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1131:/usr/include/c++/5/bits/stl_deque.h ****       /**
1132:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Assigns an initializer list to a %deque.
1133:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __l  An initializer_list.
1134:/usr/include/c++/5/bits/stl_deque.h ****        *
1135:/usr/include/c++/5/bits/stl_deque.h ****        *  This function fills a %deque with copies of the elements in the
1136:/usr/include/c++/5/bits/stl_deque.h ****        *  initializer_list @a __l.
1137:/usr/include/c++/5/bits/stl_deque.h ****        *
1138:/usr/include/c++/5/bits/stl_deque.h ****        *  Note that the assignment completely changes the %deque and that the
1139:/usr/include/c++/5/bits/stl_deque.h ****        *  resulting %deque's size is the same as the number of elements
1140:/usr/include/c++/5/bits/stl_deque.h ****        *  assigned.  Old data may be lost.
1141:/usr/include/c++/5/bits/stl_deque.h ****        */
1142:/usr/include/c++/5/bits/stl_deque.h ****       void
1143:/usr/include/c++/5/bits/stl_deque.h ****       assign(initializer_list<value_type> __l)
1144:/usr/include/c++/5/bits/stl_deque.h ****       { this->assign(__l.begin(), __l.end()); }
1145:/usr/include/c++/5/bits/stl_deque.h **** #endif
1146:/usr/include/c++/5/bits/stl_deque.h **** 
1147:/usr/include/c++/5/bits/stl_deque.h ****       /// Get a copy of the memory allocation object.
1148:/usr/include/c++/5/bits/stl_deque.h ****       allocator_type
1149:/usr/include/c++/5/bits/stl_deque.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1150:/usr/include/c++/5/bits/stl_deque.h ****       { return _Base::get_allocator(); }
1151:/usr/include/c++/5/bits/stl_deque.h **** 
1152:/usr/include/c++/5/bits/stl_deque.h ****       // iterators
1153:/usr/include/c++/5/bits/stl_deque.h ****       /**
1154:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read/write iterator that points to the first element in the
1155:/usr/include/c++/5/bits/stl_deque.h ****        *  %deque.  Iteration is done in ordinary element order.
1156:/usr/include/c++/5/bits/stl_deque.h ****        */
1157:/usr/include/c++/5/bits/stl_deque.h ****       iterator
1158:/usr/include/c++/5/bits/stl_deque.h ****       begin() _GLIBCXX_NOEXCEPT
1159:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_start; }
1160:/usr/include/c++/5/bits/stl_deque.h **** 
1161:/usr/include/c++/5/bits/stl_deque.h ****       /**
1162:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) iterator that points to the first
1163:/usr/include/c++/5/bits/stl_deque.h ****        *  element in the %deque.  Iteration is done in ordinary element order.
1164:/usr/include/c++/5/bits/stl_deque.h ****        */
1165:/usr/include/c++/5/bits/stl_deque.h ****       const_iterator
1166:/usr/include/c++/5/bits/stl_deque.h ****       begin() const _GLIBCXX_NOEXCEPT
1167:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_start; }
1168:/usr/include/c++/5/bits/stl_deque.h **** 
1169:/usr/include/c++/5/bits/stl_deque.h ****       /**
1170:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read/write iterator that points one past the last
1171:/usr/include/c++/5/bits/stl_deque.h ****        *  element in the %deque.  Iteration is done in ordinary
1172:/usr/include/c++/5/bits/stl_deque.h ****        *  element order.
1173:/usr/include/c++/5/bits/stl_deque.h ****        */
1174:/usr/include/c++/5/bits/stl_deque.h ****       iterator
1175:/usr/include/c++/5/bits/stl_deque.h ****       end() _GLIBCXX_NOEXCEPT
1176:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_finish; }
1177:/usr/include/c++/5/bits/stl_deque.h **** 
1178:/usr/include/c++/5/bits/stl_deque.h ****       /**
1179:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) iterator that points one past
1180:/usr/include/c++/5/bits/stl_deque.h ****        *  the last element in the %deque.  Iteration is done in
1181:/usr/include/c++/5/bits/stl_deque.h ****        *  ordinary element order.
1182:/usr/include/c++/5/bits/stl_deque.h ****        */
1183:/usr/include/c++/5/bits/stl_deque.h ****       const_iterator
GAS LISTING /tmp/ccX8BQhk.s 			page 304


1184:/usr/include/c++/5/bits/stl_deque.h ****       end() const _GLIBCXX_NOEXCEPT
1185:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_finish; }
1186:/usr/include/c++/5/bits/stl_deque.h **** 
1187:/usr/include/c++/5/bits/stl_deque.h ****       /**
1188:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read/write reverse iterator that points to the
1189:/usr/include/c++/5/bits/stl_deque.h ****        *  last element in the %deque.  Iteration is done in reverse
1190:/usr/include/c++/5/bits/stl_deque.h ****        *  element order.
1191:/usr/include/c++/5/bits/stl_deque.h ****        */
1192:/usr/include/c++/5/bits/stl_deque.h ****       reverse_iterator
1193:/usr/include/c++/5/bits/stl_deque.h ****       rbegin() _GLIBCXX_NOEXCEPT
1194:/usr/include/c++/5/bits/stl_deque.h ****       { return reverse_iterator(this->_M_impl._M_finish); }
1195:/usr/include/c++/5/bits/stl_deque.h **** 
1196:/usr/include/c++/5/bits/stl_deque.h ****       /**
1197:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1198:/usr/include/c++/5/bits/stl_deque.h ****        *  to the last element in the %deque.  Iteration is done in
1199:/usr/include/c++/5/bits/stl_deque.h ****        *  reverse element order.
1200:/usr/include/c++/5/bits/stl_deque.h ****        */
1201:/usr/include/c++/5/bits/stl_deque.h ****       const_reverse_iterator
1202:/usr/include/c++/5/bits/stl_deque.h ****       rbegin() const _GLIBCXX_NOEXCEPT
1203:/usr/include/c++/5/bits/stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_finish); }
1204:/usr/include/c++/5/bits/stl_deque.h **** 
1205:/usr/include/c++/5/bits/stl_deque.h ****       /**
1206:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read/write reverse iterator that points to one
1207:/usr/include/c++/5/bits/stl_deque.h ****        *  before the first element in the %deque.  Iteration is done
1208:/usr/include/c++/5/bits/stl_deque.h ****        *  in reverse element order.
1209:/usr/include/c++/5/bits/stl_deque.h ****        */
1210:/usr/include/c++/5/bits/stl_deque.h ****       reverse_iterator
1211:/usr/include/c++/5/bits/stl_deque.h ****       rend() _GLIBCXX_NOEXCEPT
1212:/usr/include/c++/5/bits/stl_deque.h ****       { return reverse_iterator(this->_M_impl._M_start); }
1213:/usr/include/c++/5/bits/stl_deque.h **** 
1214:/usr/include/c++/5/bits/stl_deque.h ****       /**
1215:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1216:/usr/include/c++/5/bits/stl_deque.h ****        *  to one before the first element in the %deque.  Iteration is
1217:/usr/include/c++/5/bits/stl_deque.h ****        *  done in reverse element order.
1218:/usr/include/c++/5/bits/stl_deque.h ****        */
1219:/usr/include/c++/5/bits/stl_deque.h ****       const_reverse_iterator
1220:/usr/include/c++/5/bits/stl_deque.h ****       rend() const _GLIBCXX_NOEXCEPT
1221:/usr/include/c++/5/bits/stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_start); }
1222:/usr/include/c++/5/bits/stl_deque.h **** 
1223:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1224:/usr/include/c++/5/bits/stl_deque.h ****       /**
1225:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) iterator that points to the first
1226:/usr/include/c++/5/bits/stl_deque.h ****        *  element in the %deque.  Iteration is done in ordinary element order.
1227:/usr/include/c++/5/bits/stl_deque.h ****        */
1228:/usr/include/c++/5/bits/stl_deque.h ****       const_iterator
1229:/usr/include/c++/5/bits/stl_deque.h ****       cbegin() const noexcept
1230:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_start; }
1231:/usr/include/c++/5/bits/stl_deque.h **** 
1232:/usr/include/c++/5/bits/stl_deque.h ****       /**
1233:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) iterator that points one past
1234:/usr/include/c++/5/bits/stl_deque.h ****        *  the last element in the %deque.  Iteration is done in
1235:/usr/include/c++/5/bits/stl_deque.h ****        *  ordinary element order.
1236:/usr/include/c++/5/bits/stl_deque.h ****        */
1237:/usr/include/c++/5/bits/stl_deque.h ****       const_iterator
1238:/usr/include/c++/5/bits/stl_deque.h ****       cend() const noexcept
1239:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_finish; }
1240:/usr/include/c++/5/bits/stl_deque.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 305


1241:/usr/include/c++/5/bits/stl_deque.h ****       /**
1242:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1243:/usr/include/c++/5/bits/stl_deque.h ****        *  to the last element in the %deque.  Iteration is done in
1244:/usr/include/c++/5/bits/stl_deque.h ****        *  reverse element order.
1245:/usr/include/c++/5/bits/stl_deque.h ****        */
1246:/usr/include/c++/5/bits/stl_deque.h ****       const_reverse_iterator
1247:/usr/include/c++/5/bits/stl_deque.h ****       crbegin() const noexcept
1248:/usr/include/c++/5/bits/stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_finish); }
1249:/usr/include/c++/5/bits/stl_deque.h **** 
1250:/usr/include/c++/5/bits/stl_deque.h ****       /**
1251:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) reverse iterator that points
1252:/usr/include/c++/5/bits/stl_deque.h ****        *  to one before the first element in the %deque.  Iteration is
1253:/usr/include/c++/5/bits/stl_deque.h ****        *  done in reverse element order.
1254:/usr/include/c++/5/bits/stl_deque.h ****        */
1255:/usr/include/c++/5/bits/stl_deque.h ****       const_reverse_iterator
1256:/usr/include/c++/5/bits/stl_deque.h ****       crend() const noexcept
1257:/usr/include/c++/5/bits/stl_deque.h ****       { return const_reverse_iterator(this->_M_impl._M_start); }
1258:/usr/include/c++/5/bits/stl_deque.h **** #endif
1259:/usr/include/c++/5/bits/stl_deque.h **** 
1260:/usr/include/c++/5/bits/stl_deque.h ****       // [23.2.1.2] capacity
1261:/usr/include/c++/5/bits/stl_deque.h ****       /**  Returns the number of elements in the %deque.  */
1262:/usr/include/c++/5/bits/stl_deque.h ****       size_type
1263:/usr/include/c++/5/bits/stl_deque.h ****       size() const _GLIBCXX_NOEXCEPT
1264:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_finish - this->_M_impl._M_start; }
1265:/usr/include/c++/5/bits/stl_deque.h **** 
1266:/usr/include/c++/5/bits/stl_deque.h ****       /**  Returns the size() of the largest possible %deque.  */
1267:/usr/include/c++/5/bits/stl_deque.h ****       size_type
1268:/usr/include/c++/5/bits/stl_deque.h ****       max_size() const _GLIBCXX_NOEXCEPT
1269:/usr/include/c++/5/bits/stl_deque.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
1270:/usr/include/c++/5/bits/stl_deque.h **** 
1271:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1272:/usr/include/c++/5/bits/stl_deque.h ****       /**
1273:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Resizes the %deque to the specified number of elements.
1274:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __new_size  Number of elements the %deque should contain.
1275:/usr/include/c++/5/bits/stl_deque.h ****        *
1276:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will %resize the %deque to the specified
1277:/usr/include/c++/5/bits/stl_deque.h ****        *  number of elements.  If the number is smaller than the
1278:/usr/include/c++/5/bits/stl_deque.h ****        *  %deque's current size the %deque is truncated, otherwise
1279:/usr/include/c++/5/bits/stl_deque.h ****        *  default constructed elements are appended.
1280:/usr/include/c++/5/bits/stl_deque.h ****        */
1281:/usr/include/c++/5/bits/stl_deque.h ****       void
1282:/usr/include/c++/5/bits/stl_deque.h ****       resize(size_type __new_size)
1283:/usr/include/c++/5/bits/stl_deque.h ****       {
1284:/usr/include/c++/5/bits/stl_deque.h **** 	const size_type __len = size();
1285:/usr/include/c++/5/bits/stl_deque.h **** 	if (__new_size > __len)
1286:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_default_append(__new_size - __len);
1287:/usr/include/c++/5/bits/stl_deque.h **** 	else if (__new_size < __len)
1288:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_erase_at_end(this->_M_impl._M_start
1289:/usr/include/c++/5/bits/stl_deque.h **** 			  + difference_type(__new_size));
1290:/usr/include/c++/5/bits/stl_deque.h ****       }
1291:/usr/include/c++/5/bits/stl_deque.h **** 
1292:/usr/include/c++/5/bits/stl_deque.h ****       /**
1293:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Resizes the %deque to the specified number of elements.
1294:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __new_size  Number of elements the %deque should contain.
1295:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  Data with which new elements should be populated.
1296:/usr/include/c++/5/bits/stl_deque.h ****        *
1297:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will %resize the %deque to the specified
GAS LISTING /tmp/ccX8BQhk.s 			page 306


1298:/usr/include/c++/5/bits/stl_deque.h ****        *  number of elements.  If the number is smaller than the
1299:/usr/include/c++/5/bits/stl_deque.h ****        *  %deque's current size the %deque is truncated, otherwise the
1300:/usr/include/c++/5/bits/stl_deque.h ****        *  %deque is extended and new elements are populated with given
1301:/usr/include/c++/5/bits/stl_deque.h ****        *  data.
1302:/usr/include/c++/5/bits/stl_deque.h ****        */
1303:/usr/include/c++/5/bits/stl_deque.h ****       void
1304:/usr/include/c++/5/bits/stl_deque.h ****       resize(size_type __new_size, const value_type& __x)
1305:/usr/include/c++/5/bits/stl_deque.h ****       {
1306:/usr/include/c++/5/bits/stl_deque.h **** 	const size_type __len = size();
1307:/usr/include/c++/5/bits/stl_deque.h **** 	if (__new_size > __len)
1308:/usr/include/c++/5/bits/stl_deque.h **** 	  insert(this->_M_impl._M_finish, __new_size - __len, __x);
1309:/usr/include/c++/5/bits/stl_deque.h **** 	else if (__new_size < __len)
1310:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_erase_at_end(this->_M_impl._M_start
1311:/usr/include/c++/5/bits/stl_deque.h **** 			  + difference_type(__new_size));
1312:/usr/include/c++/5/bits/stl_deque.h ****       }
1313:/usr/include/c++/5/bits/stl_deque.h **** #else
1314:/usr/include/c++/5/bits/stl_deque.h ****       /**
1315:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Resizes the %deque to the specified number of elements.
1316:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __new_size  Number of elements the %deque should contain.
1317:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  Data with which new elements should be populated.
1318:/usr/include/c++/5/bits/stl_deque.h ****        *
1319:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will %resize the %deque to the specified
1320:/usr/include/c++/5/bits/stl_deque.h ****        *  number of elements.  If the number is smaller than the
1321:/usr/include/c++/5/bits/stl_deque.h ****        *  %deque's current size the %deque is truncated, otherwise the
1322:/usr/include/c++/5/bits/stl_deque.h ****        *  %deque is extended and new elements are populated with given
1323:/usr/include/c++/5/bits/stl_deque.h ****        *  data.
1324:/usr/include/c++/5/bits/stl_deque.h ****        */
1325:/usr/include/c++/5/bits/stl_deque.h ****       void
1326:/usr/include/c++/5/bits/stl_deque.h ****       resize(size_type __new_size, value_type __x = value_type())
1327:/usr/include/c++/5/bits/stl_deque.h ****       {
1328:/usr/include/c++/5/bits/stl_deque.h **** 	const size_type __len = size();
1329:/usr/include/c++/5/bits/stl_deque.h **** 	if (__new_size > __len)
1330:/usr/include/c++/5/bits/stl_deque.h **** 	  insert(this->_M_impl._M_finish, __new_size - __len, __x);
1331:/usr/include/c++/5/bits/stl_deque.h **** 	else if (__new_size < __len)
1332:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_erase_at_end(this->_M_impl._M_start
1333:/usr/include/c++/5/bits/stl_deque.h **** 			  + difference_type(__new_size));
1334:/usr/include/c++/5/bits/stl_deque.h ****       }
1335:/usr/include/c++/5/bits/stl_deque.h **** #endif
1336:/usr/include/c++/5/bits/stl_deque.h **** 
1337:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1338:/usr/include/c++/5/bits/stl_deque.h ****       /**  A non-binding request to reduce memory use.  */
1339:/usr/include/c++/5/bits/stl_deque.h ****       void
1340:/usr/include/c++/5/bits/stl_deque.h ****       shrink_to_fit() noexcept
1341:/usr/include/c++/5/bits/stl_deque.h ****       { _M_shrink_to_fit(); }
1342:/usr/include/c++/5/bits/stl_deque.h **** #endif
1343:/usr/include/c++/5/bits/stl_deque.h **** 
1344:/usr/include/c++/5/bits/stl_deque.h ****       /**
1345:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns true if the %deque is empty.  (Thus begin() would
1346:/usr/include/c++/5/bits/stl_deque.h ****        *  equal end().)
1347:/usr/include/c++/5/bits/stl_deque.h ****        */
1348:/usr/include/c++/5/bits/stl_deque.h ****       bool
1349:/usr/include/c++/5/bits/stl_deque.h ****       empty() const _GLIBCXX_NOEXCEPT
 4057              		.loc 3 1349 0
 4058              		.cfi_startproc
 4059 0000 55       		pushq	%rbp
 4060              		.cfi_def_cfa_offset 16
 4061              		.cfi_offset 6, -16
GAS LISTING /tmp/ccX8BQhk.s 			page 307


 4062 0001 4889E5   		movq	%rsp, %rbp
 4063              		.cfi_def_cfa_register 6
 4064 0004 4883EC10 		subq	$16, %rsp
 4065 0008 48897DF8 		movq	%rdi, -8(%rbp)
1350:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_finish == this->_M_impl._M_start; }
 4066              		.loc 3 1350 0
 4067 000c 488B45F8 		movq	-8(%rbp), %rax
 4068 0010 488D5010 		leaq	16(%rax), %rdx
 4069 0014 488B45F8 		movq	-8(%rbp), %rax
 4070 0018 4883C030 		addq	$48, %rax
 4071 001c 4889D6   		movq	%rdx, %rsi
 4072 001f 4889C7   		movq	%rax, %rdi
 4073 0022 E8000000 		call	_ZSteqIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_
 4073      00
 4074 0027 C9       		leave
 4075              		.cfi_def_cfa 7, 8
 4076 0028 C3       		ret
 4077              		.cfi_endproc
 4078              	.LFE10401:
 4080              		.section	.text._ZN5boost9algorithm6detail5eraseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 4081              		.weak	_ZN5boost9algorithm6detail5eraseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENT_8i
 4083              	_ZN5boost9algorithm6detail5eraseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENT_8iterator
 4084              	.LFB10402:
 4085              		.file 31 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** //  Boost string_algo library sequence.hpp header file  ---------------------------//
   2:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
   3:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** //  Copyright Pavol Droba 2002-2003.
   4:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** //
   5:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** // Distributed under the Boost Software License, Version 1.0.
   6:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** //    (See accompanying file LICENSE_1_0.txt or copy at
   7:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** //          http://www.boost.org/LICENSE_1_0.txt)
   8:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
   9:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** //  See http://www.boost.org/ for updates, documentation, and revision history.
  10:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
  11:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** #ifndef BOOST_STRING_DETAIL_SEQUENCE_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** #define BOOST_STRING_DETAIL_SEQUENCE_HPP
  13:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
  14:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** #include <boost/algorithm/string/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** #include <boost/mpl/bool.hpp>
  16:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** #include <boost/mpl/logical.hpp>
  17:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** #include <boost/range/begin.hpp>
  18:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** #include <boost/range/end.hpp>
  19:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
  20:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** #include <boost/algorithm/string/sequence_traits.hpp>
  21:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
  22:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** namespace boost {
  23:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****     namespace algorithm {
  24:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****         namespace detail {
  25:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
  26:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** //  insert helpers  -------------------------------------------------//
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****         
  28:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             template< typename InputT, typename ForwardIteratorT >
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             inline void insert(
  30:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 InputT& Input,
  31:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 BOOST_STRING_TYPENAME InputT::iterator At,
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 ForwardIteratorT Begin,
  33:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 ForwardIteratorT End )
GAS LISTING /tmp/ccX8BQhk.s 			page 308


  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             {
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 Input.insert( At, Begin, End );
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             }
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             template< typename InputT, typename InsertT >
  39:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             inline void insert(
  40:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 InputT& Input,
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 BOOST_STRING_TYPENAME InputT::iterator At,
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 const InsertT& Insert )
  43:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             {
  44:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 ::boost::algorithm::detail::insert( Input, At, ::boost::begin(Insert), ::boost::end
  45:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             }
  46:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****            
  47:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** //  erase helper  ---------------------------------------------------//
  48:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
  49:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             // Erase a range in the sequence
  50:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             /*
  51:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 Returns the iterator pointing just after the erase subrange
  52:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             */
  53:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             template< typename InputT >
  54:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             inline typename InputT::iterator erase(
 4086              		.loc 31 54 0
 4087              		.cfi_startproc
 4088 0000 55       		pushq	%rbp
 4089              		.cfi_def_cfa_offset 16
 4090              		.cfi_offset 6, -16
 4091 0001 4889E5   		movq	%rsp, %rbp
 4092              		.cfi_def_cfa_register 6
 4093 0004 4883EC40 		subq	$64, %rsp
 4094 0008 48897DD8 		movq	%rdi, -40(%rbp)
 4095 000c 488975D0 		movq	%rsi, -48(%rbp)
 4096 0010 488955C0 		movq	%rdx, -64(%rbp)
 4097              		.loc 31 54 0
 4098 0014 64488B04 		movq	%fs:40, %rax
 4098      25280000 
 4098      00
 4099 001d 488945F8 		movq	%rax, -8(%rbp)
 4100 0021 31C0     		xorl	%eax, %eax
  55:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 InputT& Input,
  56:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 BOOST_STRING_TYPENAME InputT::iterator From,
  57:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 BOOST_STRING_TYPENAME InputT::iterator To )
  58:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             {
  59:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 return Input.erase( From, To );
 4101              		.loc 31 59 0
 4102 0023 488D55C0 		leaq	-64(%rbp), %rdx
 4103 0027 488D45F0 		leaq	-16(%rbp), %rax
 4104 002b 4889D6   		movq	%rdx, %rsi
 4105 002e 4889C7   		movq	%rax, %rdi
 4106 0031 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1IP
 4106      00
 4107 0036 488D55D0 		leaq	-48(%rbp), %rdx
 4108 003a 488D45E0 		leaq	-32(%rbp), %rax
 4109 003e 4889D6   		movq	%rdx, %rsi
 4110 0041 4889C7   		movq	%rax, %rdi
 4111 0044 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1IP
 4111      00
 4112 0049 488B55F0 		movq	-16(%rbp), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 309


 4113 004d 488B4DE0 		movq	-32(%rbp), %rcx
 4114 0051 488B45D8 		movq	-40(%rbp), %rax
 4115 0055 4889CE   		movq	%rcx, %rsi
 4116 0058 4889C7   		movq	%rax, %rdi
 4117 005b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPK
 4117      00
  60:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             }
 4118              		.loc 31 60 0
 4119 0060 488B4DF8 		movq	-8(%rbp), %rcx
 4120 0064 6448330C 		xorq	%fs:40, %rcx
 4120      25280000 
 4120      00
 4121 006d 7405     		je	.L223
 4122 006f E8000000 		call	__stack_chk_fail
 4122      00
 4123              	.L223:
 4124 0074 C9       		leave
 4125              		.cfi_def_cfa 7, 8
 4126 0075 C3       		ret
 4127              		.cfi_endproc
 4128              	.LFE10402:
 4130              		.section	.text._ZNSt5dequeIcSaIcEE5beginEv,"axG",@progbits,_ZNSt5dequeIcSaIcEE5beginEv,comdat
 4131              		.align 2
 4132              		.weak	_ZNSt5dequeIcSaIcEE5beginEv
 4134              	_ZNSt5dequeIcSaIcEE5beginEv:
 4135              	.LFB10403:
1158:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_start; }
 4136              		.loc 3 1158 0
 4137              		.cfi_startproc
 4138 0000 55       		pushq	%rbp
 4139              		.cfi_def_cfa_offset 16
 4140              		.cfi_offset 6, -16
 4141 0001 4889E5   		movq	%rsp, %rbp
 4142              		.cfi_def_cfa_register 6
 4143 0004 4883EC10 		subq	$16, %rsp
 4144 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4145 000c 488975F0 		movq	%rsi, -16(%rbp)
1159:/usr/include/c++/5/bits/stl_deque.h **** 
 4146              		.loc 3 1159 0
 4147 0010 488B45F0 		movq	-16(%rbp), %rax
 4148 0014 488D5010 		leaq	16(%rax), %rdx
 4149 0018 488B45F8 		movq	-8(%rbp), %rax
 4150 001c 4889D6   		movq	%rdx, %rsi
 4151 001f 4889C7   		movq	%rax, %rdi
 4152 0022 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 4152      00
 4153 0027 488B45F8 		movq	-8(%rbp), %rax
 4154 002b C9       		leave
 4155              		.cfi_def_cfa 7, 8
 4156 002c C3       		ret
 4157              		.cfi_endproc
 4158              	.LFE10403:
 4160              		.section	.text._ZNSt5dequeIcSaIcEE3endEv,"axG",@progbits,_ZNSt5dequeIcSaIcEE3endEv,comdat
 4161              		.align 2
 4162              		.weak	_ZNSt5dequeIcSaIcEE3endEv
 4164              	_ZNSt5dequeIcSaIcEE3endEv:
 4165              	.LFB10404:
GAS LISTING /tmp/ccX8BQhk.s 			page 310


1175:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_finish; }
 4166              		.loc 3 1175 0
 4167              		.cfi_startproc
 4168 0000 55       		pushq	%rbp
 4169              		.cfi_def_cfa_offset 16
 4170              		.cfi_offset 6, -16
 4171 0001 4889E5   		movq	%rsp, %rbp
 4172              		.cfi_def_cfa_register 6
 4173 0004 4883EC10 		subq	$16, %rsp
 4174 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4175 000c 488975F0 		movq	%rsi, -16(%rbp)
1176:/usr/include/c++/5/bits/stl_deque.h **** 
 4176              		.loc 3 1176 0
 4177 0010 488B45F0 		movq	-16(%rbp), %rax
 4178 0014 488D5030 		leaq	48(%rax), %rdx
 4179 0018 488B45F8 		movq	-8(%rbp), %rax
 4180 001c 4889D6   		movq	%rdx, %rsi
 4181 001f 4889C7   		movq	%rax, %rdi
 4182 0022 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 4182      00
 4183 0027 488B45F8 		movq	-8(%rbp), %rax
 4184 002b C9       		leave
 4185              		.cfi_def_cfa 7, 8
 4186 002c C3       		ret
 4187              		.cfi_endproc
 4188              	.LFE10404:
 4190              		.section	.text._ZNSt15_Deque_iteratorIcRcPcEC2ERKS2_,"axG",@progbits,_ZNSt15_Deque_iteratorIcRcPcE
 4191              		.align 2
 4192              		.weak	_ZNSt15_Deque_iteratorIcRcPcEC2ERKS2_
 4194              	_ZNSt15_Deque_iteratorIcRcPcEC2ERKS2_:
 4195              	.LFB10406:
 149:/usr/include/c++/5/bits/stl_deque.h ****       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 4196              		.loc 3 149 0
 4197              		.cfi_startproc
 4198 0000 55       		pushq	%rbp
 4199              		.cfi_def_cfa_offset 16
 4200              		.cfi_offset 6, -16
 4201 0001 4889E5   		movq	%rsp, %rbp
 4202              		.cfi_def_cfa_register 6
 4203 0004 48897DF8 		movq	%rdi, -8(%rbp)
 4204 0008 488975F0 		movq	%rsi, -16(%rbp)
 4205              	.LBB24:
 151:/usr/include/c++/5/bits/stl_deque.h **** 
 4206              		.loc 3 151 0
 4207 000c 488B45F0 		movq	-16(%rbp), %rax
 4208 0010 488B10   		movq	(%rax), %rdx
 4209 0013 488B45F8 		movq	-8(%rbp), %rax
 4210 0017 488910   		movq	%rdx, (%rax)
 4211 001a 488B45F0 		movq	-16(%rbp), %rax
 4212 001e 488B5008 		movq	8(%rax), %rdx
 4213 0022 488B45F8 		movq	-8(%rbp), %rax
 4214 0026 48895008 		movq	%rdx, 8(%rax)
 4215 002a 488B45F0 		movq	-16(%rbp), %rax
 4216 002e 488B5010 		movq	16(%rax), %rdx
 4217 0032 488B45F8 		movq	-8(%rbp), %rax
 4218 0036 48895010 		movq	%rdx, 16(%rax)
 4219 003a 488B45F0 		movq	-16(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 311


 4220 003e 488B5018 		movq	24(%rax), %rdx
 4221 0042 488B45F8 		movq	-8(%rbp), %rax
 4222 0046 48895018 		movq	%rdx, 24(%rax)
 4223              	.LBE24:
 4224 004a 90       		nop
 4225 004b 5D       		popq	%rbp
 4226              		.cfi_def_cfa 7, 8
 4227 004c C3       		ret
 4228              		.cfi_endproc
 4229              	.LFE10406:
 4231              		.weak	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 4232              		.set	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_,_ZNSt15_Deque_iteratorIcRcPcEC2ERKS2_
 4233              		.section	.text._ZN5boost9algorithm6detail6insertINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 4234              		.weak	_ZN5boost9algorithm6detail6insertINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt15_D
 4236              	_ZN5boost9algorithm6detail6insertINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt15_Deque_it
 4237              	.LFB10408:
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 InputT& Input,
 4238              		.loc 31 29 0
 4239              		.cfi_startproc
 4240 0000 55       		pushq	%rbp
 4241              		.cfi_def_cfa_offset 16
 4242              		.cfi_offset 6, -16
 4243 0001 4889E5   		movq	%rsp, %rbp
 4244              		.cfi_def_cfa_register 6
 4245 0004 4883C480 		addq	$-128, %rsp
 4246 0008 48897D98 		movq	%rdi, -104(%rbp)
 4247 000c 48897590 		movq	%rsi, -112(%rbp)
 4248 0010 48895588 		movq	%rdx, -120(%rbp)
 4249 0014 48894D80 		movq	%rcx, -128(%rbp)
  29:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****                 InputT& Input,
 4250              		.loc 31 29 0
 4251 0018 64488B04 		movq	%fs:40, %rax
 4251      25280000 
 4251      00
 4252 0021 488945F8 		movq	%rax, -8(%rbp)
 4253 0025 31C0     		xorl	%eax, %eax
  35:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp ****             }
 4254              		.loc 31 35 0
 4255 0027 488B5580 		movq	-128(%rbp), %rdx
 4256 002b 488D45D0 		leaq	-48(%rbp), %rax
 4257 002f 4889D6   		movq	%rdx, %rsi
 4258 0032 4889C7   		movq	%rax, %rdi
 4259 0035 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 4259      00
 4260 003a 488B5588 		movq	-120(%rbp), %rdx
 4261 003e 488D45B0 		leaq	-80(%rbp), %rax
 4262 0042 4889D6   		movq	%rdx, %rsi
 4263 0045 4889C7   		movq	%rax, %rdi
 4264 0048 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 4264      00
 4265 004d 488D5590 		leaq	-112(%rbp), %rdx
 4266 0051 488D45A0 		leaq	-96(%rbp), %rax
 4267 0055 4889D6   		movq	%rdx, %rsi
 4268 0058 4889C7   		movq	%rax, %rdi
 4269 005b E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1IP
 4269      00
 4270 0060 488D4DD0 		leaq	-48(%rbp), %rcx
GAS LISTING /tmp/ccX8BQhk.s 			page 312


 4271 0064 488D55B0 		leaq	-80(%rbp), %rdx
 4272 0068 488B75A0 		movq	-96(%rbp), %rsi
 4273 006c 488B4598 		movq	-104(%rbp), %rax
 4274 0070 4889C7   		movq	%rax, %rdi
 4275 0073 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertISt15_Deque_iteratorIcRcPcEvEEN9_
 4275      00
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/sequence.hpp **** 
 4276              		.loc 31 36 0
 4277 0078 90       		nop
 4278 0079 488B45F8 		movq	-8(%rbp), %rax
 4279 007d 64483304 		xorq	%fs:40, %rax
 4279      25280000 
 4279      00
 4280 0086 7405     		je	.L230
 4281 0088 E8000000 		call	__stack_chk_fail
 4281      00
 4282              	.L230:
 4283 008d C9       		leave
 4284              		.cfi_def_cfa 7, 8
 4285 008e C3       		ret
 4286              		.cfi_endproc
 4287              	.LFE10408:
 4289              		.section	.text._ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_,"ax
 4290              		.weak	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
 4292              	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_:
 4293              	.LFB10411:
 4294              		.file 32 "/usr/include/c++/5/bits/stl_iterator_base_types.h"
   1:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Types used in iterator implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
   3:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_iterator_base_types.h **** //
   5:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  11:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  16:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  20:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  25:/usr/include/c++/5/bits/stl_iterator_base_types.h **** /*
  26:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  27:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  30:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
GAS LISTING /tmp/ccX8BQhk.s 			page 313


  31:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  38:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  39:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  42:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  */
  50:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  51:/usr/include/c++/5/bits/stl_iterator_base_types.h **** /** @file bits/stl_iterator_base_types.h
  52:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  55:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  This file contains all of the general iterator-related utility types,
  56:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  such as iterator_traits and struct iterator.
  57:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  */
  58:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  59:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #ifndef _STL_ITERATOR_BASE_TYPES_H
  60:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #define _STL_ITERATOR_BASE_TYPES_H 1
  61:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  62:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #pragma GCC system_header
  63:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  64:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #include <bits/c++config.h>
  65:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  66:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
  67:/usr/include/c++/5/bits/stl_iterator_base_types.h **** # include <type_traits>  // For __void_t, is_convertible
  68:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #endif
  69:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  70:/usr/include/c++/5/bits/stl_iterator_base_types.h **** namespace std _GLIBCXX_VISIBILITY(default)
  71:/usr/include/c++/5/bits/stl_iterator_base_types.h **** {
  72:/usr/include/c++/5/bits/stl_iterator_base_types.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  73:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  74:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
  75:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @defgroup iterators Iterators
  76:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  Abstractions for uniform iterating through various underlying types.
  77:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
  78:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@{ 
  79:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  80:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
  81:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @defgroup iterator_tags Iterator Tags
  82:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  These are empty types, used to distinguish different iterators.  The
  83:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  distinction is not made by what they contain, but simply by what they
  84:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  are.  Different underlying algorithms can then be used based on the
  85:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  different operations supported by different iterator types.
  86:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
  87:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@{ 
GAS LISTING /tmp/ccX8BQhk.s 			page 314


  88:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   ///  Marking input iterators.
  89:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct input_iterator_tag { };
  90:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  91:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   ///  Marking output iterators.
  92:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct output_iterator_tag { };
  93:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  94:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Forward iterators support a superset of input iterator operations.
  95:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct forward_iterator_tag : public input_iterator_tag { };
  96:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  97:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Bidirectional iterators support a superset of forward iterator
  98:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// operations.
  99:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct bidirectional_iterator_tag : public forward_iterator_tag { };
 100:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 101:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Random-access iterators support a superset of bidirectional
 102:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// iterator operations.
 103:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct random_access_iterator_tag : public bidirectional_iterator_tag { };
 104:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@}
 105:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 106:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 107:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @brief  Common %iterator class.
 108:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 109:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  %Iterator classes
 110:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  can inherit from this class to save some work.  The typedefs are then
 111:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  used in specializations and overloading.
 112:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 113:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  In particular, there are no default implementations of requirements
 114:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  such as @c operator++ and the like.  (How could there be?)
 115:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 116:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
 117:/usr/include/c++/5/bits/stl_iterator_base_types.h ****            typename _Pointer = _Tp*, typename _Reference = _Tp&>
 118:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator
 119:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 120:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// One of the @link iterator_tags tag types@endlink.
 121:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Category  iterator_category;
 122:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// The type "pointed to" by the iterator.
 123:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp        value_type;
 124:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// Distance between iterators is represented as this type.
 125:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Distance  difference_type;
 126:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// This type represents a pointer-to-value_type.
 127:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Pointer   pointer;
 128:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// This type represents a reference-to-value_type.
 129:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Reference reference;
 130:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 131:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 132:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 133:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @brief  Traits class for iterators.
 134:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 135:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  The general
 136:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  version simply @a forwards the nested typedefs from the Iterator
 137:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  argument.  Specialized versions for pointers and pointers-to-const
 138:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  provide tighter, more correct semantics.
 139:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 140:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // 2408. SFINAE-friendly common_type/iterator_traits is missing in C++14
 143:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator, typename = __void_t<>>
 144:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct __iterator_traits { };
GAS LISTING /tmp/ccX8BQhk.s 			page 315


 145:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 146:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 147:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct __iterator_traits<_Iterator,
 148:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 			     __void_t<typename _Iterator::iterator_category,
 149:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::value_type,
 150:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::difference_type,
 151:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::pointer,
 152:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::reference>>
 153:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 154:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 155:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 156:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 157:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 158:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 159:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 160:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 161:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 162:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits
 163:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     : public __iterator_traits<_Iterator> { };
 164:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #else
 165:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 166:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits
 167:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 168:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 169:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 170:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 171:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 172:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 173:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 174:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #endif
 175:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 176:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Partial specialization for pointer types.
 177:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 178:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits<_Tp*>
 179:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 180:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 181:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 182:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 183:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp*                        pointer;
 184:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp&                        reference;
 185:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 186:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 187:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Partial specialization for const pointer types.
 188:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 189:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits<const _Tp*>
 190:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 191:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 192:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 193:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 194:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef const _Tp*                  pointer;
 195:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef const _Tp&                  reference;
 196:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 197:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 198:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 199:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This function is not a part of the C++ standard but is syntactic
 200:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  sugar for internal library use only.
 201:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
GAS LISTING /tmp/ccX8BQhk.s 			page 316


 202:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iter>
 203:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     inline typename iterator_traits<_Iter>::iterator_category
 204:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     __iterator_category(const _Iter&)
 4295              		.loc 32 204 0
 4296              		.cfi_startproc
 4297 0000 55       		pushq	%rbp
 4298              		.cfi_def_cfa_offset 16
 4299              		.cfi_offset 6, -16
 4300 0001 4889E5   		movq	%rsp, %rbp
 4301              		.cfi_def_cfa_register 6
 4302 0004 48897DF8 		movq	%rdi, -8(%rbp)
 205:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     { return typename iterator_traits<_Iter>::iterator_category(); }
 4303              		.loc 32 205 0
 4304 0008 5D       		popq	%rbp
 4305              		.cfi_def_cfa 7, 8
 4306 0009 C3       		ret
 4307              		.cfi_endproc
 4308              	.LFE10411:
 4310              		.section	.text._ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_acc
 4311              		.weak	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_itera
 4313              	_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
 4314              	.LFB10412:
  90:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 4315              		.loc 28 90 0
 4316              		.cfi_startproc
 4317 0000 55       		pushq	%rbp
 4318              		.cfi_def_cfa_offset 16
 4319              		.cfi_offset 6, -16
 4320 0001 4889E5   		movq	%rsp, %rbp
 4321              		.cfi_def_cfa_register 6
 4322 0004 48897DF8 		movq	%rdi, -8(%rbp)
 4323 0008 488975F0 		movq	%rsi, -16(%rbp)
  96:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
 4324              		.loc 28 96 0
 4325 000c 488B55F0 		movq	-16(%rbp), %rdx
 4326 0010 488B45F8 		movq	-8(%rbp), %rax
 4327 0014 4829C2   		subq	%rax, %rdx
 4328 0017 4889D0   		movq	%rdx, %rax
  97:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
 4329              		.loc 28 97 0
 4330 001a 5D       		popq	%rbp
 4331              		.cfi_def_cfa 7, 8
 4332 001b C3       		ret
 4333              		.cfi_endproc
 4334              	.LFE10412:
 4336              		.section	.text._ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_all
 4337              		.align 2
 4338              		.weak	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv
 4340              	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv:
 4341              	.LFB10414:
 111:/usr/include/c++/5/ext/new_allocator.h **** 
 112:/usr/include/c++/5/ext/new_allocator.h ****       size_type
 113:/usr/include/c++/5/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 4342              		.loc 27 113 0
 4343              		.cfi_startproc
 4344 0000 55       		pushq	%rbp
 4345              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccX8BQhk.s 			page 317


 4346              		.cfi_offset 6, -16
 4347 0001 4889E5   		movq	%rsp, %rbp
 4348              		.cfi_def_cfa_register 6
 4349 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 4350              		.loc 27 114 0
 4351 0008 48C7C0FF 		movq	$-1, %rax
 4351      FFFFFF
 4352 000f 5D       		popq	%rbp
 4353              		.cfi_def_cfa 7, 8
 4354 0010 C3       		ret
 4355              		.cfi_endproc
 4356              	.LFE10414:
 4358              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirection
 4359              		.align 2
 4360              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traver
 4362              	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traversal_tag
 4363              	.LFB10432:
 311:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : base_type(first, last)
 4364              		.loc 23 311 0
 4365              		.cfi_startproc
 4366 0000 55       		pushq	%rbp
 4367              		.cfi_def_cfa_offset 16
 4368              		.cfi_offset 6, -16
 4369 0001 4889E5   		movq	%rsp, %rbp
 4370              		.cfi_def_cfa_register 6
 4371 0004 4883EC20 		subq	$32, %rsp
 4372 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4373 000c 488975F0 		movq	%rsi, -16(%rbp)
 4374 0010 488955E8 		movq	%rdx, -24(%rbp)
 4375              	.LBB25:
 312:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 4376              		.loc 23 312 0
 4377 0014 488B45F8 		movq	-8(%rbp), %rax
 4378 0018 488B55E8 		movq	-24(%rbp), %rdx
 4379 001c 488B4DF0 		movq	-16(%rbp), %rcx
 4380 0020 4889CE   		movq	%rcx, %rsi
 4381 0023 4889C7   		movq	%rax, %rdi
 4382 0026 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_travers
 4382      00
 4383              	.LBE25:
 314:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 4384              		.loc 23 314 0
 4385 002b 90       		nop
 4386 002c C9       		leave
 4387              		.cfi_def_cfa 7, 8
 4388 002d C3       		ret
 4389              		.cfi_endproc
 4390              	.LFE10432:
 4392              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traver
 4393              		.set	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_travers
 4394              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterato
 4395              		.align 2
 4396              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7
 4398              	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx11
 4399              	.LFB10435:
 380:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : base_type(first, last)
GAS LISTING /tmp/ccX8BQhk.s 			page 318


 4400              		.loc 23 380 0
 4401              		.cfi_startproc
 4402 0000 55       		pushq	%rbp
 4403              		.cfi_def_cfa_offset 16
 4404              		.cfi_offset 6, -16
 4405 0001 4889E5   		movq	%rsp, %rbp
 4406              		.cfi_def_cfa_register 6
 4407 0004 4883EC20 		subq	$32, %rsp
 4408 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4409 000c 488975F0 		movq	%rsi, -16(%rbp)
 4410 0010 488955E0 		movq	%rdx, -32(%rbp)
 4411              	.LBB26:
 381:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 4412              		.loc 23 381 0
 4413 0014 488B45F8 		movq	-8(%rbp), %rax
 4414 0018 488B55E0 		movq	-32(%rbp), %rdx
 4415 001c 488B4DF0 		movq	-16(%rbp), %rcx
 4416 0020 4889CE   		movq	%rcx, %rsi
 4417 0023 4889C7   		movq	%rax, %rdi
 4418 0026 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7_
 4418      00
 4419              	.LBE26:
 383:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 4420              		.loc 23 383 0
 4421 002b 90       		nop
 4422 002c C9       		leave
 4423              		.cfi_def_cfa 7, 8
 4424 002d C3       		ret
 4425              		.cfi_endproc
 4426              	.LFE10435:
 4428              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7
 4429              		.set	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7_
 4430              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterato
 4431              		.align 2
 4432              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 4434              	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx111
 4435              	.LFB10438:
 311:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : base_type(first, last)
 4436              		.loc 23 311 0
 4437              		.cfi_startproc
 4438 0000 55       		pushq	%rbp
 4439              		.cfi_def_cfa_offset 16
 4440              		.cfi_offset 6, -16
 4441 0001 4889E5   		movq	%rsp, %rbp
 4442              		.cfi_def_cfa_register 6
 4443 0004 4883EC20 		subq	$32, %rsp
 4444 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4445 000c 488975F0 		movq	%rsi, -16(%rbp)
 4446 0010 488955E0 		movq	%rdx, -32(%rbp)
 4447              	.LBB27:
 312:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 4448              		.loc 23 312 0
 4449 0014 488B45F8 		movq	-8(%rbp), %rax
 4450 0018 488B55E0 		movq	-32(%rbp), %rdx
 4451 001c 488B4DF0 		movq	-16(%rbp), %rcx
 4452 0020 4889CE   		movq	%rcx, %rsi
 4453 0023 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 319


 4454 0026 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 4454      00
 4455              	.LBE27:
 314:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 4456              		.loc 23 314 0
 4457 002b 90       		nop
 4458 002c C9       		leave
 4459              		.cfi_def_cfa 7, 8
 4460 002d C3       		ret
 4461              		.cfi_endproc
 4462              	.LFE10438:
 4464              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 4465              		.set	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 4466              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iterato
 4467              		.weak	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7
 4469              	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx11
 4470              	.LFB10440:
  67:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 4471              		.loc 23 67 0
 4472              		.cfi_startproc
 4473 0000 55       		pushq	%rbp
 4474              		.cfi_def_cfa_offset 16
 4475              		.cfi_offset 6, -16
 4476 0001 4889E5   		movq	%rsp, %rbp
 4477              		.cfi_def_cfa_register 6
 4478 0004 4883EC30 		subq	$48, %rsp
 4479 0008 48897DD8 		movq	%rdi, -40(%rbp)
  67:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 4480              		.loc 23 67 0
 4481 000c 64488B04 		movq	%fs:40, %rax
 4481      25280000 
 4481      00
 4482 0015 488945F8 		movq	%rax, -8(%rbp)
 4483 0019 31C0     		xorl	%eax, %eax
  69:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 4484              		.loc 23 69 0
 4485 001b 488B45D8 		movq	-40(%rbp), %rax
 4486 001f 4889C7   		movq	%rax, %rdi
 4487 0022 E8000000 		call	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 4487      00
 4488 0027 488945E0 		movq	%rax, -32(%rbp)
 4489 002b 488D55E0 		leaq	-32(%rbp), %rdx
 4490 002f 488D45F0 		leaq	-16(%rbp), %rax
 4491 0033 4889D6   		movq	%rdx, %rsi
 4492 0036 4889C7   		movq	%rax, %rdi
 4493 0039 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1IP
 4493      00
 4494 003e 488B45F0 		movq	-16(%rbp), %rax
  70:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 4495              		.loc 23 70 0
 4496 0042 488B4DF8 		movq	-8(%rbp), %rcx
 4497 0046 6448330C 		xorq	%fs:40, %rcx
 4497      25280000 
 4497      00
 4498 004f 7405     		je	.L242
 4499 0051 E8000000 		call	__stack_chk_fail
 4499      00
GAS LISTING /tmp/ccX8BQhk.s 			page 320


 4500              	.L242:
 4501 0056 C9       		leave
 4502              		.cfi_def_cfa 7, 8
 4503 0057 C3       		ret
 4504              		.cfi_endproc
 4505              	.LFE10440:
 4507              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iterato
 4508              		.weak	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7
 4510              	_ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx11
 4511              	.LFB10441:
  73:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 4512              		.loc 23 73 0
 4513              		.cfi_startproc
 4514 0000 55       		pushq	%rbp
 4515              		.cfi_def_cfa_offset 16
 4516              		.cfi_offset 6, -16
 4517 0001 4889E5   		movq	%rsp, %rbp
 4518              		.cfi_def_cfa_register 6
 4519 0004 4883EC30 		subq	$48, %rsp
 4520 0008 48897DD8 		movq	%rdi, -40(%rbp)
  73:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 4521              		.loc 23 73 0
 4522 000c 64488B04 		movq	%fs:40, %rax
 4522      25280000 
 4522      00
 4523 0015 488945F8 		movq	%rax, -8(%rbp)
 4524 0019 31C0     		xorl	%eax, %eax
  75:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 4525              		.loc 23 75 0
 4526 001b 488B45D8 		movq	-40(%rbp), %rax
 4527 001f 4889C7   		movq	%rax, %rdi
 4528 0022 E8000000 		call	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__c
 4528      00
 4529 0027 488945E0 		movq	%rax, -32(%rbp)
 4530 002b 488D55E0 		leaq	-32(%rbp), %rdx
 4531 002f 488D45F0 		leaq	-16(%rbp), %rax
 4532 0033 4889D6   		movq	%rdx, %rsi
 4533 0036 4889C7   		movq	%rax, %rdi
 4534 0039 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1IP
 4534      00
 4535 003e 488B45F0 		movq	-16(%rbp), %rax
  76:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         };
 4536              		.loc 23 76 0
 4537 0042 488B4DF8 		movq	-8(%rbp), %rcx
 4538 0046 6448330C 		xorq	%fs:40, %rcx
 4538      25280000 
 4538      00
 4539 004f 7405     		je	.L245
 4540 0051 E8000000 		call	__stack_chk_fail
 4540      00
 4541              	.L245:
 4542 0056 C9       		leave
 4543              		.cfi_def_cfa 7, 8
 4544 0057 C3       		ret
 4545              		.cfi_endproc
 4546              	.LFE10441:
 4548              		.section	.text._ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__
GAS LISTING /tmp/ccX8BQhk.s 			page 321


 4549              		.weak	_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_it
 4551              	_ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorI
 4552              	.LFB10442:
 827:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 4553              		.loc 13 827 0
 4554              		.cfi_startproc
 4555 0000 55       		pushq	%rbp
 4556              		.cfi_def_cfa_offset 16
 4557              		.cfi_offset 6, -16
 4558 0001 4889E5   		movq	%rsp, %rbp
 4559              		.cfi_def_cfa_register 6
 4560 0004 53       		pushq	%rbx
 4561 0005 4883EC18 		subq	$24, %rsp
 4562              		.cfi_offset 3, -24
 4563 0009 48897DE8 		movq	%rdi, -24(%rbp)
 4564 000d 488975E0 		movq	%rsi, -32(%rbp)
 830:/usr/include/c++/5/bits/stl_iterator.h **** 
 4565              		.loc 13 830 0
 4566 0011 488B45E8 		movq	-24(%rbp), %rax
 4567 0015 4889C7   		movq	%rax, %rdi
 4568 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4ba
 4568      00
 4569 001d 488B18   		movq	(%rax), %rbx
 4570 0020 488B45E0 		movq	-32(%rbp), %rax
 4571 0024 4889C7   		movq	%rax, %rdi
 4572 0027 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4ba
 4572      00
 4573 002c 488B00   		movq	(%rax), %rax
 4574 002f 4839C3   		cmpq	%rax, %rbx
 4575 0032 0F94C0   		sete	%al
 4576 0035 4883C418 		addq	$24, %rsp
 4577 0039 5B       		popq	%rbx
 4578 003a 5D       		popq	%rbp
 4579              		.cfi_def_cfa 7, 8
 4580 003b C3       		ret
 4581              		.cfi_endproc
 4582              	.LFE10442:
 4584              		.section	.text._ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iterat
 4585              		.weak	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7
 4587              	_ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx11
 4588              	.LFB10443:
  97:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** {
 4589              		.loc 19 97 0
 4590              		.cfi_startproc
 4591 0000 55       		pushq	%rbp
 4592              		.cfi_def_cfa_offset 16
 4593              		.cfi_offset 6, -16
 4594 0001 4889E5   		movq	%rsp, %rbp
 4595              		.cfi_def_cfa_register 6
 4596 0004 4883EC10 		subq	$16, %rsp
 4597 0008 48897DF8 		movq	%rdi, -8(%rbp)
 102:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** }
 4598              		.loc 19 102 0
 4599 000c 488B45F8 		movq	-8(%rbp), %rax
 4600 0010 4889C7   		movq	%rax, %rdi
 4601 0013 E8000000 		call	_ZN5boost12range_detail11range_beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt
 4601      00
GAS LISTING /tmp/ccX8BQhk.s 			page 322


 103:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
 4602              		.loc 19 103 0
 4603 0018 C9       		leave
 4604              		.cfi_def_cfa 7, 8
 4605 0019 C3       		ret
 4606              		.cfi_endproc
 4607              	.LFE10443:
 4609              		.section	.text._ZN5boost17range_adl_barrier3endINS_14iterator_rangeIN9__gnu_cxx17__normal_iterator
 4610              		.weak	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 4612              	_ZN5boost17range_adl_barrier3endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112
 4613              	.LFB10444:
  91:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** {
 4614              		.loc 20 91 0
 4615              		.cfi_startproc
 4616 0000 55       		pushq	%rbp
 4617              		.cfi_def_cfa_offset 16
 4618              		.cfi_offset 6, -16
 4619 0001 4889E5   		movq	%rsp, %rbp
 4620              		.cfi_def_cfa_register 6
 4621 0004 4883EC10 		subq	$16, %rsp
 4622 0008 48897DF8 		movq	%rdi, -8(%rbp)
  96:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** }
 4623              		.loc 20 96 0
 4624 000c 488B45F8 		movq	-8(%rbp), %rax
 4625 0010 4889C7   		movq	%rax, %rdi
 4626 0013 E8000000 		call	_ZN5boost12range_detail9range_endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 4626      00
  97:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
 4627              		.loc 20 97 0
 4628 0018 C9       		leave
 4629              		.cfi_def_cfa 7, 8
 4630 0019 C3       		ret
 4631              		.cfi_endproc
 4632              	.LFE10444:
 4634              		.section	.text._ZNSt11_Deque_baseIcSaIcEE11_Deque_implD2Ev,"axG",@progbits,_ZNSt11_Deque_baseIcSaI
 4635              		.align 2
 4636              		.weak	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implD2Ev
 4638              	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implD2Ev:
 4639              	.LFB10447:
 548:/usr/include/c++/5/bits/stl_deque.h ****       : public _Tp_alloc_type
 4640              		.loc 3 548 0
 4641              		.cfi_startproc
 4642 0000 55       		pushq	%rbp
 4643              		.cfi_def_cfa_offset 16
 4644              		.cfi_offset 6, -16
 4645 0001 4889E5   		movq	%rsp, %rbp
 4646              		.cfi_def_cfa_register 6
 4647 0004 4883EC10 		subq	$16, %rsp
 4648 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4649              	.LBB28:
 548:/usr/include/c++/5/bits/stl_deque.h ****       : public _Tp_alloc_type
 4650              		.loc 3 548 0
 4651 000c 488B45F8 		movq	-8(%rbp), %rax
 4652 0010 4889C7   		movq	%rax, %rdi
 4653 0013 E8000000 		call	_ZNSaIcED2Ev
 4653      00
 4654              	.LBE28:
GAS LISTING /tmp/ccX8BQhk.s 			page 323


 4655 0018 90       		nop
 4656 0019 C9       		leave
 4657              		.cfi_def_cfa 7, 8
 4658 001a C3       		ret
 4659              		.cfi_endproc
 4660              	.LFE10447:
 4662              		.weak	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implD1Ev
 4663              		.set	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implD1Ev,_ZNSt11_Deque_baseIcSaIcEE11_Deque_implD2Ev
 4664              		.section	.text._ZNSt11_Deque_baseIcSaIcEEC2Ev,"axG",@progbits,_ZNSt11_Deque_baseIcSaIcEEC5Ev,comda
 4665              		.align 2
 4666              		.weak	_ZNSt11_Deque_baseIcSaIcEEC2Ev
 4668              	_ZNSt11_Deque_baseIcSaIcEEC2Ev:
 4669              	.LFB10449:
 488:/usr/include/c++/5/bits/stl_deque.h ****       : _M_impl()
 4670              		.loc 3 488 0
 4671              		.cfi_startproc
 4672              		.cfi_personality 0x3,__gxx_personality_v0
 4673              		.cfi_lsda 0x3,.LLSDA10449
 4674 0000 55       		pushq	%rbp
 4675              		.cfi_def_cfa_offset 16
 4676              		.cfi_offset 6, -16
 4677 0001 4889E5   		movq	%rsp, %rbp
 4678              		.cfi_def_cfa_register 6
 4679 0004 53       		pushq	%rbx
 4680 0005 4883EC18 		subq	$24, %rsp
 4681              		.cfi_offset 3, -24
 4682 0009 48897DE8 		movq	%rdi, -24(%rbp)
 4683              	.LBB29:
 489:/usr/include/c++/5/bits/stl_deque.h ****       { _M_initialize_map(0); }
 4684              		.loc 3 489 0
 4685 000d 488B45E8 		movq	-24(%rbp), %rax
 4686 0011 4889C7   		movq	%rax, %rdi
 4687 0014 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implC1Ev
 4687      00
 490:/usr/include/c++/5/bits/stl_deque.h **** 
 4688              		.loc 3 490 0
 4689 0019 488B45E8 		movq	-24(%rbp), %rax
 4690 001d BE000000 		movl	$0, %esi
 4690      00
 4691 0022 4889C7   		movq	%rax, %rdi
 4692              	.LEHB26:
 4693 0025 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEm
 4693      00
 4694              	.LEHE26:
 4695              	.LBE29:
 4696 002a EB1A     		jmp	.L256
 4697              	.L255:
 4698 002c 4889C3   		movq	%rax, %rbx
 4699              	.LBB30:
 489:/usr/include/c++/5/bits/stl_deque.h ****       { _M_initialize_map(0); }
 4700              		.loc 3 489 0
 4701 002f 488B45E8 		movq	-24(%rbp), %rax
 4702 0033 4889C7   		movq	%rax, %rdi
 4703 0036 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implD1Ev
 4703      00
 4704 003b 4889D8   		movq	%rbx, %rax
 4705 003e 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 324


 4706              	.LEHB27:
 4707 0041 E8000000 		call	_Unwind_Resume
 4707      00
 4708              	.LEHE27:
 4709              	.L256:
 4710              	.LBE30:
 490:/usr/include/c++/5/bits/stl_deque.h **** 
 4711              		.loc 3 490 0
 4712 0046 4883C418 		addq	$24, %rsp
 4713 004a 5B       		popq	%rbx
 4714 004b 5D       		popq	%rbp
 4715              		.cfi_def_cfa 7, 8
 4716 004c C3       		ret
 4717              		.cfi_endproc
 4718              	.LFE10449:
 4719              		.section	.gcc_except_table
 4720              	.LLSDA10449:
 4721 0092 FF       		.byte	0xff
 4722 0093 FF       		.byte	0xff
 4723 0094 01       		.byte	0x1
 4724 0095 08       		.uleb128 .LLSDACSE10449-.LLSDACSB10449
 4725              	.LLSDACSB10449:
 4726 0096 25       		.uleb128 .LEHB26-.LFB10449
 4727 0097 05       		.uleb128 .LEHE26-.LEHB26
 4728 0098 2C       		.uleb128 .L255-.LFB10449
 4729 0099 00       		.uleb128 0
 4730 009a 41       		.uleb128 .LEHB27-.LFB10449
 4731 009b 05       		.uleb128 .LEHE27-.LEHB27
 4732 009c 00       		.uleb128 0
 4733 009d 00       		.uleb128 0
 4734              	.LLSDACSE10449:
 4735              		.section	.text._ZNSt11_Deque_baseIcSaIcEEC2Ev,"axG",@progbits,_ZNSt11_Deque_baseIcSaIcEEC5Ev,comda
 4737              		.weak	_ZNSt11_Deque_baseIcSaIcEEC1Ev
 4738              		.set	_ZNSt11_Deque_baseIcSaIcEEC1Ev,_ZNSt11_Deque_baseIcSaIcEEC2Ev
 4739              		.section	.text._ZNSt11_Deque_baseIcSaIcEED2Ev,"axG",@progbits,_ZNSt11_Deque_baseIcSaIcEED5Ev,comda
 4740              		.align 2
 4741              		.weak	_ZNSt11_Deque_baseIcSaIcEED2Ev
 4743              	_ZNSt11_Deque_baseIcSaIcEED2Ev:
 4744              	.LFB10452:
 659:/usr/include/c++/5/bits/stl_deque.h ****     ~_Deque_base() _GLIBCXX_NOEXCEPT
 4745              		.loc 3 659 0
 4746              		.cfi_startproc
 4747 0000 55       		pushq	%rbp
 4748              		.cfi_def_cfa_offset 16
 4749              		.cfi_offset 6, -16
 4750 0001 4889E5   		movq	%rsp, %rbp
 4751              		.cfi_def_cfa_register 6
 4752 0004 4883EC10 		subq	$16, %rsp
 4753 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4754              	.LBB31:
 662:/usr/include/c++/5/bits/stl_deque.h **** 	{
 4755              		.loc 3 662 0
 4756 000c 488B45F8 		movq	-8(%rbp), %rax
 4757 0010 488B00   		movq	(%rax), %rax
 4758 0013 4885C0   		testq	%rax, %rax
 4759 0016 7441     		je	.L258
 665:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
GAS LISTING /tmp/ccX8BQhk.s 			page 325


 4760              		.loc 3 665 0
 4761 0018 488B45F8 		movq	-8(%rbp), %rax
 4762 001c 488B4048 		movq	72(%rax), %rax
 664:/usr/include/c++/5/bits/stl_deque.h **** 			   this->_M_impl._M_finish._M_node + 1);
 4763              		.loc 3 664 0
 4764 0020 488D5008 		leaq	8(%rax), %rdx
 4765 0024 488B45F8 		movq	-8(%rbp), %rax
 4766 0028 488B4828 		movq	40(%rax), %rcx
 4767 002c 488B45F8 		movq	-8(%rbp), %rax
 4768 0030 4889CE   		movq	%rcx, %rsi
 4769 0033 4889C7   		movq	%rax, %rdi
 4770 0036 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_
 4770      00
 666:/usr/include/c++/5/bits/stl_deque.h **** 	}
 4771              		.loc 3 666 0
 4772 003b 488B45F8 		movq	-8(%rbp), %rax
 4773 003f 488B5008 		movq	8(%rax), %rdx
 4774 0043 488B45F8 		movq	-8(%rbp), %rax
 4775 0047 488B08   		movq	(%rax), %rcx
 4776 004a 488B45F8 		movq	-8(%rbp), %rax
 4777 004e 4889CE   		movq	%rcx, %rsi
 4778 0051 4889C7   		movq	%rax, %rdi
 4779 0054 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE17_M_deallocate_mapEPPcm
 4779      00
 4780              	.L258:
 668:/usr/include/c++/5/bits/stl_deque.h **** 
 4781              		.loc 3 668 0
 4782 0059 488B45F8 		movq	-8(%rbp), %rax
 4783 005d 4889C7   		movq	%rax, %rdi
 4784 0060 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implD1Ev
 4784      00
 4785              	.LBE31:
 4786 0065 90       		nop
 4787 0066 C9       		leave
 4788              		.cfi_def_cfa 7, 8
 4789 0067 C3       		ret
 4790              		.cfi_endproc
 4791              	.LFE10452:
 4793              		.weak	_ZNSt11_Deque_baseIcSaIcEED1Ev
 4794              		.set	_ZNSt11_Deque_baseIcSaIcEED1Ev,_ZNSt11_Deque_baseIcSaIcEED2Ev
 4795              		.section	.text._ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNSt11_Deque_bas
 4796              		.align 2
 4797              		.weak	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 4799              	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv:
 4800              	.LFB10454:
 586:/usr/include/c++/5/bits/stl_deque.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 4801              		.loc 3 586 0
 4802              		.cfi_startproc
 4803 0000 55       		pushq	%rbp
 4804              		.cfi_def_cfa_offset 16
 4805              		.cfi_offset 6, -16
 4806 0001 4889E5   		movq	%rsp, %rbp
 4807              		.cfi_def_cfa_register 6
 4808 0004 48897DF8 		movq	%rdi, -8(%rbp)
 587:/usr/include/c++/5/bits/stl_deque.h **** 
 4809              		.loc 3 587 0
 4810 0008 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 326


 4811 000c 5D       		popq	%rbp
 4812              		.cfi_def_cfa 7, 8
 4813 000d C3       		ret
 4814              		.cfi_endproc
 4815              	.LFE10454:
 4817              		.section	.text._ZNSt5dequeIcSaIcEE15_M_destroy_dataESt15_Deque_iteratorIcRcPcES5_RKS0_,"axG",@prog
 4818              		.align 2
 4819              		.weak	_ZNSt5dequeIcSaIcEE15_M_destroy_dataESt15_Deque_iteratorIcRcPcES5_RKS0_
 4821              	_ZNSt5dequeIcSaIcEE15_M_destroy_dataESt15_Deque_iteratorIcRcPcES5_RKS0_:
 4822              	.LFB10455:
1351:/usr/include/c++/5/bits/stl_deque.h **** 
1352:/usr/include/c++/5/bits/stl_deque.h ****       // element access
1353:/usr/include/c++/5/bits/stl_deque.h ****       /**
1354:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief Subscript access to the data contained in the %deque.
1355:/usr/include/c++/5/bits/stl_deque.h ****        *  @param __n The index of the element for which data should be
1356:/usr/include/c++/5/bits/stl_deque.h ****        *  accessed.
1357:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  Read/write reference to data.
1358:/usr/include/c++/5/bits/stl_deque.h ****        *
1359:/usr/include/c++/5/bits/stl_deque.h ****        *  This operator allows for easy, array-style, data access.
1360:/usr/include/c++/5/bits/stl_deque.h ****        *  Note that data access with this operator is unchecked and
1361:/usr/include/c++/5/bits/stl_deque.h ****        *  out_of_range lookups are not defined. (For checked lookups
1362:/usr/include/c++/5/bits/stl_deque.h ****        *  see at().)
1363:/usr/include/c++/5/bits/stl_deque.h ****        */
1364:/usr/include/c++/5/bits/stl_deque.h ****       reference
1365:/usr/include/c++/5/bits/stl_deque.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1366:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_start[difference_type(__n)]; }
1367:/usr/include/c++/5/bits/stl_deque.h **** 
1368:/usr/include/c++/5/bits/stl_deque.h ****       /**
1369:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief Subscript access to the data contained in the %deque.
1370:/usr/include/c++/5/bits/stl_deque.h ****        *  @param __n The index of the element for which data should be
1371:/usr/include/c++/5/bits/stl_deque.h ****        *  accessed.
1372:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  Read-only (constant) reference to data.
1373:/usr/include/c++/5/bits/stl_deque.h ****        *
1374:/usr/include/c++/5/bits/stl_deque.h ****        *  This operator allows for easy, array-style, data access.
1375:/usr/include/c++/5/bits/stl_deque.h ****        *  Note that data access with this operator is unchecked and
1376:/usr/include/c++/5/bits/stl_deque.h ****        *  out_of_range lookups are not defined. (For checked lookups
1377:/usr/include/c++/5/bits/stl_deque.h ****        *  see at().)
1378:/usr/include/c++/5/bits/stl_deque.h ****        */
1379:/usr/include/c++/5/bits/stl_deque.h ****       const_reference
1380:/usr/include/c++/5/bits/stl_deque.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1381:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_start[difference_type(__n)]; }
1382:/usr/include/c++/5/bits/stl_deque.h **** 
1383:/usr/include/c++/5/bits/stl_deque.h ****     protected:
1384:/usr/include/c++/5/bits/stl_deque.h ****       /// Safety check used only from at().
1385:/usr/include/c++/5/bits/stl_deque.h ****       void
1386:/usr/include/c++/5/bits/stl_deque.h ****       _M_range_check(size_type __n) const
1387:/usr/include/c++/5/bits/stl_deque.h ****       {
1388:/usr/include/c++/5/bits/stl_deque.h **** 	if (__n >= this->size())
1389:/usr/include/c++/5/bits/stl_deque.h **** 	  __throw_out_of_range_fmt(__N("deque::_M_range_check: __n "
1390:/usr/include/c++/5/bits/stl_deque.h **** 				       "(which is %zu)>= this->size() "
1391:/usr/include/c++/5/bits/stl_deque.h **** 				       "(which is %zu)"),
1392:/usr/include/c++/5/bits/stl_deque.h **** 				   __n, this->size());
1393:/usr/include/c++/5/bits/stl_deque.h ****       }
1394:/usr/include/c++/5/bits/stl_deque.h **** 
1395:/usr/include/c++/5/bits/stl_deque.h ****     public:
1396:/usr/include/c++/5/bits/stl_deque.h ****       /**
1397:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Provides access to the data contained in the %deque.
GAS LISTING /tmp/ccX8BQhk.s 			page 327


1398:/usr/include/c++/5/bits/stl_deque.h ****        *  @param __n The index of the element for which data should be
1399:/usr/include/c++/5/bits/stl_deque.h ****        *  accessed.
1400:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  Read/write reference to data.
1401:/usr/include/c++/5/bits/stl_deque.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1402:/usr/include/c++/5/bits/stl_deque.h ****        *
1403:/usr/include/c++/5/bits/stl_deque.h ****        *  This function provides for safer data access.  The parameter
1404:/usr/include/c++/5/bits/stl_deque.h ****        *  is first checked that it is in the range of the deque.  The
1405:/usr/include/c++/5/bits/stl_deque.h ****        *  function throws out_of_range if the check fails.
1406:/usr/include/c++/5/bits/stl_deque.h ****        */
1407:/usr/include/c++/5/bits/stl_deque.h ****       reference
1408:/usr/include/c++/5/bits/stl_deque.h ****       at(size_type __n)
1409:/usr/include/c++/5/bits/stl_deque.h ****       {
1410:/usr/include/c++/5/bits/stl_deque.h **** 	_M_range_check(__n);
1411:/usr/include/c++/5/bits/stl_deque.h **** 	return (*this)[__n];
1412:/usr/include/c++/5/bits/stl_deque.h ****       }
1413:/usr/include/c++/5/bits/stl_deque.h **** 
1414:/usr/include/c++/5/bits/stl_deque.h ****       /**
1415:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Provides access to the data contained in the %deque.
1416:/usr/include/c++/5/bits/stl_deque.h ****        *  @param __n The index of the element for which data should be
1417:/usr/include/c++/5/bits/stl_deque.h ****        *  accessed.
1418:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  Read-only (constant) reference to data.
1419:/usr/include/c++/5/bits/stl_deque.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1420:/usr/include/c++/5/bits/stl_deque.h ****        *
1421:/usr/include/c++/5/bits/stl_deque.h ****        *  This function provides for safer data access.  The parameter is first
1422:/usr/include/c++/5/bits/stl_deque.h ****        *  checked that it is in the range of the deque.  The function throws
1423:/usr/include/c++/5/bits/stl_deque.h ****        *  out_of_range if the check fails.
1424:/usr/include/c++/5/bits/stl_deque.h ****        */
1425:/usr/include/c++/5/bits/stl_deque.h ****       const_reference
1426:/usr/include/c++/5/bits/stl_deque.h ****       at(size_type __n) const
1427:/usr/include/c++/5/bits/stl_deque.h ****       {
1428:/usr/include/c++/5/bits/stl_deque.h **** 	_M_range_check(__n);
1429:/usr/include/c++/5/bits/stl_deque.h **** 	return (*this)[__n];
1430:/usr/include/c++/5/bits/stl_deque.h ****       }
1431:/usr/include/c++/5/bits/stl_deque.h **** 
1432:/usr/include/c++/5/bits/stl_deque.h ****       /**
1433:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read/write reference to the data at the first
1434:/usr/include/c++/5/bits/stl_deque.h ****        *  element of the %deque.
1435:/usr/include/c++/5/bits/stl_deque.h ****        */
1436:/usr/include/c++/5/bits/stl_deque.h ****       reference
1437:/usr/include/c++/5/bits/stl_deque.h ****       front() _GLIBCXX_NOEXCEPT
1438:/usr/include/c++/5/bits/stl_deque.h ****       { return *begin(); }
1439:/usr/include/c++/5/bits/stl_deque.h **** 
1440:/usr/include/c++/5/bits/stl_deque.h ****       /**
1441:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) reference to the data at the first
1442:/usr/include/c++/5/bits/stl_deque.h ****        *  element of the %deque.
1443:/usr/include/c++/5/bits/stl_deque.h ****        */
1444:/usr/include/c++/5/bits/stl_deque.h ****       const_reference
1445:/usr/include/c++/5/bits/stl_deque.h ****       front() const _GLIBCXX_NOEXCEPT
1446:/usr/include/c++/5/bits/stl_deque.h ****       { return *begin(); }
1447:/usr/include/c++/5/bits/stl_deque.h **** 
1448:/usr/include/c++/5/bits/stl_deque.h ****       /**
1449:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read/write reference to the data at the last element of the
1450:/usr/include/c++/5/bits/stl_deque.h ****        *  %deque.
1451:/usr/include/c++/5/bits/stl_deque.h ****        */
1452:/usr/include/c++/5/bits/stl_deque.h ****       reference
1453:/usr/include/c++/5/bits/stl_deque.h ****       back() _GLIBCXX_NOEXCEPT
1454:/usr/include/c++/5/bits/stl_deque.h ****       {
GAS LISTING /tmp/ccX8BQhk.s 			page 328


1455:/usr/include/c++/5/bits/stl_deque.h **** 	iterator __tmp = end();
1456:/usr/include/c++/5/bits/stl_deque.h **** 	--__tmp;
1457:/usr/include/c++/5/bits/stl_deque.h **** 	return *__tmp;
1458:/usr/include/c++/5/bits/stl_deque.h ****       }
1459:/usr/include/c++/5/bits/stl_deque.h **** 
1460:/usr/include/c++/5/bits/stl_deque.h ****       /**
1461:/usr/include/c++/5/bits/stl_deque.h ****        *  Returns a read-only (constant) reference to the data at the last
1462:/usr/include/c++/5/bits/stl_deque.h ****        *  element of the %deque.
1463:/usr/include/c++/5/bits/stl_deque.h ****        */
1464:/usr/include/c++/5/bits/stl_deque.h ****       const_reference
1465:/usr/include/c++/5/bits/stl_deque.h ****       back() const _GLIBCXX_NOEXCEPT
1466:/usr/include/c++/5/bits/stl_deque.h ****       {
1467:/usr/include/c++/5/bits/stl_deque.h **** 	const_iterator __tmp = end();
1468:/usr/include/c++/5/bits/stl_deque.h **** 	--__tmp;
1469:/usr/include/c++/5/bits/stl_deque.h **** 	return *__tmp;
1470:/usr/include/c++/5/bits/stl_deque.h ****       }
1471:/usr/include/c++/5/bits/stl_deque.h **** 
1472:/usr/include/c++/5/bits/stl_deque.h ****       // [23.2.1.2] modifiers
1473:/usr/include/c++/5/bits/stl_deque.h ****       /**
1474:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Add data to the front of the %deque.
1475:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  Data to be added.
1476:/usr/include/c++/5/bits/stl_deque.h ****        *
1477:/usr/include/c++/5/bits/stl_deque.h ****        *  This is a typical stack operation.  The function creates an
1478:/usr/include/c++/5/bits/stl_deque.h ****        *  element at the front of the %deque and assigns the given
1479:/usr/include/c++/5/bits/stl_deque.h ****        *  data to it.  Due to the nature of a %deque this operation
1480:/usr/include/c++/5/bits/stl_deque.h ****        *  can be done in constant time.
1481:/usr/include/c++/5/bits/stl_deque.h ****        */
1482:/usr/include/c++/5/bits/stl_deque.h ****       void
1483:/usr/include/c++/5/bits/stl_deque.h ****       push_front(const value_type& __x)
1484:/usr/include/c++/5/bits/stl_deque.h ****       {
1485:/usr/include/c++/5/bits/stl_deque.h **** 	if (this->_M_impl._M_start._M_cur != this->_M_impl._M_start._M_first)
1486:/usr/include/c++/5/bits/stl_deque.h **** 	  {
1487:/usr/include/c++/5/bits/stl_deque.h **** 	    _Alloc_traits::construct(this->_M_impl,
1488:/usr/include/c++/5/bits/stl_deque.h **** 	                             this->_M_impl._M_start._M_cur - 1,
1489:/usr/include/c++/5/bits/stl_deque.h **** 	                             __x);
1490:/usr/include/c++/5/bits/stl_deque.h **** 	    --this->_M_impl._M_start._M_cur;
1491:/usr/include/c++/5/bits/stl_deque.h **** 	  }
1492:/usr/include/c++/5/bits/stl_deque.h **** 	else
1493:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_push_front_aux(__x);
1494:/usr/include/c++/5/bits/stl_deque.h ****       }
1495:/usr/include/c++/5/bits/stl_deque.h **** 
1496:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1497:/usr/include/c++/5/bits/stl_deque.h ****       void
1498:/usr/include/c++/5/bits/stl_deque.h ****       push_front(value_type&& __x)
1499:/usr/include/c++/5/bits/stl_deque.h ****       { emplace_front(std::move(__x)); }
1500:/usr/include/c++/5/bits/stl_deque.h **** 
1501:/usr/include/c++/5/bits/stl_deque.h ****       template<typename... _Args>
1502:/usr/include/c++/5/bits/stl_deque.h ****         void
1503:/usr/include/c++/5/bits/stl_deque.h ****         emplace_front(_Args&&... __args);
1504:/usr/include/c++/5/bits/stl_deque.h **** #endif
1505:/usr/include/c++/5/bits/stl_deque.h **** 
1506:/usr/include/c++/5/bits/stl_deque.h ****       /**
1507:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Add data to the end of the %deque.
1508:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  Data to be added.
1509:/usr/include/c++/5/bits/stl_deque.h ****        *
1510:/usr/include/c++/5/bits/stl_deque.h ****        *  This is a typical stack operation.  The function creates an
1511:/usr/include/c++/5/bits/stl_deque.h ****        *  element at the end of the %deque and assigns the given data
GAS LISTING /tmp/ccX8BQhk.s 			page 329


1512:/usr/include/c++/5/bits/stl_deque.h ****        *  to it.  Due to the nature of a %deque this operation can be
1513:/usr/include/c++/5/bits/stl_deque.h ****        *  done in constant time.
1514:/usr/include/c++/5/bits/stl_deque.h ****        */
1515:/usr/include/c++/5/bits/stl_deque.h ****       void
1516:/usr/include/c++/5/bits/stl_deque.h ****       push_back(const value_type& __x)
1517:/usr/include/c++/5/bits/stl_deque.h ****       {
1518:/usr/include/c++/5/bits/stl_deque.h **** 	if (this->_M_impl._M_finish._M_cur
1519:/usr/include/c++/5/bits/stl_deque.h **** 	    != this->_M_impl._M_finish._M_last - 1)
1520:/usr/include/c++/5/bits/stl_deque.h **** 	  {
1521:/usr/include/c++/5/bits/stl_deque.h **** 	    _Alloc_traits::construct(this->_M_impl,
1522:/usr/include/c++/5/bits/stl_deque.h **** 	                             this->_M_impl._M_finish._M_cur, __x);
1523:/usr/include/c++/5/bits/stl_deque.h **** 	    ++this->_M_impl._M_finish._M_cur;
1524:/usr/include/c++/5/bits/stl_deque.h **** 	  }
1525:/usr/include/c++/5/bits/stl_deque.h **** 	else
1526:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_push_back_aux(__x);
1527:/usr/include/c++/5/bits/stl_deque.h ****       }
1528:/usr/include/c++/5/bits/stl_deque.h **** 
1529:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1530:/usr/include/c++/5/bits/stl_deque.h ****       void
1531:/usr/include/c++/5/bits/stl_deque.h ****       push_back(value_type&& __x)
1532:/usr/include/c++/5/bits/stl_deque.h ****       { emplace_back(std::move(__x)); }
1533:/usr/include/c++/5/bits/stl_deque.h **** 
1534:/usr/include/c++/5/bits/stl_deque.h ****       template<typename... _Args>
1535:/usr/include/c++/5/bits/stl_deque.h ****         void
1536:/usr/include/c++/5/bits/stl_deque.h ****         emplace_back(_Args&&... __args);
1537:/usr/include/c++/5/bits/stl_deque.h **** #endif
1538:/usr/include/c++/5/bits/stl_deque.h **** 
1539:/usr/include/c++/5/bits/stl_deque.h ****       /**
1540:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Removes first element.
1541:/usr/include/c++/5/bits/stl_deque.h ****        *
1542:/usr/include/c++/5/bits/stl_deque.h ****        *  This is a typical stack operation.  It shrinks the %deque by one.
1543:/usr/include/c++/5/bits/stl_deque.h ****        *
1544:/usr/include/c++/5/bits/stl_deque.h ****        *  Note that no data is returned, and if the first element's data is
1545:/usr/include/c++/5/bits/stl_deque.h ****        *  needed, it should be retrieved before pop_front() is called.
1546:/usr/include/c++/5/bits/stl_deque.h ****        */
1547:/usr/include/c++/5/bits/stl_deque.h ****       void
1548:/usr/include/c++/5/bits/stl_deque.h ****       pop_front() _GLIBCXX_NOEXCEPT
1549:/usr/include/c++/5/bits/stl_deque.h ****       {
1550:/usr/include/c++/5/bits/stl_deque.h **** 	if (this->_M_impl._M_start._M_cur
1551:/usr/include/c++/5/bits/stl_deque.h **** 	    != this->_M_impl._M_start._M_last - 1)
1552:/usr/include/c++/5/bits/stl_deque.h **** 	  {
1553:/usr/include/c++/5/bits/stl_deque.h **** 	    _Alloc_traits::destroy(this->_M_impl,
1554:/usr/include/c++/5/bits/stl_deque.h **** 	                           this->_M_impl._M_start._M_cur);
1555:/usr/include/c++/5/bits/stl_deque.h **** 	    ++this->_M_impl._M_start._M_cur;
1556:/usr/include/c++/5/bits/stl_deque.h **** 	  }
1557:/usr/include/c++/5/bits/stl_deque.h **** 	else
1558:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_pop_front_aux();
1559:/usr/include/c++/5/bits/stl_deque.h ****       }
1560:/usr/include/c++/5/bits/stl_deque.h **** 
1561:/usr/include/c++/5/bits/stl_deque.h ****       /**
1562:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Removes last element.
1563:/usr/include/c++/5/bits/stl_deque.h ****        *
1564:/usr/include/c++/5/bits/stl_deque.h ****        *  This is a typical stack operation.  It shrinks the %deque by one.
1565:/usr/include/c++/5/bits/stl_deque.h ****        *
1566:/usr/include/c++/5/bits/stl_deque.h ****        *  Note that no data is returned, and if the last element's data is
1567:/usr/include/c++/5/bits/stl_deque.h ****        *  needed, it should be retrieved before pop_back() is called.
1568:/usr/include/c++/5/bits/stl_deque.h ****        */
GAS LISTING /tmp/ccX8BQhk.s 			page 330


1569:/usr/include/c++/5/bits/stl_deque.h ****       void
1570:/usr/include/c++/5/bits/stl_deque.h ****       pop_back() _GLIBCXX_NOEXCEPT
1571:/usr/include/c++/5/bits/stl_deque.h ****       {
1572:/usr/include/c++/5/bits/stl_deque.h **** 	if (this->_M_impl._M_finish._M_cur
1573:/usr/include/c++/5/bits/stl_deque.h **** 	    != this->_M_impl._M_finish._M_first)
1574:/usr/include/c++/5/bits/stl_deque.h **** 	  {
1575:/usr/include/c++/5/bits/stl_deque.h **** 	    --this->_M_impl._M_finish._M_cur;
1576:/usr/include/c++/5/bits/stl_deque.h **** 	    _Alloc_traits::destroy(this->_M_impl,
1577:/usr/include/c++/5/bits/stl_deque.h **** 	                           this->_M_impl._M_finish._M_cur);
1578:/usr/include/c++/5/bits/stl_deque.h **** 	  }
1579:/usr/include/c++/5/bits/stl_deque.h **** 	else
1580:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_pop_back_aux();
1581:/usr/include/c++/5/bits/stl_deque.h ****       }
1582:/usr/include/c++/5/bits/stl_deque.h **** 
1583:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1584:/usr/include/c++/5/bits/stl_deque.h ****       /**
1585:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Inserts an object in %deque before specified iterator.
1586:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
1587:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __args  Arguments.
1588:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1589:/usr/include/c++/5/bits/stl_deque.h ****        *
1590:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will insert an object of type T constructed
1591:/usr/include/c++/5/bits/stl_deque.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1592:/usr/include/c++/5/bits/stl_deque.h ****        */
1593:/usr/include/c++/5/bits/stl_deque.h ****       template<typename... _Args>
1594:/usr/include/c++/5/bits/stl_deque.h ****         iterator
1595:/usr/include/c++/5/bits/stl_deque.h ****         emplace(const_iterator __position, _Args&&... __args);
1596:/usr/include/c++/5/bits/stl_deque.h **** 
1597:/usr/include/c++/5/bits/stl_deque.h ****       /**
1598:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Inserts given value into %deque before specified iterator.
1599:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
1600:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1601:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1602:/usr/include/c++/5/bits/stl_deque.h ****        *
1603:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will insert a copy of the given value before the
1604:/usr/include/c++/5/bits/stl_deque.h ****        *  specified location.
1605:/usr/include/c++/5/bits/stl_deque.h ****        */
1606:/usr/include/c++/5/bits/stl_deque.h ****       iterator
1607:/usr/include/c++/5/bits/stl_deque.h ****       insert(const_iterator __position, const value_type& __x);
1608:/usr/include/c++/5/bits/stl_deque.h **** #else
1609:/usr/include/c++/5/bits/stl_deque.h ****       /**
1610:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Inserts given value into %deque before specified iterator.
1611:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1612:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1613:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1614:/usr/include/c++/5/bits/stl_deque.h ****        *
1615:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will insert a copy of the given value before the
1616:/usr/include/c++/5/bits/stl_deque.h ****        *  specified location.
1617:/usr/include/c++/5/bits/stl_deque.h ****        */
1618:/usr/include/c++/5/bits/stl_deque.h ****       iterator
1619:/usr/include/c++/5/bits/stl_deque.h ****       insert(iterator __position, const value_type& __x);
1620:/usr/include/c++/5/bits/stl_deque.h **** #endif
1621:/usr/include/c++/5/bits/stl_deque.h **** 
1622:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1623:/usr/include/c++/5/bits/stl_deque.h ****       /**
1624:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Inserts given rvalue into %deque before specified iterator.
1625:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
GAS LISTING /tmp/ccX8BQhk.s 			page 331


1626:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1627:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1628:/usr/include/c++/5/bits/stl_deque.h ****        *
1629:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will insert a copy of the given rvalue before the
1630:/usr/include/c++/5/bits/stl_deque.h ****        *  specified location.
1631:/usr/include/c++/5/bits/stl_deque.h ****        */
1632:/usr/include/c++/5/bits/stl_deque.h ****       iterator
1633:/usr/include/c++/5/bits/stl_deque.h ****       insert(const_iterator __position, value_type&& __x)
1634:/usr/include/c++/5/bits/stl_deque.h ****       { return emplace(__position, std::move(__x)); }
1635:/usr/include/c++/5/bits/stl_deque.h **** 
1636:/usr/include/c++/5/bits/stl_deque.h ****       /**
1637:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Inserts an initializer list into the %deque.
1638:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __p  An iterator into the %deque.
1639:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __l  An initializer_list.
1640:/usr/include/c++/5/bits/stl_deque.h ****        *
1641:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will insert copies of the data in the
1642:/usr/include/c++/5/bits/stl_deque.h ****        *  initializer_list @a __l into the %deque before the location
1643:/usr/include/c++/5/bits/stl_deque.h ****        *  specified by @a __p.  This is known as <em>list insert</em>.
1644:/usr/include/c++/5/bits/stl_deque.h ****        */
1645:/usr/include/c++/5/bits/stl_deque.h ****       iterator
1646:/usr/include/c++/5/bits/stl_deque.h ****       insert(const_iterator __p, initializer_list<value_type> __l)
1647:/usr/include/c++/5/bits/stl_deque.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1648:/usr/include/c++/5/bits/stl_deque.h **** #endif
1649:/usr/include/c++/5/bits/stl_deque.h **** 
1650:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1651:/usr/include/c++/5/bits/stl_deque.h ****       /**
1652:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Inserts a number of copies of given data into the %deque.
1653:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
1654:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __n  Number of elements to be inserted.
1655:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1656:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1657:/usr/include/c++/5/bits/stl_deque.h ****        *
1658:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will insert a specified number of copies of the given
1659:/usr/include/c++/5/bits/stl_deque.h ****        *  data before the location specified by @a __position.
1660:/usr/include/c++/5/bits/stl_deque.h ****        */
1661:/usr/include/c++/5/bits/stl_deque.h ****       iterator
1662:/usr/include/c++/5/bits/stl_deque.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1663:/usr/include/c++/5/bits/stl_deque.h ****       {
1664:/usr/include/c++/5/bits/stl_deque.h **** 	difference_type __offset = __position - cbegin();
1665:/usr/include/c++/5/bits/stl_deque.h **** 	_M_fill_insert(__position._M_const_cast(), __n, __x);
1666:/usr/include/c++/5/bits/stl_deque.h **** 	return begin() + __offset;
1667:/usr/include/c++/5/bits/stl_deque.h ****       }
1668:/usr/include/c++/5/bits/stl_deque.h **** #else
1669:/usr/include/c++/5/bits/stl_deque.h ****       /**
1670:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Inserts a number of copies of given data into the %deque.
1671:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1672:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __n  Number of elements to be inserted.
1673:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  Data to be inserted.
1674:/usr/include/c++/5/bits/stl_deque.h ****        *
1675:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will insert a specified number of copies of the given
1676:/usr/include/c++/5/bits/stl_deque.h ****        *  data before the location specified by @a __position.
1677:/usr/include/c++/5/bits/stl_deque.h ****        */
1678:/usr/include/c++/5/bits/stl_deque.h ****       void
1679:/usr/include/c++/5/bits/stl_deque.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1680:/usr/include/c++/5/bits/stl_deque.h ****       { _M_fill_insert(__position, __n, __x); }
1681:/usr/include/c++/5/bits/stl_deque.h **** #endif
1682:/usr/include/c++/5/bits/stl_deque.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 332


1683:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1684:/usr/include/c++/5/bits/stl_deque.h ****       /**
1685:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Inserts a range into the %deque.
1686:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __position  A const_iterator into the %deque.
1687:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __first  An input iterator.
1688:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __last   An input iterator.
1689:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  An iterator that points to the inserted data.
1690:/usr/include/c++/5/bits/stl_deque.h ****        *
1691:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will insert copies of the data in the range
1692:/usr/include/c++/5/bits/stl_deque.h ****        *  [__first,__last) into the %deque before the location specified
1693:/usr/include/c++/5/bits/stl_deque.h ****        *  by @a __position.  This is known as <em>range insert</em>.
1694:/usr/include/c++/5/bits/stl_deque.h ****        */
1695:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator,
1696:/usr/include/c++/5/bits/stl_deque.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1697:/usr/include/c++/5/bits/stl_deque.h ****         iterator
1698:/usr/include/c++/5/bits/stl_deque.h ****         insert(const_iterator __position, _InputIterator __first,
1699:/usr/include/c++/5/bits/stl_deque.h **** 	       _InputIterator __last)
1700:/usr/include/c++/5/bits/stl_deque.h ****         {
1701:/usr/include/c++/5/bits/stl_deque.h **** 	  difference_type __offset = __position - cbegin();
1702:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_insert_dispatch(__position._M_const_cast(),
1703:/usr/include/c++/5/bits/stl_deque.h **** 			     __first, __last, __false_type());
1704:/usr/include/c++/5/bits/stl_deque.h **** 	  return begin() + __offset;
1705:/usr/include/c++/5/bits/stl_deque.h **** 	}
1706:/usr/include/c++/5/bits/stl_deque.h **** #else
1707:/usr/include/c++/5/bits/stl_deque.h ****       /**
1708:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Inserts a range into the %deque.
1709:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __position  An iterator into the %deque.
1710:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __first  An input iterator.
1711:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __last   An input iterator.
1712:/usr/include/c++/5/bits/stl_deque.h ****        *
1713:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will insert copies of the data in the range
1714:/usr/include/c++/5/bits/stl_deque.h ****        *  [__first,__last) into the %deque before the location specified
1715:/usr/include/c++/5/bits/stl_deque.h ****        *  by @a __position.  This is known as <em>range insert</em>.
1716:/usr/include/c++/5/bits/stl_deque.h ****        */
1717:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator>
1718:/usr/include/c++/5/bits/stl_deque.h ****         void
1719:/usr/include/c++/5/bits/stl_deque.h ****         insert(iterator __position, _InputIterator __first,
1720:/usr/include/c++/5/bits/stl_deque.h **** 	       _InputIterator __last)
1721:/usr/include/c++/5/bits/stl_deque.h ****         {
1722:/usr/include/c++/5/bits/stl_deque.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1723:/usr/include/c++/5/bits/stl_deque.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1724:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1725:/usr/include/c++/5/bits/stl_deque.h **** 	}
1726:/usr/include/c++/5/bits/stl_deque.h **** #endif
1727:/usr/include/c++/5/bits/stl_deque.h **** 
1728:/usr/include/c++/5/bits/stl_deque.h ****       /**
1729:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Remove element at given position.
1730:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __position  Iterator pointing to element to be erased.
1731:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  An iterator pointing to the next element (or end()).
1732:/usr/include/c++/5/bits/stl_deque.h ****        *
1733:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will erase the element at the given position and thus
1734:/usr/include/c++/5/bits/stl_deque.h ****        *  shorten the %deque by one.
1735:/usr/include/c++/5/bits/stl_deque.h ****        *
1736:/usr/include/c++/5/bits/stl_deque.h ****        *  The user is cautioned that
1737:/usr/include/c++/5/bits/stl_deque.h ****        *  this function only erases the element, and that if the element is
1738:/usr/include/c++/5/bits/stl_deque.h ****        *  itself a pointer, the pointed-to memory is not touched in any way.
1739:/usr/include/c++/5/bits/stl_deque.h ****        *  Managing the pointer is the user's responsibility.
GAS LISTING /tmp/ccX8BQhk.s 			page 333


1740:/usr/include/c++/5/bits/stl_deque.h ****        */
1741:/usr/include/c++/5/bits/stl_deque.h ****       iterator
1742:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1743:/usr/include/c++/5/bits/stl_deque.h ****       erase(const_iterator __position)
1744:/usr/include/c++/5/bits/stl_deque.h **** #else
1745:/usr/include/c++/5/bits/stl_deque.h ****       erase(iterator __position)
1746:/usr/include/c++/5/bits/stl_deque.h **** #endif
1747:/usr/include/c++/5/bits/stl_deque.h ****       { return _M_erase(__position._M_const_cast()); }
1748:/usr/include/c++/5/bits/stl_deque.h **** 
1749:/usr/include/c++/5/bits/stl_deque.h ****       /**
1750:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Remove a range of elements.
1751:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1752:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1753:/usr/include/c++/5/bits/stl_deque.h ****        *                erased.
1754:/usr/include/c++/5/bits/stl_deque.h ****        *  @return  An iterator pointing to the element pointed to by @a last
1755:/usr/include/c++/5/bits/stl_deque.h ****        *           prior to erasing (or end()).
1756:/usr/include/c++/5/bits/stl_deque.h ****        *
1757:/usr/include/c++/5/bits/stl_deque.h ****        *  This function will erase the elements in the range
1758:/usr/include/c++/5/bits/stl_deque.h ****        *  [__first,__last) and shorten the %deque accordingly.
1759:/usr/include/c++/5/bits/stl_deque.h ****        *
1760:/usr/include/c++/5/bits/stl_deque.h ****        *  The user is cautioned that
1761:/usr/include/c++/5/bits/stl_deque.h ****        *  this function only erases the elements, and that if the elements
1762:/usr/include/c++/5/bits/stl_deque.h ****        *  themselves are pointers, the pointed-to memory is not touched in any
1763:/usr/include/c++/5/bits/stl_deque.h ****        *  way.  Managing the pointer is the user's responsibility.
1764:/usr/include/c++/5/bits/stl_deque.h ****        */
1765:/usr/include/c++/5/bits/stl_deque.h ****       iterator
1766:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1767:/usr/include/c++/5/bits/stl_deque.h ****       erase(const_iterator __first, const_iterator __last)
1768:/usr/include/c++/5/bits/stl_deque.h **** #else
1769:/usr/include/c++/5/bits/stl_deque.h ****       erase(iterator __first, iterator __last)
1770:/usr/include/c++/5/bits/stl_deque.h **** #endif
1771:/usr/include/c++/5/bits/stl_deque.h ****       { return _M_erase(__first._M_const_cast(), __last._M_const_cast()); }
1772:/usr/include/c++/5/bits/stl_deque.h **** 
1773:/usr/include/c++/5/bits/stl_deque.h ****       /**
1774:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief  Swaps data with another %deque.
1775:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __x  A %deque of the same element and allocator types.
1776:/usr/include/c++/5/bits/stl_deque.h ****        *
1777:/usr/include/c++/5/bits/stl_deque.h ****        *  This exchanges the elements between two deques in constant time.
1778:/usr/include/c++/5/bits/stl_deque.h ****        *  (Four pointers, so it should be quite fast.)
1779:/usr/include/c++/5/bits/stl_deque.h ****        *  Note that the global std::swap() function is specialized such that
1780:/usr/include/c++/5/bits/stl_deque.h ****        *  std::swap(d1,d2) will feed to this function.
1781:/usr/include/c++/5/bits/stl_deque.h ****        */
1782:/usr/include/c++/5/bits/stl_deque.h ****       void
1783:/usr/include/c++/5/bits/stl_deque.h ****       swap(deque& __x)
1784:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1785:/usr/include/c++/5/bits/stl_deque.h ****       noexcept(_Alloc_traits::_S_nothrow_swap())
1786:/usr/include/c++/5/bits/stl_deque.h **** #endif
1787:/usr/include/c++/5/bits/stl_deque.h ****       {
1788:/usr/include/c++/5/bits/stl_deque.h **** 	_M_impl._M_swap_data(__x._M_impl);
1789:/usr/include/c++/5/bits/stl_deque.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1790:/usr/include/c++/5/bits/stl_deque.h **** 				  __x._M_get_Tp_allocator());
1791:/usr/include/c++/5/bits/stl_deque.h ****       }
1792:/usr/include/c++/5/bits/stl_deque.h **** 
1793:/usr/include/c++/5/bits/stl_deque.h ****       /**
1794:/usr/include/c++/5/bits/stl_deque.h ****        *  Erases all the elements.  Note that this function only erases the
1795:/usr/include/c++/5/bits/stl_deque.h ****        *  elements, and that if the elements themselves are pointers, the
1796:/usr/include/c++/5/bits/stl_deque.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
GAS LISTING /tmp/ccX8BQhk.s 			page 334


1797:/usr/include/c++/5/bits/stl_deque.h ****        *  the user's responsibility.
1798:/usr/include/c++/5/bits/stl_deque.h ****        */
1799:/usr/include/c++/5/bits/stl_deque.h ****       void
1800:/usr/include/c++/5/bits/stl_deque.h ****       clear() _GLIBCXX_NOEXCEPT
1801:/usr/include/c++/5/bits/stl_deque.h ****       { _M_erase_at_end(begin()); }
1802:/usr/include/c++/5/bits/stl_deque.h **** 
1803:/usr/include/c++/5/bits/stl_deque.h ****     protected:
1804:/usr/include/c++/5/bits/stl_deque.h ****       // Internal constructor functions follow.
1805:/usr/include/c++/5/bits/stl_deque.h **** 
1806:/usr/include/c++/5/bits/stl_deque.h ****       // called by the range constructor to implement [23.1.1]/9
1807:/usr/include/c++/5/bits/stl_deque.h **** 
1808:/usr/include/c++/5/bits/stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1809:/usr/include/c++/5/bits/stl_deque.h ****       // 438. Ambiguity in the "do the right thing" clause
1810:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _Integer>
1811:/usr/include/c++/5/bits/stl_deque.h ****         void
1812:/usr/include/c++/5/bits/stl_deque.h ****         _M_initialize_dispatch(_Integer __n, _Integer __x, __true_type)
1813:/usr/include/c++/5/bits/stl_deque.h ****         {
1814:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_initialize_map(static_cast<size_type>(__n));
1815:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_fill_initialize(__x);
1816:/usr/include/c++/5/bits/stl_deque.h **** 	}
1817:/usr/include/c++/5/bits/stl_deque.h **** 
1818:/usr/include/c++/5/bits/stl_deque.h ****       // called by the range constructor to implement [23.1.1]/9
1819:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator>
1820:/usr/include/c++/5/bits/stl_deque.h ****         void
1821:/usr/include/c++/5/bits/stl_deque.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1822:/usr/include/c++/5/bits/stl_deque.h **** 			       __false_type)
1823:/usr/include/c++/5/bits/stl_deque.h ****         {
1824:/usr/include/c++/5/bits/stl_deque.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1825:/usr/include/c++/5/bits/stl_deque.h **** 	    iterator_category _IterCategory;
1826:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1827:/usr/include/c++/5/bits/stl_deque.h **** 	}
1828:/usr/include/c++/5/bits/stl_deque.h **** 
1829:/usr/include/c++/5/bits/stl_deque.h ****       // called by the second initialize_dispatch above
1830:/usr/include/c++/5/bits/stl_deque.h ****       //@{
1831:/usr/include/c++/5/bits/stl_deque.h ****       /**
1832:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief Fills the deque with whatever is in [first,last).
1833:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __first  An input iterator.
1834:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __last  An input iterator.
1835:/usr/include/c++/5/bits/stl_deque.h ****        *  @return   Nothing.
1836:/usr/include/c++/5/bits/stl_deque.h ****        *
1837:/usr/include/c++/5/bits/stl_deque.h ****        *  If the iterators are actually forward iterators (or better), then the
1838:/usr/include/c++/5/bits/stl_deque.h ****        *  memory layout can be done all at once.  Else we move forward using
1839:/usr/include/c++/5/bits/stl_deque.h ****        *  push_back on each value from the iterator.
1840:/usr/include/c++/5/bits/stl_deque.h ****        */
1841:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator>
1842:/usr/include/c++/5/bits/stl_deque.h ****         void
1843:/usr/include/c++/5/bits/stl_deque.h ****         _M_range_initialize(_InputIterator __first, _InputIterator __last,
1844:/usr/include/c++/5/bits/stl_deque.h **** 			    std::input_iterator_tag);
1845:/usr/include/c++/5/bits/stl_deque.h **** 
1846:/usr/include/c++/5/bits/stl_deque.h ****       // called by the second initialize_dispatch above
1847:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _ForwardIterator>
1848:/usr/include/c++/5/bits/stl_deque.h ****         void
1849:/usr/include/c++/5/bits/stl_deque.h ****         _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1850:/usr/include/c++/5/bits/stl_deque.h **** 			    std::forward_iterator_tag);
1851:/usr/include/c++/5/bits/stl_deque.h ****       //@}
1852:/usr/include/c++/5/bits/stl_deque.h **** 
1853:/usr/include/c++/5/bits/stl_deque.h ****       /**
GAS LISTING /tmp/ccX8BQhk.s 			page 335


1854:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief Fills the %deque with copies of value.
1855:/usr/include/c++/5/bits/stl_deque.h ****        *  @param  __value  Initial value.
1856:/usr/include/c++/5/bits/stl_deque.h ****        *  @return   Nothing.
1857:/usr/include/c++/5/bits/stl_deque.h ****        *  @pre _M_start and _M_finish have already been initialized,
1858:/usr/include/c++/5/bits/stl_deque.h ****        *  but none of the %deque's elements have yet been constructed.
1859:/usr/include/c++/5/bits/stl_deque.h ****        *
1860:/usr/include/c++/5/bits/stl_deque.h ****        *  This function is called only when the user provides an explicit size
1861:/usr/include/c++/5/bits/stl_deque.h ****        *  (with or without an explicit exemplar value).
1862:/usr/include/c++/5/bits/stl_deque.h ****        */
1863:/usr/include/c++/5/bits/stl_deque.h ****       void
1864:/usr/include/c++/5/bits/stl_deque.h ****       _M_fill_initialize(const value_type& __value);
1865:/usr/include/c++/5/bits/stl_deque.h **** 
1866:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
1867:/usr/include/c++/5/bits/stl_deque.h ****       // called by deque(n).
1868:/usr/include/c++/5/bits/stl_deque.h ****       void
1869:/usr/include/c++/5/bits/stl_deque.h ****       _M_default_initialize();
1870:/usr/include/c++/5/bits/stl_deque.h **** #endif
1871:/usr/include/c++/5/bits/stl_deque.h **** 
1872:/usr/include/c++/5/bits/stl_deque.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1873:/usr/include/c++/5/bits/stl_deque.h ****       // assignment work for the range versions.
1874:/usr/include/c++/5/bits/stl_deque.h **** 
1875:/usr/include/c++/5/bits/stl_deque.h ****       // called by the range assign to implement [23.1.1]/9
1876:/usr/include/c++/5/bits/stl_deque.h **** 
1877:/usr/include/c++/5/bits/stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1878:/usr/include/c++/5/bits/stl_deque.h ****       // 438. Ambiguity in the "do the right thing" clause
1879:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _Integer>
1880:/usr/include/c++/5/bits/stl_deque.h ****         void
1881:/usr/include/c++/5/bits/stl_deque.h ****         _M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1882:/usr/include/c++/5/bits/stl_deque.h ****         { _M_fill_assign(__n, __val); }
1883:/usr/include/c++/5/bits/stl_deque.h **** 
1884:/usr/include/c++/5/bits/stl_deque.h ****       // called by the range assign to implement [23.1.1]/9
1885:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator>
1886:/usr/include/c++/5/bits/stl_deque.h ****         void
1887:/usr/include/c++/5/bits/stl_deque.h ****         _M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1888:/usr/include/c++/5/bits/stl_deque.h **** 			   __false_type)
1889:/usr/include/c++/5/bits/stl_deque.h ****         {
1890:/usr/include/c++/5/bits/stl_deque.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1891:/usr/include/c++/5/bits/stl_deque.h **** 	    iterator_category _IterCategory;
1892:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_assign_aux(__first, __last, _IterCategory());
1893:/usr/include/c++/5/bits/stl_deque.h **** 	}
1894:/usr/include/c++/5/bits/stl_deque.h **** 
1895:/usr/include/c++/5/bits/stl_deque.h ****       // called by the second assign_dispatch above
1896:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator>
1897:/usr/include/c++/5/bits/stl_deque.h ****         void
1898:/usr/include/c++/5/bits/stl_deque.h ****         _M_assign_aux(_InputIterator __first, _InputIterator __last,
1899:/usr/include/c++/5/bits/stl_deque.h **** 		      std::input_iterator_tag);
1900:/usr/include/c++/5/bits/stl_deque.h **** 
1901:/usr/include/c++/5/bits/stl_deque.h ****       // called by the second assign_dispatch above
1902:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _ForwardIterator>
1903:/usr/include/c++/5/bits/stl_deque.h ****         void
1904:/usr/include/c++/5/bits/stl_deque.h ****         _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1905:/usr/include/c++/5/bits/stl_deque.h **** 		      std::forward_iterator_tag)
1906:/usr/include/c++/5/bits/stl_deque.h ****         {
1907:/usr/include/c++/5/bits/stl_deque.h **** 	  const size_type __len = std::distance(__first, __last);
1908:/usr/include/c++/5/bits/stl_deque.h **** 	  if (__len > size())
1909:/usr/include/c++/5/bits/stl_deque.h **** 	    {
1910:/usr/include/c++/5/bits/stl_deque.h **** 	      _ForwardIterator __mid = __first;
GAS LISTING /tmp/ccX8BQhk.s 			page 336


1911:/usr/include/c++/5/bits/stl_deque.h **** 	      std::advance(__mid, size());
1912:/usr/include/c++/5/bits/stl_deque.h **** 	      std::copy(__first, __mid, begin());
1913:/usr/include/c++/5/bits/stl_deque.h **** 	      insert(end(), __mid, __last);
1914:/usr/include/c++/5/bits/stl_deque.h **** 	    }
1915:/usr/include/c++/5/bits/stl_deque.h **** 	  else
1916:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_erase_at_end(std::copy(__first, __last, begin()));
1917:/usr/include/c++/5/bits/stl_deque.h **** 	}
1918:/usr/include/c++/5/bits/stl_deque.h **** 
1919:/usr/include/c++/5/bits/stl_deque.h ****       // Called by assign(n,t), and the range assign when it turns out
1920:/usr/include/c++/5/bits/stl_deque.h ****       // to be the same thing.
1921:/usr/include/c++/5/bits/stl_deque.h ****       void
1922:/usr/include/c++/5/bits/stl_deque.h ****       _M_fill_assign(size_type __n, const value_type& __val)
1923:/usr/include/c++/5/bits/stl_deque.h ****       {
1924:/usr/include/c++/5/bits/stl_deque.h **** 	if (__n > size())
1925:/usr/include/c++/5/bits/stl_deque.h **** 	  {
1926:/usr/include/c++/5/bits/stl_deque.h **** 	    std::fill(begin(), end(), __val);
1927:/usr/include/c++/5/bits/stl_deque.h **** 	    insert(end(), __n - size(), __val);
1928:/usr/include/c++/5/bits/stl_deque.h **** 	  }
1929:/usr/include/c++/5/bits/stl_deque.h **** 	else
1930:/usr/include/c++/5/bits/stl_deque.h **** 	  {
1931:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_erase_at_end(begin() + difference_type(__n));
1932:/usr/include/c++/5/bits/stl_deque.h **** 	    std::fill(begin(), end(), __val);
1933:/usr/include/c++/5/bits/stl_deque.h **** 	  }
1934:/usr/include/c++/5/bits/stl_deque.h ****       }
1935:/usr/include/c++/5/bits/stl_deque.h **** 
1936:/usr/include/c++/5/bits/stl_deque.h ****       //@{
1937:/usr/include/c++/5/bits/stl_deque.h ****       /// Helper functions for push_* and pop_*.
1938:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus < 201103L
1939:/usr/include/c++/5/bits/stl_deque.h ****       void _M_push_back_aux(const value_type&);
1940:/usr/include/c++/5/bits/stl_deque.h **** 
1941:/usr/include/c++/5/bits/stl_deque.h ****       void _M_push_front_aux(const value_type&);
1942:/usr/include/c++/5/bits/stl_deque.h **** #else
1943:/usr/include/c++/5/bits/stl_deque.h ****       template<typename... _Args>
1944:/usr/include/c++/5/bits/stl_deque.h ****         void _M_push_back_aux(_Args&&... __args);
1945:/usr/include/c++/5/bits/stl_deque.h **** 
1946:/usr/include/c++/5/bits/stl_deque.h ****       template<typename... _Args>
1947:/usr/include/c++/5/bits/stl_deque.h ****         void _M_push_front_aux(_Args&&... __args);
1948:/usr/include/c++/5/bits/stl_deque.h **** #endif
1949:/usr/include/c++/5/bits/stl_deque.h **** 
1950:/usr/include/c++/5/bits/stl_deque.h ****       void _M_pop_back_aux();
1951:/usr/include/c++/5/bits/stl_deque.h **** 
1952:/usr/include/c++/5/bits/stl_deque.h ****       void _M_pop_front_aux();
1953:/usr/include/c++/5/bits/stl_deque.h ****       //@}
1954:/usr/include/c++/5/bits/stl_deque.h **** 
1955:/usr/include/c++/5/bits/stl_deque.h ****       // Internal insert functions follow.  The *_aux functions do the actual
1956:/usr/include/c++/5/bits/stl_deque.h ****       // insertion work when all shortcuts fail.
1957:/usr/include/c++/5/bits/stl_deque.h **** 
1958:/usr/include/c++/5/bits/stl_deque.h ****       // called by the range insert to implement [23.1.1]/9
1959:/usr/include/c++/5/bits/stl_deque.h **** 
1960:/usr/include/c++/5/bits/stl_deque.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1961:/usr/include/c++/5/bits/stl_deque.h ****       // 438. Ambiguity in the "do the right thing" clause
1962:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _Integer>
1963:/usr/include/c++/5/bits/stl_deque.h ****         void
1964:/usr/include/c++/5/bits/stl_deque.h ****         _M_insert_dispatch(iterator __pos,
1965:/usr/include/c++/5/bits/stl_deque.h **** 			   _Integer __n, _Integer __x, __true_type)
1966:/usr/include/c++/5/bits/stl_deque.h ****         { _M_fill_insert(__pos, __n, __x); }
1967:/usr/include/c++/5/bits/stl_deque.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 337


1968:/usr/include/c++/5/bits/stl_deque.h ****       // called by the range insert to implement [23.1.1]/9
1969:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator>
1970:/usr/include/c++/5/bits/stl_deque.h ****         void
1971:/usr/include/c++/5/bits/stl_deque.h ****         _M_insert_dispatch(iterator __pos,
1972:/usr/include/c++/5/bits/stl_deque.h **** 			   _InputIterator __first, _InputIterator __last,
1973:/usr/include/c++/5/bits/stl_deque.h **** 			   __false_type)
1974:/usr/include/c++/5/bits/stl_deque.h ****         {
1975:/usr/include/c++/5/bits/stl_deque.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1976:/usr/include/c++/5/bits/stl_deque.h **** 	    iterator_category _IterCategory;
1977:/usr/include/c++/5/bits/stl_deque.h ****           _M_range_insert_aux(__pos, __first, __last, _IterCategory());
1978:/usr/include/c++/5/bits/stl_deque.h **** 	}
1979:/usr/include/c++/5/bits/stl_deque.h **** 
1980:/usr/include/c++/5/bits/stl_deque.h ****       // called by the second insert_dispatch above
1981:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _InputIterator>
1982:/usr/include/c++/5/bits/stl_deque.h ****         void
1983:/usr/include/c++/5/bits/stl_deque.h ****         _M_range_insert_aux(iterator __pos, _InputIterator __first,
1984:/usr/include/c++/5/bits/stl_deque.h **** 			    _InputIterator __last, std::input_iterator_tag);
1985:/usr/include/c++/5/bits/stl_deque.h **** 
1986:/usr/include/c++/5/bits/stl_deque.h ****       // called by the second insert_dispatch above
1987:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _ForwardIterator>
1988:/usr/include/c++/5/bits/stl_deque.h ****         void
1989:/usr/include/c++/5/bits/stl_deque.h ****         _M_range_insert_aux(iterator __pos, _ForwardIterator __first,
1990:/usr/include/c++/5/bits/stl_deque.h **** 			    _ForwardIterator __last, std::forward_iterator_tag);
1991:/usr/include/c++/5/bits/stl_deque.h **** 
1992:/usr/include/c++/5/bits/stl_deque.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1993:/usr/include/c++/5/bits/stl_deque.h ****       // the same thing.  Can use fill functions in optimal situations,
1994:/usr/include/c++/5/bits/stl_deque.h ****       // otherwise passes off to insert_aux(p,n,x).
1995:/usr/include/c++/5/bits/stl_deque.h ****       void
1996:/usr/include/c++/5/bits/stl_deque.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1997:/usr/include/c++/5/bits/stl_deque.h **** 
1998:/usr/include/c++/5/bits/stl_deque.h ****       // called by insert(p,x)
1999:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus < 201103L
2000:/usr/include/c++/5/bits/stl_deque.h ****       iterator
2001:/usr/include/c++/5/bits/stl_deque.h ****       _M_insert_aux(iterator __pos, const value_type& __x);
2002:/usr/include/c++/5/bits/stl_deque.h **** #else
2003:/usr/include/c++/5/bits/stl_deque.h ****       template<typename... _Args>
2004:/usr/include/c++/5/bits/stl_deque.h ****         iterator
2005:/usr/include/c++/5/bits/stl_deque.h ****         _M_insert_aux(iterator __pos, _Args&&... __args);
2006:/usr/include/c++/5/bits/stl_deque.h **** #endif
2007:/usr/include/c++/5/bits/stl_deque.h **** 
2008:/usr/include/c++/5/bits/stl_deque.h ****       // called by insert(p,n,x) via fill_insert
2009:/usr/include/c++/5/bits/stl_deque.h ****       void
2010:/usr/include/c++/5/bits/stl_deque.h ****       _M_insert_aux(iterator __pos, size_type __n, const value_type& __x);
2011:/usr/include/c++/5/bits/stl_deque.h **** 
2012:/usr/include/c++/5/bits/stl_deque.h ****       // called by range_insert_aux for forward iterators
2013:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _ForwardIterator>
2014:/usr/include/c++/5/bits/stl_deque.h ****         void
2015:/usr/include/c++/5/bits/stl_deque.h ****         _M_insert_aux(iterator __pos,
2016:/usr/include/c++/5/bits/stl_deque.h **** 		      _ForwardIterator __first, _ForwardIterator __last,
2017:/usr/include/c++/5/bits/stl_deque.h **** 		      size_type __n);
2018:/usr/include/c++/5/bits/stl_deque.h **** 
2019:/usr/include/c++/5/bits/stl_deque.h **** 
2020:/usr/include/c++/5/bits/stl_deque.h ****       // Internal erase functions follow.
2021:/usr/include/c++/5/bits/stl_deque.h **** 
2022:/usr/include/c++/5/bits/stl_deque.h ****       void
2023:/usr/include/c++/5/bits/stl_deque.h ****       _M_destroy_data_aux(iterator __first, iterator __last);
2024:/usr/include/c++/5/bits/stl_deque.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 338


2025:/usr/include/c++/5/bits/stl_deque.h ****       // Called by ~deque().
2026:/usr/include/c++/5/bits/stl_deque.h ****       // NB: Doesn't deallocate the nodes.
2027:/usr/include/c++/5/bits/stl_deque.h ****       template<typename _Alloc1>
2028:/usr/include/c++/5/bits/stl_deque.h ****         void
2029:/usr/include/c++/5/bits/stl_deque.h ****         _M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
2030:/usr/include/c++/5/bits/stl_deque.h ****         { _M_destroy_data_aux(__first, __last); }
2031:/usr/include/c++/5/bits/stl_deque.h **** 
2032:/usr/include/c++/5/bits/stl_deque.h ****       void
2033:/usr/include/c++/5/bits/stl_deque.h ****       _M_destroy_data(iterator __first, iterator __last,
 4823              		.loc 3 2033 0
 4824              		.cfi_startproc
 4825 0000 55       		pushq	%rbp
 4826              		.cfi_def_cfa_offset 16
 4827              		.cfi_offset 6, -16
 4828 0001 4889E5   		movq	%rsp, %rbp
 4829              		.cfi_def_cfa_register 6
 4830 0004 4883EC50 		subq	$80, %rsp
 4831 0008 48897DC8 		movq	%rdi, -56(%rbp)
 4832 000c 488975C0 		movq	%rsi, -64(%rbp)
 4833 0010 488955B8 		movq	%rdx, -72(%rbp)
 4834 0014 48894DB0 		movq	%rcx, -80(%rbp)
 4835              		.loc 3 2033 0
 4836 0018 64488B04 		movq	%fs:40, %rax
 4836      25280000 
 4836      00
 4837 0021 488945F8 		movq	%rax, -8(%rbp)
 4838 0025 31C0     		xorl	%eax, %eax
2034:/usr/include/c++/5/bits/stl_deque.h **** 		      const std::allocator<_Tp>&)
2035:/usr/include/c++/5/bits/stl_deque.h ****       {
2036:/usr/include/c++/5/bits/stl_deque.h **** 	if (!__has_trivial_destructor(value_type))
2037:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_destroy_data_aux(__first, __last);
2038:/usr/include/c++/5/bits/stl_deque.h ****       }
 4839              		.loc 3 2038 0
 4840 0027 90       		nop
 4841 0028 488B45F8 		movq	-8(%rbp), %rax
 4842 002c 64483304 		xorq	%fs:40, %rax
 4842      25280000 
 4842      00
 4843 0035 7405     		je	.L262
 4844 0037 E8000000 		call	__stack_chk_fail
 4844      00
 4845              	.L262:
 4846 003c C9       		leave
 4847              		.cfi_def_cfa 7, 8
 4848 003d C3       		ret
 4849              		.cfi_endproc
 4850              	.LFE10455:
 4852              		.section	.text._ZN5boost12range_detail9safe_boolIMNS_21iterator_range_detail19iterator_range_baseI
 4853              		.weak	_ZN5boost12range_detail9safe_boolIMNS_21iterator_range_detail19iterator_range_baseIN9__gnu_c
 4855              	_ZN5boost12range_detail9safe_boolIMNS_21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__n
 4856              	.LFB10456:
 4857              		.file 33 "/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp"
   1:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** //  This header intentionally has no include guards.
   2:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** //
   3:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** //  Copyright (c) 2010 Neil Groves
   4:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** //  Distributed under the Boost Software License, Version 1.0.
   5:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** //  See accompanying file LICENSE_1_0.txt or copy at
GAS LISTING /tmp/ccX8BQhk.s 			page 339


   6:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** //  http://www.boost.org/LICENSE_1_0.txt
   7:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** //
   8:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** // This code utilises the experience gained during the evolution of
   9:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** // <boost/smart_ptr/operator_bool.hpp>
  10:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** #ifndef BOOST_RANGE_SAFE_BOOL_INCLUDED_HPP
  11:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** #define BOOST_RANGE_SAFE_BOOL_INCLUDED_HPP
  12:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** 
  13:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** #include <boost/config.hpp>
  14:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** #include <boost/range/config.hpp>
  15:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** 
  16:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** namespace boost
  17:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** {
  18:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     namespace range_detail
  19:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     {
  20:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** 
  21:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** template<class DataMemberPtr>
  22:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** class safe_bool
  23:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** {
  24:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** public:
  25:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     typedef safe_bool this_type;
  26:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** 
  27:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** #if (defined(__SUNPRO_CC) && BOOST_WORKAROUND(__SUNPRO_CC, < 0x570)) || defined(__CINT_)
  28:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     typedef bool unspecified_bool_type;
  29:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     static unspecified_bool_type to_unspecified_bool(const bool x, DataMemberPtr)
  30:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     {
  31:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****         return x;
  32:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     }
  33:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** #elif defined(_MANAGED)
  34:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     static void unspecified_bool(this_type***)
  35:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     {
  36:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     }
  37:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     typedef void(*unspecified_bool_type)(this_type***);
  38:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     static unspecified_bool_type to_unspecified_bool(const bool x, DataMemberPtr)
  39:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     {
  40:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****         return x ? unspecified_bool : 0;
  41:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     }
  42:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** #elif \
  43:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     ( defined(__MWERKS__) && BOOST_WORKAROUND(__MWERKS__, < 0x3200) ) || \
  44:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     ( defined(__GNUC__) && (__GNUC__ * 100 + __GNUC_MINOR__ < 304) ) || \
  45:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     ( defined(__SUNPRO_CC) && BOOST_WORKAROUND(__SUNPRO_CC, <= 0x590) )
  46:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** 
  47:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     typedef bool (this_type::*unspecified_bool_type)() const;
  48:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** 
  49:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     static unspecified_bool_type to_unspecified_bool(const bool x, DataMemberPtr)
  50:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     {
  51:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****         return x ? &this_type::detail_safe_bool_member_fn : 0;
  52:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     }
  53:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** private:
  54:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     bool detail_safe_bool_member_fn() const { return false; }
  55:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp **** #else
  56:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     typedef DataMemberPtr unspecified_bool_type;
  57:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     static unspecified_bool_type to_unspecified_bool(const bool x, DataMemberPtr p)
 4858              		.loc 33 57 0
 4859              		.cfi_startproc
 4860 0000 55       		pushq	%rbp
 4861              		.cfi_def_cfa_offset 16
 4862              		.cfi_offset 6, -16
GAS LISTING /tmp/ccX8BQhk.s 			page 340


 4863 0001 4889E5   		movq	%rsp, %rbp
 4864              		.cfi_def_cfa_register 6
 4865 0004 89F8     		movl	%edi, %eax
 4866 0006 488975F0 		movq	%rsi, -16(%rbp)
 4867 000a 8845FC   		movb	%al, -4(%rbp)
  58:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     {
  59:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****         return x ? p : 0;
 4868              		.loc 33 59 0
 4869 000d 807DFC00 		cmpb	$0, -4(%rbp)
 4870 0011 7406     		je	.L264
 4871              		.loc 33 59 0 is_stmt 0 discriminator 1
 4872 0013 488B45F0 		movq	-16(%rbp), %rax
 4873 0017 EB07     		jmp	.L266
 4874              	.L264:
 4875              		.loc 33 59 0 discriminator 2
 4876 0019 48C7C0FF 		movq	$-1, %rax
 4876      FFFFFF
 4877              	.L266:
  60:/home/brendan/Boost/boost_1_60_0/boost/range/detail/safe_bool.hpp ****     }
 4878              		.loc 33 60 0 is_stmt 1 discriminator 5
 4879 0020 5D       		popq	%rbp
 4880              		.cfi_def_cfa 7, 8
 4881 0021 C3       		ret
 4882              		.cfi_endproc
 4883              	.LFE10456:
 4885              		.section	.text._ZN5boost9algorithm6detail22process_segment_helperILb0EEclISt5dequeIcSaIcEENSt7__cx
 4886              		.align 2
 4887              		.weak	_ZN5boost9algorithm6detail22process_segment_helperILb0EEclISt5dequeIcSaIcEENSt7__cxx1112basi
 4889              	_ZN5boost9algorithm6detail22process_segment_helperILb0EEclISt5dequeIcSaIcEENSt7__cxx1112basic_strin
 4890              	.LFB10457:
  63:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     StorageT& Storage,
 4891              		.loc 30 63 0
 4892              		.cfi_startproc
 4893 0000 55       		pushq	%rbp
 4894              		.cfi_def_cfa_offset 16
 4895              		.cfi_offset 6, -16
 4896 0001 4889E5   		movq	%rsp, %rbp
 4897              		.cfi_def_cfa_register 6
 4898 0004 53       		pushq	%rbx
 4899 0005 4883EC58 		subq	$88, %rsp
 4900              		.cfi_offset 3, -24
 4901 0009 48897DD8 		movq	%rdi, -40(%rbp)
 4902 000d 488975D0 		movq	%rsi, -48(%rbp)
 4903 0011 488955C8 		movq	%rdx, -56(%rbp)
 4904 0015 48894DC0 		movq	%rcx, -64(%rbp)
 4905 0019 4C8945B0 		movq	%r8, -80(%rbp)
 4906 001d 4C894DA0 		movq	%r9, -96(%rbp)
  63:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     StorageT& Storage,
 4907              		.loc 30 63 0
 4908 0021 64488B04 		movq	%fs:40, %rax
 4908      25280000 
 4908      00
 4909 002a 488945E8 		movq	%rax, -24(%rbp)
 4910 002e 31C0     		xorl	%eax, %eax
  71:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
 4911              		.loc 30 71 0
 4912 0030 488B55B0 		movq	-80(%rbp), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 341


 4913 0034 488B4DC0 		movq	-64(%rbp), %rcx
 4914 0038 488B45D0 		movq	-48(%rbp), %rax
 4915 003c 4889CE   		movq	%rcx, %rsi
 4916 003f 4889C7   		movq	%rax, %rdi
 4917 0042 E8000000 		call	_ZN5boost9algorithm6detail17move_from_storageISt5dequeIcSaIcEEN9__gnu_cxx17__normal_iteratorI
 4917      00
 4918 0047 488945E0 		movq	%rax, -32(%rbp)
  78:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     {
 4919              		.loc 30 78 0
 4920 004b 488B45D0 		movq	-48(%rbp), %rax
 4921 004f 4889C7   		movq	%rax, %rdi
 4922 0052 E8000000 		call	_ZNKSt5dequeIcSaIcEE5emptyEv
 4922      00
 4923 0057 84C0     		testb	%al, %al
 4924 0059 7439     		je	.L268
  80:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         {
 4925              		.loc 30 80 0
 4926 005b 488D55B0 		leaq	-80(%rbp), %rdx
 4927 005f 488D45E0 		leaq	-32(%rbp), %rax
 4928 0063 4889D6   		movq	%rdx, %rsi
 4929 0066 4889C7   		movq	%rax, %rdi
 4930 0069 E8000000 		call	_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iter
 4930      00
 4931 006e 84C0     		testb	%al, %al
 4932 0070 7409     		je	.L269
  83:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         }
 4933              		.loc 30 83 0
 4934 0072 488B45A0 		movq	-96(%rbp), %rax
 4935 0076 E98C0000 		jmp	.L272
 4935      00
 4936              	.L269:
  88:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         }
 4937              		.loc 30 88 0
 4938 007b 488B55E0 		movq	-32(%rbp), %rdx
 4939 007f 488B4DA0 		movq	-96(%rbp), %rcx
 4940 0083 488B45B0 		movq	-80(%rbp), %rax
 4941 0087 4889CE   		movq	%rcx, %rsi
 4942 008a 4889C7   		movq	%rax, %rdi
 4943 008d E8000000 		call	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 4943      00
 4944 0092 EB73     		jmp	.L272
 4945              	.L268:
  94:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         {
 4946              		.loc 30 94 0
 4947 0094 488D55A0 		leaq	-96(%rbp), %rdx
 4948 0098 488D45E0 		leaq	-32(%rbp), %rax
 4949 009c 4889D6   		movq	%rdx, %rsi
 4950 009f 4889C7   		movq	%rax, %rdi
 4951 00a2 E8000000 		call	_ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iter
 4951      00
 4952 00a7 84C0     		testb	%al, %al
 4953 00a9 7458     		je	.L271
  97:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             // Get the top from the storage and put it here
 4954              		.loc 30 97 0
 4955 00ab 488D45E0 		leaq	-32(%rbp), %rax
 4956 00af 4889C7   		movq	%rax, %rdi
 4957 00b2 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv
GAS LISTING /tmp/ccX8BQhk.s 			page 342


 4957      00
 4958 00b7 4889C2   		movq	%rax, %rdx
 4959 00ba 488B45D0 		movq	-48(%rbp), %rax
 4960 00be 4889D6   		movq	%rdx, %rsi
 4961 00c1 4889C7   		movq	%rax, %rdi
 4962 00c4 E8000000 		call	_ZNSt5dequeIcSaIcEE9push_backERKc
 4962      00
  99:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                             Storage.pop_front();
 4963              		.loc 30 99 0
 4964 00c9 488D45E0 		leaq	-32(%rbp), %rax
 4965 00cd 4889C7   		movq	%rax, %rdi
 4966 00d0 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv
 4966      00
 4967 00d5 4889C3   		movq	%rax, %rbx
 4968 00d8 488B45D0 		movq	-48(%rbp), %rax
 4969 00dc 4889C7   		movq	%rax, %rdi
 4970 00df E8000000 		call	_ZNSt5dequeIcSaIcEE5frontEv
 4970      00
 4971 00e4 0FB600   		movzbl	(%rax), %eax
 4972 00e7 8803     		movb	%al, (%rbx)
 100:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
 4973              		.loc 30 100 0
 4974 00e9 488B45D0 		movq	-48(%rbp), %rax
 4975 00ed 4889C7   		movq	%rax, %rdi
 4976 00f0 E8000000 		call	_ZNSt5dequeIcSaIcEE9pop_frontEv
 4976      00
 103:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         }
 4977              		.loc 30 103 0
 4978 00f5 488D45E0 		leaq	-32(%rbp), %rax
 4979 00f9 4889C7   		movq	%rax, %rdi
 4980 00fc E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv
 4980      00
  94:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                         {
 4981              		.loc 30 94 0
 4982 0101 EB91     		jmp	.L268
 4983              	.L271:
 106:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     }
 4984              		.loc 30 106 0
 4985 0103 488B45E0 		movq	-32(%rbp), %rax
 4986              	.L272:
 108:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             };
 4987              		.loc 30 108 0 discriminator 1
 4988 0107 488B5DE8 		movq	-24(%rbp), %rbx
 4989 010b 6448331C 		xorq	%fs:40, %rbx
 4989      25280000 
 4989      00
 4990 0114 7405     		je	.L273
 108:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             };
 4991              		.loc 30 108 0 is_stmt 0
 4992 0116 E8000000 		call	__stack_chk_fail
 4992      00
 4993              	.L273:
 4994 011b 4883C458 		addq	$88, %rsp
 4995 011f 5B       		popq	%rbx
 4996 0120 5D       		popq	%rbp
 4997              		.cfi_def_cfa 7, 8
 4998 0121 C3       		ret
GAS LISTING /tmp/ccX8BQhk.s 			page 343


 4999              		.cfi_endproc
 5000              	.LFE10457:
 5002              		.section	.text._ZNSt15_Deque_iteratorIcRKcPS0_EC2ERKS_IcRcPcE,"axG",@progbits,_ZNSt15_Deque_iterat
 5003              		.align 2
 5004              		.weak	_ZNSt15_Deque_iteratorIcRKcPS0_EC2ERKS_IcRcPcE
 5006              	_ZNSt15_Deque_iteratorIcRKcPS0_EC2ERKS_IcRcPcE:
 5007              	.LFB10459:
 149:/usr/include/c++/5/bits/stl_deque.h ****       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 5008              		.loc 3 149 0 is_stmt 1
 5009              		.cfi_startproc
 5010 0000 55       		pushq	%rbp
 5011              		.cfi_def_cfa_offset 16
 5012              		.cfi_offset 6, -16
 5013 0001 4889E5   		movq	%rsp, %rbp
 5014              		.cfi_def_cfa_register 6
 5015 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5016 0008 488975F0 		movq	%rsi, -16(%rbp)
 5017              	.LBB32:
 151:/usr/include/c++/5/bits/stl_deque.h **** 
 5018              		.loc 3 151 0
 5019 000c 488B45F0 		movq	-16(%rbp), %rax
 5020 0010 488B10   		movq	(%rax), %rdx
 5021 0013 488B45F8 		movq	-8(%rbp), %rax
 5022 0017 488910   		movq	%rdx, (%rax)
 5023 001a 488B45F0 		movq	-16(%rbp), %rax
 5024 001e 488B5008 		movq	8(%rax), %rdx
 5025 0022 488B45F8 		movq	-8(%rbp), %rax
 5026 0026 48895008 		movq	%rdx, 8(%rax)
 5027 002a 488B45F0 		movq	-16(%rbp), %rax
 5028 002e 488B5010 		movq	16(%rax), %rdx
 5029 0032 488B45F8 		movq	-8(%rbp), %rax
 5030 0036 48895010 		movq	%rdx, 16(%rax)
 5031 003a 488B45F0 		movq	-16(%rbp), %rax
 5032 003e 488B5018 		movq	24(%rax), %rdx
 5033 0042 488B45F8 		movq	-8(%rbp), %rax
 5034 0046 48895018 		movq	%rdx, 24(%rax)
 5035              	.LBE32:
 5036 004a 90       		nop
 5037 004b 5D       		popq	%rbp
 5038              		.cfi_def_cfa 7, 8
 5039 004c C3       		ret
 5040              		.cfi_endproc
 5041              	.LFE10459:
 5043              		.weak	_ZNSt15_Deque_iteratorIcRKcPS0_EC1ERKS_IcRcPcE
 5044              		.set	_ZNSt15_Deque_iteratorIcRKcPS0_EC1ERKS_IcRcPcE,_ZNSt15_Deque_iteratorIcRKcPS0_EC2ERKS_IcRcPcE
 5045              		.section	.text._ZNSt5dequeIcSaIcEE6insertIPKcvEESt15_Deque_iteratorIcRcPcES5_IcRS3_S4_ET_SB_,"axG"
 5046              		.align 2
 5047              		.weak	_ZNSt5dequeIcSaIcEE6insertIPKcvEESt15_Deque_iteratorIcRcPcES5_IcRS3_S4_ET_SB_
 5049              	_ZNSt5dequeIcSaIcEE6insertIPKcvEESt15_Deque_iteratorIcRcPcES5_IcRS3_S4_ET_SB_:
 5050              	.LFB10461:
1698:/usr/include/c++/5/bits/stl_deque.h **** 	       _InputIterator __last)
 5051              		.loc 3 1698 0
 5052              		.cfi_startproc
 5053 0000 55       		pushq	%rbp
 5054              		.cfi_def_cfa_offset 16
 5055              		.cfi_offset 6, -16
 5056 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 344


 5057              		.cfi_def_cfa_register 6
 5058 0004 53       		pushq	%rbx
 5059 0005 4883EC68 		subq	$104, %rsp
 5060              		.cfi_offset 3, -24
 5061 0009 48897DA8 		movq	%rdi, -88(%rbp)
 5062 000d 488975A0 		movq	%rsi, -96(%rbp)
 5063 0011 48895598 		movq	%rdx, -104(%rbp)
 5064 0015 48894D90 		movq	%rcx, -112(%rbp)
1698:/usr/include/c++/5/bits/stl_deque.h **** 	       _InputIterator __last)
 5065              		.loc 3 1698 0
 5066 0019 64488B04 		movq	%fs:40, %rax
 5066      25280000 
 5066      00
 5067 0022 488945E8 		movq	%rax, -24(%rbp)
 5068 0026 31C0     		xorl	%eax, %eax
1701:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_insert_dispatch(__position._M_const_cast(),
 5069              		.loc 3 1701 0
 5070 0028 488D45C0 		leaq	-64(%rbp), %rax
 5071 002c 488B55A0 		movq	-96(%rbp), %rdx
 5072 0030 4889D6   		movq	%rdx, %rsi
 5073 0033 4889C7   		movq	%rax, %rdi
 5074 0036 E8000000 		call	_ZNKSt5dequeIcSaIcEE6cbeginEv
 5074      00
 5075 003b 488D45C0 		leaq	-64(%rbp), %rax
 5076 003f 4889C6   		movq	%rax, %rsi
 5077 0042 488D7D10 		leaq	16(%rbp), %rdi
 5078 0046 E8000000 		call	_ZStmiIcRKcPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_
 5078      00
 5079 004b 488945B8 		movq	%rax, -72(%rbp)
1702:/usr/include/c++/5/bits/stl_deque.h **** 			     __first, __last, __false_type());
 5080              		.loc 3 1702 0
 5081 004f 488D45C0 		leaq	-64(%rbp), %rax
 5082 0053 488D7510 		leaq	16(%rbp), %rsi
 5083 0057 4889C7   		movq	%rax, %rdi
 5084 005a E8000000 		call	_ZNKSt15_Deque_iteratorIcRKcPS0_E13_M_const_castEv
 5084      00
 5085 005f 488B4D90 		movq	-112(%rbp), %rcx
 5086 0063 488B5598 		movq	-104(%rbp), %rdx
 5087 0067 488D75C0 		leaq	-64(%rbp), %rsi
 5088 006b 488B45A0 		movq	-96(%rbp), %rax
 5089 006f 4883EC08 		subq	$8, %rsp
 5090 0073 53       		pushq	%rbx
 5091 0074 4889C7   		movq	%rax, %rdi
 5092 0077 E8000000 		call	_ZNSt5dequeIcSaIcEE18_M_insert_dispatchIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St12__false_type
 5092      00
 5093 007c 4883C410 		addq	$16, %rsp
1704:/usr/include/c++/5/bits/stl_deque.h **** 	}
 5094              		.loc 3 1704 0
 5095 0080 488D45C0 		leaq	-64(%rbp), %rax
 5096 0084 488B55A0 		movq	-96(%rbp), %rdx
 5097 0088 4889D6   		movq	%rdx, %rsi
 5098 008b 4889C7   		movq	%rax, %rdi
 5099 008e E8000000 		call	_ZNSt5dequeIcSaIcEE5beginEv
 5099      00
 5100 0093 488B45A8 		movq	-88(%rbp), %rax
 5101 0097 488B55B8 		movq	-72(%rbp), %rdx
 5102 009b 488D4DC0 		leaq	-64(%rbp), %rcx
GAS LISTING /tmp/ccX8BQhk.s 			page 345


 5103 009f 4889CE   		movq	%rcx, %rsi
 5104 00a2 4889C7   		movq	%rax, %rdi
 5105 00a5 E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEplEl
 5105      00
1705:/usr/include/c++/5/bits/stl_deque.h **** #else
 5106              		.loc 3 1705 0
 5107 00aa 488B45A8 		movq	-88(%rbp), %rax
 5108 00ae 488B5DE8 		movq	-24(%rbp), %rbx
 5109 00b2 6448331C 		xorq	%fs:40, %rbx
 5109      25280000 
 5109      00
 5110 00bb 7405     		je	.L277
 5111 00bd E8000000 		call	__stack_chk_fail
 5111      00
 5112              	.L277:
 5113 00c2 488B5DF8 		movq	-8(%rbp), %rbx
 5114 00c6 C9       		leave
 5115              		.cfi_def_cfa 7, 8
 5116 00c7 C3       		ret
 5117              		.cfi_endproc
 5118              	.LFE10461:
 5120              		.section	.text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_strin
 5121              		.align 2
 5122              		.weak	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11ch
 5124              	_ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trai
 5125              	.LFB10462:
 508:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 509:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template<class SinglePassRange>
 510:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             iterator_range(const SinglePassRange& r,
 511:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                            iterator_range_detail::const_range_tag)
 512:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 : base_type(impl::adl_begin(r), impl::adl_end(r))
 513:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 514:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 515:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 516:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template<class SinglePassRange>
 517:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             iterator_range(SinglePassRange& r,
 518:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                            iterator_range_detail::range_tag)
 519:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 : base_type(impl::adl_begin(r), impl::adl_end(r))
 520:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 521:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 522:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 523:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template<class Iterator>
 524:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             iterator_range& operator=(const iterator_range<Iterator>& other)
 525:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 526:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 this->assign(other.begin(), other.end());
 527:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 return *this;
 528:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 529:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 530:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             template<class Iterator>
 531:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             iterator_range& operator=(iterator_range<Iterator>& other)
 5126              		.loc 23 531 0
 5127              		.cfi_startproc
 5128 0000 55       		pushq	%rbp
 5129              		.cfi_def_cfa_offset 16
 5130              		.cfi_offset 6, -16
 5131 0001 4889E5   		movq	%rsp, %rbp
 5132              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccX8BQhk.s 			page 346


 5133 0004 53       		pushq	%rbx
 5134 0005 4883EC18 		subq	$24, %rsp
 5135              		.cfi_offset 3, -24
 5136 0009 48897DE8 		movq	%rdi, -24(%rbp)
 5137 000d 488975E0 		movq	%rsi, -32(%rbp)
 532:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             {
 533:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 this->assign(other.begin(), other.end());
 5138              		.loc 23 533 0
 5139 0011 488B45E0 		movq	-32(%rbp), %rax
 5140 0015 4889C7   		movq	%rax, %rdi
 5141 0018 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 5141      00
 5142 001d 4889C3   		movq	%rax, %rbx
 5143 0020 488B45E0 		movq	-32(%rbp), %rax
 5144 0024 4889C7   		movq	%rax, %rdi
 5145 0027 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 5145      00
 5146 002c 4889C1   		movq	%rax, %rcx
 5147 002f 488B45E8 		movq	-24(%rbp), %rax
 5148 0033 4889DA   		movq	%rbx, %rdx
 5149 0036 4889CE   		movq	%rcx, %rsi
 5150 0039 4889C7   		movq	%rax, %rdi
 5151 003c E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 5151      00
 534:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****                 return *this;
 5152              		.loc 23 534 0
 5153 0041 488B45E8 		movq	-24(%rbp), %rax
 535:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****             }
 5154              		.loc 23 535 0
 5155 0045 4883C418 		addq	$24, %rsp
 5156 0049 5B       		popq	%rbx
 5157 004a 5D       		popq	%rbp
 5158              		.cfi_def_cfa 7, 8
 5159 004b C3       		ret
 5160              		.cfi_endproc
 5161              	.LFE10462:
 5163              		.section	.text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterat
 5164              		.align 2
 5165              		.weak	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7
 5167              	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx11
 5168              	.LFB10463:
 231:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 5169              		.loc 23 231 0
 5170              		.cfi_startproc
 5171 0000 55       		pushq	%rbp
 5172              		.cfi_def_cfa_offset 16
 5173              		.cfi_offset 6, -16
 5174 0001 4889E5   		movq	%rsp, %rbp
 5175              		.cfi_def_cfa_register 6
 5176 0004 4883EC10 		subq	$16, %rsp
 5177 0008 48897DF8 		movq	%rdi, -8(%rbp)
 233:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 5178              		.loc 23 233 0
 5179 000c 488B45F8 		movq	-8(%rbp), %rax
 5180 0010 488D5008 		leaq	8(%rax), %rdx
 5181 0014 488B45F8 		movq	-8(%rbp), %rax
 5182 0018 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccX8BQhk.s 			page 347


 5183 001b 4889C7   		movq	%rax, %rdi
 5184 001e E8000000 		call	_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iter
 5184      00
 234:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 5185              		.loc 23 234 0
 5186 0023 C9       		leave
 5187              		.cfi_def_cfa 7, 8
 5188 0024 C3       		ret
 5189              		.cfi_endproc
 5190              	.LFE10463:
 5192              		.section	.text._ZSteqIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_,"axG",@progbits,_ZSteqIcRcPcEbRKSt
 5193              		.weak	_ZSteqIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_
 5195              	_ZSteqIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_:
 5196              	.LFB10464:
 265:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 5197              		.loc 3 265 0
 5198              		.cfi_startproc
 5199 0000 55       		pushq	%rbp
 5200              		.cfi_def_cfa_offset 16
 5201              		.cfi_offset 6, -16
 5202 0001 4889E5   		movq	%rsp, %rbp
 5203              		.cfi_def_cfa_register 6
 5204 0004 48897DF8 		movq	%rdi, -8(%rbp)
 5205 0008 488975F0 		movq	%rsi, -16(%rbp)
 267:/usr/include/c++/5/bits/stl_deque.h **** 
 5206              		.loc 3 267 0
 5207 000c 488B45F8 		movq	-8(%rbp), %rax
 5208 0010 488B10   		movq	(%rax), %rdx
 5209 0013 488B45F0 		movq	-16(%rbp), %rax
 5210 0017 488B00   		movq	(%rax), %rax
 5211 001a 4839C2   		cmpq	%rax, %rdx
 5212 001d 0F94C0   		sete	%al
 5213 0020 5D       		popq	%rbp
 5214              		.cfi_def_cfa 7, 8
 5215 0021 C3       		ret
 5216              		.cfi_endproc
 5217              	.LFE10464:
 5219              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertISt15_Deque_iteratorIcR
 5220              		.align 2
 5221              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertISt15_Deque_iteratorIcRcPcEvEEN9
 5223              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertISt15_Deque_iteratorIcRcPcEvEEN9__gnu_c
 5224              	.LFB10466:
1273:/usr/include/c++/5/bits/basic_string.h ****         {
 5225              		.loc 11 1273 0
 5226              		.cfi_startproc
 5227 0000 55       		pushq	%rbp
 5228              		.cfi_def_cfa_offset 16
 5229              		.cfi_offset 6, -16
 5230 0001 4889E5   		movq	%rsp, %rbp
 5231              		.cfi_def_cfa_register 6
 5232 0004 4883C480 		addq	$-128, %rsp
 5233 0008 48897D98 		movq	%rdi, -104(%rbp)
 5234 000c 48897590 		movq	%rsi, -112(%rbp)
 5235 0010 48895588 		movq	%rdx, -120(%rbp)
 5236 0014 48894D80 		movq	%rcx, -128(%rbp)
1273:/usr/include/c++/5/bits/basic_string.h ****         {
 5237              		.loc 11 1273 0
GAS LISTING /tmp/ccX8BQhk.s 			page 348


 5238 0018 64488B04 		movq	%fs:40, %rax
 5238      25280000 
 5238      00
 5239 0021 488945F8 		movq	%rax, -8(%rbp)
 5240 0025 31C0     		xorl	%eax, %eax
1276:/usr/include/c++/5/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
 5241              		.loc 11 1276 0
 5242 0027 488B4598 		movq	-104(%rbp), %rax
 5243 002b 4889C7   		movq	%rax, %rdi
 5244 002e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
 5244      00
 5245 0033 488945D0 		movq	%rax, -48(%rbp)
 5246 0037 488D55D0 		leaq	-48(%rbp), %rdx
 5247 003b 488D4590 		leaq	-112(%rbp), %rax
 5248 003f 4889D6   		movq	%rdx, %rsi
 5249 0042 4889C7   		movq	%rax, %rdi
 5250 0045 E8000000 		call	_ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseEc
 5250      00
 5251 004a 488945A8 		movq	%rax, -88(%rbp)
1277:/usr/include/c++/5/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
 5252              		.loc 11 1277 0
 5253 004e 488B5580 		movq	-128(%rbp), %rdx
 5254 0052 488D45D0 		leaq	-48(%rbp), %rax
 5255 0056 4889D6   		movq	%rdx, %rsi
 5256 0059 4889C7   		movq	%rax, %rdi
 5257 005c E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 5257      00
 5258 0061 488B5588 		movq	-120(%rbp), %rdx
 5259 0065 488D45B0 		leaq	-80(%rbp), %rax
 5260 0069 4889D6   		movq	%rdx, %rsi
 5261 006c 4889C7   		movq	%rax, %rdi
 5262 006f E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 5262      00
 5263 0074 488D7DD0 		leaq	-48(%rbp), %rdi
 5264 0078 488D4DB0 		leaq	-80(%rbp), %rcx
 5265 007c 488B5590 		movq	-112(%rbp), %rdx
 5266 0080 488B7590 		movq	-112(%rbp), %rsi
 5267 0084 488B4598 		movq	-104(%rbp), %rax
 5268 0088 4989F8   		movq	%rdi, %r8
 5269 008b 4889C7   		movq	%rax, %rdi
 5270 008e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceISt15_Deque_iteratorIcRcPcEvEERS
 5270      00
1278:/usr/include/c++/5/bits/basic_string.h **** 	}
 5271              		.loc 11 1278 0
 5272 0093 488B4598 		movq	-104(%rbp), %rax
 5273 0097 4889C7   		movq	%rax, %rdi
 5274 009a E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
 5274      00
 5275 009f 4889C2   		movq	%rax, %rdx
 5276 00a2 488B45A8 		movq	-88(%rbp), %rax
 5277 00a6 4801D0   		addq	%rdx, %rax
 5278 00a9 488945D0 		movq	%rax, -48(%rbp)
 5279 00ad 488D55D0 		leaq	-48(%rbp), %rdx
 5280 00b1 488D45B0 		leaq	-80(%rbp), %rax
 5281 00b5 4889D6   		movq	%rdx, %rsi
 5282 00b8 4889C7   		movq	%rax, %rdi
 5283 00bb E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERK
GAS LISTING /tmp/ccX8BQhk.s 			page 349


 5283      00
 5284 00c0 488B45B0 		movq	-80(%rbp), %rax
1279:/usr/include/c++/5/bits/basic_string.h **** #else
 5285              		.loc 11 1279 0
 5286 00c4 488B4DF8 		movq	-8(%rbp), %rcx
 5287 00c8 6448330C 		xorq	%fs:40, %rcx
 5287      25280000 
 5287      00
 5288 00d1 7405     		je	.L286
 5289 00d3 E8000000 		call	__stack_chk_fail
 5289      00
 5290              	.L286:
 5291 00d8 C9       		leave
 5292              		.cfi_def_cfa 7, 8
 5293 00d9 C3       		ret
 5294              		.cfi_endproc
 5295              	.LFE10466:
 5297              		.section	.text._ZN5boost21iterator_range_detail18iterator_range_tagC2Ev,"axG",@progbits,_ZN5boost2
 5298              		.align 2
 5299              		.weak	_ZN5boost21iterator_range_detail18iterator_range_tagC2Ev
 5301              	_ZN5boost21iterator_range_detail18iterator_range_tagC2Ev:
 5302              	.LFB10471:
 122:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 5303              		.loc 23 122 0
 5304              		.cfi_startproc
 5305 0000 55       		pushq	%rbp
 5306              		.cfi_def_cfa_offset 16
 5307              		.cfi_offset 6, -16
 5308 0001 4889E5   		movq	%rsp, %rbp
 5309              		.cfi_def_cfa_register 6
 5310 0004 48897DF8 		movq	%rdi, -8(%rbp)
 122:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** {
 5311              		.loc 23 122 0
 5312 0008 90       		nop
 5313 0009 5D       		popq	%rbp
 5314              		.cfi_def_cfa 7, 8
 5315 000a C3       		ret
 5316              		.cfi_endproc
 5317              	.LFE10471:
 5319              		.weak	_ZN5boost21iterator_range_detail18iterator_range_tagC1Ev
 5320              		.set	_ZN5boost21iterator_range_detail18iterator_range_tagC1Ev,_ZN5boost21iterator_range_detail18it
 5321              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementab
 5322              		.align 2
 5323              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traver
 5325              	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tag
 5326              	.LFB10473:
 214:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : m_Begin(Begin)
 5327              		.loc 23 214 0
 5328              		.cfi_startproc
 5329 0000 55       		pushq	%rbp
 5330              		.cfi_def_cfa_offset 16
 5331              		.cfi_offset 6, -16
 5332 0001 4889E5   		movq	%rsp, %rbp
 5333              		.cfi_def_cfa_register 6
 5334 0004 4883EC20 		subq	$32, %rsp
 5335 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5336 000c 488975F0 		movq	%rsi, -16(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 350


 5337 0010 488955E8 		movq	%rdx, -24(%rbp)
 5338              	.LBB33:
 216:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 5339              		.loc 23 216 0
 5340 0014 488B45F8 		movq	-8(%rbp), %rax
 5341 0018 4889C7   		movq	%rax, %rdi
 5342 001b E8000000 		call	_ZN5boost21iterator_range_detail18iterator_range_tagC2Ev
 5342      00
 5343 0020 488B45F8 		movq	-8(%rbp), %rax
 5344 0024 488B55F0 		movq	-16(%rbp), %rdx
 5345 0028 488910   		movq	%rdx, (%rax)
 5346 002b 488B45F8 		movq	-8(%rbp), %rax
 5347 002f 488B55E8 		movq	-24(%rbp), %rdx
 5348 0033 48895008 		movq	%rdx, 8(%rax)
 5349              	.LBE33:
 218:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 5350              		.loc 23 218 0
 5351 0037 90       		nop
 5352 0038 C9       		leave
 5353              		.cfi_def_cfa 7, 8
 5354 0039 C3       		ret
 5355              		.cfi_endproc
 5356              	.LFE10473:
 5358              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traver
 5359              		.set	_ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_travers
 5360              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterato
 5361              		.align 2
 5362              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7
 5364              	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx11
 5365              	.LFB10476:
 311:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : base_type(first, last)
 5366              		.loc 23 311 0
 5367              		.cfi_startproc
 5368 0000 55       		pushq	%rbp
 5369              		.cfi_def_cfa_offset 16
 5370              		.cfi_offset 6, -16
 5371 0001 4889E5   		movq	%rsp, %rbp
 5372              		.cfi_def_cfa_register 6
 5373 0004 4883EC20 		subq	$32, %rsp
 5374 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5375 000c 488975F0 		movq	%rsi, -16(%rbp)
 5376 0010 488955E0 		movq	%rdx, -32(%rbp)
 5377              	.LBB34:
 312:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 5378              		.loc 23 312 0
 5379 0014 488B45F8 		movq	-8(%rbp), %rax
 5380 0018 488B55E0 		movq	-32(%rbp), %rdx
 5381 001c 488B4DF0 		movq	-16(%rbp), %rcx
 5382 0020 4889CE   		movq	%rcx, %rsi
 5383 0023 4889C7   		movq	%rax, %rdi
 5384 0026 E8000000 		call	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7_
 5384      00
 5385              	.LBE34:
 314:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 5386              		.loc 23 314 0
 5387 002b 90       		nop
 5388 002c C9       		leave
GAS LISTING /tmp/ccX8BQhk.s 			page 351


 5389              		.cfi_def_cfa 7, 8
 5390 002d C3       		ret
 5391              		.cfi_endproc
 5392              	.LFE10476:
 5394              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7
 5395              		.set	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7_
 5396              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterato
 5397              		.align 2
 5398              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 5400              	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx111
 5401              	.LFB10479:
 214:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : m_Begin(Begin)
 5402              		.loc 23 214 0
 5403              		.cfi_startproc
 5404 0000 55       		pushq	%rbp
 5405              		.cfi_def_cfa_offset 16
 5406              		.cfi_offset 6, -16
 5407 0001 4889E5   		movq	%rsp, %rbp
 5408              		.cfi_def_cfa_register 6
 5409 0004 4883EC20 		subq	$32, %rsp
 5410 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5411 000c 488975F0 		movq	%rsi, -16(%rbp)
 5412 0010 488955E0 		movq	%rdx, -32(%rbp)
 5413              	.LBB35:
 216:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 5414              		.loc 23 216 0
 5415 0014 488B45F8 		movq	-8(%rbp), %rax
 5416 0018 4889C7   		movq	%rax, %rdi
 5417 001b E8000000 		call	_ZN5boost21iterator_range_detail18iterator_range_tagC2Ev
 5417      00
 5418 0020 488B45F8 		movq	-8(%rbp), %rax
 5419 0024 488B55F0 		movq	-16(%rbp), %rdx
 5420 0028 488910   		movq	%rdx, (%rax)
 5421 002b 488B45F8 		movq	-8(%rbp), %rax
 5422 002f 488B55E0 		movq	-32(%rbp), %rdx
 5423 0033 48895008 		movq	%rdx, 8(%rax)
 5424              	.LBE35:
 218:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 5425              		.loc 23 218 0
 5426 0037 90       		nop
 5427 0038 C9       		leave
 5428              		.cfi_def_cfa 7, 8
 5429 0039 C3       		ret
 5430              		.cfi_endproc
 5431              	.LFE10479:
 5433              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 5434              		.set	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__
 5435              		.section	.text._ZN5boost12range_detail11range_beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iter
 5436              		.weak	_ZN5boost12range_detail11range_beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNS
 5438              	_ZN5boost12range_detail11range_beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx
 5439              	.LFB10481:
  40:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     {
 5440              		.loc 19 40 0
 5441              		.cfi_startproc
 5442 0000 55       		pushq	%rbp
 5443              		.cfi_def_cfa_offset 16
 5444              		.cfi_offset 6, -16
GAS LISTING /tmp/ccX8BQhk.s 			page 352


 5445 0001 4889E5   		movq	%rsp, %rbp
 5446              		.cfi_def_cfa_register 6
 5447 0004 4883EC10 		subq	$16, %rsp
 5448 0008 48897DF8 		movq	%rdi, -8(%rbp)
  47:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp ****     }
 5449              		.loc 19 47 0
 5450 000c 488B45F8 		movq	-8(%rbp), %rax
 5451 0010 4889C7   		movq	%rax, %rdi
 5452 0013 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 5452      00
  48:/home/brendan/Boost/boost_1_60_0/boost/range/begin.hpp **** 
 5453              		.loc 19 48 0
 5454 0018 C9       		leave
 5455              		.cfi_def_cfa 7, 8
 5456 0019 C3       		ret
 5457              		.cfi_endproc
 5458              	.LFE10481:
 5460              		.section	.text._ZN5boost12range_detail9range_endINS_14iterator_rangeIN9__gnu_cxx17__normal_iterato
 5461              		.weak	_ZN5boost12range_detail9range_endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 5463              	_ZN5boost12range_detail9range_endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx111
 5464              	.LFB10482:
  41:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         {
 5465              		.loc 20 41 0
 5466              		.cfi_startproc
 5467 0000 55       		pushq	%rbp
 5468              		.cfi_def_cfa_offset 16
 5469              		.cfi_offset 6, -16
 5470 0001 4889E5   		movq	%rsp, %rbp
 5471              		.cfi_def_cfa_register 6
 5472 0004 4883EC10 		subq	$16, %rsp
 5473 0008 48897DF8 		movq	%rdi, -8(%rbp)
  48:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp ****         }
 5474              		.loc 20 48 0
 5475 000c 488B45F8 		movq	-8(%rbp), %rax
 5476 0010 4889C7   		movq	%rax, %rdi
 5477 0013 E8000000 		call	_ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 5477      00
  49:/home/brendan/Boost/boost_1_60_0/boost/range/end.hpp **** 
 5478              		.loc 20 49 0
 5479 0018 C9       		leave
 5480              		.cfi_def_cfa 7, 8
 5481 0019 C3       		ret
 5482              		.cfi_endproc
 5483              	.LFE10482:
 5485              		.section	.text._ZNSt11_Deque_baseIcSaIcEE11_Deque_implC2Ev,"axG",@progbits,_ZNSt11_Deque_baseIcSaI
 5486              		.align 2
 5487              		.weak	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implC2Ev
 5489              	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implC2Ev:
 5490              	.LFB10484:
 556:/usr/include/c++/5/bits/stl_deque.h **** 	: _Tp_alloc_type(), _M_map(), _M_map_size(0),
 5491              		.loc 3 556 0
 5492              		.cfi_startproc
 5493 0000 55       		pushq	%rbp
 5494              		.cfi_def_cfa_offset 16
 5495              		.cfi_offset 6, -16
 5496 0001 4889E5   		movq	%rsp, %rbp
 5497              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccX8BQhk.s 			page 353


 5498 0004 4883EC10 		subq	$16, %rsp
 5499 0008 48897DF8 		movq	%rdi, -8(%rbp)
 5500              	.LBB36:
 558:/usr/include/c++/5/bits/stl_deque.h **** 	{ }
 5501              		.loc 3 558 0
 5502 000c 488B45F8 		movq	-8(%rbp), %rax
 5503 0010 4889C7   		movq	%rax, %rdi
 5504 0013 E8000000 		call	_ZNSaIcEC2Ev
 5504      00
 5505 0018 488B45F8 		movq	-8(%rbp), %rax
 5506 001c 48C70000 		movq	$0, (%rax)
 5506      000000
 5507 0023 488B45F8 		movq	-8(%rbp), %rax
 5508 0027 48C74008 		movq	$0, 8(%rax)
 5508      00000000 
 5509 002f 488B45F8 		movq	-8(%rbp), %rax
 5510 0033 4883C010 		addq	$16, %rax
 5511 0037 4889C7   		movq	%rax, %rdi
 5512 003a E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1Ev
 5512      00
 5513 003f 488B45F8 		movq	-8(%rbp), %rax
 5514 0043 4883C030 		addq	$48, %rax
 5515 0047 4889C7   		movq	%rax, %rdi
 5516 004a E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1Ev
 5516      00
 5517              	.LBE36:
 559:/usr/include/c++/5/bits/stl_deque.h **** 
 5518              		.loc 3 559 0
 5519 004f 90       		nop
 5520 0050 C9       		leave
 5521              		.cfi_def_cfa 7, 8
 5522 0051 C3       		ret
 5523              		.cfi_endproc
 5524              	.LFE10484:
 5526              		.weak	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implC1Ev
 5527              		.set	_ZNSt11_Deque_baseIcSaIcEE11_Deque_implC1Ev,_ZNSt11_Deque_baseIcSaIcEE11_Deque_implC2Ev
 5528              		.section	.text._ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseI
 5529              		.align 2
 5530              		.weak	_ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEm
 5532              	_ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEm:
 5533              	.LFB10486:
 680:/usr/include/c++/5/bits/stl_deque.h ****     _M_initialize_map(size_t __num_elements)
 5534              		.loc 3 680 0
 5535              		.cfi_startproc
 5536              		.cfi_personality 0x3,__gxx_personality_v0
 5537              		.cfi_lsda 0x3,.LLSDA10486
 5538 0000 55       		pushq	%rbp
 5539              		.cfi_def_cfa_offset 16
 5540              		.cfi_offset 6, -16
 5541 0001 4889E5   		movq	%rsp, %rbp
 5542              		.cfi_def_cfa_register 6
 5543 0004 53       		pushq	%rbx
 5544 0005 4883EC48 		subq	$72, %rsp
 5545              		.cfi_offset 3, -24
 5546 0009 48897DB8 		movq	%rdi, -72(%rbp)
 5547 000d 488975B0 		movq	%rsi, -80(%rbp)
 680:/usr/include/c++/5/bits/stl_deque.h ****     _M_initialize_map(size_t __num_elements)
GAS LISTING /tmp/ccX8BQhk.s 			page 354


 5548              		.loc 3 680 0
 5549 0011 64488B04 		movq	%fs:40, %rax
 5549      25280000 
 5549      00
 5550 001a 488945E8 		movq	%rax, -24(%rbp)
 5551 001e 31C0     		xorl	%eax, %eax
 683:/usr/include/c++/5/bits/stl_deque.h **** 				  + 1);
 5552              		.loc 3 683 0
 5553 0020 BF010000 		movl	$1, %edi
 5553      00
 5554 0025 E8000000 		call	_ZSt16__deque_buf_sizem
 5554      00
 5555 002a 4889C3   		movq	%rax, %rbx
 684:/usr/include/c++/5/bits/stl_deque.h **** 
 5556              		.loc 3 684 0
 5557 002d 488B45B0 		movq	-80(%rbp), %rax
 5558 0031 BA000000 		movl	$0, %edx
 5558      00
 5559 0036 48F7F3   		divq	%rbx
 5560 0039 4883C001 		addq	$1, %rax
 5561 003d 488945D0 		movq	%rax, -48(%rbp)
 687:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
 5562              		.loc 3 687 0
 5563 0041 488B45D0 		movq	-48(%rbp), %rax
 5564 0045 4883C002 		addq	$2, %rax
 5565 0049 488945C8 		movq	%rax, -56(%rbp)
 5566 004d 48C745C0 		movq	$8, -64(%rbp)
 5566      08000000 
 5567 0055 488D55C8 		leaq	-56(%rbp), %rdx
 5568 0059 488D45C0 		leaq	-64(%rbp), %rax
 5569 005d 4889D6   		movq	%rdx, %rsi
 5570 0060 4889C7   		movq	%rax, %rdi
 5571 0063 E8000000 		call	_ZSt3maxImERKT_S2_S2_
 5571      00
 686:/usr/include/c++/5/bits/stl_deque.h **** 					   size_t(__num_nodes + 2));
 5572              		.loc 3 686 0
 5573 0068 488B10   		movq	(%rax), %rdx
 5574 006b 488B45B8 		movq	-72(%rbp), %rax
 5575 006f 48895008 		movq	%rdx, 8(%rax)
 688:/usr/include/c++/5/bits/stl_deque.h **** 
 5576              		.loc 3 688 0
 5577 0073 488B45B8 		movq	-72(%rbp), %rax
 5578 0077 488B5008 		movq	8(%rax), %rdx
 5579 007b 488B45B8 		movq	-72(%rbp), %rax
 5580 007f 4889D6   		movq	%rdx, %rsi
 5581 0082 4889C7   		movq	%rax, %rdi
 5582              	.LEHB28:
 5583 0085 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE15_M_allocate_mapEm
 5583      00
 5584              	.LEHE28:
 5585 008a 4889C2   		movq	%rax, %rdx
 5586 008d 488B45B8 		movq	-72(%rbp), %rax
 5587 0091 488910   		movq	%rdx, (%rax)
 696:/usr/include/c++/5/bits/stl_deque.h ****       _Map_pointer __nfinish = __nstart + __num_nodes;
 5588              		.loc 3 696 0
 5589 0094 488B45B8 		movq	-72(%rbp), %rax
 5590 0098 488B10   		movq	(%rax), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 355


 5591 009b 488B45B8 		movq	-72(%rbp), %rax
 5592 009f 488B4008 		movq	8(%rax), %rax
 5593 00a3 482B45D0 		subq	-48(%rbp), %rax
 5594 00a7 48D1E8   		shrq	%rax
 5595 00aa 48C1E003 		salq	$3, %rax
 5596 00ae 4801D0   		addq	%rdx, %rax
 5597 00b1 488945D8 		movq	%rax, -40(%rbp)
 697:/usr/include/c++/5/bits/stl_deque.h **** 
 5598              		.loc 3 697 0
 5599 00b5 488B45D0 		movq	-48(%rbp), %rax
 5600 00b9 488D14C5 		leaq	0(,%rax,8), %rdx
 5600      00000000 
 5601 00c1 488B45D8 		movq	-40(%rbp), %rax
 5602 00c5 4801D0   		addq	%rdx, %rax
 5603 00c8 488945E0 		movq	%rax, -32(%rbp)
 700:/usr/include/c++/5/bits/stl_deque.h ****       __catch(...)
 5604              		.loc 3 700 0
 5605 00cc 488B55E0 		movq	-32(%rbp), %rdx
 5606 00d0 488B4DD8 		movq	-40(%rbp), %rcx
 5607 00d4 488B45B8 		movq	-72(%rbp), %rax
 5608 00d8 4889CE   		movq	%rcx, %rsi
 5609 00db 4889C7   		movq	%rax, %rdi
 5610              	.LEHB29:
 5611 00de E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE15_M_create_nodesEPPcS3_
 5611      00
 5612              	.LEHE29:
 709:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_finish._M_set_node(__nfinish - 1);
 5613              		.loc 3 709 0
 5614 00e3 488B45B8 		movq	-72(%rbp), %rax
 5615 00e7 488D5010 		leaq	16(%rax), %rdx
 5616 00eb 488B45D8 		movq	-40(%rbp), %rax
 5617 00ef 4889C6   		movq	%rax, %rsi
 5618 00f2 4889D7   		movq	%rdx, %rdi
 5619 00f5 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
 5619      00
 710:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
 5620              		.loc 3 710 0
 5621 00fa 488B45E0 		movq	-32(%rbp), %rax
 5622 00fe 488D50F8 		leaq	-8(%rax), %rdx
 5623 0102 488B45B8 		movq	-72(%rbp), %rax
 5624 0106 4883C030 		addq	$48, %rax
 5625 010a 4889D6   		movq	%rdx, %rsi
 5626 010d 4889C7   		movq	%rax, %rdi
 5627 0110 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
 5627      00
 711:/usr/include/c++/5/bits/stl_deque.h ****       this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 5628              		.loc 3 711 0
 5629 0115 488B45B8 		movq	-72(%rbp), %rax
 5630 0119 488B5018 		movq	24(%rax), %rdx
 5631 011d 488B45B8 		movq	-72(%rbp), %rax
 5632 0121 48895010 		movq	%rdx, 16(%rax)
 713:/usr/include/c++/5/bits/stl_deque.h **** 					% __deque_buf_size(sizeof(_Tp)));
 5633              		.loc 3 713 0
 5634 0125 488B45B8 		movq	-72(%rbp), %rax
 5635 0129 488B5838 		movq	56(%rax), %rbx
 714:/usr/include/c++/5/bits/stl_deque.h ****     }
 5636              		.loc 3 714 0
GAS LISTING /tmp/ccX8BQhk.s 			page 356


 5637 012d BF010000 		movl	$1, %edi
 5637      00
 5638 0132 E8000000 		call	_ZSt16__deque_buf_sizem
 5638      00
 5639 0137 4889C1   		movq	%rax, %rcx
 713:/usr/include/c++/5/bits/stl_deque.h **** 					% __deque_buf_size(sizeof(_Tp)));
 5640              		.loc 3 713 0
 5641 013a 488B45B0 		movq	-80(%rbp), %rax
 5642 013e BA000000 		movl	$0, %edx
 5642      00
 5643 0143 48F7F1   		divq	%rcx
 5644 0146 4889D0   		movq	%rdx, %rax
 5645 0149 488D1403 		leaq	(%rbx,%rax), %rdx
 712:/usr/include/c++/5/bits/stl_deque.h **** 					+ __num_elements
 5646              		.loc 3 712 0
 5647 014d 488B45B8 		movq	-72(%rbp), %rax
 5648 0151 48895030 		movq	%rdx, 48(%rax)
 715:/usr/include/c++/5/bits/stl_deque.h **** 
 5649              		.loc 3 715 0
 5650 0155 90       		nop
 5651 0156 488B45E8 		movq	-24(%rbp), %rax
 5652 015a 64483304 		xorq	%fs:40, %rax
 5652      25280000 
 5652      00
 5653 0163 745C     		je	.L299
 5654 0165 EB55     		jmp	.L302
 5655              	.L300:
 701:/usr/include/c++/5/bits/stl_deque.h **** 	{
 5656              		.loc 3 701 0
 5657 0167 4889C7   		movq	%rax, %rdi
 5658 016a E8000000 		call	__cxa_begin_catch
 5658      00
 703:/usr/include/c++/5/bits/stl_deque.h **** 	  this->_M_impl._M_map = _Map_pointer();
 5659              		.loc 3 703 0
 5660 016f 488B45B8 		movq	-72(%rbp), %rax
 5661 0173 488B5008 		movq	8(%rax), %rdx
 5662 0177 488B45B8 		movq	-72(%rbp), %rax
 5663 017b 488B08   		movq	(%rax), %rcx
 5664 017e 488B45B8 		movq	-72(%rbp), %rax
 5665 0182 4889CE   		movq	%rcx, %rsi
 5666 0185 4889C7   		movq	%rax, %rdi
 5667 0188 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE17_M_deallocate_mapEPPcm
 5667      00
 704:/usr/include/c++/5/bits/stl_deque.h **** 	  this->_M_impl._M_map_size = 0;
 5668              		.loc 3 704 0
 5669 018d 488B45B8 		movq	-72(%rbp), %rax
 5670 0191 48C70000 		movq	$0, (%rax)
 5670      000000
 705:/usr/include/c++/5/bits/stl_deque.h **** 	  __throw_exception_again;
 5671              		.loc 3 705 0
 5672 0198 488B45B8 		movq	-72(%rbp), %rax
 5673 019c 48C74008 		movq	$0, 8(%rax)
 5673      00000000 
 5674              	.LEHB30:
 706:/usr/include/c++/5/bits/stl_deque.h **** 	}
 5675              		.loc 3 706 0
 5676 01a4 E8000000 		call	__cxa_rethrow
GAS LISTING /tmp/ccX8BQhk.s 			page 357


 5676      00
 5677              	.LEHE30:
 5678              	.L301:
 5679 01a9 4889C3   		movq	%rax, %rbx
 701:/usr/include/c++/5/bits/stl_deque.h **** 	{
 5680              		.loc 3 701 0
 5681 01ac E8000000 		call	__cxa_end_catch
 5681      00
 5682 01b1 4889D8   		movq	%rbx, %rax
 5683 01b4 4889C7   		movq	%rax, %rdi
 5684              	.LEHB31:
 5685 01b7 E8000000 		call	_Unwind_Resume
 5685      00
 5686              	.LEHE31:
 5687              	.L302:
 715:/usr/include/c++/5/bits/stl_deque.h **** 
 5688              		.loc 3 715 0
 5689 01bc E8000000 		call	__stack_chk_fail
 5689      00
 5690              	.L299:
 5691 01c1 4883C448 		addq	$72, %rsp
 5692 01c5 5B       		popq	%rbx
 5693 01c6 5D       		popq	%rbp
 5694              		.cfi_def_cfa 7, 8
 5695 01c7 C3       		ret
 5696              		.cfi_endproc
 5697              	.LFE10486:
 5698              		.section	.gcc_except_table
 5699 009e 0000     		.align 4
 5700              	.LLSDA10486:
 5701 00a0 FF       		.byte	0xff
 5702 00a1 03       		.byte	0x3
 5703 00a2 21       		.uleb128 .LLSDATT10486-.LLSDATTD10486
 5704              	.LLSDATTD10486:
 5705 00a3 01       		.byte	0x1
 5706 00a4 16       		.uleb128 .LLSDACSE10486-.LLSDACSB10486
 5707              	.LLSDACSB10486:
 5708 00a5 8501     		.uleb128 .LEHB28-.LFB10486
 5709 00a7 05       		.uleb128 .LEHE28-.LEHB28
 5710 00a8 00       		.uleb128 0
 5711 00a9 00       		.uleb128 0
 5712 00aa DE01     		.uleb128 .LEHB29-.LFB10486
 5713 00ac 05       		.uleb128 .LEHE29-.LEHB29
 5714 00ad E702     		.uleb128 .L300-.LFB10486
 5715 00af 01       		.uleb128 0x1
 5716 00b0 A403     		.uleb128 .LEHB30-.LFB10486
 5717 00b2 05       		.uleb128 .LEHE30-.LEHB30
 5718 00b3 A903     		.uleb128 .L301-.LFB10486
 5719 00b5 00       		.uleb128 0
 5720 00b6 B703     		.uleb128 .LEHB31-.LFB10486
 5721 00b8 05       		.uleb128 .LEHE31-.LEHB31
 5722 00b9 00       		.uleb128 0
 5723 00ba 00       		.uleb128 0
 5724              	.LLSDACSE10486:
 5725 00bb 01       		.byte	0x1
 5726 00bc 00       		.byte	0
 5727 00bd 000000   		.align 4
GAS LISTING /tmp/ccX8BQhk.s 			page 358


 5728 00c0 00000000 		.long	0
 5729              	
 5730              	.LLSDATT10486:
 5731              		.section	.text._ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEm,"axG",@progbits,_ZNSt11_Deque_baseI
 5733              		.section	.text._ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_,"axG",@progbits,_ZNSt11_Deque_b
 5734              		.align 2
 5735              		.weak	_ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_
 5737              	_ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_:
 5738              	.LFB10487:
 737:/usr/include/c++/5/bits/stl_deque.h ****     _M_destroy_nodes(_Map_pointer __nstart,
 5739              		.loc 3 737 0
 5740              		.cfi_startproc
 5741 0000 55       		pushq	%rbp
 5742              		.cfi_def_cfa_offset 16
 5743              		.cfi_offset 6, -16
 5744 0001 4889E5   		movq	%rsp, %rbp
 5745              		.cfi_def_cfa_register 6
 5746 0004 4883EC30 		subq	$48, %rsp
 5747 0008 48897DE8 		movq	%rdi, -24(%rbp)
 5748 000c 488975E0 		movq	%rsi, -32(%rbp)
 5749 0010 488955D8 		movq	%rdx, -40(%rbp)
 5750              	.LBB37:
 741:/usr/include/c++/5/bits/stl_deque.h **** 	_M_deallocate_node(*__n);
 5751              		.loc 3 741 0
 5752 0014 488B45E0 		movq	-32(%rbp), %rax
 5753 0018 488945F8 		movq	%rax, -8(%rbp)
 5754              	.L305:
 741:/usr/include/c++/5/bits/stl_deque.h **** 	_M_deallocate_node(*__n);
 5755              		.loc 3 741 0 is_stmt 0 discriminator 3
 5756 001c 488B45F8 		movq	-8(%rbp), %rax
 5757 0020 483B45D8 		cmpq	-40(%rbp), %rax
 5758 0024 731D     		jnb	.L306
 742:/usr/include/c++/5/bits/stl_deque.h ****     }
 5759              		.loc 3 742 0 is_stmt 1 discriminator 2
 5760 0026 488B45F8 		movq	-8(%rbp), %rax
 5761 002a 488B10   		movq	(%rax), %rdx
 5762 002d 488B45E8 		movq	-24(%rbp), %rax
 5763 0031 4889D6   		movq	%rdx, %rsi
 5764 0034 4889C7   		movq	%rax, %rdi
 5765 0037 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE18_M_deallocate_nodeEPc
 5765      00
 741:/usr/include/c++/5/bits/stl_deque.h **** 	_M_deallocate_node(*__n);
 5766              		.loc 3 741 0 discriminator 2
 5767 003c 488345F8 		addq	$8, -8(%rbp)
 5767      08
 5768 0041 EBD9     		jmp	.L305
 5769              	.L306:
 5770              	.LBE37:
 743:/usr/include/c++/5/bits/stl_deque.h **** 
 5771              		.loc 3 743 0
 5772 0043 90       		nop
 5773 0044 C9       		leave
 5774              		.cfi_def_cfa 7, 8
 5775 0045 C3       		ret
 5776              		.cfi_endproc
 5777              	.LFE10487:
 5779              		.section	.text._ZNSt11_Deque_baseIcSaIcEE17_M_deallocate_mapEPPcm,"axG",@progbits,_ZNSt11_Deque_ba
GAS LISTING /tmp/ccX8BQhk.s 			page 359


 5780              		.align 2
 5781              		.weak	_ZNSt11_Deque_baseIcSaIcEE17_M_deallocate_mapEPPcm
 5783              	_ZNSt11_Deque_baseIcSaIcEE17_M_deallocate_mapEPPcm:
 5784              	.LFB10488:
 619:/usr/include/c++/5/bits/stl_deque.h ****       {
 5785              		.loc 3 619 0
 5786              		.cfi_startproc
 5787              		.cfi_personality 0x3,__gxx_personality_v0
 5788              		.cfi_lsda 0x3,.LLSDA10488
 5789 0000 55       		pushq	%rbp
 5790              		.cfi_def_cfa_offset 16
 5791              		.cfi_offset 6, -16
 5792 0001 4889E5   		movq	%rsp, %rbp
 5793              		.cfi_def_cfa_register 6
 5794 0004 4883EC30 		subq	$48, %rsp
 5795 0008 48897DE8 		movq	%rdi, -24(%rbp)
 5796 000c 488975E0 		movq	%rsi, -32(%rbp)
 5797 0010 488955D8 		movq	%rdx, -40(%rbp)
 619:/usr/include/c++/5/bits/stl_deque.h ****       {
 5798              		.loc 3 619 0
 5799 0014 64488B04 		movq	%fs:40, %rax
 5799      25280000 
 5799      00
 5800 001d 488945F8 		movq	%rax, -8(%rbp)
 5801 0021 31C0     		xorl	%eax, %eax
 621:/usr/include/c++/5/bits/stl_deque.h **** 	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
 5802              		.loc 3 621 0
 5803 0023 488D45F7 		leaq	-9(%rbp), %rax
 5804 0027 488B55E8 		movq	-24(%rbp), %rdx
 5805 002b 4889D6   		movq	%rdx, %rsi
 5806 002e 4889C7   		movq	%rax, %rdi
 5807 0031 E8000000 		call	_ZNKSt11_Deque_baseIcSaIcEE20_M_get_map_allocatorEv
 5807      00
 622:/usr/include/c++/5/bits/stl_deque.h ****       }
 5808              		.loc 3 622 0
 5809 0036 488B55D8 		movq	-40(%rbp), %rdx
 5810 003a 488B4DE0 		movq	-32(%rbp), %rcx
 5811 003e 488D45F7 		leaq	-9(%rbp), %rax
 5812 0042 4889CE   		movq	%rcx, %rsi
 5813 0045 4889C7   		movq	%rax, %rdi
 5814 0048 E8000000 		call	_ZNSt16allocator_traitsISaIPcEE10deallocateERS1_PS0_m
 5814      00
 621:/usr/include/c++/5/bits/stl_deque.h **** 	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
 5815              		.loc 3 621 0
 5816 004d 488D45F7 		leaq	-9(%rbp), %rax
 5817 0051 4889C7   		movq	%rax, %rdi
 5818 0054 E8000000 		call	_ZNSaIPcED1Ev
 5818      00
 623:/usr/include/c++/5/bits/stl_deque.h **** 
 5819              		.loc 3 623 0
 5820 0059 90       		nop
 5821 005a 488B45F8 		movq	-8(%rbp), %rax
 5822 005e 64483304 		xorq	%fs:40, %rax
 5822      25280000 
 5822      00
 5823 0067 7405     		je	.L308
 5824 0069 E8000000 		call	__stack_chk_fail
GAS LISTING /tmp/ccX8BQhk.s 			page 360


 5824      00
 5825              	.L308:
 5826 006e C9       		leave
 5827              		.cfi_def_cfa 7, 8
 5828 006f C3       		ret
 5829              		.cfi_endproc
 5830              	.LFE10488:
 5831              		.section	.gcc_except_table
 5832              	.LLSDA10488:
 5833 00c4 FF       		.byte	0xff
 5834 00c5 FF       		.byte	0xff
 5835 00c6 01       		.byte	0x1
 5836 00c7 00       		.uleb128 .LLSDACSE10488-.LLSDACSB10488
 5837              	.LLSDACSB10488:
 5838              	.LLSDACSE10488:
 5839              		.section	.text._ZNSt11_Deque_baseIcSaIcEE17_M_deallocate_mapEPPcm,"axG",@progbits,_ZNSt11_Deque_ba
 5841              		.section	.text._ZN5boost9algorithm6detail17move_from_storageISt5dequeIcSaIcEEN9__gnu_cxx17__normal
 5842              		.weak	_ZN5boost9algorithm6detail17move_from_storageISt5dequeIcSaIcEEN9__gnu_cxx17__normal_iterator
 5844              	_ZN5boost9algorithm6detail17move_from_storageISt5dequeIcSaIcEEN9__gnu_cxx17__normal_iteratorIPcNSt7
 5845              	.LFB10490:
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 StorageT& Storage,
 5846              		.loc 30 27 0
 5847              		.cfi_startproc
 5848 0000 55       		pushq	%rbp
 5849              		.cfi_def_cfa_offset 16
 5850              		.cfi_offset 6, -16
 5851 0001 4889E5   		movq	%rsp, %rbp
 5852              		.cfi_def_cfa_register 6
 5853 0004 53       		pushq	%rbx
 5854 0005 4883EC38 		subq	$56, %rsp
 5855              		.cfi_offset 3, -24
 5856 0009 48897DD8 		movq	%rdi, -40(%rbp)
 5857 000d 488975D0 		movq	%rsi, -48(%rbp)
 5858 0011 488955C0 		movq	%rdx, -64(%rbp)
  27:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 StorageT& Storage,
 5859              		.loc 30 27 0
 5860 0015 64488B04 		movq	%fs:40, %rax
 5860      25280000 
 5860      00
 5861 001e 488945E8 		movq	%rax, -24(%rbp)
 5862 0022 31C0     		xorl	%eax, %eax
  32:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 
 5863              		.loc 30 32 0
 5864 0024 488B45D0 		movq	-48(%rbp), %rax
 5865 0028 488945E0 		movq	%rax, -32(%rbp)
 5866              	.L313:
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 {
 5867              		.loc 30 34 0
 5868 002c 488B45D8 		movq	-40(%rbp), %rax
 5869 0030 4889C7   		movq	%rax, %rdi
 5870 0033 E8000000 		call	_ZNKSt5dequeIcSaIcEE5emptyEv
 5870      00
 5871 0038 83F001   		xorl	$1, %eax
 5872 003b 84C0     		testb	%al, %al
 5873 003d 741E     		je	.L310
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 {
 5874              		.loc 30 34 0 is_stmt 0 discriminator 1
GAS LISTING /tmp/ccX8BQhk.s 			page 361


 5875 003f 488D55C0 		leaq	-64(%rbp), %rdx
 5876 0043 488D45E0 		leaq	-32(%rbp), %rax
 5877 0047 4889D6   		movq	%rdx, %rsi
 5878 004a 4889C7   		movq	%rax, %rdi
 5879 004d E8000000 		call	_ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iter
 5879      00
 5880 0052 84C0     		testb	%al, %al
 5881 0054 7407     		je	.L310
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 {
 5882              		.loc 30 34 0 discriminator 3
 5883 0056 B8010000 		movl	$1, %eax
 5883      00
 5884 005b EB05     		jmp	.L311
 5885              	.L310:
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 {
 5886              		.loc 30 34 0 discriminator 4
 5887 005d B8000000 		movl	$0, %eax
 5887      00
 5888              	.L311:
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 {
 5889              		.loc 30 34 0 discriminator 6
 5890 0062 84C0     		testb	%al, %al
 5891 0064 743A     		je	.L312
  36:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     Storage.pop_front();
 5892              		.loc 30 36 0 is_stmt 1
 5893 0066 488D45E0 		leaq	-32(%rbp), %rax
 5894 006a 4889C7   		movq	%rax, %rdi
 5895 006d E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv
 5895      00
 5896 0072 4889C3   		movq	%rax, %rbx
 5897 0075 488B45D8 		movq	-40(%rbp), %rax
 5898 0079 4889C7   		movq	%rax, %rdi
 5899 007c E8000000 		call	_ZNSt5dequeIcSaIcEE5frontEv
 5899      00
 5900 0081 0FB600   		movzbl	(%rax), %eax
 5901 0084 8803     		movb	%al, (%rbx)
  37:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                     ++OutputIt;
 5902              		.loc 30 37 0
 5903 0086 488B45D8 		movq	-40(%rbp), %rax
 5904 008a 4889C7   		movq	%rax, %rdi
 5905 008d E8000000 		call	_ZNSt5dequeIcSaIcEE9pop_frontEv
 5905      00
  38:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 }
 5906              		.loc 30 38 0
 5907 0092 488D45E0 		leaq	-32(%rbp), %rax
 5908 0096 4889C7   		movq	%rax, %rdi
 5909 0099 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv
 5909      00
  34:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****                 {
 5910              		.loc 30 34 0
 5911 009e EB8C     		jmp	.L313
 5912              	.L312:
  41:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp ****             }
 5913              		.loc 30 41 0
 5914 00a0 488B45E0 		movq	-32(%rbp), %rax
  42:/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/detail/replace_storage.hpp **** 
 5915              		.loc 30 42 0
GAS LISTING /tmp/ccX8BQhk.s 			page 362


 5916 00a4 488B4DE8 		movq	-24(%rbp), %rcx
 5917 00a8 6448330C 		xorq	%fs:40, %rcx
 5917      25280000 
 5917      00
 5918 00b1 7405     		je	.L315
 5919 00b3 E8000000 		call	__stack_chk_fail
 5919      00
 5920              	.L315:
 5921 00b8 4883C438 		addq	$56, %rsp
 5922 00bc 5B       		popq	%rbx
 5923 00bd 5D       		popq	%rbp
 5924              		.cfi_def_cfa 7, 8
 5925 00be C3       		ret
 5926              		.cfi_endproc
 5927              	.LFE10490:
 5929              		.section	.text._ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__n
 5930              		.weak	_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_ite
 5932              	_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT
 5933              	.LFB10491:
 827:/usr/include/c++/5/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 5934              		.loc 13 827 0
 5935              		.cfi_startproc
 5936 0000 55       		pushq	%rbp
 5937              		.cfi_def_cfa_offset 16
 5938              		.cfi_offset 6, -16
 5939 0001 4889E5   		movq	%rsp, %rbp
 5940              		.cfi_def_cfa_register 6
 5941 0004 53       		pushq	%rbx
 5942 0005 4883EC18 		subq	$24, %rsp
 5943              		.cfi_offset 3, -24
 5944 0009 48897DE8 		movq	%rdi, -24(%rbp)
 5945 000d 488975E0 		movq	%rsi, -32(%rbp)
 830:/usr/include/c++/5/bits/stl_iterator.h **** 
 5946              		.loc 13 830 0
 5947 0011 488B45E8 		movq	-24(%rbp), %rax
 5948 0015 4889C7   		movq	%rax, %rdi
 5949 0018 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4bas
 5949      00
 5950 001d 488B18   		movq	(%rax), %rbx
 5951 0020 488B45E0 		movq	-32(%rbp), %rax
 5952 0024 4889C7   		movq	%rax, %rdi
 5953 0027 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4bas
 5953      00
 5954 002c 488B00   		movq	(%rax), %rax
 5955 002f 4839C3   		cmpq	%rax, %rbx
 5956 0032 0F94C0   		sete	%al
 5957 0035 4883C418 		addq	$24, %rsp
 5958 0039 5B       		popq	%rbx
 5959 003a 5D       		popq	%rbp
 5960              		.cfi_def_cfa 7, 8
 5961 003b C3       		ret
 5962              		.cfi_endproc
 5963              	.LFE10491:
 5965              		.section	.text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trai
 5966              		.weak	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 5968              	_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9
 5969              	.LFB10492:
GAS LISTING /tmp/ccX8BQhk.s 			page 363


 228:/usr/include/c++/5/bits/stl_algobase.h **** 
 229:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 230:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/usr/include/c++/5/bits/stl_algobase.h ****    *
 237:/usr/include/c++/5/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:/usr/include/c++/5/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/usr/include/c++/5/bits/stl_algobase.h ****   */
 240:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 243:/usr/include/c++/5/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/usr/include/c++/5/bits/stl_algobase.h ****     {
 245:/usr/include/c++/5/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/usr/include/c++/5/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 248:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 249:/usr/include/c++/5/bits/stl_algobase.h ****     }
 250:/usr/include/c++/5/bits/stl_algobase.h **** 
 251:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 252:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/usr/include/c++/5/bits/stl_algobase.h ****    *
 259:/usr/include/c++/5/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/usr/include/c++/5/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/usr/include/c++/5/bits/stl_algobase.h ****   */
 262:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 265:/usr/include/c++/5/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/usr/include/c++/5/bits/stl_algobase.h ****     {
 267:/usr/include/c++/5/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/usr/include/c++/5/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 270:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 271:/usr/include/c++/5/bits/stl_algobase.h ****     }
 272:/usr/include/c++/5/bits/stl_algobase.h **** 
 273:/usr/include/c++/5/bits/stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 274:/usr/include/c++/5/bits/stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 275:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/usr/include/c++/5/bits/stl_algobase.h ****     struct _Niter_base
 277:/usr/include/c++/5/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 278:/usr/include/c++/5/bits/stl_algobase.h ****     { };
 279:/usr/include/c++/5/bits/stl_algobase.h **** 
 280:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 281:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 282:/usr/include/c++/5/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 283:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 284:/usr/include/c++/5/bits/stl_algobase.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 364


 285:/usr/include/c++/5/bits/stl_algobase.h ****   // Likewise, for move_iterator.
 286:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 287:/usr/include/c++/5/bits/stl_algobase.h ****     struct _Miter_base
 288:/usr/include/c++/5/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 289:/usr/include/c++/5/bits/stl_algobase.h ****     { };
 290:/usr/include/c++/5/bits/stl_algobase.h **** 
 291:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 292:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 293:/usr/include/c++/5/bits/stl_algobase.h ****     __miter_base(_Iterator __it)
 294:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 295:/usr/include/c++/5/bits/stl_algobase.h **** 
 296:/usr/include/c++/5/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 297:/usr/include/c++/5/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 298:/usr/include/c++/5/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 299:/usr/include/c++/5/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 300:/usr/include/c++/5/bits/stl_algobase.h ****   // a for loop with an explicit count.
 301:/usr/include/c++/5/bits/stl_algobase.h **** 
 302:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool, bool, typename>
 303:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move
 304:/usr/include/c++/5/bits/stl_algobase.h ****     {
 305:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 306:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 307:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 308:/usr/include/c++/5/bits/stl_algobase.h ****         {
 309:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 310:/usr/include/c++/5/bits/stl_algobase.h **** 	    *__result = *__first;
 311:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 312:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 313:/usr/include/c++/5/bits/stl_algobase.h ****     };
 314:/usr/include/c++/5/bits/stl_algobase.h **** 
 315:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 316:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Category>
 317:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 318:/usr/include/c++/5/bits/stl_algobase.h ****     {
 319:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 320:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 321:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 322:/usr/include/c++/5/bits/stl_algobase.h ****         {
 323:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 324:/usr/include/c++/5/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 325:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 326:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 327:/usr/include/c++/5/bits/stl_algobase.h ****     };
 328:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 329:/usr/include/c++/5/bits/stl_algobase.h **** 
 330:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 331:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 332:/usr/include/c++/5/bits/stl_algobase.h ****     {
 333:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 334:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 335:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 336:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 337:/usr/include/c++/5/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 339:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 340:/usr/include/c++/5/bits/stl_algobase.h **** 	      *__result = *__first;
 341:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
GAS LISTING /tmp/ccX8BQhk.s 			page 365


 342:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 343:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 344:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 345:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 346:/usr/include/c++/5/bits/stl_algobase.h ****     };
 347:/usr/include/c++/5/bits/stl_algobase.h **** 
 348:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 349:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 350:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 351:/usr/include/c++/5/bits/stl_algobase.h ****     {
 352:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 353:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 354:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 355:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 356:/usr/include/c++/5/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 357:/usr/include/c++/5/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 358:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 359:/usr/include/c++/5/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 360:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 361:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 362:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 363:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 364:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 365:/usr/include/c++/5/bits/stl_algobase.h ****     };
 366:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 367:/usr/include/c++/5/bits/stl_algobase.h **** 
 368:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove>
 369:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 370:/usr/include/c++/5/bits/stl_algobase.h ****     {
 371:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _Tp>
 372:/usr/include/c++/5/bits/stl_algobase.h ****         static _Tp*
 373:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 374:/usr/include/c++/5/bits/stl_algobase.h ****         {
 375:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 376:/usr/include/c++/5/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 377:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 378:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 379:/usr/include/c++/5/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 380:/usr/include/c++/5/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 381:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 382:/usr/include/c++/5/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 383:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 384:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 385:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result + _Num;
 386:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 387:/usr/include/c++/5/bits/stl_algobase.h ****     };
 388:/usr/include/c++/5/bits/stl_algobase.h **** 
 389:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 390:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 391:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 392:/usr/include/c++/5/bits/stl_algobase.h ****     {
 393:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 394:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 395:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 396:/usr/include/c++/5/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 397:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 398:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
GAS LISTING /tmp/ccX8BQhk.s 			page 366


 399:/usr/include/c++/5/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 400:/usr/include/c++/5/bits/stl_algobase.h **** 
 401:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 402:/usr/include/c++/5/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 403:/usr/include/c++/5/bits/stl_algobase.h ****     }
 404:/usr/include/c++/5/bits/stl_algobase.h **** 
 405:/usr/include/c++/5/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 406:/usr/include/c++/5/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 407:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT>
 408:/usr/include/c++/5/bits/stl_algobase.h ****     struct char_traits;
 409:/usr/include/c++/5/bits/stl_algobase.h **** 
 410:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 411:/usr/include/c++/5/bits/stl_algobase.h ****     class istreambuf_iterator;
 412:/usr/include/c++/5/bits/stl_algobase.h **** 
 413:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 414:/usr/include/c++/5/bits/stl_algobase.h ****     class ostreambuf_iterator;
 415:/usr/include/c++/5/bits/stl_algobase.h **** 
 416:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 417:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 418:/usr/include/c++/5/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 419:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 420:/usr/include/c++/5/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 421:/usr/include/c++/5/bits/stl_algobase.h **** 
 422:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 423:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 424:/usr/include/c++/5/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 425:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 426:/usr/include/c++/5/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 427:/usr/include/c++/5/bits/stl_algobase.h **** 
 428:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 429:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 430:/usr/include/c++/5/bits/stl_algobase.h **** 				    _CharT*>::__type
 431:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 432:/usr/include/c++/5/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 433:/usr/include/c++/5/bits/stl_algobase.h **** 
 434:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 435:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 436:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 437:/usr/include/c++/5/bits/stl_algobase.h ****     {
 438:/usr/include/c++/5/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 439:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 440:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 441:/usr/include/c++/5/bits/stl_algobase.h ****     }
 442:/usr/include/c++/5/bits/stl_algobase.h **** 
 443:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 444:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 445:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 446:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 447:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 448:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 449:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result + (first - last)
 450:/usr/include/c++/5/bits/stl_algobase.h ****    *
 451:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 452:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 453:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 454:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 455:/usr/include/c++/5/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
GAS LISTING /tmp/ccX8BQhk.s 			page 367


 456:/usr/include/c++/5/bits/stl_algobase.h ****    *
 457:/usr/include/c++/5/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 458:/usr/include/c++/5/bits/stl_algobase.h ****    *  within [first,last).
 459:/usr/include/c++/5/bits/stl_algobase.h ****   */
 460:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 461:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 462:/usr/include/c++/5/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 5970              		.loc 29 462 0
 5971              		.cfi_startproc
 5972 0000 55       		pushq	%rbp
 5973              		.cfi_def_cfa_offset 16
 5974              		.cfi_offset 6, -16
 5975 0001 4889E5   		movq	%rsp, %rbp
 5976              		.cfi_def_cfa_register 6
 5977 0004 53       		pushq	%rbx
 5978 0005 4883EC38 		subq	$56, %rsp
 5979              		.cfi_offset 3, -24
 5980 0009 48897DE0 		movq	%rdi, -32(%rbp)
 5981 000d 488975D0 		movq	%rsi, -48(%rbp)
 5982 0011 488955C0 		movq	%rdx, -64(%rbp)
 463:/usr/include/c++/5/bits/stl_algobase.h ****     {
 464:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 465:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 466:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 467:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 468:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 469:/usr/include/c++/5/bits/stl_algobase.h **** 
 470:/usr/include/c++/5/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 471:/usr/include/c++/5/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 5983              		.loc 29 471 0
 5984 0015 488B45D0 		movq	-48(%rbp), %rax
 5985 0019 4889C7   		movq	%rax, %rdi
 5986 001c E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trait
 5986      00
 5987 0021 4889C3   		movq	%rax, %rbx
 5988 0024 488B45E0 		movq	-32(%rbp), %rax
 5989 0028 4889C7   		movq	%rax, %rdi
 5990 002b E8000000 		call	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trait
 5990      00
 5991 0030 4889C1   		movq	%rax, %rcx
 472:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 5992              		.loc 29 472 0
 5993 0033 488B45C0 		movq	-64(%rbp), %rax
 5994 0037 4889C2   		movq	%rax, %rdx
 5995 003a 4889DE   		movq	%rbx, %rsi
 5996 003d 4889CF   		movq	%rcx, %rdi
 5997 0040 E8000000 		call	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char
 5997      00
 473:/usr/include/c++/5/bits/stl_algobase.h ****     }
 5998              		.loc 29 473 0
 5999 0045 4883C438 		addq	$56, %rsp
 6000 0049 5B       		popq	%rbx
 6001 004a 5D       		popq	%rbp
 6002              		.cfi_def_cfa 7, 8
 6003 004b C3       		ret
 6004              		.cfi_endproc
 6005              	.LFE10492:
GAS LISTING /tmp/ccX8BQhk.s 			page 368


 6007              		.section	.text._ZNSt5dequeIcSaIcEE9push_backERKc,"axG",@progbits,_ZNSt5dequeIcSaIcEE9push_backERKc
 6008              		.align 2
 6009              		.weak	_ZNSt5dequeIcSaIcEE9push_backERKc
 6011              	_ZNSt5dequeIcSaIcEE9push_backERKc:
 6012              	.LFB10493:
1516:/usr/include/c++/5/bits/stl_deque.h ****       {
 6013              		.loc 3 1516 0
 6014              		.cfi_startproc
 6015 0000 55       		pushq	%rbp
 6016              		.cfi_def_cfa_offset 16
 6017              		.cfi_offset 6, -16
 6018 0001 4889E5   		movq	%rsp, %rbp
 6019              		.cfi_def_cfa_register 6
 6020 0004 4883EC10 		subq	$16, %rsp
 6021 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6022 000c 488975F0 		movq	%rsi, -16(%rbp)
1519:/usr/include/c++/5/bits/stl_deque.h **** 	  {
 6023              		.loc 3 1519 0
 6024 0010 488B45F8 		movq	-8(%rbp), %rax
 6025 0014 488B5030 		movq	48(%rax), %rdx
 6026 0018 488B45F8 		movq	-8(%rbp), %rax
 6027 001c 488B4040 		movq	64(%rax), %rax
 6028 0020 4883E801 		subq	$1, %rax
1518:/usr/include/c++/5/bits/stl_deque.h **** 	    != this->_M_impl._M_finish._M_last - 1)
 6029              		.loc 3 1518 0
 6030 0024 4839C2   		cmpq	%rax, %rdx
 6031 0027 7431     		je	.L321
1521:/usr/include/c++/5/bits/stl_deque.h **** 	                             this->_M_impl._M_finish._M_cur, __x);
 6032              		.loc 3 1521 0
 6033 0029 488B45F8 		movq	-8(%rbp), %rax
 6034 002d 488B4830 		movq	48(%rax), %rcx
 6035 0031 488B45F8 		movq	-8(%rbp), %rax
 6036 0035 488B55F0 		movq	-16(%rbp), %rdx
 6037 0039 4889CE   		movq	%rcx, %rsi
 6038 003c 4889C7   		movq	%rax, %rdi
 6039 003f E8000000 		call	_ZNSt16allocator_traitsISaIcEE9constructIcJRKcEEEvRS0_PT_DpOT0_
 6039      00
1523:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 6040              		.loc 3 1523 0
 6041 0044 488B45F8 		movq	-8(%rbp), %rax
 6042 0048 488B4030 		movq	48(%rax), %rax
 6043 004c 488D5001 		leaq	1(%rax), %rdx
 6044 0050 488B45F8 		movq	-8(%rbp), %rax
 6045 0054 48895030 		movq	%rdx, 48(%rax)
1527:/usr/include/c++/5/bits/stl_deque.h **** 
 6046              		.loc 3 1527 0
 6047 0058 EB13     		jmp	.L323
 6048              	.L321:
1526:/usr/include/c++/5/bits/stl_deque.h ****       }
 6049              		.loc 3 1526 0
 6050 005a 488B55F0 		movq	-16(%rbp), %rdx
 6051 005e 488B45F8 		movq	-8(%rbp), %rax
 6052 0062 4889D6   		movq	%rdx, %rsi
 6053 0065 4889C7   		movq	%rax, %rdi
 6054 0068 E8000000 		call	_ZNSt5dequeIcSaIcEE16_M_push_back_auxIJRKcEEEvDpOT_
 6054      00
 6055              	.L323:
GAS LISTING /tmp/ccX8BQhk.s 			page 369


1527:/usr/include/c++/5/bits/stl_deque.h **** 
 6056              		.loc 3 1527 0
 6057 006d 90       		nop
 6058 006e C9       		leave
 6059              		.cfi_def_cfa 7, 8
 6060 006f C3       		ret
 6061              		.cfi_endproc
 6062              	.LFE10493:
 6064              		.section	.text._ZNSt5dequeIcSaIcEE5frontEv,"axG",@progbits,_ZNSt5dequeIcSaIcEE5frontEv,comdat
 6065              		.align 2
 6066              		.weak	_ZNSt5dequeIcSaIcEE5frontEv
 6068              	_ZNSt5dequeIcSaIcEE5frontEv:
 6069              	.LFB10494:
1437:/usr/include/c++/5/bits/stl_deque.h ****       { return *begin(); }
 6070              		.loc 3 1437 0
 6071              		.cfi_startproc
 6072 0000 55       		pushq	%rbp
 6073              		.cfi_def_cfa_offset 16
 6074              		.cfi_offset 6, -16
 6075 0001 4889E5   		movq	%rsp, %rbp
 6076              		.cfi_def_cfa_register 6
 6077 0004 4883EC40 		subq	$64, %rsp
 6078 0008 48897DC8 		movq	%rdi, -56(%rbp)
1437:/usr/include/c++/5/bits/stl_deque.h ****       { return *begin(); }
 6079              		.loc 3 1437 0
 6080 000c 64488B04 		movq	%fs:40, %rax
 6080      25280000 
 6080      00
 6081 0015 488945F8 		movq	%rax, -8(%rbp)
 6082 0019 31C0     		xorl	%eax, %eax
1438:/usr/include/c++/5/bits/stl_deque.h **** 
 6083              		.loc 3 1438 0
 6084 001b 488D45D0 		leaq	-48(%rbp), %rax
 6085 001f 488B55C8 		movq	-56(%rbp), %rdx
 6086 0023 4889D6   		movq	%rdx, %rsi
 6087 0026 4889C7   		movq	%rax, %rdi
 6088 0029 E8000000 		call	_ZNSt5dequeIcSaIcEE5beginEv
 6088      00
 6089 002e 488D45D0 		leaq	-48(%rbp), %rax
 6090 0032 4889C7   		movq	%rax, %rdi
 6091 0035 E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEdeEv
 6091      00
 6092 003a 488B4DF8 		movq	-8(%rbp), %rcx
 6093 003e 6448330C 		xorq	%fs:40, %rcx
 6093      25280000 
 6093      00
 6094 0047 7405     		je	.L326
 6095 0049 E8000000 		call	__stack_chk_fail
 6095      00
 6096              	.L326:
 6097 004e C9       		leave
 6098              		.cfi_def_cfa 7, 8
 6099 004f C3       		ret
 6100              		.cfi_endproc
 6101              	.LFE10494:
 6103              		.section	.text._ZNSt5dequeIcSaIcEE9pop_frontEv,"axG",@progbits,_ZNSt5dequeIcSaIcEE9pop_frontEv,com
 6104              		.align 2
GAS LISTING /tmp/ccX8BQhk.s 			page 370


 6105              		.weak	_ZNSt5dequeIcSaIcEE9pop_frontEv
 6107              	_ZNSt5dequeIcSaIcEE9pop_frontEv:
 6108              	.LFB10495:
1548:/usr/include/c++/5/bits/stl_deque.h ****       {
 6109              		.loc 3 1548 0
 6110              		.cfi_startproc
 6111              		.cfi_personality 0x3,__gxx_personality_v0
 6112              		.cfi_lsda 0x3,.LLSDA10495
 6113 0000 55       		pushq	%rbp
 6114              		.cfi_def_cfa_offset 16
 6115              		.cfi_offset 6, -16
 6116 0001 4889E5   		movq	%rsp, %rbp
 6117              		.cfi_def_cfa_register 6
 6118 0004 4883EC10 		subq	$16, %rsp
 6119 0008 48897DF8 		movq	%rdi, -8(%rbp)
1551:/usr/include/c++/5/bits/stl_deque.h **** 	  {
 6120              		.loc 3 1551 0
 6121 000c 488B45F8 		movq	-8(%rbp), %rax
 6122 0010 488B5010 		movq	16(%rax), %rdx
 6123 0014 488B45F8 		movq	-8(%rbp), %rax
 6124 0018 488B4020 		movq	32(%rax), %rax
 6125 001c 4883E801 		subq	$1, %rax
1550:/usr/include/c++/5/bits/stl_deque.h **** 	    != this->_M_impl._M_start._M_last - 1)
 6126              		.loc 3 1550 0
 6127 0020 4839C2   		cmpq	%rax, %rdx
 6128 0023 742D     		je	.L328
1553:/usr/include/c++/5/bits/stl_deque.h **** 	                           this->_M_impl._M_start._M_cur);
 6129              		.loc 3 1553 0
 6130 0025 488B45F8 		movq	-8(%rbp), %rax
 6131 0029 488B5010 		movq	16(%rax), %rdx
 6132 002d 488B45F8 		movq	-8(%rbp), %rax
 6133 0031 4889D6   		movq	%rdx, %rsi
 6134 0034 4889C7   		movq	%rax, %rdi
 6135 0037 E8000000 		call	_ZNSt16allocator_traitsISaIcEE7destroyIcEEvRS0_PT_
 6135      00
1555:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 6136              		.loc 3 1555 0
 6137 003c 488B45F8 		movq	-8(%rbp), %rax
 6138 0040 488B4010 		movq	16(%rax), %rax
 6139 0044 488D5001 		leaq	1(%rax), %rdx
 6140 0048 488B45F8 		movq	-8(%rbp), %rax
 6141 004c 48895010 		movq	%rdx, 16(%rax)
1559:/usr/include/c++/5/bits/stl_deque.h **** 
 6142              		.loc 3 1559 0
 6143 0050 EB0C     		jmp	.L330
 6144              	.L328:
1558:/usr/include/c++/5/bits/stl_deque.h ****       }
 6145              		.loc 3 1558 0
 6146 0052 488B45F8 		movq	-8(%rbp), %rax
 6147 0056 4889C7   		movq	%rax, %rdi
 6148 0059 E8000000 		call	_ZNSt5dequeIcSaIcEE16_M_pop_front_auxEv
 6148      00
 6149              	.L330:
1559:/usr/include/c++/5/bits/stl_deque.h **** 
 6150              		.loc 3 1559 0
 6151 005e 90       		nop
 6152 005f C9       		leave
GAS LISTING /tmp/ccX8BQhk.s 			page 371


 6153              		.cfi_def_cfa 7, 8
 6154 0060 C3       		ret
 6155              		.cfi_endproc
 6156              	.LFE10495:
 6157              		.section	.gcc_except_table
 6158              	.LLSDA10495:
 6159 00c8 FF       		.byte	0xff
 6160 00c9 FF       		.byte	0xff
 6161 00ca 01       		.byte	0x1
 6162 00cb 00       		.uleb128 .LLSDACSE10495-.LLSDACSB10495
 6163              	.LLSDACSB10495:
 6164              	.LLSDACSE10495:
 6165              		.section	.text._ZNSt5dequeIcSaIcEE9pop_frontEv,"axG",@progbits,_ZNSt5dequeIcSaIcEE9pop_frontEv,com
 6167              		.section	.text._ZNKSt5dequeIcSaIcEE6cbeginEv,"axG",@progbits,_ZNKSt5dequeIcSaIcEE6cbeginEv,comdat
 6168              		.align 2
 6169              		.weak	_ZNKSt5dequeIcSaIcEE6cbeginEv
 6171              	_ZNKSt5dequeIcSaIcEE6cbeginEv:
 6172              	.LFB10496:
1229:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_start; }
 6173              		.loc 3 1229 0
 6174              		.cfi_startproc
 6175 0000 55       		pushq	%rbp
 6176              		.cfi_def_cfa_offset 16
 6177              		.cfi_offset 6, -16
 6178 0001 4889E5   		movq	%rsp, %rbp
 6179              		.cfi_def_cfa_register 6
 6180 0004 4883EC10 		subq	$16, %rsp
 6181 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6182 000c 488975F0 		movq	%rsi, -16(%rbp)
1230:/usr/include/c++/5/bits/stl_deque.h **** 
 6183              		.loc 3 1230 0
 6184 0010 488B45F0 		movq	-16(%rbp), %rax
 6185 0014 488D5010 		leaq	16(%rax), %rdx
 6186 0018 488B45F8 		movq	-8(%rbp), %rax
 6187 001c 4889D6   		movq	%rdx, %rsi
 6188 001f 4889C7   		movq	%rax, %rdi
 6189 0022 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_EC1ERKS_IcRcPcE
 6189      00
 6190 0027 488B45F8 		movq	-8(%rbp), %rax
 6191 002b C9       		leave
 6192              		.cfi_def_cfa 7, 8
 6193 002c C3       		ret
 6194              		.cfi_endproc
 6195              	.LFE10496:
 6197              		.section	.text._ZStmiIcRKcPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_,"axG",@pro
 6198              		.weak	_ZStmiIcRKcPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_
 6200              	_ZStmiIcRKcPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_:
 6201              	.LFB10497:
 349:/usr/include/c++/5/bits/stl_deque.h **** 	      const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 6202              		.loc 3 349 0
 6203              		.cfi_startproc
 6204 0000 55       		pushq	%rbp
 6205              		.cfi_def_cfa_offset 16
 6206              		.cfi_offset 6, -16
 6207 0001 4889E5   		movq	%rsp, %rbp
 6208              		.cfi_def_cfa_register 6
 6209 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 372


 6210 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6211 000c 488975F0 		movq	%rsi, -16(%rbp)
 353:/usr/include/c++/5/bits/stl_deque.h **** 	* (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)
 6212              		.loc 3 353 0
 6213 0010 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv
 6213      00
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 6214              		.loc 3 355 0
 6215 0015 4889C2   		movq	%rax, %rdx
 354:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 6216              		.loc 3 354 0
 6217 0018 488B45F8 		movq	-8(%rbp), %rax
 6218 001c 488B4018 		movq	24(%rax), %rax
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 6219              		.loc 3 355 0
 6220 0020 4889C1   		movq	%rax, %rcx
 354:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 6221              		.loc 3 354 0
 6222 0023 488B45F0 		movq	-16(%rbp), %rax
 6223 0027 488B4018 		movq	24(%rax), %rax
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 6224              		.loc 3 355 0
 6225 002b 4829C1   		subq	%rax, %rcx
 6226 002e 4889C8   		movq	%rcx, %rax
 6227 0031 48C1F803 		sarq	$3, %rax
 6228 0035 4883E801 		subq	$1, %rax
 6229 0039 480FAFD0 		imulq	%rax, %rdx
 354:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 6230              		.loc 3 354 0
 6231 003d 488B45F8 		movq	-8(%rbp), %rax
 6232 0041 488B00   		movq	(%rax), %rax
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 6233              		.loc 3 355 0
 6234 0044 4889C1   		movq	%rax, %rcx
 354:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 6235              		.loc 3 354 0
 6236 0047 488B45F8 		movq	-8(%rbp), %rax
 6237 004b 488B4008 		movq	8(%rax), %rax
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 6238              		.loc 3 355 0
 6239 004f 4829C1   		subq	%rax, %rcx
 6240 0052 4889C8   		movq	%rcx, %rax
 6241 0055 4801C2   		addq	%rax, %rdx
 6242 0058 488B45F0 		movq	-16(%rbp), %rax
 6243 005c 488B4010 		movq	16(%rax), %rax
 6244 0060 4889C1   		movq	%rax, %rcx
 6245 0063 488B45F0 		movq	-16(%rbp), %rax
 6246 0067 488B00   		movq	(%rax), %rax
 6247 006a 4829C1   		subq	%rax, %rcx
 6248 006d 4889C8   		movq	%rcx, %rax
 6249 0070 4801D0   		addq	%rdx, %rax
 356:/usr/include/c++/5/bits/stl_deque.h **** 
 6250              		.loc 3 356 0
 6251 0073 C9       		leave
 6252              		.cfi_def_cfa 7, 8
 6253 0074 C3       		ret
 6254              		.cfi_endproc
GAS LISTING /tmp/ccX8BQhk.s 			page 373


 6255              	.LFE10497:
 6257              		.section	.text._ZNKSt15_Deque_iteratorIcRKcPS0_E13_M_const_castEv,"axG",@progbits,_ZNKSt15_Deque_i
 6258              		.align 2
 6259              		.weak	_ZNKSt15_Deque_iteratorIcRKcPS0_E13_M_const_castEv
 6261              	_ZNKSt15_Deque_iteratorIcRKcPS0_E13_M_const_castEv:
 6262              	.LFB10498:
 154:/usr/include/c++/5/bits/stl_deque.h ****       { return iterator(_M_cur, _M_node); }
 6263              		.loc 3 154 0
 6264              		.cfi_startproc
 6265 0000 55       		pushq	%rbp
 6266              		.cfi_def_cfa_offset 16
 6267              		.cfi_offset 6, -16
 6268 0001 4889E5   		movq	%rsp, %rbp
 6269              		.cfi_def_cfa_register 6
 6270 0004 4883EC10 		subq	$16, %rsp
 6271 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6272 000c 488975F0 		movq	%rsi, -16(%rbp)
 155:/usr/include/c++/5/bits/stl_deque.h **** 
 6273              		.loc 3 155 0
 6274 0010 488B45F0 		movq	-16(%rbp), %rax
 6275 0014 488B5018 		movq	24(%rax), %rdx
 6276 0018 488B45F0 		movq	-16(%rbp), %rax
 6277 001c 488B08   		movq	(%rax), %rcx
 6278 001f 488B45F8 		movq	-8(%rbp), %rax
 6279 0023 4889CE   		movq	%rcx, %rsi
 6280 0026 4889C7   		movq	%rax, %rdi
 6281 0029 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ES1_PS1_
 6281      00
 6282 002e 488B45F8 		movq	-8(%rbp), %rax
 6283 0032 C9       		leave
 6284              		.cfi_def_cfa 7, 8
 6285 0033 C3       		ret
 6286              		.cfi_endproc
 6287              	.LFE10498:
 6289              		.section	.text._ZNSt5dequeIcSaIcEE18_M_insert_dispatchIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St12__
 6290              		.align 2
 6291              		.weak	_ZNSt5dequeIcSaIcEE18_M_insert_dispatchIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St12__false_typ
 6293              	_ZNSt5dequeIcSaIcEE18_M_insert_dispatchIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St12__false_type:
 6294              	.LFB10499:
1971:/usr/include/c++/5/bits/stl_deque.h **** 			   _InputIterator __first, _InputIterator __last,
 6295              		.loc 3 1971 0
 6296              		.cfi_startproc
 6297 0000 55       		pushq	%rbp
 6298              		.cfi_def_cfa_offset 16
 6299              		.cfi_offset 6, -16
 6300 0001 4889E5   		movq	%rsp, %rbp
 6301              		.cfi_def_cfa_register 6
 6302 0004 53       		pushq	%rbx
 6303 0005 4883EC68 		subq	$104, %rsp
 6304              		.cfi_offset 3, -24
 6305 0009 48897DA8 		movq	%rdi, -88(%rbp)
 6306 000d 488975A0 		movq	%rsi, -96(%rbp)
 6307 0011 48895598 		movq	%rdx, -104(%rbp)
 6308 0015 48894D90 		movq	%rcx, -112(%rbp)
1971:/usr/include/c++/5/bits/stl_deque.h **** 			   _InputIterator __first, _InputIterator __last,
 6309              		.loc 3 1971 0
 6310 0019 64488B04 		movq	%fs:40, %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 374


 6310      25280000 
 6310      00
 6311 0022 488945E8 		movq	%rax, -24(%rbp)
 6312 0026 31C0     		xorl	%eax, %eax
1977:/usr/include/c++/5/bits/stl_deque.h **** 	}
 6313              		.loc 3 1977 0
 6314 0028 488B55A0 		movq	-96(%rbp), %rdx
 6315 002c 488D45C0 		leaq	-64(%rbp), %rax
 6316 0030 4889D6   		movq	%rdx, %rsi
 6317 0033 4889C7   		movq	%rax, %rdi
 6318 0036 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 6318      00
 6319 003b 488B4D90 		movq	-112(%rbp), %rcx
 6320 003f 488B5598 		movq	-104(%rbp), %rdx
 6321 0043 488D75C0 		leaq	-64(%rbp), %rsi
 6322 0047 488B45A8 		movq	-88(%rbp), %rax
 6323 004b 4883EC08 		subq	$8, %rsp
 6324 004f 53       		pushq	%rbx
 6325 0050 4889C7   		movq	%rax, %rdi
 6326 0053 E8000000 		call	_ZNSt5dequeIcSaIcEE19_M_range_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St20forward_ite
 6326      00
 6327 0058 4883C410 		addq	$16, %rsp
1978:/usr/include/c++/5/bits/stl_deque.h **** 
 6328              		.loc 3 1978 0
 6329 005c 90       		nop
 6330 005d 488B45E8 		movq	-24(%rbp), %rax
 6331 0061 64483304 		xorq	%fs:40, %rax
 6331      25280000 
 6331      00
 6332 006a 7405     		je	.L338
 6333 006c E8000000 		call	__stack_chk_fail
 6333      00
 6334              	.L338:
 6335 0071 488B5DF8 		movq	-8(%rbp), %rbx
 6336 0075 C9       		leave
 6337              		.cfi_def_cfa 7, 8
 6338 0076 C3       		ret
 6339              		.cfi_endproc
 6340              	.LFE10499:
 6342              		.section	.text._ZNKSt15_Deque_iteratorIcRcPcEplEl,"axG",@progbits,_ZNKSt15_Deque_iteratorIcRcPcEpl
 6343              		.align 2
 6344              		.weak	_ZNKSt15_Deque_iteratorIcRcPcEplEl
 6346              	_ZNKSt15_Deque_iteratorIcRcPcEplEl:
 6347              	.LFB10500:
 225:/usr/include/c++/5/bits/stl_deque.h ****       {
 6348              		.loc 3 225 0
 6349              		.cfi_startproc
 6350 0000 55       		pushq	%rbp
 6351              		.cfi_def_cfa_offset 16
 6352              		.cfi_offset 6, -16
 6353 0001 4889E5   		movq	%rsp, %rbp
 6354              		.cfi_def_cfa_register 6
 6355 0004 4883EC50 		subq	$80, %rsp
 6356 0008 48897DC8 		movq	%rdi, -56(%rbp)
 6357 000c 488975C0 		movq	%rsi, -64(%rbp)
 6358 0010 488955B8 		movq	%rdx, -72(%rbp)
 225:/usr/include/c++/5/bits/stl_deque.h ****       {
GAS LISTING /tmp/ccX8BQhk.s 			page 375


 6359              		.loc 3 225 0
 6360 0014 64488B04 		movq	%fs:40, %rax
 6360      25280000 
 6360      00
 6361 001d 488945F8 		movq	%rax, -8(%rbp)
 6362 0021 31C0     		xorl	%eax, %eax
 227:/usr/include/c++/5/bits/stl_deque.h **** 	return __tmp += __n;
 6363              		.loc 3 227 0
 6364 0023 488B55C0 		movq	-64(%rbp), %rdx
 6365 0027 488D45D0 		leaq	-48(%rbp), %rax
 6366 002b 4889D6   		movq	%rdx, %rsi
 6367 002e 4889C7   		movq	%rax, %rdi
 6368 0031 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 6368      00
 228:/usr/include/c++/5/bits/stl_deque.h ****       }
 6369              		.loc 3 228 0
 6370 0036 488B55B8 		movq	-72(%rbp), %rdx
 6371 003a 488D45D0 		leaq	-48(%rbp), %rax
 6372 003e 4889D6   		movq	%rdx, %rsi
 6373 0041 4889C7   		movq	%rax, %rdi
 6374 0044 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEpLEl
 6374      00
 6375 0049 4889C2   		movq	%rax, %rdx
 6376 004c 488B45C8 		movq	-56(%rbp), %rax
 6377 0050 4889D6   		movq	%rdx, %rsi
 6378 0053 4889C7   		movq	%rax, %rdi
 6379 0056 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 6379      00
 229:/usr/include/c++/5/bits/stl_deque.h **** 
 6380              		.loc 3 229 0
 6381 005b 488B45C8 		movq	-56(%rbp), %rax
 6382 005f 488B4DF8 		movq	-8(%rbp), %rcx
 6383 0063 6448330C 		xorq	%fs:40, %rcx
 6383      25280000 
 6383      00
 6384 006c 7405     		je	.L341
 6385 006e E8000000 		call	__stack_chk_fail
 6385      00
 6386              	.L341:
 6387 0073 C9       		leave
 6388              		.cfi_def_cfa 7, 8
 6389 0074 C3       		ret
 6390              		.cfi_endproc
 6391              	.LFE10500:
 6393              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterato
 6394              		.align 2
 6395              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7_
 6397              	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx111
 6398              	.LFB10501:
 275:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 6399              		.loc 23 275 0
 6400              		.cfi_startproc
 6401 0000 55       		pushq	%rbp
 6402              		.cfi_def_cfa_offset 16
 6403              		.cfi_offset 6, -16
 6404 0001 4889E5   		movq	%rsp, %rbp
 6405              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccX8BQhk.s 			page 376


 6406 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6407 0008 488975F0 		movq	%rsi, -16(%rbp)
 6408 000c 488955E0 		movq	%rdx, -32(%rbp)
 277:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         m_End = last;
 6409              		.loc 23 277 0
 6410 0010 488B45F8 		movq	-8(%rbp), %rax
 6411 0014 488B55F0 		movq	-16(%rbp), %rdx
 6412 0018 488910   		movq	%rdx, (%rax)
 278:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     }
 6413              		.loc 23 278 0
 6414 001b 488B45F8 		movq	-8(%rbp), %rax
 6415 001f 488B55E0 		movq	-32(%rbp), %rdx
 6416 0023 48895008 		movq	%rdx, 8(%rax)
 279:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 6417              		.loc 23 279 0
 6418 0027 90       		nop
 6419 0028 5D       		popq	%rbp
 6420              		.cfi_def_cfa 7, 8
 6421 0029 C3       		ret
 6422              		.cfi_endproc
 6423              	.LFE10501:
 6425              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceISt15_Deque_iteratorIc
 6426              		.align 2
 6427              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceISt15_Deque_iteratorIcRcPcEvEER
 6429              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceISt15_Deque_iteratorIcRcPcEvEERS4_N9__
 6430              	.LFB10502:
1735:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
 6431              		.loc 11 1735 0
 6432              		.cfi_startproc
 6433 0000 55       		pushq	%rbp
 6434              		.cfi_def_cfa_offset 16
 6435              		.cfi_offset 6, -16
 6436 0001 4889E5   		movq	%rsp, %rbp
 6437              		.cfi_def_cfa_register 6
 6438 0004 53       		pushq	%rbx
 6439 0005 4881EC88 		subq	$136, %rsp
 6439      000000
 6440              		.cfi_offset 3, -24
 6441 000c 48897D98 		movq	%rdi, -104(%rbp)
 6442 0010 48897590 		movq	%rsi, -112(%rbp)
 6443 0014 48895580 		movq	%rdx, -128(%rbp)
 6444 0018 48894D88 		movq	%rcx, -120(%rbp)
 6445 001c 4C898578 		movq	%r8, -136(%rbp)
 6445      FFFFFF
1735:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
 6446              		.loc 11 1735 0
 6447 0023 64488B04 		movq	%fs:40, %rax
 6447      25280000 
 6447      00
 6448 002c 488945E8 		movq	%rax, -24(%rbp)
 6449 0030 31C0     		xorl	%eax, %eax
1742:/usr/include/c++/5/bits/basic_string.h **** 	}
 6450              		.loc 11 1742 0
 6451 0032 488B9578 		movq	-136(%rbp), %rdx
 6451      FFFFFF
 6452 0039 488D45C0 		leaq	-64(%rbp), %rax
 6453 003d 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccX8BQhk.s 			page 377


 6454 0040 4889C7   		movq	%rax, %rdi
 6455 0043 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 6455      00
 6456 0048 488B5588 		movq	-120(%rbp), %rdx
 6457 004c 488D45A0 		leaq	-96(%rbp), %rax
 6458 0050 4889D6   		movq	%rdx, %rsi
 6459 0053 4889C7   		movq	%rax, %rdi
 6460 0056 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 6460      00
 6461 005b 488D7DC0 		leaq	-64(%rbp), %rdi
 6462 005f 488D4DA0 		leaq	-96(%rbp), %rcx
 6463 0063 488B5580 		movq	-128(%rbp), %rdx
 6464 0067 488B7590 		movq	-112(%rbp), %rsi
 6465 006b 488B4598 		movq	-104(%rbp), %rax
 6466 006f 4883EC08 		subq	$8, %rsp
 6467 0073 53       		pushq	%rbx
 6468 0074 4989F8   		movq	%rdi, %r8
 6469 0077 4889C7   		movq	%rax, %rdi
 6470 007a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE19_M_replace_dispatchISt15_Deque_iterato
 6470      00
 6471 007f 4883C410 		addq	$16, %rsp
1743:/usr/include/c++/5/bits/basic_string.h **** #else
 6472              		.loc 11 1743 0
 6473 0083 488B5DE8 		movq	-24(%rbp), %rbx
 6474 0087 6448331C 		xorq	%fs:40, %rbx
 6474      25280000 
 6474      00
 6475 0090 7405     		je	.L345
 6476 0092 E8000000 		call	__stack_chk_fail
 6476      00
 6477              	.L345:
 6478 0097 488B5DF8 		movq	-8(%rbp), %rbx
 6479 009b C9       		leave
 6480              		.cfi_def_cfa 7, 8
 6481 009c C3       		ret
 6482              		.cfi_endproc
 6483              	.LFE10502:
 6485              		.section	.text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iterato
 6486              		.align 2
 6487              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7
 6489              	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx11
 6490              	.LFB10508:
 214:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****         : m_Begin(Begin)
 6491              		.loc 23 214 0
 6492              		.cfi_startproc
 6493 0000 55       		pushq	%rbp
 6494              		.cfi_def_cfa_offset 16
 6495              		.cfi_offset 6, -16
 6496 0001 4889E5   		movq	%rsp, %rbp
 6497              		.cfi_def_cfa_register 6
 6498 0004 4883EC20 		subq	$32, %rsp
 6499 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6500 000c 488975F0 		movq	%rsi, -16(%rbp)
 6501 0010 488955E0 		movq	%rdx, -32(%rbp)
 6502              	.LBB38:
 216:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp ****     {
 6503              		.loc 23 216 0
GAS LISTING /tmp/ccX8BQhk.s 			page 378


 6504 0014 488B45F8 		movq	-8(%rbp), %rax
 6505 0018 4889C7   		movq	%rax, %rdi
 6506 001b E8000000 		call	_ZN5boost21iterator_range_detail18iterator_range_tagC2Ev
 6506      00
 6507 0020 488B45F8 		movq	-8(%rbp), %rax
 6508 0024 488B55F0 		movq	-16(%rbp), %rdx
 6509 0028 488910   		movq	%rdx, (%rax)
 6510 002b 488B45F8 		movq	-8(%rbp), %rax
 6511 002f 488B55E0 		movq	-32(%rbp), %rdx
 6512 0033 48895008 		movq	%rdx, 8(%rax)
 6513              	.LBE38:
 218:/home/brendan/Boost/boost_1_60_0/boost/range/iterator_range_core.hpp **** 
 6514              		.loc 23 218 0
 6515 0037 90       		nop
 6516 0038 C9       		leave
 6517              		.cfi_def_cfa 7, 8
 6518 0039 C3       		ret
 6519              		.cfi_endproc
 6520              	.LFE10508:
 6522              		.weak	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7
 6523              		.set	_ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7_
 6524              		.section	.text._ZNSt15_Deque_iteratorIcRcPcEC2Ev,"axG",@progbits,_ZNSt15_Deque_iteratorIcRcPcEC5Ev
 6525              		.align 2
 6526              		.weak	_ZNSt15_Deque_iteratorIcRcPcEC2Ev
 6528              	_ZNSt15_Deque_iteratorIcRcPcEC2Ev:
 6529              	.LFB10511:
 146:/usr/include/c++/5/bits/stl_deque.h ****       : _M_cur(), _M_first(), _M_last(), _M_node() { }
 6530              		.loc 3 146 0
 6531              		.cfi_startproc
 6532 0000 55       		pushq	%rbp
 6533              		.cfi_def_cfa_offset 16
 6534              		.cfi_offset 6, -16
 6535 0001 4889E5   		movq	%rsp, %rbp
 6536              		.cfi_def_cfa_register 6
 6537 0004 48897DF8 		movq	%rdi, -8(%rbp)
 6538              	.LBB39:
 147:/usr/include/c++/5/bits/stl_deque.h **** 
 6539              		.loc 3 147 0
 6540 0008 488B45F8 		movq	-8(%rbp), %rax
 6541 000c 48C70000 		movq	$0, (%rax)
 6541      000000
 6542 0013 488B45F8 		movq	-8(%rbp), %rax
 6543 0017 48C74008 		movq	$0, 8(%rax)
 6543      00000000 
 6544 001f 488B45F8 		movq	-8(%rbp), %rax
 6545 0023 48C74010 		movq	$0, 16(%rax)
 6545      00000000 
 6546 002b 488B45F8 		movq	-8(%rbp), %rax
 6547 002f 48C74018 		movq	$0, 24(%rax)
 6547      00000000 
 6548              	.LBE39:
 6549 0037 90       		nop
 6550 0038 5D       		popq	%rbp
 6551              		.cfi_def_cfa 7, 8
 6552 0039 C3       		ret
 6553              		.cfi_endproc
 6554              	.LFE10511:
GAS LISTING /tmp/ccX8BQhk.s 			page 379


 6556              		.weak	_ZNSt15_Deque_iteratorIcRcPcEC1Ev
 6557              		.set	_ZNSt15_Deque_iteratorIcRcPcEC1Ev,_ZNSt15_Deque_iteratorIcRcPcEC2Ev
 6558              		.section	.text._ZNSt11_Deque_baseIcSaIcEE15_M_allocate_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIcS
 6559              		.align 2
 6560              		.weak	_ZNSt11_Deque_baseIcSaIcEE15_M_allocate_mapEm
 6562              	_ZNSt11_Deque_baseIcSaIcEE15_M_allocate_mapEm:
 6563              	.LFB10513:
 612:/usr/include/c++/5/bits/stl_deque.h ****       {
 6564              		.loc 3 612 0
 6565              		.cfi_startproc
 6566              		.cfi_personality 0x3,__gxx_personality_v0
 6567              		.cfi_lsda 0x3,.LLSDA10513
 6568 0000 55       		pushq	%rbp
 6569              		.cfi_def_cfa_offset 16
 6570              		.cfi_offset 6, -16
 6571 0001 4889E5   		movq	%rsp, %rbp
 6572              		.cfi_def_cfa_register 6
 6573 0004 53       		pushq	%rbx
 6574 0005 4883EC28 		subq	$40, %rsp
 6575              		.cfi_offset 3, -24
 6576 0009 48897DD8 		movq	%rdi, -40(%rbp)
 6577 000d 488975D0 		movq	%rsi, -48(%rbp)
 612:/usr/include/c++/5/bits/stl_deque.h ****       {
 6578              		.loc 3 612 0
 6579 0011 64488B04 		movq	%fs:40, %rax
 6579      25280000 
 6579      00
 6580 001a 488945E8 		movq	%rax, -24(%rbp)
 6581 001e 31C0     		xorl	%eax, %eax
 614:/usr/include/c++/5/bits/stl_deque.h **** 	return _Map_alloc_traits::allocate(__map_alloc, __n);
 6582              		.loc 3 614 0
 6583 0020 488D45E7 		leaq	-25(%rbp), %rax
 6584 0024 488B55D8 		movq	-40(%rbp), %rdx
 6585 0028 4889D6   		movq	%rdx, %rsi
 6586 002b 4889C7   		movq	%rax, %rdi
 6587 002e E8000000 		call	_ZNKSt11_Deque_baseIcSaIcEE20_M_get_map_allocatorEv
 6587      00
 615:/usr/include/c++/5/bits/stl_deque.h ****       }
 6588              		.loc 3 615 0
 6589 0033 488B55D0 		movq	-48(%rbp), %rdx
 6590 0037 488D45E7 		leaq	-25(%rbp), %rax
 6591 003b 4889D6   		movq	%rdx, %rsi
 6592 003e 4889C7   		movq	%rax, %rdi
 6593              	.LEHB32:
 6594 0041 E8000000 		call	_ZNSt16allocator_traitsISaIPcEE8allocateERS1_m
 6594      00
 6595              	.LEHE32:
 6596 0046 4889C3   		movq	%rax, %rbx
 614:/usr/include/c++/5/bits/stl_deque.h **** 	return _Map_alloc_traits::allocate(__map_alloc, __n);
 6597              		.loc 3 614 0
 6598 0049 488D45E7 		leaq	-25(%rbp), %rax
 6599 004d 4889C7   		movq	%rax, %rdi
 6600 0050 E8000000 		call	_ZNSaIPcED1Ev
 6600      00
 615:/usr/include/c++/5/bits/stl_deque.h ****       }
 6601              		.loc 3 615 0
 6602 0055 4889D8   		movq	%rbx, %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 380


 616:/usr/include/c++/5/bits/stl_deque.h **** 
 6603              		.loc 3 616 0
 6604 0058 488B4DE8 		movq	-24(%rbp), %rcx
 6605 005c 6448330C 		xorq	%fs:40, %rcx
 6605      25280000 
 6605      00
 6606 0065 7421     		je	.L351
 6607 0067 EB1A     		jmp	.L353
 6608              	.L352:
 6609 0069 4889C3   		movq	%rax, %rbx
 614:/usr/include/c++/5/bits/stl_deque.h **** 	return _Map_alloc_traits::allocate(__map_alloc, __n);
 6610              		.loc 3 614 0
 6611 006c 488D45E7 		leaq	-25(%rbp), %rax
 6612 0070 4889C7   		movq	%rax, %rdi
 6613 0073 E8000000 		call	_ZNSaIPcED1Ev
 6613      00
 6614 0078 4889D8   		movq	%rbx, %rax
 6615 007b 4889C7   		movq	%rax, %rdi
 6616              	.LEHB33:
 6617 007e E8000000 		call	_Unwind_Resume
 6617      00
 6618              	.LEHE33:
 6619              	.L353:
 616:/usr/include/c++/5/bits/stl_deque.h **** 
 6620              		.loc 3 616 0
 6621 0083 E8000000 		call	__stack_chk_fail
 6621      00
 6622              	.L351:
 6623 0088 4883C428 		addq	$40, %rsp
 6624 008c 5B       		popq	%rbx
 6625 008d 5D       		popq	%rbp
 6626              		.cfi_def_cfa 7, 8
 6627 008e C3       		ret
 6628              		.cfi_endproc
 6629              	.LFE10513:
 6630              		.section	.gcc_except_table
 6631              	.LLSDA10513:
 6632 00cc FF       		.byte	0xff
 6633 00cd FF       		.byte	0xff
 6634 00ce 01       		.byte	0x1
 6635 00cf 08       		.uleb128 .LLSDACSE10513-.LLSDACSB10513
 6636              	.LLSDACSB10513:
 6637 00d0 41       		.uleb128 .LEHB32-.LFB10513
 6638 00d1 05       		.uleb128 .LEHE32-.LEHB32
 6639 00d2 69       		.uleb128 .L352-.LFB10513
 6640 00d3 00       		.uleb128 0
 6641 00d4 7E       		.uleb128 .LEHB33-.LFB10513
 6642 00d5 05       		.uleb128 .LEHE33-.LEHB33
 6643 00d6 00       		.uleb128 0
 6644 00d7 00       		.uleb128 0
 6645              	.LLSDACSE10513:
 6646              		.section	.text._ZNSt11_Deque_baseIcSaIcEE15_M_allocate_mapEm,"axG",@progbits,_ZNSt11_Deque_baseIcS
 6648              		.section	.text._ZNSt11_Deque_baseIcSaIcEE15_M_create_nodesEPPcS3_,"axG",@progbits,_ZNSt11_Deque_ba
 6649              		.align 2
 6650              		.weak	_ZNSt11_Deque_baseIcSaIcEE15_M_create_nodesEPPcS3_
 6652              	_ZNSt11_Deque_baseIcSaIcEE15_M_create_nodesEPPcS3_:
 6653              	.LFB10514:
GAS LISTING /tmp/ccX8BQhk.s 			page 381


 719:/usr/include/c++/5/bits/stl_deque.h ****     _M_create_nodes(_Map_pointer __nstart, _Map_pointer __nfinish)
 6654              		.loc 3 719 0
 6655              		.cfi_startproc
 6656              		.cfi_personality 0x3,__gxx_personality_v0
 6657              		.cfi_lsda 0x3,.LLSDA10514
 6658 0000 55       		pushq	%rbp
 6659              		.cfi_def_cfa_offset 16
 6660              		.cfi_offset 6, -16
 6661 0001 4889E5   		movq	%rsp, %rbp
 6662              		.cfi_def_cfa_register 6
 6663 0004 53       		pushq	%rbx
 6664 0005 4883EC38 		subq	$56, %rsp
 6665              		.cfi_offset 3, -24
 6666 0009 48897DD8 		movq	%rdi, -40(%rbp)
 6667 000d 488975D0 		movq	%rsi, -48(%rbp)
 6668 0011 488955C8 		movq	%rdx, -56(%rbp)
 725:/usr/include/c++/5/bits/stl_deque.h **** 	    *__cur = this->_M_allocate_node();
 6669              		.loc 3 725 0
 6670 0015 488B45D0 		movq	-48(%rbp), %rax
 6671 0019 488945E8 		movq	%rax, -24(%rbp)
 6672              	.L356:
 725:/usr/include/c++/5/bits/stl_deque.h **** 	    *__cur = this->_M_allocate_node();
 6673              		.loc 3 725 0 is_stmt 0 discriminator 2
 6674 001d 488B45E8 		movq	-24(%rbp), %rax
 6675 0021 483B45C8 		cmpq	-56(%rbp), %rax
 6676 0025 7354     		jnb	.L361
 726:/usr/include/c++/5/bits/stl_deque.h **** 	}
 6677              		.loc 3 726 0 is_stmt 1
 6678 0027 488B45D8 		movq	-40(%rbp), %rax
 6679 002b 4889C7   		movq	%rax, %rdi
 6680              	.LEHB34:
 6681 002e E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_allocate_nodeEv
 6681      00
 6682              	.LEHE34:
 6683 0033 4889C2   		movq	%rax, %rdx
 6684 0036 488B45E8 		movq	-24(%rbp), %rax
 6685 003a 488910   		movq	%rdx, (%rax)
 725:/usr/include/c++/5/bits/stl_deque.h **** 	    *__cur = this->_M_allocate_node();
 6686              		.loc 3 725 0
 6687 003d 488345E8 		addq	$8, -24(%rbp)
 6687      08
 6688 0042 EBD9     		jmp	.L356
 6689              	.L359:
 728:/usr/include/c++/5/bits/stl_deque.h **** 	{
 6690              		.loc 3 728 0
 6691 0044 4889C7   		movq	%rax, %rdi
 6692 0047 E8000000 		call	__cxa_begin_catch
 6692      00
 730:/usr/include/c++/5/bits/stl_deque.h **** 	  __throw_exception_again;
 6693              		.loc 3 730 0
 6694 004c 488B55E8 		movq	-24(%rbp), %rdx
 6695 0050 488B4DD0 		movq	-48(%rbp), %rcx
 6696 0054 488B45D8 		movq	-40(%rbp), %rax
 6697 0058 4889CE   		movq	%rcx, %rsi
 6698 005b 4889C7   		movq	%rax, %rdi
 6699 005e E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_
 6699      00
GAS LISTING /tmp/ccX8BQhk.s 			page 382


 6700              	.LEHB35:
 731:/usr/include/c++/5/bits/stl_deque.h **** 	}
 6701              		.loc 3 731 0
 6702 0063 E8000000 		call	__cxa_rethrow
 6702      00
 6703              	.LEHE35:
 6704              	.L360:
 6705 0068 4889C3   		movq	%rax, %rbx
 728:/usr/include/c++/5/bits/stl_deque.h **** 	{
 6706              		.loc 3 728 0
 6707 006b E8000000 		call	__cxa_end_catch
 6707      00
 6708 0070 4889D8   		movq	%rbx, %rax
 6709 0073 4889C7   		movq	%rax, %rdi
 6710              	.LEHB36:
 6711 0076 E8000000 		call	_Unwind_Resume
 6711      00
 6712              	.LEHE36:
 6713              	.L361:
 733:/usr/include/c++/5/bits/stl_deque.h **** 
 6714              		.loc 3 733 0
 6715 007b 90       		nop
 6716 007c 4883C438 		addq	$56, %rsp
 6717 0080 5B       		popq	%rbx
 6718 0081 5D       		popq	%rbp
 6719              		.cfi_def_cfa 7, 8
 6720 0082 C3       		ret
 6721              		.cfi_endproc
 6722              	.LFE10514:
 6723              		.section	.gcc_except_table
 6724              		.align 4
 6725              	.LLSDA10514:
 6726 00d8 FF       		.byte	0xff
 6727 00d9 03       		.byte	0x3
 6728 00da 15       		.uleb128 .LLSDATT10514-.LLSDATTD10514
 6729              	.LLSDATTD10514:
 6730 00db 01       		.byte	0x1
 6731 00dc 0C       		.uleb128 .LLSDACSE10514-.LLSDACSB10514
 6732              	.LLSDACSB10514:
 6733 00dd 2E       		.uleb128 .LEHB34-.LFB10514
 6734 00de 05       		.uleb128 .LEHE34-.LEHB34
 6735 00df 44       		.uleb128 .L359-.LFB10514
 6736 00e0 01       		.uleb128 0x1
 6737 00e1 63       		.uleb128 .LEHB35-.LFB10514
 6738 00e2 05       		.uleb128 .LEHE35-.LEHB35
 6739 00e3 68       		.uleb128 .L360-.LFB10514
 6740 00e4 00       		.uleb128 0
 6741 00e5 76       		.uleb128 .LEHB36-.LFB10514
 6742 00e6 05       		.uleb128 .LEHE36-.LEHB36
 6743 00e7 00       		.uleb128 0
 6744 00e8 00       		.uleb128 0
 6745              	.LLSDACSE10514:
 6746 00e9 01       		.byte	0x1
 6747 00ea 00       		.byte	0
 6748 00eb 00       		.align 4
 6749 00ec 00000000 		.long	0
 6750              	
GAS LISTING /tmp/ccX8BQhk.s 			page 383


 6751              	.LLSDATT10514:
 6752              		.section	.text._ZNSt11_Deque_baseIcSaIcEE15_M_create_nodesEPPcS3_,"axG",@progbits,_ZNSt11_Deque_ba
 6754              		.section	.text._ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_,"axG",@progbits,_ZNSt15_Deque_itera
 6755              		.align 2
 6756              		.weak	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
 6758              	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_:
 6759              	.LFB10515:
 252:/usr/include/c++/5/bits/stl_deque.h ****       {
 6760              		.loc 3 252 0
 6761              		.cfi_startproc
 6762 0000 55       		pushq	%rbp
 6763              		.cfi_def_cfa_offset 16
 6764              		.cfi_offset 6, -16
 6765 0001 4889E5   		movq	%rsp, %rbp
 6766              		.cfi_def_cfa_register 6
 6767 0004 53       		pushq	%rbx
 6768 0005 4883EC18 		subq	$24, %rsp
 6769              		.cfi_offset 3, -24
 6770 0009 48897DE8 		movq	%rdi, -24(%rbp)
 6771 000d 488975E0 		movq	%rsi, -32(%rbp)
 254:/usr/include/c++/5/bits/stl_deque.h **** 	_M_first = *__new_node;
 6772              		.loc 3 254 0
 6773 0011 488B45E8 		movq	-24(%rbp), %rax
 6774 0015 488B55E0 		movq	-32(%rbp), %rdx
 6775 0019 48895018 		movq	%rdx, 24(%rax)
 255:/usr/include/c++/5/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 6776              		.loc 3 255 0
 6777 001d 488B45E0 		movq	-32(%rbp), %rax
 6778 0021 488B10   		movq	(%rax), %rdx
 6779 0024 488B45E8 		movq	-24(%rbp), %rax
 6780 0028 48895008 		movq	%rdx, 8(%rax)
 256:/usr/include/c++/5/bits/stl_deque.h ****       }
 6781              		.loc 3 256 0
 6782 002c 488B45E8 		movq	-24(%rbp), %rax
 6783 0030 488B5808 		movq	8(%rax), %rbx
 6784 0034 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
 6784      00
 6785 0039 488D1403 		leaq	(%rbx,%rax), %rdx
 6786 003d 488B45E8 		movq	-24(%rbp), %rax
 6787 0041 48895010 		movq	%rdx, 16(%rax)
 257:/usr/include/c++/5/bits/stl_deque.h ****     };
 6788              		.loc 3 257 0
 6789 0045 90       		nop
 6790 0046 4883C418 		addq	$24, %rsp
 6791 004a 5B       		popq	%rbx
 6792 004b 5D       		popq	%rbp
 6793              		.cfi_def_cfa 7, 8
 6794 004c C3       		ret
 6795              		.cfi_endproc
 6796              	.LFE10515:
 6798              		.section	.text._ZNSt11_Deque_baseIcSaIcEE18_M_deallocate_nodeEPc,"axG",@progbits,_ZNSt11_Deque_bas
 6799              		.align 2
 6800              		.weak	_ZNSt11_Deque_baseIcSaIcEE18_M_deallocate_nodeEPc
 6802              	_ZNSt11_Deque_baseIcSaIcEE18_M_deallocate_nodeEPc:
 6803              	.LFB10516:
 605:/usr/include/c++/5/bits/stl_deque.h ****       {
 6804              		.loc 3 605 0
GAS LISTING /tmp/ccX8BQhk.s 			page 384


 6805              		.cfi_startproc
 6806 0000 55       		pushq	%rbp
 6807              		.cfi_def_cfa_offset 16
 6808              		.cfi_offset 6, -16
 6809 0001 4889E5   		movq	%rsp, %rbp
 6810              		.cfi_def_cfa_register 6
 6811 0004 4883EC10 		subq	$16, %rsp
 6812 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6813 000c 488975F0 		movq	%rsi, -16(%rbp)
 608:/usr/include/c++/5/bits/stl_deque.h ****       }
 6814              		.loc 3 608 0
 6815 0010 BF010000 		movl	$1, %edi
 6815      00
 6816 0015 E8000000 		call	_ZSt16__deque_buf_sizem
 6816      00
 6817 001a 4889C2   		movq	%rax, %rdx
 6818 001d 488B45F8 		movq	-8(%rbp), %rax
 6819 0021 488B4DF0 		movq	-16(%rbp), %rcx
 6820 0025 4889CE   		movq	%rcx, %rsi
 6821 0028 4889C7   		movq	%rax, %rdi
 6822 002b E8000000 		call	_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm
 6822      00
 609:/usr/include/c++/5/bits/stl_deque.h **** 
 6823              		.loc 3 609 0
 6824 0030 90       		nop
 6825 0031 C9       		leave
 6826              		.cfi_def_cfa 7, 8
 6827 0032 C3       		ret
 6828              		.cfi_endproc
 6829              	.LFE10516:
 6831              		.section	.text._ZNKSt11_Deque_baseIcSaIcEE20_M_get_map_allocatorEv,"axG",@progbits,_ZNKSt11_Deque_
 6832              		.align 2
 6833              		.weak	_ZNKSt11_Deque_baseIcSaIcEE20_M_get_map_allocatorEv
 6835              	_ZNKSt11_Deque_baseIcSaIcEE20_M_get_map_allocatorEv:
 6836              	.LFB10517:
 594:/usr/include/c++/5/bits/stl_deque.h ****       { return _Map_alloc_type(_M_get_Tp_allocator()); }
 6837              		.loc 3 594 0
 6838              		.cfi_startproc
 6839 0000 55       		pushq	%rbp
 6840              		.cfi_def_cfa_offset 16
 6841              		.cfi_offset 6, -16
 6842 0001 4889E5   		movq	%rsp, %rbp
 6843              		.cfi_def_cfa_register 6
 6844 0004 4883EC10 		subq	$16, %rsp
 6845 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6846 000c 488975F0 		movq	%rsi, -16(%rbp)
 595:/usr/include/c++/5/bits/stl_deque.h **** 
 6847              		.loc 3 595 0
 6848 0010 488B45F0 		movq	-16(%rbp), %rax
 6849 0014 4889C7   		movq	%rax, %rdi
 6850 0017 E8000000 		call	_ZNKSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 6850      00
 6851 001c 4889C2   		movq	%rax, %rdx
 6852 001f 488B45F8 		movq	-8(%rbp), %rax
 6853 0023 4889D6   		movq	%rdx, %rsi
 6854 0026 4889C7   		movq	%rax, %rdi
 6855 0029 E8000000 		call	_ZNSaIPcEC1IcEERKSaIT_E
GAS LISTING /tmp/ccX8BQhk.s 			page 385


 6855      00
 6856 002e 488B45F8 		movq	-8(%rbp), %rax
 6857 0032 C9       		leave
 6858              		.cfi_def_cfa 7, 8
 6859 0033 C3       		ret
 6860              		.cfi_endproc
 6861              	.LFE10517:
 6863              		.section	.text._ZNSaIPcED2Ev,"axG",@progbits,_ZNSaIPcED5Ev,comdat
 6864              		.align 2
 6865              		.weak	_ZNSaIPcED2Ev
 6867              	_ZNSaIPcED2Ev:
 6868              	.LFB10519:
 6869              		.file 34 "/usr/include/c++/5/bits/allocator.h"
   1:/usr/include/c++/5/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/5/bits/allocator.h **** 
   3:/usr/include/c++/5/bits/allocator.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/allocator.h **** //
   5:/usr/include/c++/5/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/allocator.h **** // any later version.
  10:/usr/include/c++/5/bits/allocator.h **** 
  11:/usr/include/c++/5/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/allocator.h **** 
  16:/usr/include/c++/5/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/allocator.h **** 
  20:/usr/include/c++/5/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/allocator.h **** 
  25:/usr/include/c++/5/bits/allocator.h **** /*
  26:/usr/include/c++/5/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/5/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/5/bits/allocator.h ****  *
  29:/usr/include/c++/5/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/5/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/5/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/5/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/5/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/5/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/5/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/5/bits/allocator.h ****  */
  37:/usr/include/c++/5/bits/allocator.h **** 
  38:/usr/include/c++/5/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/5/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/5/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/5/bits/allocator.h ****  */
  42:/usr/include/c++/5/bits/allocator.h **** 
  43:/usr/include/c++/5/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/5/bits/allocator.h **** #define _ALLOCATOR_H 1
GAS LISTING /tmp/ccX8BQhk.s 			page 386


  45:/usr/include/c++/5/bits/allocator.h **** 
  46:/usr/include/c++/5/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/5/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/5/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/5/bits/allocator.h **** #endif
  51:/usr/include/c++/5/bits/allocator.h **** 
  52:/usr/include/c++/5/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/5/bits/allocator.h **** {
  54:/usr/include/c++/5/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/5/bits/allocator.h **** 
  56:/usr/include/c++/5/bits/allocator.h ****   /**
  57:/usr/include/c++/5/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/5/bits/allocator.h ****    *  @{
  59:/usr/include/c++/5/bits/allocator.h ****    */
  60:/usr/include/c++/5/bits/allocator.h **** 
  61:/usr/include/c++/5/bits/allocator.h ****   /// allocator<void> specialization.
  62:/usr/include/c++/5/bits/allocator.h ****   template<>
  63:/usr/include/c++/5/bits/allocator.h ****     class allocator<void>
  64:/usr/include/c++/5/bits/allocator.h ****     {
  65:/usr/include/c++/5/bits/allocator.h ****     public:
  66:/usr/include/c++/5/bits/allocator.h ****       typedef size_t      size_type;
  67:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  68:/usr/include/c++/5/bits/allocator.h ****       typedef void*       pointer;
  69:/usr/include/c++/5/bits/allocator.h ****       typedef const void* const_pointer;
  70:/usr/include/c++/5/bits/allocator.h ****       typedef void        value_type;
  71:/usr/include/c++/5/bits/allocator.h **** 
  72:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
  73:/usr/include/c++/5/bits/allocator.h ****         struct rebind
  74:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
  75:/usr/include/c++/5/bits/allocator.h **** 
  76:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
  77:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  78:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  79:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  80:/usr/include/c++/5/bits/allocator.h **** #endif
  81:/usr/include/c++/5/bits/allocator.h ****     };
  82:/usr/include/c++/5/bits/allocator.h **** 
  83:/usr/include/c++/5/bits/allocator.h ****   /**
  84:/usr/include/c++/5/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
  85:/usr/include/c++/5/bits/allocator.h ****    *
  86:/usr/include/c++/5/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
  87:/usr/include/c++/5/bits/allocator.h ****    *  for further details.
  88:/usr/include/c++/5/bits/allocator.h ****    *
  89:/usr/include/c++/5/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  90:/usr/include/c++/5/bits/allocator.h ****    */
  91:/usr/include/c++/5/bits/allocator.h ****   template<typename _Tp>
  92:/usr/include/c++/5/bits/allocator.h ****     class allocator: public __allocator_base<_Tp>
  93:/usr/include/c++/5/bits/allocator.h ****     {
  94:/usr/include/c++/5/bits/allocator.h ****    public:
  95:/usr/include/c++/5/bits/allocator.h ****       typedef size_t     size_type;
  96:/usr/include/c++/5/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
  97:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp*       pointer;
  98:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp* const_pointer;
  99:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp&       reference;
 100:/usr/include/c++/5/bits/allocator.h ****       typedef const _Tp& const_reference;
 101:/usr/include/c++/5/bits/allocator.h ****       typedef _Tp        value_type;
GAS LISTING /tmp/ccX8BQhk.s 			page 387


 102:/usr/include/c++/5/bits/allocator.h **** 
 103:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 104:/usr/include/c++/5/bits/allocator.h ****         struct rebind
 105:/usr/include/c++/5/bits/allocator.h ****         { typedef allocator<_Tp1> other; };
 106:/usr/include/c++/5/bits/allocator.h **** 
 107:/usr/include/c++/5/bits/allocator.h **** #if __cplusplus >= 201103L
 108:/usr/include/c++/5/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 109:/usr/include/c++/5/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 110:/usr/include/c++/5/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 111:/usr/include/c++/5/bits/allocator.h **** #endif
 112:/usr/include/c++/5/bits/allocator.h **** 
 113:/usr/include/c++/5/bits/allocator.h ****       allocator() throw() { }
 114:/usr/include/c++/5/bits/allocator.h **** 
 115:/usr/include/c++/5/bits/allocator.h ****       allocator(const allocator& __a) throw()
 116:/usr/include/c++/5/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 117:/usr/include/c++/5/bits/allocator.h **** 
 118:/usr/include/c++/5/bits/allocator.h ****       template<typename _Tp1>
 119:/usr/include/c++/5/bits/allocator.h ****         allocator(const allocator<_Tp1>&) throw() { }
 120:/usr/include/c++/5/bits/allocator.h **** 
 121:/usr/include/c++/5/bits/allocator.h ****       ~allocator() throw() { }
 6870              		.loc 34 121 0
 6871              		.cfi_startproc
 6872 0000 55       		pushq	%rbp
 6873              		.cfi_def_cfa_offset 16
 6874              		.cfi_offset 6, -16
 6875 0001 4889E5   		movq	%rsp, %rbp
 6876              		.cfi_def_cfa_register 6
 6877 0004 4883EC10 		subq	$16, %rsp
 6878 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6879              	.LBB40:
 6880              		.loc 34 121 0
 6881 000c 488B45F8 		movq	-8(%rbp), %rax
 6882 0010 4889C7   		movq	%rax, %rdi
 6883 0013 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIPcED2Ev
 6883      00
 6884              	.LBE40:
 6885 0018 90       		nop
 6886 0019 C9       		leave
 6887              		.cfi_def_cfa 7, 8
 6888 001a C3       		ret
 6889              		.cfi_endproc
 6890              	.LFE10519:
 6892              		.weak	_ZNSaIPcED1Ev
 6893              		.set	_ZNSaIPcED1Ev,_ZNSaIPcED2Ev
 6894              		.section	.text._ZNSt16allocator_traitsISaIPcEE10deallocateERS1_PS0_m,"axG",@progbits,_ZNSt16alloca
 6895              		.weak	_ZNSt16allocator_traitsISaIPcEE10deallocateERS1_PS0_m
 6897              	_ZNSt16allocator_traitsISaIPcEE10deallocateERS1_PS0_m:
 6898              	.LFB10524:
 516:/usr/include/c++/5/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6899              		.loc 22 516 0
 6900              		.cfi_startproc
 6901 0000 55       		pushq	%rbp
 6902              		.cfi_def_cfa_offset 16
 6903              		.cfi_offset 6, -16
 6904 0001 4889E5   		movq	%rsp, %rbp
 6905              		.cfi_def_cfa_register 6
 6906 0004 4883EC20 		subq	$32, %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 388


 6907 0008 48897DF8 		movq	%rdi, -8(%rbp)
 6908 000c 488975F0 		movq	%rsi, -16(%rbp)
 6909 0010 488955E8 		movq	%rdx, -24(%rbp)
 517:/usr/include/c++/5/bits/alloc_traits.h **** 
 6910              		.loc 22 517 0
 6911 0014 488B55E8 		movq	-24(%rbp), %rdx
 6912 0018 488B4DF0 		movq	-16(%rbp), %rcx
 6913 001c 488B45F8 		movq	-8(%rbp), %rax
 6914 0020 4889CE   		movq	%rcx, %rsi
 6915 0023 4889C7   		movq	%rax, %rdi
 6916 0026 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIPcE10deallocateEPS1_m
 6916      00
 6917 002b 90       		nop
 6918 002c C9       		leave
 6919              		.cfi_def_cfa 7, 8
 6920 002d C3       		ret
 6921              		.cfi_endproc
 6922              	.LFE10524:
 6924              		.section	.text._ZNSt5dequeIcSaIcEE14_S_buffer_sizeEv,"axG",@progbits,_ZNSt5dequeIcSaIcEE14_S_buffe
 6925              		.weak	_ZNSt5dequeIcSaIcEE14_S_buffer_sizeEv
 6927              	_ZNSt5dequeIcSaIcEE14_S_buffer_sizeEv:
 6928              	.LFB10525:
 857:/usr/include/c++/5/bits/stl_deque.h ****       { return __deque_buf_size(sizeof(_Tp)); }
 6929              		.loc 3 857 0
 6930              		.cfi_startproc
 6931 0000 55       		pushq	%rbp
 6932              		.cfi_def_cfa_offset 16
 6933              		.cfi_offset 6, -16
 6934 0001 4889E5   		movq	%rsp, %rbp
 6935              		.cfi_def_cfa_register 6
 858:/usr/include/c++/5/bits/stl_deque.h **** 
 6936              		.loc 3 858 0
 6937 0004 BF010000 		movl	$1, %edi
 6937      00
 6938 0009 E8000000 		call	_ZSt16__deque_buf_sizem
 6938      00
 6939 000e 5D       		popq	%rbp
 6940              		.cfi_def_cfa 7, 8
 6941 000f C3       		ret
 6942              		.cfi_endproc
 6943              	.LFE10525:
 6945              		.section	.text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11
 6946              		.weak	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trai
 6948              	_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 6949              	.LFB10527:
 293:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 6950              		.loc 29 293 0
 6951              		.cfi_startproc
 6952 0000 55       		pushq	%rbp
 6953              		.cfi_def_cfa_offset 16
 6954              		.cfi_offset 6, -16
 6955 0001 4889E5   		movq	%rsp, %rbp
 6956              		.cfi_def_cfa_register 6
 6957 0004 4883EC10 		subq	$16, %rsp
 6958 0008 48897DF0 		movq	%rdi, -16(%rbp)
 294:/usr/include/c++/5/bits/stl_algobase.h **** 
 6959              		.loc 29 294 0
GAS LISTING /tmp/ccX8BQhk.s 			page 389


 6960 000c 488B45F0 		movq	-16(%rbp), %rax
 6961 0010 4889C7   		movq	%rax, %rdi
 6962 0013 E8000000 		call	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traits
 6962      00
 6963 0018 C9       		leave
 6964              		.cfi_def_cfa 7, 8
 6965 0019 C3       		ret
 6966              		.cfi_endproc
 6967              	.LFE10527:
 6969              		.section	.text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_string
 6970              		.weak	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11cha
 6972              	_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trait
 6973              	.LFB10528:
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 6974              		.loc 29 436 0
 6975              		.cfi_startproc
 6976 0000 55       		pushq	%rbp
 6977              		.cfi_def_cfa_offset 16
 6978              		.cfi_offset 6, -16
 6979 0001 4889E5   		movq	%rsp, %rbp
 6980              		.cfi_def_cfa_register 6
 6981 0004 4154     		pushq	%r12
 6982 0006 53       		pushq	%rbx
 6983 0007 4883EC50 		subq	$80, %rsp
 6984              		.cfi_offset 12, -24
 6985              		.cfi_offset 3, -32
 6986 000b 48897DC0 		movq	%rdi, -64(%rbp)
 6987 000f 488975B0 		movq	%rsi, -80(%rbp)
 6988 0013 488955A0 		movq	%rdx, -96(%rbp)
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 6989              		.loc 29 436 0
 6990 0017 64488B04 		movq	%fs:40, %rax
 6990      25280000 
 6990      00
 6991 0020 488945E8 		movq	%rax, -24(%rbp)
 6992 0024 31C0     		xorl	%eax, %eax
 438:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 6993              		.loc 29 438 0
 6994 0026 488B45A0 		movq	-96(%rbp), %rax
 6995 002a 4889C7   		movq	%rax, %rdi
 6996 002d E8000000 		call	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trait
 6996      00
 6997 0032 4989C4   		movq	%rax, %r12
 6998 0035 488B45B0 		movq	-80(%rbp), %rax
 6999 0039 4889C7   		movq	%rax, %rdi
 7000 003c E8000000 		call	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trait
 7000      00
 7001 0041 4889C3   		movq	%rax, %rbx
 7002 0044 488B45C0 		movq	-64(%rbp), %rax
 7003 0048 4889C7   		movq	%rax, %rdi
 7004 004b E8000000 		call	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trait
 7004      00
 7005 0050 4C89E2   		movq	%r12, %rdx
 7006 0053 4889DE   		movq	%rbx, %rsi
 7007 0056 4889C7   		movq	%rax, %rdi
 7008 0059 E8000000 		call	_ZSt13__copy_move_aILb0EPcS0_ET1_T0_S2_S1_
 7008      00
GAS LISTING /tmp/ccX8BQhk.s 			page 390


 440:/usr/include/c++/5/bits/stl_algobase.h ****     }
 7009              		.loc 29 440 0
 7010 005e 488945E0 		movq	%rax, -32(%rbp)
 7011 0062 488D55E0 		leaq	-32(%rbp), %rdx
 7012 0066 488D45D0 		leaq	-48(%rbp), %rax
 7013 006a 4889D6   		movq	%rdx, %rsi
 7014 006d 4889C7   		movq	%rax, %rdi
 7015 0070 E8000000 		call	_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERK
 7015      00
 7016 0075 488B45D0 		movq	-48(%rbp), %rax
 441:/usr/include/c++/5/bits/stl_algobase.h **** 
 7017              		.loc 29 441 0
 7018 0079 488B4DE8 		movq	-24(%rbp), %rcx
 7019 007d 6448330C 		xorq	%fs:40, %rcx
 7019      25280000 
 7019      00
 7020 0086 7405     		je	.L374
 7021 0088 E8000000 		call	__stack_chk_fail
 7021      00
 7022              	.L374:
 7023 008d 4883C450 		addq	$80, %rsp
 7024 0091 5B       		popq	%rbx
 7025 0092 415C     		popq	%r12
 7026 0094 5D       		popq	%rbp
 7027              		.cfi_def_cfa 7, 8
 7028 0095 C3       		ret
 7029              		.cfi_endproc
 7030              	.LFE10528:
 7032              		.section	.text._ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE,"axG",@progbits,_ZSt7forwardI
 7033              		.weak	_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE
 7035              	_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE:
 7036              	.LFB10530:
 7037              		.file 35 "/usr/include/c++/5/bits/move.h"
   1:/usr/include/c++/5/bits/move.h **** // Move, forward and identity for C++0x + swap -*- C++ -*-
   2:/usr/include/c++/5/bits/move.h **** 
   3:/usr/include/c++/5/bits/move.h **** // Copyright (C) 2007-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/move.h **** //
   5:/usr/include/c++/5/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/move.h **** // any later version.
  10:/usr/include/c++/5/bits/move.h **** 
  11:/usr/include/c++/5/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/move.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/move.h **** 
  16:/usr/include/c++/5/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/move.h **** 
  20:/usr/include/c++/5/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/move.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 391


  25:/usr/include/c++/5/bits/move.h **** /** @file bits/move.h
  26:/usr/include/c++/5/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/usr/include/c++/5/bits/move.h ****  */
  29:/usr/include/c++/5/bits/move.h **** 
  30:/usr/include/c++/5/bits/move.h **** #ifndef _MOVE_H
  31:/usr/include/c++/5/bits/move.h **** #define _MOVE_H 1
  32:/usr/include/c++/5/bits/move.h **** 
  33:/usr/include/c++/5/bits/move.h **** #include <bits/c++config.h>
  34:/usr/include/c++/5/bits/move.h **** #include <bits/concept_check.h>
  35:/usr/include/c++/5/bits/move.h **** 
  36:/usr/include/c++/5/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/usr/include/c++/5/bits/move.h **** {
  38:/usr/include/c++/5/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/usr/include/c++/5/bits/move.h **** 
  40:/usr/include/c++/5/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/usr/include/c++/5/bits/move.h ****   /**
  42:/usr/include/c++/5/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/usr/include/c++/5/bits/move.h ****    *  @ingroup utilities
  44:/usr/include/c++/5/bits/move.h ****    */
  45:/usr/include/c++/5/bits/move.h ****   template<typename _Tp>
  46:/usr/include/c++/5/bits/move.h ****     inline _Tp*
  47:/usr/include/c++/5/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  48:/usr/include/c++/5/bits/move.h ****     {
  49:/usr/include/c++/5/bits/move.h ****       return reinterpret_cast<_Tp*>
  50:/usr/include/c++/5/bits/move.h **** 	(&const_cast<char&>(reinterpret_cast<const volatile char&>(__r)));
  51:/usr/include/c++/5/bits/move.h ****     }
  52:/usr/include/c++/5/bits/move.h **** 
  53:/usr/include/c++/5/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  54:/usr/include/c++/5/bits/move.h **** } // namespace
  55:/usr/include/c++/5/bits/move.h **** 
  56:/usr/include/c++/5/bits/move.h **** #if __cplusplus >= 201103L
  57:/usr/include/c++/5/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  58:/usr/include/c++/5/bits/move.h **** 
  59:/usr/include/c++/5/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/5/bits/move.h **** {
  61:/usr/include/c++/5/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/5/bits/move.h **** 
  63:/usr/include/c++/5/bits/move.h ****   /**
  64:/usr/include/c++/5/bits/move.h ****    *  @addtogroup utilities
  65:/usr/include/c++/5/bits/move.h ****    *  @{
  66:/usr/include/c++/5/bits/move.h ****    */
  67:/usr/include/c++/5/bits/move.h **** 
  68:/usr/include/c++/5/bits/move.h ****   /**
  69:/usr/include/c++/5/bits/move.h ****    *  @brief  Forward an lvalue.
  70:/usr/include/c++/5/bits/move.h ****    *  @return The parameter cast to the specified type.
  71:/usr/include/c++/5/bits/move.h ****    *
  72:/usr/include/c++/5/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  73:/usr/include/c++/5/bits/move.h ****    */
  74:/usr/include/c++/5/bits/move.h ****   template<typename _Tp>
  75:/usr/include/c++/5/bits/move.h ****     constexpr _Tp&&
  76:/usr/include/c++/5/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 7038              		.loc 35 76 0
 7039              		.cfi_startproc
 7040 0000 55       		pushq	%rbp
 7041              		.cfi_def_cfa_offset 16
 7042              		.cfi_offset 6, -16
GAS LISTING /tmp/ccX8BQhk.s 			page 392


 7043 0001 4889E5   		movq	%rsp, %rbp
 7044              		.cfi_def_cfa_register 6
 7045 0004 48897DF8 		movq	%rdi, -8(%rbp)
  77:/usr/include/c++/5/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 7046              		.loc 35 77 0
 7047 0008 488B45F8 		movq	-8(%rbp), %rax
 7048 000c 5D       		popq	%rbp
 7049              		.cfi_def_cfa 7, 8
 7050 000d C3       		ret
 7051              		.cfi_endproc
 7052              	.LFE10530:
 7054              		.section	.text._ZNSt16allocator_traitsISaIcEE9constructIcJRKcEEEvRS0_PT_DpOT0_,"axG",@progbits,_ZN
 7055              		.weak	_ZNSt16allocator_traitsISaIcEE9constructIcJRKcEEEvRS0_PT_DpOT0_
 7057              	_ZNSt16allocator_traitsISaIcEE9constructIcJRKcEEEvRS0_PT_DpOT0_:
 7058              	.LFB10529:
 529:/usr/include/c++/5/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 7059              		.loc 22 529 0
 7060              		.cfi_startproc
 7061 0000 55       		pushq	%rbp
 7062              		.cfi_def_cfa_offset 16
 7063              		.cfi_offset 6, -16
 7064 0001 4889E5   		movq	%rsp, %rbp
 7065              		.cfi_def_cfa_register 6
 7066 0004 4883EC20 		subq	$32, %rsp
 7067 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7068 000c 488975F0 		movq	%rsi, -16(%rbp)
 7069 0010 488955E8 		movq	%rdx, -24(%rbp)
 530:/usr/include/c++/5/bits/alloc_traits.h **** 
 7070              		.loc 22 530 0
 7071 0014 488B45E8 		movq	-24(%rbp), %rax
 7072 0018 4889C7   		movq	%rax, %rdi
 7073 001b E8000000 		call	_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE
 7073      00
 7074 0020 4889C2   		movq	%rax, %rdx
 7075 0023 488B4DF0 		movq	-16(%rbp), %rcx
 7076 0027 488B45F8 		movq	-8(%rbp), %rax
 7077 002b 4889CE   		movq	%rcx, %rsi
 7078 002e 4889C7   		movq	%rax, %rdi
 7079 0031 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIcE9constructIcJRKcEEEvPT_DpOT0_
 7079      00
 7080 0036 90       		nop
 7081 0037 C9       		leave
 7082              		.cfi_def_cfa 7, 8
 7083 0038 C3       		ret
 7084              		.cfi_endproc
 7085              	.LFE10529:
 7087              		.weak	_ZNSt16allocator_traitsISaIcEE9constructIcIRKcEEEvRS0_PT_DpOT0_
 7088              		.set	_ZNSt16allocator_traitsISaIcEE9constructIcIRKcEEEvRS0_PT_DpOT0_,_ZNSt16allocator_traitsISaIcE
 7089              		.section	.text._ZNSt5dequeIcSaIcEE16_M_push_back_auxIJRKcEEEvDpOT_,"axG",@progbits,_ZNSt5dequeIcSa
 7090              		.align 2
 7091              		.weak	_ZNSt5dequeIcSaIcEE16_M_push_back_auxIJRKcEEEvDpOT_
 7093              	_ZNSt5dequeIcSaIcEE16_M_push_back_auxIJRKcEEEvDpOT_:
 7094              	.LFB10531:
 7095              		.file 36 "/usr/include/c++/5/bits/deque.tcc"
   1:/usr/include/c++/5/bits/deque.tcc **** // Deque implementation (out of line) -*- C++ -*-
   2:/usr/include/c++/5/bits/deque.tcc **** 
   3:/usr/include/c++/5/bits/deque.tcc **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
GAS LISTING /tmp/ccX8BQhk.s 			page 393


   4:/usr/include/c++/5/bits/deque.tcc **** //
   5:/usr/include/c++/5/bits/deque.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/deque.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/deque.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/deque.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/deque.tcc **** // any later version.
  10:/usr/include/c++/5/bits/deque.tcc **** 
  11:/usr/include/c++/5/bits/deque.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/deque.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/deque.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/deque.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/deque.tcc **** 
  16:/usr/include/c++/5/bits/deque.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/deque.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/deque.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/deque.tcc **** 
  20:/usr/include/c++/5/bits/deque.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/deque.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/deque.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/deque.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/deque.tcc **** 
  25:/usr/include/c++/5/bits/deque.tcc **** /*
  26:/usr/include/c++/5/bits/deque.tcc ****  *
  27:/usr/include/c++/5/bits/deque.tcc ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/deque.tcc ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/deque.tcc ****  *
  30:/usr/include/c++/5/bits/deque.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/deque.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/deque.tcc ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/deque.tcc ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/deque.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/deque.tcc ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/deque.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/deque.tcc ****  *
  38:/usr/include/c++/5/bits/deque.tcc ****  *
  39:/usr/include/c++/5/bits/deque.tcc ****  * Copyright (c) 1997
  40:/usr/include/c++/5/bits/deque.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/deque.tcc ****  *
  42:/usr/include/c++/5/bits/deque.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/deque.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/deque.tcc ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/deque.tcc ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/deque.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/deque.tcc ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/deque.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/deque.tcc ****  */
  50:/usr/include/c++/5/bits/deque.tcc **** 
  51:/usr/include/c++/5/bits/deque.tcc **** /** @file bits/deque.tcc
  52:/usr/include/c++/5/bits/deque.tcc ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/deque.tcc ****  *  Do not attempt to use it directly. @headername{deque}
  54:/usr/include/c++/5/bits/deque.tcc ****  */
  55:/usr/include/c++/5/bits/deque.tcc **** 
  56:/usr/include/c++/5/bits/deque.tcc **** #ifndef _DEQUE_TCC
  57:/usr/include/c++/5/bits/deque.tcc **** #define _DEQUE_TCC 1
  58:/usr/include/c++/5/bits/deque.tcc **** 
  59:/usr/include/c++/5/bits/deque.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/5/bits/deque.tcc **** {
GAS LISTING /tmp/ccX8BQhk.s 			page 394


  61:/usr/include/c++/5/bits/deque.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  62:/usr/include/c++/5/bits/deque.tcc **** 
  63:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
  64:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
  65:/usr/include/c++/5/bits/deque.tcc ****     void
  66:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
  67:/usr/include/c++/5/bits/deque.tcc ****     _M_default_initialize()
  68:/usr/include/c++/5/bits/deque.tcc ****     {
  69:/usr/include/c++/5/bits/deque.tcc ****       _Map_pointer __cur;
  70:/usr/include/c++/5/bits/deque.tcc ****       __try
  71:/usr/include/c++/5/bits/deque.tcc ****         {
  72:/usr/include/c++/5/bits/deque.tcc ****           for (__cur = this->_M_impl._M_start._M_node;
  73:/usr/include/c++/5/bits/deque.tcc **** 	       __cur < this->_M_impl._M_finish._M_node;
  74:/usr/include/c++/5/bits/deque.tcc **** 	       ++__cur)
  75:/usr/include/c++/5/bits/deque.tcc ****             std::__uninitialized_default_a(*__cur, *__cur + _S_buffer_size(),
  76:/usr/include/c++/5/bits/deque.tcc **** 					   _M_get_Tp_allocator());
  77:/usr/include/c++/5/bits/deque.tcc ****           std::__uninitialized_default_a(this->_M_impl._M_finish._M_first,
  78:/usr/include/c++/5/bits/deque.tcc **** 					 this->_M_impl._M_finish._M_cur,
  79:/usr/include/c++/5/bits/deque.tcc **** 					 _M_get_Tp_allocator());
  80:/usr/include/c++/5/bits/deque.tcc ****         }
  81:/usr/include/c++/5/bits/deque.tcc ****       __catch(...)
  82:/usr/include/c++/5/bits/deque.tcc ****         {
  83:/usr/include/c++/5/bits/deque.tcc ****           std::_Destroy(this->_M_impl._M_start, iterator(*__cur, __cur),
  84:/usr/include/c++/5/bits/deque.tcc **** 			_M_get_Tp_allocator());
  85:/usr/include/c++/5/bits/deque.tcc ****           __throw_exception_again;
  86:/usr/include/c++/5/bits/deque.tcc ****         }
  87:/usr/include/c++/5/bits/deque.tcc ****     }
  88:/usr/include/c++/5/bits/deque.tcc **** #endif
  89:/usr/include/c++/5/bits/deque.tcc **** 
  90:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
  91:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>&
  92:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
  93:/usr/include/c++/5/bits/deque.tcc ****     operator=(const deque& __x)
  94:/usr/include/c++/5/bits/deque.tcc ****     {
  95:/usr/include/c++/5/bits/deque.tcc ****       if (&__x != this)
  96:/usr/include/c++/5/bits/deque.tcc **** 	{
  97:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
  98:/usr/include/c++/5/bits/deque.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
  99:/usr/include/c++/5/bits/deque.tcc **** 	    {
 100:/usr/include/c++/5/bits/deque.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 101:/usr/include/c++/5/bits/deque.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 102:/usr/include/c++/5/bits/deque.tcc **** 	        {
 103:/usr/include/c++/5/bits/deque.tcc **** 		  // Replacement allocator cannot free existing storage,
 104:/usr/include/c++/5/bits/deque.tcc **** 		  // so deallocate everything and take copy of __x's data.
 105:/usr/include/c++/5/bits/deque.tcc **** 		  _M_replace_map(__x, __x.get_allocator());
 106:/usr/include/c++/5/bits/deque.tcc **** 		  std::__alloc_on_copy(_M_get_Tp_allocator(),
 107:/usr/include/c++/5/bits/deque.tcc **** 				       __x._M_get_Tp_allocator());
 108:/usr/include/c++/5/bits/deque.tcc **** 		  return *this;
 109:/usr/include/c++/5/bits/deque.tcc **** 		}
 110:/usr/include/c++/5/bits/deque.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 111:/usr/include/c++/5/bits/deque.tcc **** 				   __x._M_get_Tp_allocator());
 112:/usr/include/c++/5/bits/deque.tcc **** 	    }
 113:/usr/include/c++/5/bits/deque.tcc **** #endif
 114:/usr/include/c++/5/bits/deque.tcc **** 	  const size_type __len = size();
 115:/usr/include/c++/5/bits/deque.tcc **** 	  if (__len >= __x.size())
 116:/usr/include/c++/5/bits/deque.tcc **** 	    _M_erase_at_end(std::copy(__x.begin(), __x.end(),
 117:/usr/include/c++/5/bits/deque.tcc **** 				      this->_M_impl._M_start));
GAS LISTING /tmp/ccX8BQhk.s 			page 395


 118:/usr/include/c++/5/bits/deque.tcc **** 	  else
 119:/usr/include/c++/5/bits/deque.tcc **** 	    {
 120:/usr/include/c++/5/bits/deque.tcc **** 	      const_iterator __mid = __x.begin() + difference_type(__len);
 121:/usr/include/c++/5/bits/deque.tcc **** 	      std::copy(__x.begin(), __mid, this->_M_impl._M_start);
 122:/usr/include/c++/5/bits/deque.tcc **** 	      insert(this->_M_impl._M_finish, __mid, __x.end());
 123:/usr/include/c++/5/bits/deque.tcc **** 	    }
 124:/usr/include/c++/5/bits/deque.tcc **** 	}
 125:/usr/include/c++/5/bits/deque.tcc ****       return *this;
 126:/usr/include/c++/5/bits/deque.tcc ****     }
 127:/usr/include/c++/5/bits/deque.tcc **** 
 128:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
 129:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 130:/usr/include/c++/5/bits/deque.tcc ****     template<typename... _Args>
 131:/usr/include/c++/5/bits/deque.tcc ****       void
 132:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 133:/usr/include/c++/5/bits/deque.tcc ****       emplace_front(_Args&&... __args)
 134:/usr/include/c++/5/bits/deque.tcc ****       {
 135:/usr/include/c++/5/bits/deque.tcc **** 	if (this->_M_impl._M_start._M_cur != this->_M_impl._M_start._M_first)
 136:/usr/include/c++/5/bits/deque.tcc **** 	  {
 137:/usr/include/c++/5/bits/deque.tcc **** 	    _Alloc_traits::construct(this->_M_impl,
 138:/usr/include/c++/5/bits/deque.tcc **** 	                             this->_M_impl._M_start._M_cur - 1,
 139:/usr/include/c++/5/bits/deque.tcc **** 			             std::forward<_Args>(__args)...);
 140:/usr/include/c++/5/bits/deque.tcc **** 	    --this->_M_impl._M_start._M_cur;
 141:/usr/include/c++/5/bits/deque.tcc **** 	  }
 142:/usr/include/c++/5/bits/deque.tcc **** 	else
 143:/usr/include/c++/5/bits/deque.tcc **** 	  _M_push_front_aux(std::forward<_Args>(__args)...);
 144:/usr/include/c++/5/bits/deque.tcc ****       }
 145:/usr/include/c++/5/bits/deque.tcc **** 
 146:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 147:/usr/include/c++/5/bits/deque.tcc ****     template<typename... _Args>
 148:/usr/include/c++/5/bits/deque.tcc ****       void
 149:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 150:/usr/include/c++/5/bits/deque.tcc ****       emplace_back(_Args&&... __args)
 151:/usr/include/c++/5/bits/deque.tcc ****       {
 152:/usr/include/c++/5/bits/deque.tcc **** 	if (this->_M_impl._M_finish._M_cur
 153:/usr/include/c++/5/bits/deque.tcc **** 	    != this->_M_impl._M_finish._M_last - 1)
 154:/usr/include/c++/5/bits/deque.tcc **** 	  {
 155:/usr/include/c++/5/bits/deque.tcc **** 	    _Alloc_traits::construct(this->_M_impl,
 156:/usr/include/c++/5/bits/deque.tcc **** 	                             this->_M_impl._M_finish._M_cur,
 157:/usr/include/c++/5/bits/deque.tcc **** 			             std::forward<_Args>(__args)...);
 158:/usr/include/c++/5/bits/deque.tcc **** 	    ++this->_M_impl._M_finish._M_cur;
 159:/usr/include/c++/5/bits/deque.tcc **** 	  }
 160:/usr/include/c++/5/bits/deque.tcc **** 	else
 161:/usr/include/c++/5/bits/deque.tcc **** 	  _M_push_back_aux(std::forward<_Args>(__args)...);
 162:/usr/include/c++/5/bits/deque.tcc ****       }
 163:/usr/include/c++/5/bits/deque.tcc **** #endif
 164:/usr/include/c++/5/bits/deque.tcc **** 
 165:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
 166:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 167:/usr/include/c++/5/bits/deque.tcc ****     template<typename... _Args>
 168:/usr/include/c++/5/bits/deque.tcc ****       typename deque<_Tp, _Alloc>::iterator
 169:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 170:/usr/include/c++/5/bits/deque.tcc ****       emplace(const_iterator __position, _Args&&... __args)
 171:/usr/include/c++/5/bits/deque.tcc ****       {
 172:/usr/include/c++/5/bits/deque.tcc **** 	if (__position._M_cur == this->_M_impl._M_start._M_cur)
 173:/usr/include/c++/5/bits/deque.tcc **** 	  {
 174:/usr/include/c++/5/bits/deque.tcc **** 	    emplace_front(std::forward<_Args>(__args)...);
GAS LISTING /tmp/ccX8BQhk.s 			page 396


 175:/usr/include/c++/5/bits/deque.tcc **** 	    return this->_M_impl._M_start;
 176:/usr/include/c++/5/bits/deque.tcc **** 	  }
 177:/usr/include/c++/5/bits/deque.tcc **** 	else if (__position._M_cur == this->_M_impl._M_finish._M_cur)
 178:/usr/include/c++/5/bits/deque.tcc **** 	  {
 179:/usr/include/c++/5/bits/deque.tcc **** 	    emplace_back(std::forward<_Args>(__args)...);
 180:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __tmp = this->_M_impl._M_finish;
 181:/usr/include/c++/5/bits/deque.tcc **** 	    --__tmp;
 182:/usr/include/c++/5/bits/deque.tcc **** 	    return __tmp;
 183:/usr/include/c++/5/bits/deque.tcc **** 	  }
 184:/usr/include/c++/5/bits/deque.tcc **** 	else
 185:/usr/include/c++/5/bits/deque.tcc **** 	  return _M_insert_aux(__position._M_const_cast(),
 186:/usr/include/c++/5/bits/deque.tcc **** 			       std::forward<_Args>(__args)...);
 187:/usr/include/c++/5/bits/deque.tcc ****       }
 188:/usr/include/c++/5/bits/deque.tcc **** #endif
 189:/usr/include/c++/5/bits/deque.tcc **** 
 190:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 191:/usr/include/c++/5/bits/deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 192:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 193:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
 194:/usr/include/c++/5/bits/deque.tcc ****     insert(const_iterator __position, const value_type& __x)
 195:/usr/include/c++/5/bits/deque.tcc **** #else
 196:/usr/include/c++/5/bits/deque.tcc ****     insert(iterator __position, const value_type& __x)
 197:/usr/include/c++/5/bits/deque.tcc **** #endif
 198:/usr/include/c++/5/bits/deque.tcc ****     {
 199:/usr/include/c++/5/bits/deque.tcc ****       if (__position._M_cur == this->_M_impl._M_start._M_cur)
 200:/usr/include/c++/5/bits/deque.tcc **** 	{
 201:/usr/include/c++/5/bits/deque.tcc **** 	  push_front(__x);
 202:/usr/include/c++/5/bits/deque.tcc **** 	  return this->_M_impl._M_start;
 203:/usr/include/c++/5/bits/deque.tcc **** 	}
 204:/usr/include/c++/5/bits/deque.tcc ****       else if (__position._M_cur == this->_M_impl._M_finish._M_cur)
 205:/usr/include/c++/5/bits/deque.tcc **** 	{
 206:/usr/include/c++/5/bits/deque.tcc **** 	  push_back(__x);
 207:/usr/include/c++/5/bits/deque.tcc **** 	  iterator __tmp = this->_M_impl._M_finish;
 208:/usr/include/c++/5/bits/deque.tcc **** 	  --__tmp;
 209:/usr/include/c++/5/bits/deque.tcc **** 	  return __tmp;
 210:/usr/include/c++/5/bits/deque.tcc **** 	}
 211:/usr/include/c++/5/bits/deque.tcc ****       else
 212:/usr/include/c++/5/bits/deque.tcc **** 	return _M_insert_aux(__position._M_const_cast(), __x);
 213:/usr/include/c++/5/bits/deque.tcc ****    }
 214:/usr/include/c++/5/bits/deque.tcc **** 
 215:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 216:/usr/include/c++/5/bits/deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 217:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 218:/usr/include/c++/5/bits/deque.tcc ****     _M_erase(iterator __position)
 219:/usr/include/c++/5/bits/deque.tcc ****     {
 220:/usr/include/c++/5/bits/deque.tcc ****       iterator __next = __position;
 221:/usr/include/c++/5/bits/deque.tcc ****       ++__next;
 222:/usr/include/c++/5/bits/deque.tcc ****       const difference_type __index = __position - begin();
 223:/usr/include/c++/5/bits/deque.tcc ****       if (static_cast<size_type>(__index) < (size() >> 1))
 224:/usr/include/c++/5/bits/deque.tcc **** 	{
 225:/usr/include/c++/5/bits/deque.tcc **** 	  if (__position != begin())
 226:/usr/include/c++/5/bits/deque.tcc **** 	    _GLIBCXX_MOVE_BACKWARD3(begin(), __position, __next);
 227:/usr/include/c++/5/bits/deque.tcc **** 	  pop_front();
 228:/usr/include/c++/5/bits/deque.tcc **** 	}
 229:/usr/include/c++/5/bits/deque.tcc ****       else
 230:/usr/include/c++/5/bits/deque.tcc **** 	{
 231:/usr/include/c++/5/bits/deque.tcc **** 	  if (__next != end())
GAS LISTING /tmp/ccX8BQhk.s 			page 397


 232:/usr/include/c++/5/bits/deque.tcc **** 	    _GLIBCXX_MOVE3(__next, end(), __position);
 233:/usr/include/c++/5/bits/deque.tcc **** 	  pop_back();
 234:/usr/include/c++/5/bits/deque.tcc **** 	}
 235:/usr/include/c++/5/bits/deque.tcc ****       return begin() + __index;
 236:/usr/include/c++/5/bits/deque.tcc ****     }
 237:/usr/include/c++/5/bits/deque.tcc **** 
 238:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 239:/usr/include/c++/5/bits/deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 240:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 241:/usr/include/c++/5/bits/deque.tcc ****     _M_erase(iterator __first, iterator __last)
 242:/usr/include/c++/5/bits/deque.tcc ****     {
 243:/usr/include/c++/5/bits/deque.tcc ****       if (__first == __last)
 244:/usr/include/c++/5/bits/deque.tcc **** 	return __first;
 245:/usr/include/c++/5/bits/deque.tcc ****       else if (__first == begin() && __last == end())
 246:/usr/include/c++/5/bits/deque.tcc **** 	{
 247:/usr/include/c++/5/bits/deque.tcc **** 	  clear();
 248:/usr/include/c++/5/bits/deque.tcc **** 	  return end();
 249:/usr/include/c++/5/bits/deque.tcc **** 	}
 250:/usr/include/c++/5/bits/deque.tcc ****       else
 251:/usr/include/c++/5/bits/deque.tcc **** 	{
 252:/usr/include/c++/5/bits/deque.tcc **** 	  const difference_type __n = __last - __first;
 253:/usr/include/c++/5/bits/deque.tcc **** 	  const difference_type __elems_before = __first - begin();
 254:/usr/include/c++/5/bits/deque.tcc **** 	  if (static_cast<size_type>(__elems_before) <= (size() - __n) / 2)
 255:/usr/include/c++/5/bits/deque.tcc **** 	    {
 256:/usr/include/c++/5/bits/deque.tcc **** 	      if (__first != begin())
 257:/usr/include/c++/5/bits/deque.tcc **** 		_GLIBCXX_MOVE_BACKWARD3(begin(), __first, __last);
 258:/usr/include/c++/5/bits/deque.tcc **** 	      _M_erase_at_begin(begin() + __n);
 259:/usr/include/c++/5/bits/deque.tcc **** 	    }
 260:/usr/include/c++/5/bits/deque.tcc **** 	  else
 261:/usr/include/c++/5/bits/deque.tcc **** 	    {
 262:/usr/include/c++/5/bits/deque.tcc **** 	      if (__last != end())
 263:/usr/include/c++/5/bits/deque.tcc **** 		_GLIBCXX_MOVE3(__last, end(), __first);
 264:/usr/include/c++/5/bits/deque.tcc **** 	      _M_erase_at_end(end() - __n);
 265:/usr/include/c++/5/bits/deque.tcc **** 	    }
 266:/usr/include/c++/5/bits/deque.tcc **** 	  return begin() + __elems_before;
 267:/usr/include/c++/5/bits/deque.tcc **** 	}
 268:/usr/include/c++/5/bits/deque.tcc ****     }
 269:/usr/include/c++/5/bits/deque.tcc **** 
 270:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, class _Alloc>
 271:/usr/include/c++/5/bits/deque.tcc ****     template <typename _InputIterator>
 272:/usr/include/c++/5/bits/deque.tcc ****       void
 273:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 274:/usr/include/c++/5/bits/deque.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 275:/usr/include/c++/5/bits/deque.tcc **** 		    std::input_iterator_tag)
 276:/usr/include/c++/5/bits/deque.tcc ****       {
 277:/usr/include/c++/5/bits/deque.tcc ****         iterator __cur = begin();
 278:/usr/include/c++/5/bits/deque.tcc ****         for (; __first != __last && __cur != end(); ++__cur, ++__first)
 279:/usr/include/c++/5/bits/deque.tcc ****           *__cur = *__first;
 280:/usr/include/c++/5/bits/deque.tcc ****         if (__first == __last)
 281:/usr/include/c++/5/bits/deque.tcc ****           _M_erase_at_end(__cur);
 282:/usr/include/c++/5/bits/deque.tcc ****         else
 283:/usr/include/c++/5/bits/deque.tcc ****           insert(end(), __first, __last);
 284:/usr/include/c++/5/bits/deque.tcc ****       }
 285:/usr/include/c++/5/bits/deque.tcc **** 
 286:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 287:/usr/include/c++/5/bits/deque.tcc ****     void
 288:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
GAS LISTING /tmp/ccX8BQhk.s 			page 398


 289:/usr/include/c++/5/bits/deque.tcc ****     _M_fill_insert(iterator __pos, size_type __n, const value_type& __x)
 290:/usr/include/c++/5/bits/deque.tcc ****     {
 291:/usr/include/c++/5/bits/deque.tcc ****       if (__pos._M_cur == this->_M_impl._M_start._M_cur)
 292:/usr/include/c++/5/bits/deque.tcc **** 	{
 293:/usr/include/c++/5/bits/deque.tcc **** 	  iterator __new_start = _M_reserve_elements_at_front(__n);
 294:/usr/include/c++/5/bits/deque.tcc **** 	  __try
 295:/usr/include/c++/5/bits/deque.tcc **** 	    {
 296:/usr/include/c++/5/bits/deque.tcc **** 	      std::__uninitialized_fill_a(__new_start, this->_M_impl._M_start,
 297:/usr/include/c++/5/bits/deque.tcc **** 					  __x, _M_get_Tp_allocator());
 298:/usr/include/c++/5/bits/deque.tcc **** 	      this->_M_impl._M_start = __new_start;
 299:/usr/include/c++/5/bits/deque.tcc **** 	    }
 300:/usr/include/c++/5/bits/deque.tcc **** 	  __catch(...)
 301:/usr/include/c++/5/bits/deque.tcc **** 	    {
 302:/usr/include/c++/5/bits/deque.tcc **** 	      _M_destroy_nodes(__new_start._M_node,
 303:/usr/include/c++/5/bits/deque.tcc **** 			       this->_M_impl._M_start._M_node);
 304:/usr/include/c++/5/bits/deque.tcc **** 	      __throw_exception_again;
 305:/usr/include/c++/5/bits/deque.tcc **** 	    }
 306:/usr/include/c++/5/bits/deque.tcc **** 	}
 307:/usr/include/c++/5/bits/deque.tcc ****       else if (__pos._M_cur == this->_M_impl._M_finish._M_cur)
 308:/usr/include/c++/5/bits/deque.tcc **** 	{
 309:/usr/include/c++/5/bits/deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 310:/usr/include/c++/5/bits/deque.tcc **** 	  __try
 311:/usr/include/c++/5/bits/deque.tcc **** 	    {
 312:/usr/include/c++/5/bits/deque.tcc **** 	      std::__uninitialized_fill_a(this->_M_impl._M_finish,
 313:/usr/include/c++/5/bits/deque.tcc **** 					  __new_finish, __x,
 314:/usr/include/c++/5/bits/deque.tcc **** 					  _M_get_Tp_allocator());
 315:/usr/include/c++/5/bits/deque.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 316:/usr/include/c++/5/bits/deque.tcc **** 	    }
 317:/usr/include/c++/5/bits/deque.tcc **** 	  __catch(...)
 318:/usr/include/c++/5/bits/deque.tcc **** 	    {
 319:/usr/include/c++/5/bits/deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 320:/usr/include/c++/5/bits/deque.tcc **** 			       __new_finish._M_node + 1);
 321:/usr/include/c++/5/bits/deque.tcc **** 	      __throw_exception_again;
 322:/usr/include/c++/5/bits/deque.tcc **** 	    }
 323:/usr/include/c++/5/bits/deque.tcc **** 	}
 324:/usr/include/c++/5/bits/deque.tcc ****       else
 325:/usr/include/c++/5/bits/deque.tcc ****         _M_insert_aux(__pos, __n, __x);
 326:/usr/include/c++/5/bits/deque.tcc ****     }
 327:/usr/include/c++/5/bits/deque.tcc **** 
 328:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
 329:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 330:/usr/include/c++/5/bits/deque.tcc ****     void
 331:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 332:/usr/include/c++/5/bits/deque.tcc ****     _M_default_append(size_type __n)
 333:/usr/include/c++/5/bits/deque.tcc ****     {
 334:/usr/include/c++/5/bits/deque.tcc ****       if (__n)
 335:/usr/include/c++/5/bits/deque.tcc **** 	{
 336:/usr/include/c++/5/bits/deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 337:/usr/include/c++/5/bits/deque.tcc **** 	  __try
 338:/usr/include/c++/5/bits/deque.tcc **** 	    {
 339:/usr/include/c++/5/bits/deque.tcc **** 	      std::__uninitialized_default_a(this->_M_impl._M_finish,
 340:/usr/include/c++/5/bits/deque.tcc **** 					     __new_finish,
 341:/usr/include/c++/5/bits/deque.tcc **** 					     _M_get_Tp_allocator());
 342:/usr/include/c++/5/bits/deque.tcc **** 	      this->_M_impl._M_finish = __new_finish;
 343:/usr/include/c++/5/bits/deque.tcc **** 	    }
 344:/usr/include/c++/5/bits/deque.tcc **** 	  __catch(...)
 345:/usr/include/c++/5/bits/deque.tcc **** 	    {
GAS LISTING /tmp/ccX8BQhk.s 			page 399


 346:/usr/include/c++/5/bits/deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 347:/usr/include/c++/5/bits/deque.tcc **** 			       __new_finish._M_node + 1);
 348:/usr/include/c++/5/bits/deque.tcc **** 	      __throw_exception_again;
 349:/usr/include/c++/5/bits/deque.tcc **** 	    }
 350:/usr/include/c++/5/bits/deque.tcc **** 	}
 351:/usr/include/c++/5/bits/deque.tcc ****     }
 352:/usr/include/c++/5/bits/deque.tcc **** 
 353:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 354:/usr/include/c++/5/bits/deque.tcc ****     bool
 355:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 356:/usr/include/c++/5/bits/deque.tcc ****     _M_shrink_to_fit()
 357:/usr/include/c++/5/bits/deque.tcc ****     {
 358:/usr/include/c++/5/bits/deque.tcc ****       const difference_type __front_capacity
 359:/usr/include/c++/5/bits/deque.tcc **** 	= (this->_M_impl._M_start._M_cur - this->_M_impl._M_start._M_first);
 360:/usr/include/c++/5/bits/deque.tcc ****       if (__front_capacity == 0)
 361:/usr/include/c++/5/bits/deque.tcc **** 	return false;
 362:/usr/include/c++/5/bits/deque.tcc **** 
 363:/usr/include/c++/5/bits/deque.tcc ****       const difference_type __back_capacity
 364:/usr/include/c++/5/bits/deque.tcc **** 	= (this->_M_impl._M_finish._M_last - this->_M_impl._M_finish._M_cur);
 365:/usr/include/c++/5/bits/deque.tcc ****       if (__front_capacity + __back_capacity < _S_buffer_size())
 366:/usr/include/c++/5/bits/deque.tcc **** 	return false;
 367:/usr/include/c++/5/bits/deque.tcc **** 
 368:/usr/include/c++/5/bits/deque.tcc ****       return std::__shrink_to_fit_aux<deque>::_S_do_it(*this);
 369:/usr/include/c++/5/bits/deque.tcc ****     }
 370:/usr/include/c++/5/bits/deque.tcc **** #endif
 371:/usr/include/c++/5/bits/deque.tcc **** 
 372:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 373:/usr/include/c++/5/bits/deque.tcc ****     void
 374:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 375:/usr/include/c++/5/bits/deque.tcc ****     _M_fill_initialize(const value_type& __value)
 376:/usr/include/c++/5/bits/deque.tcc ****     {
 377:/usr/include/c++/5/bits/deque.tcc ****       _Map_pointer __cur;
 378:/usr/include/c++/5/bits/deque.tcc ****       __try
 379:/usr/include/c++/5/bits/deque.tcc ****         {
 380:/usr/include/c++/5/bits/deque.tcc ****           for (__cur = this->_M_impl._M_start._M_node;
 381:/usr/include/c++/5/bits/deque.tcc **** 	       __cur < this->_M_impl._M_finish._M_node;
 382:/usr/include/c++/5/bits/deque.tcc **** 	       ++__cur)
 383:/usr/include/c++/5/bits/deque.tcc ****             std::__uninitialized_fill_a(*__cur, *__cur + _S_buffer_size(),
 384:/usr/include/c++/5/bits/deque.tcc **** 					__value, _M_get_Tp_allocator());
 385:/usr/include/c++/5/bits/deque.tcc ****           std::__uninitialized_fill_a(this->_M_impl._M_finish._M_first,
 386:/usr/include/c++/5/bits/deque.tcc **** 				      this->_M_impl._M_finish._M_cur,
 387:/usr/include/c++/5/bits/deque.tcc **** 				      __value, _M_get_Tp_allocator());
 388:/usr/include/c++/5/bits/deque.tcc ****         }
 389:/usr/include/c++/5/bits/deque.tcc ****       __catch(...)
 390:/usr/include/c++/5/bits/deque.tcc ****         {
 391:/usr/include/c++/5/bits/deque.tcc ****           std::_Destroy(this->_M_impl._M_start, iterator(*__cur, __cur),
 392:/usr/include/c++/5/bits/deque.tcc **** 			_M_get_Tp_allocator());
 393:/usr/include/c++/5/bits/deque.tcc ****           __throw_exception_again;
 394:/usr/include/c++/5/bits/deque.tcc ****         }
 395:/usr/include/c++/5/bits/deque.tcc ****     }
 396:/usr/include/c++/5/bits/deque.tcc **** 
 397:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 398:/usr/include/c++/5/bits/deque.tcc ****     template <typename _InputIterator>
 399:/usr/include/c++/5/bits/deque.tcc ****       void
 400:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 401:/usr/include/c++/5/bits/deque.tcc ****       _M_range_initialize(_InputIterator __first, _InputIterator __last,
 402:/usr/include/c++/5/bits/deque.tcc ****                           std::input_iterator_tag)
GAS LISTING /tmp/ccX8BQhk.s 			page 400


 403:/usr/include/c++/5/bits/deque.tcc ****       {
 404:/usr/include/c++/5/bits/deque.tcc ****         this->_M_initialize_map(0);
 405:/usr/include/c++/5/bits/deque.tcc ****         __try
 406:/usr/include/c++/5/bits/deque.tcc ****           {
 407:/usr/include/c++/5/bits/deque.tcc ****             for (; __first != __last; ++__first)
 408:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
 409:/usr/include/c++/5/bits/deque.tcc **** 	      emplace_back(*__first);
 410:/usr/include/c++/5/bits/deque.tcc **** #else
 411:/usr/include/c++/5/bits/deque.tcc ****               push_back(*__first);
 412:/usr/include/c++/5/bits/deque.tcc **** #endif
 413:/usr/include/c++/5/bits/deque.tcc ****           }
 414:/usr/include/c++/5/bits/deque.tcc ****         __catch(...)
 415:/usr/include/c++/5/bits/deque.tcc ****           {
 416:/usr/include/c++/5/bits/deque.tcc ****             clear();
 417:/usr/include/c++/5/bits/deque.tcc ****             __throw_exception_again;
 418:/usr/include/c++/5/bits/deque.tcc ****           }
 419:/usr/include/c++/5/bits/deque.tcc ****       }
 420:/usr/include/c++/5/bits/deque.tcc **** 
 421:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 422:/usr/include/c++/5/bits/deque.tcc ****     template <typename _ForwardIterator>
 423:/usr/include/c++/5/bits/deque.tcc ****       void
 424:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 425:/usr/include/c++/5/bits/deque.tcc ****       _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
 426:/usr/include/c++/5/bits/deque.tcc ****                           std::forward_iterator_tag)
 427:/usr/include/c++/5/bits/deque.tcc ****       {
 428:/usr/include/c++/5/bits/deque.tcc ****         const size_type __n = std::distance(__first, __last);
 429:/usr/include/c++/5/bits/deque.tcc ****         this->_M_initialize_map(__n);
 430:/usr/include/c++/5/bits/deque.tcc **** 
 431:/usr/include/c++/5/bits/deque.tcc ****         _Map_pointer __cur_node;
 432:/usr/include/c++/5/bits/deque.tcc ****         __try
 433:/usr/include/c++/5/bits/deque.tcc ****           {
 434:/usr/include/c++/5/bits/deque.tcc ****             for (__cur_node = this->_M_impl._M_start._M_node;
 435:/usr/include/c++/5/bits/deque.tcc ****                  __cur_node < this->_M_impl._M_finish._M_node;
 436:/usr/include/c++/5/bits/deque.tcc ****                  ++__cur_node)
 437:/usr/include/c++/5/bits/deque.tcc **** 	      {
 438:/usr/include/c++/5/bits/deque.tcc **** 		_ForwardIterator __mid = __first;
 439:/usr/include/c++/5/bits/deque.tcc **** 		std::advance(__mid, _S_buffer_size());
 440:/usr/include/c++/5/bits/deque.tcc **** 		std::__uninitialized_copy_a(__first, __mid, *__cur_node,
 441:/usr/include/c++/5/bits/deque.tcc **** 					    _M_get_Tp_allocator());
 442:/usr/include/c++/5/bits/deque.tcc **** 		__first = __mid;
 443:/usr/include/c++/5/bits/deque.tcc **** 	      }
 444:/usr/include/c++/5/bits/deque.tcc ****             std::__uninitialized_copy_a(__first, __last,
 445:/usr/include/c++/5/bits/deque.tcc **** 					this->_M_impl._M_finish._M_first,
 446:/usr/include/c++/5/bits/deque.tcc **** 					_M_get_Tp_allocator());
 447:/usr/include/c++/5/bits/deque.tcc ****           }
 448:/usr/include/c++/5/bits/deque.tcc ****         __catch(...)
 449:/usr/include/c++/5/bits/deque.tcc ****           {
 450:/usr/include/c++/5/bits/deque.tcc ****             std::_Destroy(this->_M_impl._M_start,
 451:/usr/include/c++/5/bits/deque.tcc **** 			  iterator(*__cur_node, __cur_node),
 452:/usr/include/c++/5/bits/deque.tcc **** 			  _M_get_Tp_allocator());
 453:/usr/include/c++/5/bits/deque.tcc ****             __throw_exception_again;
 454:/usr/include/c++/5/bits/deque.tcc ****           }
 455:/usr/include/c++/5/bits/deque.tcc ****       }
 456:/usr/include/c++/5/bits/deque.tcc **** 
 457:/usr/include/c++/5/bits/deque.tcc ****   // Called only if _M_impl._M_finish._M_cur == _M_impl._M_finish._M_last - 1.
 458:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 459:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
GAS LISTING /tmp/ccX8BQhk.s 			page 401


 460:/usr/include/c++/5/bits/deque.tcc ****     template<typename... _Args>
 461:/usr/include/c++/5/bits/deque.tcc ****       void
 462:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 7096              		.loc 36 462 0
 7097              		.cfi_startproc
 7098 0000 55       		pushq	%rbp
 7099              		.cfi_def_cfa_offset 16
 7100              		.cfi_offset 6, -16
 7101 0001 4889E5   		movq	%rsp, %rbp
 7102              		.cfi_def_cfa_register 6
 7103 0004 53       		pushq	%rbx
 7104 0005 4883EC18 		subq	$24, %rsp
 7105              		.cfi_offset 3, -24
 7106 0009 48897DE8 		movq	%rdi, -24(%rbp)
 7107 000d 488975E0 		movq	%rsi, -32(%rbp)
 463:/usr/include/c++/5/bits/deque.tcc ****       _M_push_back_aux(_Args&&... __args)
 464:/usr/include/c++/5/bits/deque.tcc **** #else
 465:/usr/include/c++/5/bits/deque.tcc ****       void
 466:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 467:/usr/include/c++/5/bits/deque.tcc ****       _M_push_back_aux(const value_type& __t)
 468:/usr/include/c++/5/bits/deque.tcc **** #endif
 469:/usr/include/c++/5/bits/deque.tcc ****       {
 470:/usr/include/c++/5/bits/deque.tcc **** 	_M_reserve_map_at_back();
 7108              		.loc 36 470 0
 7109 0011 488B45E8 		movq	-24(%rbp), %rax
 7110 0015 BE010000 		movl	$1, %esi
 7110      00
 7111 001a 4889C7   		movq	%rax, %rdi
 7112 001d E8000000 		call	_ZNSt5dequeIcSaIcEE22_M_reserve_map_at_backEm
 7112      00
 471:/usr/include/c++/5/bits/deque.tcc **** 	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
 7113              		.loc 36 471 0
 7114 0022 488B45E8 		movq	-24(%rbp), %rax
 7115 0026 488B4048 		movq	72(%rax), %rax
 7116 002a 488D5808 		leaq	8(%rax), %rbx
 7117 002e 488B45E8 		movq	-24(%rbp), %rax
 7118 0032 4889C7   		movq	%rax, %rdi
 7119 0035 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_allocate_nodeEv
 7119      00
 7120 003a 488903   		movq	%rax, (%rbx)
 472:/usr/include/c++/5/bits/deque.tcc **** 	__try
 473:/usr/include/c++/5/bits/deque.tcc **** 	  {
 474:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
 475:/usr/include/c++/5/bits/deque.tcc **** 	    _Alloc_traits::construct(this->_M_impl,
 476:/usr/include/c++/5/bits/deque.tcc **** 	                             this->_M_impl._M_finish._M_cur,
 477:/usr/include/c++/5/bits/deque.tcc **** 			             std::forward<_Args>(__args)...);
 7121              		.loc 36 477 0
 7122 003d 488B45E0 		movq	-32(%rbp), %rax
 7123 0041 4889C7   		movq	%rax, %rdi
 7124 0044 E8000000 		call	_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE
 7124      00
 7125 0049 4889C2   		movq	%rax, %rdx
 475:/usr/include/c++/5/bits/deque.tcc **** 	                             this->_M_impl._M_finish._M_cur,
 7126              		.loc 36 475 0
 7127 004c 488B45E8 		movq	-24(%rbp), %rax
 7128 0050 488B4830 		movq	48(%rax), %rcx
 7129 0054 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 402


 7130 0058 4889CE   		movq	%rcx, %rsi
 7131 005b 4889C7   		movq	%rax, %rdi
 7132 005e E8000000 		call	_ZNSt16allocator_traitsISaIcEE9constructIcJRKcEEEvRS0_PT_DpOT0_
 7132      00
 478:/usr/include/c++/5/bits/deque.tcc **** #else
 479:/usr/include/c++/5/bits/deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_finish._M_cur, __t);
 480:/usr/include/c++/5/bits/deque.tcc **** #endif
 481:/usr/include/c++/5/bits/deque.tcc **** 	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
 482:/usr/include/c++/5/bits/deque.tcc **** 						+ 1);
 7133              		.loc 36 482 0
 7134 0063 488B45E8 		movq	-24(%rbp), %rax
 7135 0067 488B4048 		movq	72(%rax), %rax
 481:/usr/include/c++/5/bits/deque.tcc **** 						+ 1);
 7136              		.loc 36 481 0
 7137 006b 488D5008 		leaq	8(%rax), %rdx
 7138 006f 488B45E8 		movq	-24(%rbp), %rax
 7139 0073 4883C030 		addq	$48, %rax
 7140 0077 4889D6   		movq	%rdx, %rsi
 7141 007a 4889C7   		movq	%rax, %rdi
 7142 007d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
 7142      00
 483:/usr/include/c++/5/bits/deque.tcc **** 	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
 7143              		.loc 36 483 0
 7144 0082 488B45E8 		movq	-24(%rbp), %rax
 7145 0086 488B5038 		movq	56(%rax), %rdx
 7146 008a 488B45E8 		movq	-24(%rbp), %rax
 7147 008e 48895030 		movq	%rdx, 48(%rax)
 484:/usr/include/c++/5/bits/deque.tcc **** 	  }
 485:/usr/include/c++/5/bits/deque.tcc **** 	__catch(...)
 486:/usr/include/c++/5/bits/deque.tcc **** 	  {
 487:/usr/include/c++/5/bits/deque.tcc **** 	    _M_deallocate_node(*(this->_M_impl._M_finish._M_node + 1));
 488:/usr/include/c++/5/bits/deque.tcc **** 	    __throw_exception_again;
 489:/usr/include/c++/5/bits/deque.tcc **** 	  }
 490:/usr/include/c++/5/bits/deque.tcc ****       }
 7148              		.loc 36 490 0
 7149 0092 90       		nop
 7150 0093 4883C418 		addq	$24, %rsp
 7151 0097 5B       		popq	%rbx
 7152 0098 5D       		popq	%rbp
 7153              		.cfi_def_cfa 7, 8
 7154 0099 C3       		ret
 7155              		.cfi_endproc
 7156              	.LFE10531:
 7158              		.weak	_ZNSt5dequeIcSaIcEE16_M_push_back_auxIIRKcEEEvDpOT_
 7159              		.set	_ZNSt5dequeIcSaIcEE16_M_push_back_auxIIRKcEEEvDpOT_,_ZNSt5dequeIcSaIcEE16_M_push_back_auxIJRK
 7160              		.section	.text._ZNKSt15_Deque_iteratorIcRcPcEdeEv,"axG",@progbits,_ZNKSt15_Deque_iteratorIcRcPcEde
 7161              		.align 2
 7162              		.weak	_ZNKSt15_Deque_iteratorIcRcPcEdeEv
 7164              	_ZNKSt15_Deque_iteratorIcRcPcEdeEv:
 7165              	.LFB10532:
 158:/usr/include/c++/5/bits/stl_deque.h ****       { return *_M_cur; }
 7166              		.loc 3 158 0
 7167              		.cfi_startproc
 7168 0000 55       		pushq	%rbp
 7169              		.cfi_def_cfa_offset 16
 7170              		.cfi_offset 6, -16
 7171 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 403


 7172              		.cfi_def_cfa_register 6
 7173 0004 48897DF8 		movq	%rdi, -8(%rbp)
 159:/usr/include/c++/5/bits/stl_deque.h **** 
 7174              		.loc 3 159 0
 7175 0008 488B45F8 		movq	-8(%rbp), %rax
 7176 000c 488B00   		movq	(%rax), %rax
 7177 000f 5D       		popq	%rbp
 7178              		.cfi_def_cfa 7, 8
 7179 0010 C3       		ret
 7180              		.cfi_endproc
 7181              	.LFE10532:
 7183              		.section	.text._ZNSt16allocator_traitsISaIcEE7destroyIcEEvRS0_PT_,"axG",@progbits,_ZNSt16allocator
 7184              		.weak	_ZNSt16allocator_traitsISaIcEE7destroyIcEEvRS0_PT_
 7186              	_ZNSt16allocator_traitsISaIcEE7destroyIcEEvRS0_PT_:
 7187              	.LFB10533:
 541:/usr/include/c++/5/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 7188              		.loc 22 541 0
 7189              		.cfi_startproc
 7190 0000 55       		pushq	%rbp
 7191              		.cfi_def_cfa_offset 16
 7192              		.cfi_offset 6, -16
 7193 0001 4889E5   		movq	%rsp, %rbp
 7194              		.cfi_def_cfa_register 6
 7195 0004 4883EC10 		subq	$16, %rsp
 7196 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7197 000c 488975F0 		movq	%rsi, -16(%rbp)
 542:/usr/include/c++/5/bits/alloc_traits.h **** 
 7198              		.loc 22 542 0
 7199 0010 488B55F0 		movq	-16(%rbp), %rdx
 7200 0014 488B45F8 		movq	-8(%rbp), %rax
 7201 0018 4889D6   		movq	%rdx, %rsi
 7202 001b 4889C7   		movq	%rax, %rdi
 7203 001e E8000000 		call	_ZN9__gnu_cxx13new_allocatorIcE7destroyIcEEvPT_
 7203      00
 7204 0023 90       		nop
 7205 0024 C9       		leave
 7206              		.cfi_def_cfa 7, 8
 7207 0025 C3       		ret
 7208              		.cfi_endproc
 7209              	.LFE10533:
 7211              		.section	.text._ZNSt5dequeIcSaIcEE16_M_pop_front_auxEv,"axG",@progbits,_ZNSt5dequeIcSaIcEE16_M_pop
 7212              		.align 2
 7213              		.weak	_ZNSt5dequeIcSaIcEE16_M_pop_front_auxEv
 7215              	_ZNSt5dequeIcSaIcEE16_M_pop_front_auxEv:
 7216              	.LFB10534:
 491:/usr/include/c++/5/bits/deque.tcc **** 
 492:/usr/include/c++/5/bits/deque.tcc ****   // Called only if _M_impl._M_start._M_cur == _M_impl._M_start._M_first.
 493:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 494:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
 495:/usr/include/c++/5/bits/deque.tcc ****     template<typename... _Args>
 496:/usr/include/c++/5/bits/deque.tcc ****       void
 497:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 498:/usr/include/c++/5/bits/deque.tcc ****       _M_push_front_aux(_Args&&... __args)
 499:/usr/include/c++/5/bits/deque.tcc **** #else
 500:/usr/include/c++/5/bits/deque.tcc ****       void
 501:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 502:/usr/include/c++/5/bits/deque.tcc ****       _M_push_front_aux(const value_type& __t)
GAS LISTING /tmp/ccX8BQhk.s 			page 404


 503:/usr/include/c++/5/bits/deque.tcc **** #endif
 504:/usr/include/c++/5/bits/deque.tcc ****       {
 505:/usr/include/c++/5/bits/deque.tcc **** 	_M_reserve_map_at_front();
 506:/usr/include/c++/5/bits/deque.tcc **** 	*(this->_M_impl._M_start._M_node - 1) = this->_M_allocate_node();
 507:/usr/include/c++/5/bits/deque.tcc **** 	__try
 508:/usr/include/c++/5/bits/deque.tcc **** 	  {
 509:/usr/include/c++/5/bits/deque.tcc **** 	    this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node
 510:/usr/include/c++/5/bits/deque.tcc **** 					       - 1);
 511:/usr/include/c++/5/bits/deque.tcc **** 	    this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_last - 1;
 512:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
 513:/usr/include/c++/5/bits/deque.tcc **** 	    _Alloc_traits::construct(this->_M_impl,
 514:/usr/include/c++/5/bits/deque.tcc **** 	                             this->_M_impl._M_start._M_cur,
 515:/usr/include/c++/5/bits/deque.tcc **** 			             std::forward<_Args>(__args)...);
 516:/usr/include/c++/5/bits/deque.tcc **** #else
 517:/usr/include/c++/5/bits/deque.tcc **** 	    this->_M_impl.construct(this->_M_impl._M_start._M_cur, __t);
 518:/usr/include/c++/5/bits/deque.tcc **** #endif
 519:/usr/include/c++/5/bits/deque.tcc **** 	  }
 520:/usr/include/c++/5/bits/deque.tcc **** 	__catch(...)
 521:/usr/include/c++/5/bits/deque.tcc **** 	  {
 522:/usr/include/c++/5/bits/deque.tcc **** 	    ++this->_M_impl._M_start;
 523:/usr/include/c++/5/bits/deque.tcc **** 	    _M_deallocate_node(*(this->_M_impl._M_start._M_node - 1));
 524:/usr/include/c++/5/bits/deque.tcc **** 	    __throw_exception_again;
 525:/usr/include/c++/5/bits/deque.tcc **** 	  }
 526:/usr/include/c++/5/bits/deque.tcc ****       }
 527:/usr/include/c++/5/bits/deque.tcc **** 
 528:/usr/include/c++/5/bits/deque.tcc ****   // Called only if _M_impl._M_finish._M_cur == _M_impl._M_finish._M_first.
 529:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 530:/usr/include/c++/5/bits/deque.tcc ****     void deque<_Tp, _Alloc>::
 531:/usr/include/c++/5/bits/deque.tcc ****     _M_pop_back_aux()
 532:/usr/include/c++/5/bits/deque.tcc ****     {
 533:/usr/include/c++/5/bits/deque.tcc ****       _M_deallocate_node(this->_M_impl._M_finish._M_first);
 534:/usr/include/c++/5/bits/deque.tcc ****       this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node - 1);
 535:/usr/include/c++/5/bits/deque.tcc ****       this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_last - 1;
 536:/usr/include/c++/5/bits/deque.tcc ****       _Alloc_traits::destroy(_M_get_Tp_allocator(),
 537:/usr/include/c++/5/bits/deque.tcc **** 			     this->_M_impl._M_finish._M_cur);
 538:/usr/include/c++/5/bits/deque.tcc ****     }
 539:/usr/include/c++/5/bits/deque.tcc **** 
 540:/usr/include/c++/5/bits/deque.tcc ****   // Called only if _M_impl._M_start._M_cur == _M_impl._M_start._M_last - 1.
 541:/usr/include/c++/5/bits/deque.tcc ****   // Note that if the deque has at least one element (a precondition for this
 542:/usr/include/c++/5/bits/deque.tcc ****   // member function), and if
 543:/usr/include/c++/5/bits/deque.tcc ****   //   _M_impl._M_start._M_cur == _M_impl._M_start._M_last,
 544:/usr/include/c++/5/bits/deque.tcc ****   // then the deque must have at least two nodes.
 545:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 546:/usr/include/c++/5/bits/deque.tcc ****     void deque<_Tp, _Alloc>::
 7217              		.loc 36 546 0
 7218              		.cfi_startproc
 7219 0000 55       		pushq	%rbp
 7220              		.cfi_def_cfa_offset 16
 7221              		.cfi_offset 6, -16
 7222 0001 4889E5   		movq	%rsp, %rbp
 7223              		.cfi_def_cfa_register 6
 7224 0004 53       		pushq	%rbx
 7225 0005 4883EC18 		subq	$24, %rsp
 7226              		.cfi_offset 3, -24
 7227 0009 48897DE8 		movq	%rdi, -24(%rbp)
 547:/usr/include/c++/5/bits/deque.tcc ****     _M_pop_front_aux()
 548:/usr/include/c++/5/bits/deque.tcc ****     {
GAS LISTING /tmp/ccX8BQhk.s 			page 405


 549:/usr/include/c++/5/bits/deque.tcc ****       _Alloc_traits::destroy(_M_get_Tp_allocator(),
 7228              		.loc 36 549 0
 7229 000d 488B45E8 		movq	-24(%rbp), %rax
 7230 0011 488B5810 		movq	16(%rax), %rbx
 7231 0015 488B45E8 		movq	-24(%rbp), %rax
 7232 0019 4889C7   		movq	%rax, %rdi
 7233 001c E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 7233      00
 7234 0021 4889DE   		movq	%rbx, %rsi
 7235 0024 4889C7   		movq	%rax, %rdi
 7236 0027 E8000000 		call	_ZNSt16allocator_traitsISaIcEE7destroyIcEEvRS0_PT_
 7236      00
 550:/usr/include/c++/5/bits/deque.tcc **** 			     this->_M_impl._M_start._M_cur);
 551:/usr/include/c++/5/bits/deque.tcc ****       _M_deallocate_node(this->_M_impl._M_start._M_first);
 7237              		.loc 36 551 0
 7238 002c 488B45E8 		movq	-24(%rbp), %rax
 7239 0030 488B5018 		movq	24(%rax), %rdx
 7240 0034 488B45E8 		movq	-24(%rbp), %rax
 7241 0038 4889D6   		movq	%rdx, %rsi
 7242 003b 4889C7   		movq	%rax, %rdi
 7243 003e E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE18_M_deallocate_nodeEPc
 7243      00
 552:/usr/include/c++/5/bits/deque.tcc ****       this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
 7244              		.loc 36 552 0
 7245 0043 488B45E8 		movq	-24(%rbp), %rax
 7246 0047 488B4028 		movq	40(%rax), %rax
 7247 004b 488D5008 		leaq	8(%rax), %rdx
 7248 004f 488B45E8 		movq	-24(%rbp), %rax
 7249 0053 4883C010 		addq	$16, %rax
 7250 0057 4889D6   		movq	%rdx, %rsi
 7251 005a 4889C7   		movq	%rax, %rdi
 7252 005d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
 7252      00
 553:/usr/include/c++/5/bits/deque.tcc ****       this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
 7253              		.loc 36 553 0
 7254 0062 488B45E8 		movq	-24(%rbp), %rax
 7255 0066 488B5018 		movq	24(%rax), %rdx
 7256 006a 488B45E8 		movq	-24(%rbp), %rax
 7257 006e 48895010 		movq	%rdx, 16(%rax)
 554:/usr/include/c++/5/bits/deque.tcc ****     }
 7258              		.loc 36 554 0
 7259 0072 90       		nop
 7260 0073 4883C418 		addq	$24, %rsp
 7261 0077 5B       		popq	%rbx
 7262 0078 5D       		popq	%rbp
 7263              		.cfi_def_cfa 7, 8
 7264 0079 C3       		ret
 7265              		.cfi_endproc
 7266              	.LFE10534:
 7268              		.section	.text._ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv,"axG",@progbits,_ZNSt15_Deque_it
 7269              		.weak	_ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv
 7271              	_ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv:
 7272              	.LFB10535:
 126:/usr/include/c++/5/bits/stl_deque.h ****       { return __deque_buf_size(sizeof(_Tp)); }
 7273              		.loc 3 126 0
 7274              		.cfi_startproc
 7275 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 406


 7276              		.cfi_def_cfa_offset 16
 7277              		.cfi_offset 6, -16
 7278 0001 4889E5   		movq	%rsp, %rbp
 7279              		.cfi_def_cfa_register 6
 127:/usr/include/c++/5/bits/stl_deque.h **** 
 7280              		.loc 3 127 0
 7281 0004 BF010000 		movl	$1, %edi
 7281      00
 7282 0009 E8000000 		call	_ZSt16__deque_buf_sizem
 7282      00
 7283 000e 5D       		popq	%rbp
 7284              		.cfi_def_cfa 7, 8
 7285 000f C3       		ret
 7286              		.cfi_endproc
 7287              	.LFE10535:
 7289              		.section	.text._ZNSt15_Deque_iteratorIcRcPcEC2ES1_PS1_,"axG",@progbits,_ZNSt15_Deque_iteratorIcRcP
 7290              		.align 2
 7291              		.weak	_ZNSt15_Deque_iteratorIcRcPcEC2ES1_PS1_
 7293              	_ZNSt15_Deque_iteratorIcRcPcEC2ES1_PS1_:
 7294              	.LFB10537:
 142:/usr/include/c++/5/bits/stl_deque.h ****       : _M_cur(__x), _M_first(*__y),
 7295              		.loc 3 142 0
 7296              		.cfi_startproc
 7297 0000 55       		pushq	%rbp
 7298              		.cfi_def_cfa_offset 16
 7299              		.cfi_offset 6, -16
 7300 0001 4889E5   		movq	%rsp, %rbp
 7301              		.cfi_def_cfa_register 6
 7302 0004 53       		pushq	%rbx
 7303 0005 4883EC28 		subq	$40, %rsp
 7304              		.cfi_offset 3, -24
 7305 0009 48897DE8 		movq	%rdi, -24(%rbp)
 7306 000d 488975E0 		movq	%rsi, -32(%rbp)
 7307 0011 488955D8 		movq	%rdx, -40(%rbp)
 7308              	.LBB41:
 144:/usr/include/c++/5/bits/stl_deque.h **** 
 7309              		.loc 3 144 0
 7310 0015 488B45E8 		movq	-24(%rbp), %rax
 7311 0019 488B55E0 		movq	-32(%rbp), %rdx
 7312 001d 488910   		movq	%rdx, (%rax)
 7313 0020 488B45D8 		movq	-40(%rbp), %rax
 7314 0024 488B10   		movq	(%rax), %rdx
 7315 0027 488B45E8 		movq	-24(%rbp), %rax
 7316 002b 48895008 		movq	%rdx, 8(%rax)
 7317 002f 488B45D8 		movq	-40(%rbp), %rax
 7318 0033 488B18   		movq	(%rax), %rbx
 7319 0036 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
 7319      00
 7320 003b 488D1403 		leaq	(%rbx,%rax), %rdx
 7321 003f 488B45E8 		movq	-24(%rbp), %rax
 7322 0043 48895010 		movq	%rdx, 16(%rax)
 7323 0047 488B45E8 		movq	-24(%rbp), %rax
 7324 004b 488B55D8 		movq	-40(%rbp), %rdx
 7325 004f 48895018 		movq	%rdx, 24(%rax)
 7326              	.LBE41:
 7327 0053 90       		nop
 7328 0054 4883C428 		addq	$40, %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 407


 7329 0058 5B       		popq	%rbx
 7330 0059 5D       		popq	%rbp
 7331              		.cfi_def_cfa 7, 8
 7332 005a C3       		ret
 7333              		.cfi_endproc
 7334              	.LFE10537:
 7336              		.weak	_ZNSt15_Deque_iteratorIcRcPcEC1ES1_PS1_
 7337              		.set	_ZNSt15_Deque_iteratorIcRcPcEC1ES1_PS1_,_ZNSt15_Deque_iteratorIcRcPcEC2ES1_PS1_
 7338              		.section	.text._ZNSt5dequeIcSaIcEE19_M_range_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St20f
 7339              		.align 2
 7340              		.weak	_ZNSt5dequeIcSaIcEE19_M_range_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St20forward_it
 7342              	_ZNSt5dequeIcSaIcEE19_M_range_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St20forward_iterator_
 7343              	.LFB10539:
 555:/usr/include/c++/5/bits/deque.tcc **** 
 556:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 557:/usr/include/c++/5/bits/deque.tcc ****     template <typename _InputIterator>
 558:/usr/include/c++/5/bits/deque.tcc ****       void
 559:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 560:/usr/include/c++/5/bits/deque.tcc ****       _M_range_insert_aux(iterator __pos,
 561:/usr/include/c++/5/bits/deque.tcc ****                           _InputIterator __first, _InputIterator __last,
 562:/usr/include/c++/5/bits/deque.tcc ****                           std::input_iterator_tag)
 563:/usr/include/c++/5/bits/deque.tcc ****       { std::copy(__first, __last, std::inserter(*this, __pos)); }
 564:/usr/include/c++/5/bits/deque.tcc **** 
 565:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 566:/usr/include/c++/5/bits/deque.tcc ****     template <typename _ForwardIterator>
 567:/usr/include/c++/5/bits/deque.tcc ****       void
 568:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 7344              		.loc 36 568 0
 7345              		.cfi_startproc
 7346              		.cfi_personality 0x3,__gxx_personality_v0
 7347              		.cfi_lsda 0x3,.LLSDA10539
 7348 0000 55       		pushq	%rbp
 7349              		.cfi_def_cfa_offset 16
 7350              		.cfi_offset 6, -16
 7351 0001 4889E5   		movq	%rsp, %rbp
 7352              		.cfi_def_cfa_register 6
 7353 0004 53       		pushq	%rbx
 7354 0005 4881ECA8 		subq	$168, %rsp
 7354      000000
 7355              		.cfi_offset 3, -24
 7356 000c 48897D88 		movq	%rdi, -120(%rbp)
 7357 0010 48897580 		movq	%rsi, -128(%rbp)
 7358 0014 48899578 		movq	%rdx, -136(%rbp)
 7358      FFFFFF
 7359 001b 48898D70 		movq	%rcx, -144(%rbp)
 7359      FFFFFF
 7360              		.loc 36 568 0
 7361 0022 64488B04 		movq	%fs:40, %rax
 7361      25280000 
 7361      00
 7362 002b 488945E8 		movq	%rax, -24(%rbp)
 7363 002f 31C0     		xorl	%eax, %eax
 569:/usr/include/c++/5/bits/deque.tcc ****       _M_range_insert_aux(iterator __pos,
 570:/usr/include/c++/5/bits/deque.tcc ****                           _ForwardIterator __first, _ForwardIterator __last,
 571:/usr/include/c++/5/bits/deque.tcc ****                           std::forward_iterator_tag)
 572:/usr/include/c++/5/bits/deque.tcc ****       {
 573:/usr/include/c++/5/bits/deque.tcc ****         const size_type __n = std::distance(__first, __last);
GAS LISTING /tmp/ccX8BQhk.s 			page 408


 7364              		.loc 36 573 0
 7365 0031 488B9570 		movq	-144(%rbp), %rdx
 7365      FFFFFF
 7366 0038 488B8578 		movq	-136(%rbp), %rax
 7366      FFFFFF
 7367 003f 4889D6   		movq	%rdx, %rsi
 7368 0042 4889C7   		movq	%rax, %rdi
 7369 0045 E8000000 		call	_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
 7369      00
 7370 004a 48894598 		movq	%rax, -104(%rbp)
 7371              	.LBB42:
 574:/usr/include/c++/5/bits/deque.tcc ****         if (__pos._M_cur == this->_M_impl._M_start._M_cur)
 7372              		.loc 36 574 0
 7373 004e 488B4580 		movq	-128(%rbp), %rax
 7374 0052 488B10   		movq	(%rax), %rdx
 7375 0055 488B4588 		movq	-120(%rbp), %rax
 7376 0059 488B4010 		movq	16(%rax), %rax
 7377 005d 4839C2   		cmpq	%rax, %rdx
 7378 0060 0F858600 		jne	.L387
 7378      0000
 7379              	.LBB43:
 575:/usr/include/c++/5/bits/deque.tcc **** 	  {
 576:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __new_start = _M_reserve_elements_at_front(__n);
 7380              		.loc 36 576 0
 7381 0066 488D45A0 		leaq	-96(%rbp), %rax
 7382 006a 488B5598 		movq	-104(%rbp), %rdx
 7383 006e 488B4D88 		movq	-120(%rbp), %rcx
 7384 0072 4889CE   		movq	%rcx, %rsi
 7385 0075 4889C7   		movq	%rax, %rdi
 7386              	.LEHB37:
 7387 0078 E8000000 		call	_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEm
 7387      00
 7388              	.LEHE37:
 577:/usr/include/c++/5/bits/deque.tcc **** 	    __try
 578:/usr/include/c++/5/bits/deque.tcc **** 	      {
 579:/usr/include/c++/5/bits/deque.tcc **** 		std::__uninitialized_copy_a(__first, __last, __new_start,
 580:/usr/include/c++/5/bits/deque.tcc **** 					    _M_get_Tp_allocator());
 7389              		.loc 36 580 0
 7390 007d 488B4588 		movq	-120(%rbp), %rax
 7391 0081 4889C7   		movq	%rax, %rdi
 7392 0084 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 7392      00
 7393 0089 4889C3   		movq	%rax, %rbx
 579:/usr/include/c++/5/bits/deque.tcc **** 					    _M_get_Tp_allocator());
 7394              		.loc 36 579 0
 7395 008c 488D55A0 		leaq	-96(%rbp), %rdx
 7396 0090 488D45C0 		leaq	-64(%rbp), %rax
 7397 0094 4889D6   		movq	%rdx, %rsi
 7398 0097 4889C7   		movq	%rax, %rdi
 7399 009a E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 7399      00
 7400 009f 488D8550 		leaq	-176(%rbp), %rax
 7400      FFFFFF
 7401 00a6 488D4DC0 		leaq	-64(%rbp), %rcx
 7402 00aa 488B9570 		movq	-144(%rbp), %rdx
 7402      FFFFFF
 7403 00b1 488BB578 		movq	-136(%rbp), %rsi
GAS LISTING /tmp/ccX8BQhk.s 			page 409


 7403      FFFFFF
 7404 00b8 4989D8   		movq	%rbx, %r8
 7405 00bb 4889C7   		movq	%rax, %rdi
 7406              	.LEHB38:
 7407 00be E8000000 		call	_ZSt22__uninitialized_copy_aIPKcSt15_Deque_iteratorIcRcPcEcET0_T_S7_S6_RSaIT1_E
 7407      00
 7408              	.LEHE38:
 581:/usr/include/c++/5/bits/deque.tcc **** 		this->_M_impl._M_start = __new_start;
 7409              		.loc 36 581 0 discriminator 2
 7410 00c3 488B4588 		movq	-120(%rbp), %rax
 7411 00c7 488B55A0 		movq	-96(%rbp), %rdx
 7412 00cb 48895010 		movq	%rdx, 16(%rax)
 7413 00cf 488B55A8 		movq	-88(%rbp), %rdx
 7414 00d3 48895018 		movq	%rdx, 24(%rax)
 7415 00d7 488B55B0 		movq	-80(%rbp), %rdx
 7416 00db 48895020 		movq	%rdx, 32(%rax)
 7417 00df 488B55B8 		movq	-72(%rbp), %rdx
 7418 00e3 48895028 		movq	%rdx, 40(%rax)
 7419              	.LBE43:
 7420              	.LBE42:
 582:/usr/include/c++/5/bits/deque.tcc **** 	      }
 583:/usr/include/c++/5/bits/deque.tcc **** 	    __catch(...)
 584:/usr/include/c++/5/bits/deque.tcc **** 	      {
 585:/usr/include/c++/5/bits/deque.tcc **** 		_M_destroy_nodes(__new_start._M_node,
 586:/usr/include/c++/5/bits/deque.tcc **** 				 this->_M_impl._M_start._M_node);
 587:/usr/include/c++/5/bits/deque.tcc **** 		__throw_exception_again;
 588:/usr/include/c++/5/bits/deque.tcc **** 	      }
 589:/usr/include/c++/5/bits/deque.tcc **** 	  }
 590:/usr/include/c++/5/bits/deque.tcc ****         else if (__pos._M_cur == this->_M_impl._M_finish._M_cur)
 591:/usr/include/c++/5/bits/deque.tcc **** 	  {
 592:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __new_finish = _M_reserve_elements_at_back(__n);
 593:/usr/include/c++/5/bits/deque.tcc **** 	    __try
 594:/usr/include/c++/5/bits/deque.tcc **** 	      {
 595:/usr/include/c++/5/bits/deque.tcc **** 		std::__uninitialized_copy_a(__first, __last,
 596:/usr/include/c++/5/bits/deque.tcc **** 					    this->_M_impl._M_finish,
 597:/usr/include/c++/5/bits/deque.tcc **** 					    _M_get_Tp_allocator());
 598:/usr/include/c++/5/bits/deque.tcc **** 		this->_M_impl._M_finish = __new_finish;
 599:/usr/include/c++/5/bits/deque.tcc **** 	      }
 600:/usr/include/c++/5/bits/deque.tcc **** 	    __catch(...)
 601:/usr/include/c++/5/bits/deque.tcc **** 	      {
 602:/usr/include/c++/5/bits/deque.tcc **** 		_M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 603:/usr/include/c++/5/bits/deque.tcc **** 				 __new_finish._M_node + 1);
 604:/usr/include/c++/5/bits/deque.tcc **** 		__throw_exception_again;
 605:/usr/include/c++/5/bits/deque.tcc **** 	      }
 606:/usr/include/c++/5/bits/deque.tcc **** 	  }
 607:/usr/include/c++/5/bits/deque.tcc ****         else
 608:/usr/include/c++/5/bits/deque.tcc ****           _M_insert_aux(__pos, __first, __last, __n);
 609:/usr/include/c++/5/bits/deque.tcc ****       }
 7421              		.loc 36 609 0 discriminator 2
 7422 00e7 E95A0100 		jmp	.L386
 7422      00
 7423              	.L387:
 7424              	.LBB53:
 7425              	.LBB44:
 7426              	.LBB45:
 590:/usr/include/c++/5/bits/deque.tcc **** 	  {
 7427              		.loc 36 590 0
GAS LISTING /tmp/ccX8BQhk.s 			page 410


 7428 00ec 488B4580 		movq	-128(%rbp), %rax
 7429 00f0 488B10   		movq	(%rax), %rdx
 7430 00f3 488B4588 		movq	-120(%rbp), %rax
 7431 00f7 488B4030 		movq	48(%rax), %rax
 7432 00fb 4839C2   		cmpq	%rax, %rdx
 7433 00fe 0F858A00 		jne	.L389
 7433      0000
 7434              	.LBB46:
 592:/usr/include/c++/5/bits/deque.tcc **** 	    __try
 7435              		.loc 36 592 0
 7436 0104 488D45A0 		leaq	-96(%rbp), %rax
 7437 0108 488B5598 		movq	-104(%rbp), %rdx
 7438 010c 488B4D88 		movq	-120(%rbp), %rcx
 7439 0110 4889CE   		movq	%rcx, %rsi
 7440 0113 4889C7   		movq	%rax, %rdi
 7441              	.LEHB39:
 7442 0116 E8000000 		call	_ZNSt5dequeIcSaIcEE27_M_reserve_elements_at_backEm
 7442      00
 7443              	.LEHE39:
 597:/usr/include/c++/5/bits/deque.tcc **** 		this->_M_impl._M_finish = __new_finish;
 7444              		.loc 36 597 0
 7445 011b 488B4588 		movq	-120(%rbp), %rax
 7446 011f 4889C7   		movq	%rax, %rdi
 7447 0122 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 7447      00
 7448 0127 4889C3   		movq	%rax, %rbx
 595:/usr/include/c++/5/bits/deque.tcc **** 					    this->_M_impl._M_finish,
 7449              		.loc 36 595 0
 7450 012a 488B4588 		movq	-120(%rbp), %rax
 7451 012e 488D5030 		leaq	48(%rax), %rdx
 7452 0132 488D45C0 		leaq	-64(%rbp), %rax
 7453 0136 4889D6   		movq	%rdx, %rsi
 7454 0139 4889C7   		movq	%rax, %rdi
 7455 013c E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 7455      00
 7456 0141 488D8550 		leaq	-176(%rbp), %rax
 7456      FFFFFF
 7457 0148 488D4DC0 		leaq	-64(%rbp), %rcx
 7458 014c 488B9570 		movq	-144(%rbp), %rdx
 7458      FFFFFF
 7459 0153 488BB578 		movq	-136(%rbp), %rsi
 7459      FFFFFF
 7460 015a 4989D8   		movq	%rbx, %r8
 7461 015d 4889C7   		movq	%rax, %rdi
 7462              	.LEHB40:
 7463 0160 E8000000 		call	_ZSt22__uninitialized_copy_aIPKcSt15_Deque_iteratorIcRcPcEcET0_T_S7_S6_RSaIT1_E
 7463      00
 7464              	.LEHE40:
 598:/usr/include/c++/5/bits/deque.tcc **** 	      }
 7465              		.loc 36 598 0 discriminator 2
 7466 0165 488B4588 		movq	-120(%rbp), %rax
 7467 0169 488B55A0 		movq	-96(%rbp), %rdx
 7468 016d 48895030 		movq	%rdx, 48(%rax)
 7469 0171 488B55A8 		movq	-88(%rbp), %rdx
 7470 0175 48895038 		movq	%rdx, 56(%rax)
 7471 0179 488B55B0 		movq	-80(%rbp), %rdx
 7472 017d 48895040 		movq	%rdx, 64(%rax)
GAS LISTING /tmp/ccX8BQhk.s 			page 411


 7473 0181 488B55B8 		movq	-72(%rbp), %rdx
 7474 0185 48895048 		movq	%rdx, 72(%rax)
 7475              	.LBE46:
 7476              	.LBE45:
 7477              	.LBE44:
 7478              	.LBE53:
 7479              		.loc 36 609 0 discriminator 2
 7480 0189 E9B80000 		jmp	.L386
 7480      00
 7481              	.L389:
 7482              	.LBB54:
 7483              	.LBB50:
 7484              	.LBB48:
 608:/usr/include/c++/5/bits/deque.tcc ****       }
 7485              		.loc 36 608 0
 7486 018e 488B5580 		movq	-128(%rbp), %rdx
 7487 0192 488D45C0 		leaq	-64(%rbp), %rax
 7488 0196 4889D6   		movq	%rdx, %rsi
 7489 0199 4889C7   		movq	%rax, %rdi
 7490 019c E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 7490      00
 7491 01a1 488B7D98 		movq	-104(%rbp), %rdi
 7492 01a5 488B8D70 		movq	-144(%rbp), %rcx
 7492      FFFFFF
 7493 01ac 488B9578 		movq	-136(%rbp), %rdx
 7493      FFFFFF
 7494 01b3 488D75C0 		leaq	-64(%rbp), %rsi
 7495 01b7 488B4588 		movq	-120(%rbp), %rax
 7496 01bb 4989F8   		movq	%rdi, %r8
 7497 01be 4889C7   		movq	%rax, %rdi
 7498              	.LEHB41:
 7499 01c1 E8000000 		call	_ZNSt5dequeIcSaIcEE13_M_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_m
 7499      00
 7500              	.LEHE41:
 7501              	.LBE48:
 7502              	.LBE50:
 7503              	.LBE54:
 7504              		.loc 36 609 0
 7505 01c6 EB7E     		jmp	.L386
 7506              	.L395:
 7507              	.LBB55:
 7508              	.LBB51:
 583:/usr/include/c++/5/bits/deque.tcc **** 	      {
 7509              		.loc 36 583 0
 7510 01c8 4889C7   		movq	%rax, %rdi
 7511 01cb E8000000 		call	__cxa_begin_catch
 7511      00
 585:/usr/include/c++/5/bits/deque.tcc **** 				 this->_M_impl._M_start._M_node);
 7512              		.loc 36 585 0
 7513 01d0 488B4588 		movq	-120(%rbp), %rax
 7514 01d4 488B5028 		movq	40(%rax), %rdx
 7515 01d8 488B4DB8 		movq	-72(%rbp), %rcx
 7516 01dc 488B4588 		movq	-120(%rbp), %rax
 7517 01e0 4889CE   		movq	%rcx, %rsi
 7518 01e3 4889C7   		movq	%rax, %rdi
 7519 01e6 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_
 7519      00
GAS LISTING /tmp/ccX8BQhk.s 			page 412


 7520              	.LEHB42:
 587:/usr/include/c++/5/bits/deque.tcc **** 	      }
 7521              		.loc 36 587 0
 7522 01eb E8000000 		call	__cxa_rethrow
 7522      00
 7523              	.LEHE42:
 7524              	.L396:
 7525 01f0 4889C3   		movq	%rax, %rbx
 583:/usr/include/c++/5/bits/deque.tcc **** 	      {
 7526              		.loc 36 583 0
 7527 01f3 E8000000 		call	__cxa_end_catch
 7527      00
 7528 01f8 4889D8   		movq	%rbx, %rax
 7529 01fb 4889C7   		movq	%rax, %rdi
 7530              	.LEHB43:
 7531 01fe E8000000 		call	_Unwind_Resume
 7531      00
 7532              	.LEHE43:
 7533              	.L397:
 7534              	.LBE51:
 7535              	.LBB52:
 7536              	.LBB49:
 7537              	.LBB47:
 600:/usr/include/c++/5/bits/deque.tcc **** 	      {
 7538              		.loc 36 600 0
 7539 0203 4889C7   		movq	%rax, %rdi
 7540 0206 E8000000 		call	__cxa_begin_catch
 7540      00
 603:/usr/include/c++/5/bits/deque.tcc **** 		__throw_exception_again;
 7541              		.loc 36 603 0
 7542 020b 488B45B8 		movq	-72(%rbp), %rax
 602:/usr/include/c++/5/bits/deque.tcc **** 				 __new_finish._M_node + 1);
 7543              		.loc 36 602 0
 7544 020f 488D5008 		leaq	8(%rax), %rdx
 7545 0213 488B4588 		movq	-120(%rbp), %rax
 7546 0217 488B4048 		movq	72(%rax), %rax
 7547 021b 488D4808 		leaq	8(%rax), %rcx
 7548 021f 488B4588 		movq	-120(%rbp), %rax
 7549 0223 4889CE   		movq	%rcx, %rsi
 7550 0226 4889C7   		movq	%rax, %rdi
 7551 0229 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_
 7551      00
 7552              	.LEHB44:
 604:/usr/include/c++/5/bits/deque.tcc **** 	      }
 7553              		.loc 36 604 0
 7554 022e E8000000 		call	__cxa_rethrow
 7554      00
 7555              	.LEHE44:
 7556              	.L398:
 7557 0233 4889C3   		movq	%rax, %rbx
 600:/usr/include/c++/5/bits/deque.tcc **** 	      {
 7558              		.loc 36 600 0
 7559 0236 E8000000 		call	__cxa_end_catch
 7559      00
 7560 023b 4889D8   		movq	%rbx, %rax
 7561 023e 4889C7   		movq	%rax, %rdi
 7562              	.LEHB45:
GAS LISTING /tmp/ccX8BQhk.s 			page 413


 7563 0241 E8000000 		call	_Unwind_Resume
 7563      00
 7564              	.LEHE45:
 7565              	.L386:
 7566              	.LBE47:
 7567              	.LBE49:
 7568              	.LBE52:
 7569              	.LBE55:
 7570              		.loc 36 609 0
 7571 0246 488B45E8 		movq	-24(%rbp), %rax
 7572 024a 64483304 		xorq	%fs:40, %rax
 7572      25280000 
 7572      00
 7573 0253 7405     		je	.L394
 7574 0255 E8000000 		call	__stack_chk_fail
 7574      00
 7575              	.L394:
 7576 025a 4881C4A8 		addq	$168, %rsp
 7576      000000
 7577 0261 5B       		popq	%rbx
 7578 0262 5D       		popq	%rbp
 7579              		.cfi_def_cfa 7, 8
 7580 0263 C3       		ret
 7581              		.cfi_endproc
 7582              	.LFE10539:
 7583              		.section	.gcc_except_table
 7584              		.align 4
 7585              	.LLSDA10539:
 7586 00f0 FF       		.byte	0xff
 7587 00f1 03       		.byte	0x3
 7588 00f2 39       		.uleb128 .LLSDATT10539-.LLSDATTD10539
 7589              	.LLSDATTD10539:
 7590 00f3 01       		.byte	0x1
 7591 00f4 30       		.uleb128 .LLSDACSE10539-.LLSDACSB10539
 7592              	.LLSDACSB10539:
 7593 00f5 78       		.uleb128 .LEHB37-.LFB10539
 7594 00f6 05       		.uleb128 .LEHE37-.LEHB37
 7595 00f7 00       		.uleb128 0
 7596 00f8 00       		.uleb128 0
 7597 00f9 BE01     		.uleb128 .LEHB38-.LFB10539
 7598 00fb 05       		.uleb128 .LEHE38-.LEHB38
 7599 00fc C803     		.uleb128 .L395-.LFB10539
 7600 00fe 01       		.uleb128 0x1
 7601 00ff 9602     		.uleb128 .LEHB39-.LFB10539
 7602 0101 05       		.uleb128 .LEHE39-.LEHB39
 7603 0102 00       		.uleb128 0
 7604 0103 00       		.uleb128 0
 7605 0104 E002     		.uleb128 .LEHB40-.LFB10539
 7606 0106 05       		.uleb128 .LEHE40-.LEHB40
 7607 0107 8304     		.uleb128 .L397-.LFB10539
 7608 0109 01       		.uleb128 0x1
 7609 010a C103     		.uleb128 .LEHB41-.LFB10539
 7610 010c 05       		.uleb128 .LEHE41-.LEHB41
 7611 010d 00       		.uleb128 0
 7612 010e 00       		.uleb128 0
 7613 010f EB03     		.uleb128 .LEHB42-.LFB10539
 7614 0111 05       		.uleb128 .LEHE42-.LEHB42
GAS LISTING /tmp/ccX8BQhk.s 			page 414


 7615 0112 F003     		.uleb128 .L396-.LFB10539
 7616 0114 00       		.uleb128 0
 7617 0115 FE03     		.uleb128 .LEHB43-.LFB10539
 7618 0117 05       		.uleb128 .LEHE43-.LEHB43
 7619 0118 00       		.uleb128 0
 7620 0119 00       		.uleb128 0
 7621 011a AE04     		.uleb128 .LEHB44-.LFB10539
 7622 011c 05       		.uleb128 .LEHE44-.LEHB44
 7623 011d B304     		.uleb128 .L398-.LFB10539
 7624 011f 00       		.uleb128 0
 7625 0120 C104     		.uleb128 .LEHB45-.LFB10539
 7626 0122 05       		.uleb128 .LEHE45-.LEHB45
 7627 0123 00       		.uleb128 0
 7628 0124 00       		.uleb128 0
 7629              	.LLSDACSE10539:
 7630 0125 01       		.byte	0x1
 7631 0126 00       		.byte	0
 7632 0127 00       		.align 4
 7633 0128 00000000 		.long	0
 7634              	
 7635              	.LLSDATT10539:
 7636              		.section	.text._ZNSt5dequeIcSaIcEE19_M_range_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St20f
 7638              		.section	.text._ZNSt15_Deque_iteratorIcRcPcEpLEl,"axG",@progbits,_ZNSt15_Deque_iteratorIcRcPcEpLEl
 7639              		.align 2
 7640              		.weak	_ZNSt15_Deque_iteratorIcRcPcEpLEl
 7642              	_ZNSt15_Deque_iteratorIcRcPcEpLEl:
 7643              	.LFB10540:
 206:/usr/include/c++/5/bits/stl_deque.h ****       {
 7644              		.loc 3 206 0
 7645              		.cfi_startproc
 7646 0000 55       		pushq	%rbp
 7647              		.cfi_def_cfa_offset 16
 7648              		.cfi_offset 6, -16
 7649 0001 4889E5   		movq	%rsp, %rbp
 7650              		.cfi_def_cfa_register 6
 7651 0004 53       		pushq	%rbx
 7652 0005 4883EC28 		subq	$40, %rsp
 7653              		.cfi_offset 3, -24
 7654 0009 48897DD8 		movq	%rdi, -40(%rbp)
 7655 000d 488975D0 		movq	%rsi, -48(%rbp)
 208:/usr/include/c++/5/bits/stl_deque.h **** 	if (__offset >= 0 && __offset < difference_type(_S_buffer_size()))
 7656              		.loc 3 208 0
 7657 0011 488B45D8 		movq	-40(%rbp), %rax
 7658 0015 488B00   		movq	(%rax), %rax
 7659 0018 4889C2   		movq	%rax, %rdx
 7660 001b 488B45D8 		movq	-40(%rbp), %rax
 7661 001f 488B4008 		movq	8(%rax), %rax
 7662 0023 4829C2   		subq	%rax, %rdx
 7663 0026 488B45D0 		movq	-48(%rbp), %rax
 7664 002a 4801D0   		addq	%rdx, %rax
 7665 002d 488945E0 		movq	%rax, -32(%rbp)
 7666              	.LBB56:
 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 7667              		.loc 3 209 0
 7668 0031 48837DE0 		cmpq	$0, -32(%rbp)
 7668      00
 7669 0036 7812     		js	.L400
GAS LISTING /tmp/ccX8BQhk.s 			page 415


 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 7670              		.loc 3 209 0 is_stmt 0 discriminator 1
 7671 0038 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
 7671      00
 7672 003d 483B45E0 		cmpq	-32(%rbp), %rax
 7673 0041 7E07     		jle	.L400
 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 7674              		.loc 3 209 0 discriminator 3
 7675 0043 B8010000 		movl	$1, %eax
 7675      00
 7676 0048 EB05     		jmp	.L401
 7677              	.L400:
 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 7678              		.loc 3 209 0 discriminator 4
 7679 004a B8000000 		movl	$0, %eax
 7679      00
 7680              	.L401:
 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 7681              		.loc 3 209 0 discriminator 6
 7682 004f 84C0     		testb	%al, %al
 7683 0051 741A     		je	.L402
 210:/usr/include/c++/5/bits/stl_deque.h **** 	else
 7684              		.loc 3 210 0 is_stmt 1
 7685 0053 488B45D8 		movq	-40(%rbp), %rax
 7686 0057 488B10   		movq	(%rax), %rdx
 7687 005a 488B45D0 		movq	-48(%rbp), %rax
 7688 005e 4801C2   		addq	%rax, %rdx
 7689 0061 488B45D8 		movq	-40(%rbp), %rax
 7690 0065 488910   		movq	%rdx, (%rax)
 7691 0068 E9870000 		jmp	.L403
 7691      00
 7692              	.L402:
 7693              	.LBB57:
 216:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 7694              		.loc 3 216 0
 7695 006d 48837DE0 		cmpq	$0, -32(%rbp)
 7695      00
 7696 0072 7E13     		jle	.L404
 214:/usr/include/c++/5/bits/stl_deque.h **** 	                   : -difference_type((-__offset - 1)
 7697              		.loc 3 214 0 discriminator 1
 7698 0074 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
 7698      00
 216:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 7699              		.loc 3 216 0 discriminator 1
 7700 0079 4889C1   		movq	%rax, %rcx
 7701 007c 488B45E0 		movq	-32(%rbp), %rax
 7702 0080 4899     		cqto
 7703 0082 48F7F9   		idivq	%rcx
 7704 0085 EB20     		jmp	.L405
 7705              	.L404:
 216:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 7706              		.loc 3 216 0 is_stmt 0 discriminator 2
 7707 0087 488B45E0 		movq	-32(%rbp), %rax
 7708 008b 48F7D0   		notq	%rax
 7709 008e 4889C3   		movq	%rax, %rbx
 7710 0091 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
 7710      00
GAS LISTING /tmp/ccX8BQhk.s 			page 416


 7711 0096 4889C1   		movq	%rax, %rcx
 7712 0099 4889D8   		movq	%rbx, %rax
 7713 009c BA000000 		movl	$0, %edx
 7713      00
 7714 00a1 48F7F1   		divq	%rcx
 7715 00a4 48F7D0   		notq	%rax
 7716              	.L405:
 216:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 7717              		.loc 3 216 0 discriminator 4
 7718 00a7 488945E8 		movq	%rax, -24(%rbp)
 217:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_cur = _M_first + (__offset - __node_offset
 7719              		.loc 3 217 0 is_stmt 1 discriminator 4
 7720 00ab 488B45D8 		movq	-40(%rbp), %rax
 7721 00af 488B4018 		movq	24(%rax), %rax
 7722 00b3 488B55E8 		movq	-24(%rbp), %rdx
 7723 00b7 48C1E203 		salq	$3, %rdx
 7724 00bb 4801C2   		addq	%rax, %rdx
 7725 00be 488B45D8 		movq	-40(%rbp), %rax
 7726 00c2 4889D6   		movq	%rdx, %rsi
 7727 00c5 4889C7   		movq	%rax, %rdi
 7728 00c8 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
 7728      00
 218:/usr/include/c++/5/bits/stl_deque.h **** 				 * difference_type(_S_buffer_size()));
 7729              		.loc 3 218 0 discriminator 4
 7730 00cd 488B45D8 		movq	-40(%rbp), %rax
 7731 00d1 488B5808 		movq	8(%rax), %rbx
 219:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 7732              		.loc 3 219 0 discriminator 4
 7733 00d5 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
 7733      00
 218:/usr/include/c++/5/bits/stl_deque.h **** 				 * difference_type(_S_buffer_size()));
 7734              		.loc 3 218 0 discriminator 4
 7735 00da 480FAF45 		imulq	-24(%rbp), %rax
 7735      E8
 7736 00df 488B55E0 		movq	-32(%rbp), %rdx
 7737 00e3 4829C2   		subq	%rax, %rdx
 7738 00e6 4889D0   		movq	%rdx, %rax
 7739 00e9 488D1403 		leaq	(%rbx,%rax), %rdx
 7740 00ed 488B45D8 		movq	-40(%rbp), %rax
 7741 00f1 488910   		movq	%rdx, (%rax)
 7742              	.L403:
 7743              	.LBE57:
 7744              	.LBE56:
 221:/usr/include/c++/5/bits/stl_deque.h ****       }
 7745              		.loc 3 221 0
 7746 00f4 488B45D8 		movq	-40(%rbp), %rax
 222:/usr/include/c++/5/bits/stl_deque.h **** 
 7747              		.loc 3 222 0
 7748 00f8 4883C428 		addq	$40, %rsp
 7749 00fc 5B       		popq	%rbx
 7750 00fd 5D       		popq	%rbp
 7751              		.cfi_def_cfa 7, 8
 7752 00fe C3       		ret
 7753              		.cfi_endproc
 7754              	.LFE10540:
 7756              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE19_M_replace_dispatchISt15_Deq
 7757              		.align 2
GAS LISTING /tmp/ccX8BQhk.s 			page 417


 7758              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE19_M_replace_dispatchISt15_Deque_iterat
 7760              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE19_M_replace_dispatchISt15_Deque_iteratorIcRcP
 7761              	.LFB10541:
 7762              		.file 37 "/usr/include/c++/5/bits/basic_string.tcc"
   1:/usr/include/c++/5/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/5/bits/basic_string.tcc **** 
   3:/usr/include/c++/5/bits/basic_string.tcc **** // Copyright (C) 1997-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/basic_string.tcc **** //
   5:/usr/include/c++/5/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/basic_string.tcc **** // any later version.
  10:/usr/include/c++/5/bits/basic_string.tcc **** 
  11:/usr/include/c++/5/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/basic_string.tcc **** 
  16:/usr/include/c++/5/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/basic_string.tcc **** 
  20:/usr/include/c++/5/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/basic_string.tcc **** 
  25:/usr/include/c++/5/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/usr/include/c++/5/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/5/bits/basic_string.tcc ****  */
  29:/usr/include/c++/5/bits/basic_string.tcc **** 
  30:/usr/include/c++/5/bits/basic_string.tcc **** //
  31:/usr/include/c++/5/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/usr/include/c++/5/bits/basic_string.tcc **** //
  33:/usr/include/c++/5/bits/basic_string.tcc **** 
  34:/usr/include/c++/5/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/usr/include/c++/5/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/usr/include/c++/5/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:/usr/include/c++/5/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/usr/include/c++/5/bits/basic_string.tcc **** 
  39:/usr/include/c++/5/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/usr/include/c++/5/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/usr/include/c++/5/bits/basic_string.tcc **** 
  42:/usr/include/c++/5/bits/basic_string.tcc **** #pragma GCC system_header
  43:/usr/include/c++/5/bits/basic_string.tcc **** 
  44:/usr/include/c++/5/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/usr/include/c++/5/bits/basic_string.tcc **** 
  46:/usr/include/c++/5/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/5/bits/basic_string.tcc **** {
  48:/usr/include/c++/5/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/5/bits/basic_string.tcc **** 
  50:/usr/include/c++/5/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/c++/5/bits/basic_string.tcc **** 
  52:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/usr/include/c++/5/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
GAS LISTING /tmp/ccX8BQhk.s 			page 418


  54:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/usr/include/c++/5/bits/basic_string.tcc **** 
  56:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/usr/include/c++/5/bits/basic_string.tcc ****     void
  58:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:/usr/include/c++/5/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/usr/include/c++/5/bits/basic_string.tcc ****     {
  61:/usr/include/c++/5/bits/basic_string.tcc ****       if (this == &__s)
  62:/usr/include/c++/5/bits/basic_string.tcc **** 	return;
  63:/usr/include/c++/5/bits/basic_string.tcc **** 
  64:/usr/include/c++/5/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/include/c++/5/bits/basic_string.tcc ****       // 431. Swapping containers with unequal allocators.
  66:/usr/include/c++/5/bits/basic_string.tcc ****       // TODO propagation traits
  67:/usr/include/c++/5/bits/basic_string.tcc ****       std::__alloc_swap<allocator_type>::_S_do_it(_M_get_allocator(),
  68:/usr/include/c++/5/bits/basic_string.tcc **** 						  __s._M_get_allocator());
  69:/usr/include/c++/5/bits/basic_string.tcc **** 
  70:/usr/include/c++/5/bits/basic_string.tcc ****       if (_M_is_local())
  71:/usr/include/c++/5/bits/basic_string.tcc **** 	if (__s._M_is_local())
  72:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
  73:/usr/include/c++/5/bits/basic_string.tcc **** 	    if (length() && __s.length())
  74:/usr/include/c++/5/bits/basic_string.tcc **** 	      {
  75:/usr/include/c++/5/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  76:/usr/include/c++/5/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  77:/usr/include/c++/5/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  78:/usr/include/c++/5/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  79:/usr/include/c++/5/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  80:/usr/include/c++/5/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  81:/usr/include/c++/5/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  82:/usr/include/c++/5/bits/basic_string.tcc **** 	      }
  83:/usr/include/c++/5/bits/basic_string.tcc **** 	    else if (__s.length())
  84:/usr/include/c++/5/bits/basic_string.tcc **** 	      {
  85:/usr/include/c++/5/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  86:/usr/include/c++/5/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  87:/usr/include/c++/5/bits/basic_string.tcc **** 		_M_length(__s.length());
  88:/usr/include/c++/5/bits/basic_string.tcc **** 		__s._M_set_length(0);
  89:/usr/include/c++/5/bits/basic_string.tcc **** 		return;
  90:/usr/include/c++/5/bits/basic_string.tcc **** 	      }
  91:/usr/include/c++/5/bits/basic_string.tcc **** 	    else if (length())
  92:/usr/include/c++/5/bits/basic_string.tcc **** 	      {
  93:/usr/include/c++/5/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  94:/usr/include/c++/5/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  95:/usr/include/c++/5/bits/basic_string.tcc **** 		__s._M_length(length());
  96:/usr/include/c++/5/bits/basic_string.tcc **** 		_M_set_length(0);
  97:/usr/include/c++/5/bits/basic_string.tcc **** 		return;
  98:/usr/include/c++/5/bits/basic_string.tcc **** 	      }
  99:/usr/include/c++/5/bits/basic_string.tcc **** 	  }
 100:/usr/include/c++/5/bits/basic_string.tcc **** 	else
 101:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
 102:/usr/include/c++/5/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
 103:/usr/include/c++/5/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 104:/usr/include/c++/5/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 105:/usr/include/c++/5/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 106:/usr/include/c++/5/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 107:/usr/include/c++/5/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 108:/usr/include/c++/5/bits/basic_string.tcc **** 	  }
 109:/usr/include/c++/5/bits/basic_string.tcc ****       else
 110:/usr/include/c++/5/bits/basic_string.tcc **** 	{
GAS LISTING /tmp/ccX8BQhk.s 			page 419


 111:/usr/include/c++/5/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 112:/usr/include/c++/5/bits/basic_string.tcc **** 	  if (__s._M_is_local())
 113:/usr/include/c++/5/bits/basic_string.tcc **** 	    {
 114:/usr/include/c++/5/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 115:/usr/include/c++/5/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 116:/usr/include/c++/5/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 117:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 118:/usr/include/c++/5/bits/basic_string.tcc **** 	    }
 119:/usr/include/c++/5/bits/basic_string.tcc **** 	  else
 120:/usr/include/c++/5/bits/basic_string.tcc **** 	    {
 121:/usr/include/c++/5/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 122:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
 123:/usr/include/c++/5/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 124:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 125:/usr/include/c++/5/bits/basic_string.tcc **** 	    }
 126:/usr/include/c++/5/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 127:/usr/include/c++/5/bits/basic_string.tcc **** 	}
 128:/usr/include/c++/5/bits/basic_string.tcc **** 
 129:/usr/include/c++/5/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 130:/usr/include/c++/5/bits/basic_string.tcc ****       _M_length(__s.length());
 131:/usr/include/c++/5/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 132:/usr/include/c++/5/bits/basic_string.tcc ****     }
 133:/usr/include/c++/5/bits/basic_string.tcc **** 
 134:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 135:/usr/include/c++/5/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 136:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 137:/usr/include/c++/5/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 138:/usr/include/c++/5/bits/basic_string.tcc ****     {
 139:/usr/include/c++/5/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 140:/usr/include/c++/5/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 141:/usr/include/c++/5/bits/basic_string.tcc ****       if (__capacity > max_size())
 142:/usr/include/c++/5/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 143:/usr/include/c++/5/bits/basic_string.tcc **** 
 144:/usr/include/c++/5/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 145:/usr/include/c++/5/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 146:/usr/include/c++/5/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 147:/usr/include/c++/5/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 148:/usr/include/c++/5/bits/basic_string.tcc **** 	{
 149:/usr/include/c++/5/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 150:/usr/include/c++/5/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 151:/usr/include/c++/5/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 152:/usr/include/c++/5/bits/basic_string.tcc **** 	    __capacity = max_size();
 153:/usr/include/c++/5/bits/basic_string.tcc **** 	}
 154:/usr/include/c++/5/bits/basic_string.tcc **** 
 155:/usr/include/c++/5/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 156:/usr/include/c++/5/bits/basic_string.tcc ****       // null char_type() element.
 157:/usr/include/c++/5/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 158:/usr/include/c++/5/bits/basic_string.tcc ****     }
 159:/usr/include/c++/5/bits/basic_string.tcc **** 
 160:/usr/include/c++/5/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 161:/usr/include/c++/5/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 162:/usr/include/c++/5/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 163:/usr/include/c++/5/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 164:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 165:/usr/include/c++/5/bits/basic_string.tcc ****     template<typename _InIterator>
 166:/usr/include/c++/5/bits/basic_string.tcc ****       void
 167:/usr/include/c++/5/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
GAS LISTING /tmp/ccX8BQhk.s 			page 420


 168:/usr/include/c++/5/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 169:/usr/include/c++/5/bits/basic_string.tcc **** 		   std::input_iterator_tag)
 170:/usr/include/c++/5/bits/basic_string.tcc ****       {
 171:/usr/include/c++/5/bits/basic_string.tcc **** 	size_type __len = 0;
 172:/usr/include/c++/5/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 173:/usr/include/c++/5/bits/basic_string.tcc **** 
 174:/usr/include/c++/5/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 175:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
 176:/usr/include/c++/5/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 177:/usr/include/c++/5/bits/basic_string.tcc **** 	    ++__beg;
 178:/usr/include/c++/5/bits/basic_string.tcc **** 	  }
 179:/usr/include/c++/5/bits/basic_string.tcc **** 
 180:/usr/include/c++/5/bits/basic_string.tcc **** 	__try
 181:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
 182:/usr/include/c++/5/bits/basic_string.tcc **** 	    while (__beg != __end)
 183:/usr/include/c++/5/bits/basic_string.tcc **** 	      {
 184:/usr/include/c++/5/bits/basic_string.tcc **** 		if (__len == __capacity)
 185:/usr/include/c++/5/bits/basic_string.tcc **** 		  {
 186:/usr/include/c++/5/bits/basic_string.tcc **** 		    // Allocate more space.
 187:/usr/include/c++/5/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 188:/usr/include/c++/5/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 189:/usr/include/c++/5/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 190:/usr/include/c++/5/bits/basic_string.tcc **** 		    _M_dispose();
 191:/usr/include/c++/5/bits/basic_string.tcc **** 		    _M_data(__another);
 192:/usr/include/c++/5/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 193:/usr/include/c++/5/bits/basic_string.tcc **** 		  }
 194:/usr/include/c++/5/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 195:/usr/include/c++/5/bits/basic_string.tcc **** 		++__beg;
 196:/usr/include/c++/5/bits/basic_string.tcc **** 	      }
 197:/usr/include/c++/5/bits/basic_string.tcc **** 	  }
 198:/usr/include/c++/5/bits/basic_string.tcc **** 	__catch(...)
 199:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
 200:/usr/include/c++/5/bits/basic_string.tcc **** 	    _M_dispose();
 201:/usr/include/c++/5/bits/basic_string.tcc **** 	    __throw_exception_again;
 202:/usr/include/c++/5/bits/basic_string.tcc **** 	  }
 203:/usr/include/c++/5/bits/basic_string.tcc **** 
 204:/usr/include/c++/5/bits/basic_string.tcc **** 	_M_set_length(__len);
 205:/usr/include/c++/5/bits/basic_string.tcc ****       }
 206:/usr/include/c++/5/bits/basic_string.tcc **** 
 207:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 208:/usr/include/c++/5/bits/basic_string.tcc ****     template<typename _InIterator>
 209:/usr/include/c++/5/bits/basic_string.tcc ****       void
 210:/usr/include/c++/5/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 211:/usr/include/c++/5/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 212:/usr/include/c++/5/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 213:/usr/include/c++/5/bits/basic_string.tcc ****       {
 214:/usr/include/c++/5/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 215:/usr/include/c++/5/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 216:/usr/include/c++/5/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 217:/usr/include/c++/5/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 218:/usr/include/c++/5/bits/basic_string.tcc **** 
 219:/usr/include/c++/5/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 220:/usr/include/c++/5/bits/basic_string.tcc **** 
 221:/usr/include/c++/5/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 222:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
 223:/usr/include/c++/5/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 224:/usr/include/c++/5/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
GAS LISTING /tmp/ccX8BQhk.s 			page 421


 225:/usr/include/c++/5/bits/basic_string.tcc **** 	  }
 226:/usr/include/c++/5/bits/basic_string.tcc **** 
 227:/usr/include/c++/5/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 228:/usr/include/c++/5/bits/basic_string.tcc **** 	__try
 229:/usr/include/c++/5/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 230:/usr/include/c++/5/bits/basic_string.tcc **** 	__catch(...)
 231:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
 232:/usr/include/c++/5/bits/basic_string.tcc **** 	    _M_dispose();
 233:/usr/include/c++/5/bits/basic_string.tcc **** 	    __throw_exception_again;
 234:/usr/include/c++/5/bits/basic_string.tcc **** 	  }
 235:/usr/include/c++/5/bits/basic_string.tcc **** 
 236:/usr/include/c++/5/bits/basic_string.tcc **** 	_M_set_length(__dnew);
 237:/usr/include/c++/5/bits/basic_string.tcc ****       }
 238:/usr/include/c++/5/bits/basic_string.tcc **** 
 239:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 240:/usr/include/c++/5/bits/basic_string.tcc ****     void
 241:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 242:/usr/include/c++/5/bits/basic_string.tcc ****     _M_construct(size_type __n, _CharT __c)
 243:/usr/include/c++/5/bits/basic_string.tcc ****     {
 244:/usr/include/c++/5/bits/basic_string.tcc ****       if (__n > size_type(_S_local_capacity))
 245:/usr/include/c++/5/bits/basic_string.tcc **** 	{
 246:/usr/include/c++/5/bits/basic_string.tcc **** 	  _M_data(_M_create(__n, size_type(0)));
 247:/usr/include/c++/5/bits/basic_string.tcc **** 	  _M_capacity(__n);
 248:/usr/include/c++/5/bits/basic_string.tcc **** 	}
 249:/usr/include/c++/5/bits/basic_string.tcc **** 
 250:/usr/include/c++/5/bits/basic_string.tcc ****       if (__n)
 251:/usr/include/c++/5/bits/basic_string.tcc **** 	this->_S_assign(_M_data(), __n, __c);
 252:/usr/include/c++/5/bits/basic_string.tcc **** 
 253:/usr/include/c++/5/bits/basic_string.tcc ****       _M_set_length(__n);
 254:/usr/include/c++/5/bits/basic_string.tcc ****     }
 255:/usr/include/c++/5/bits/basic_string.tcc **** 
 256:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 257:/usr/include/c++/5/bits/basic_string.tcc ****     void
 258:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 259:/usr/include/c++/5/bits/basic_string.tcc ****     _M_assign(const basic_string& __str)
 260:/usr/include/c++/5/bits/basic_string.tcc ****     {
 261:/usr/include/c++/5/bits/basic_string.tcc ****       if (this != &__str)
 262:/usr/include/c++/5/bits/basic_string.tcc **** 	{
 263:/usr/include/c++/5/bits/basic_string.tcc **** 	  const size_type __rsize = __str.length();
 264:/usr/include/c++/5/bits/basic_string.tcc **** 	  const size_type __capacity = capacity();
 265:/usr/include/c++/5/bits/basic_string.tcc **** 
 266:/usr/include/c++/5/bits/basic_string.tcc **** 	  if (__rsize > __capacity)
 267:/usr/include/c++/5/bits/basic_string.tcc **** 	    {
 268:/usr/include/c++/5/bits/basic_string.tcc **** 	      size_type __new_capacity = __rsize;
 269:/usr/include/c++/5/bits/basic_string.tcc **** 	      pointer __tmp = _M_create(__new_capacity, __capacity);
 270:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_dispose();
 271:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_data(__tmp);
 272:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_capacity(__new_capacity);
 273:/usr/include/c++/5/bits/basic_string.tcc **** 	    }
 274:/usr/include/c++/5/bits/basic_string.tcc **** 
 275:/usr/include/c++/5/bits/basic_string.tcc **** 	  if (__rsize)
 276:/usr/include/c++/5/bits/basic_string.tcc **** 	    this->_S_copy(_M_data(), __str._M_data(), __rsize);
 277:/usr/include/c++/5/bits/basic_string.tcc **** 
 278:/usr/include/c++/5/bits/basic_string.tcc **** 	  _M_set_length(__rsize);
 279:/usr/include/c++/5/bits/basic_string.tcc **** 	}
 280:/usr/include/c++/5/bits/basic_string.tcc ****     }
 281:/usr/include/c++/5/bits/basic_string.tcc **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 422


 282:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 283:/usr/include/c++/5/bits/basic_string.tcc ****     void
 284:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 285:/usr/include/c++/5/bits/basic_string.tcc ****     reserve(size_type __res)
 286:/usr/include/c++/5/bits/basic_string.tcc ****     {
 287:/usr/include/c++/5/bits/basic_string.tcc ****       // Make sure we don't shrink below the current size.
 288:/usr/include/c++/5/bits/basic_string.tcc ****       if (__res < length())
 289:/usr/include/c++/5/bits/basic_string.tcc **** 	__res = length();
 290:/usr/include/c++/5/bits/basic_string.tcc **** 
 291:/usr/include/c++/5/bits/basic_string.tcc ****       const size_type __capacity = capacity();
 292:/usr/include/c++/5/bits/basic_string.tcc ****       if (__res != __capacity)
 293:/usr/include/c++/5/bits/basic_string.tcc **** 	{
 294:/usr/include/c++/5/bits/basic_string.tcc **** 	  if (__res > __capacity
 295:/usr/include/c++/5/bits/basic_string.tcc **** 	      || __res > size_type(_S_local_capacity))
 296:/usr/include/c++/5/bits/basic_string.tcc **** 	    {
 297:/usr/include/c++/5/bits/basic_string.tcc **** 	      pointer __tmp = _M_create(__res, __capacity);
 298:/usr/include/c++/5/bits/basic_string.tcc **** 	      this->_S_copy(__tmp, _M_data(), length() + 1);
 299:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_dispose();
 300:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_data(__tmp);
 301:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_capacity(__res);
 302:/usr/include/c++/5/bits/basic_string.tcc **** 	    }
 303:/usr/include/c++/5/bits/basic_string.tcc **** 	  else if (!_M_is_local())
 304:/usr/include/c++/5/bits/basic_string.tcc **** 	    {
 305:/usr/include/c++/5/bits/basic_string.tcc **** 	      this->_S_copy(_M_local_data(), _M_data(), length() + 1);
 306:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_destroy(__capacity);
 307:/usr/include/c++/5/bits/basic_string.tcc **** 	      _M_data(_M_local_data());
 308:/usr/include/c++/5/bits/basic_string.tcc **** 	    }
 309:/usr/include/c++/5/bits/basic_string.tcc **** 	}
 310:/usr/include/c++/5/bits/basic_string.tcc ****     }
 311:/usr/include/c++/5/bits/basic_string.tcc **** 
 312:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 313:/usr/include/c++/5/bits/basic_string.tcc ****     void
 314:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 315:/usr/include/c++/5/bits/basic_string.tcc ****     _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 316:/usr/include/c++/5/bits/basic_string.tcc **** 	      size_type __len2)
 317:/usr/include/c++/5/bits/basic_string.tcc ****     {
 318:/usr/include/c++/5/bits/basic_string.tcc ****       const size_type __how_much = length() - __pos - __len1;
 319:/usr/include/c++/5/bits/basic_string.tcc **** 
 320:/usr/include/c++/5/bits/basic_string.tcc ****       size_type __new_capacity = length() + __len2 - __len1;
 321:/usr/include/c++/5/bits/basic_string.tcc ****       pointer __r = _M_create(__new_capacity, capacity());
 322:/usr/include/c++/5/bits/basic_string.tcc **** 
 323:/usr/include/c++/5/bits/basic_string.tcc ****       if (__pos)
 324:/usr/include/c++/5/bits/basic_string.tcc **** 	this->_S_copy(__r, _M_data(), __pos);
 325:/usr/include/c++/5/bits/basic_string.tcc ****       if (__s && __len2)
 326:/usr/include/c++/5/bits/basic_string.tcc **** 	this->_S_copy(__r + __pos, __s, __len2);
 327:/usr/include/c++/5/bits/basic_string.tcc ****       if (__how_much)
 328:/usr/include/c++/5/bits/basic_string.tcc **** 	this->_S_copy(__r + __pos + __len2,
 329:/usr/include/c++/5/bits/basic_string.tcc **** 		      _M_data() + __pos + __len1, __how_much);
 330:/usr/include/c++/5/bits/basic_string.tcc **** 
 331:/usr/include/c++/5/bits/basic_string.tcc ****       _M_dispose();
 332:/usr/include/c++/5/bits/basic_string.tcc ****       _M_data(__r);
 333:/usr/include/c++/5/bits/basic_string.tcc ****       _M_capacity(__new_capacity);
 334:/usr/include/c++/5/bits/basic_string.tcc ****     }
 335:/usr/include/c++/5/bits/basic_string.tcc **** 
 336:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 337:/usr/include/c++/5/bits/basic_string.tcc ****     void
 338:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
GAS LISTING /tmp/ccX8BQhk.s 			page 423


 339:/usr/include/c++/5/bits/basic_string.tcc ****     _M_erase(size_type __pos, size_type __n)
 340:/usr/include/c++/5/bits/basic_string.tcc ****     {
 341:/usr/include/c++/5/bits/basic_string.tcc ****       const size_type __how_much = length() - __pos - __n;
 342:/usr/include/c++/5/bits/basic_string.tcc **** 
 343:/usr/include/c++/5/bits/basic_string.tcc ****       if (__how_much && __n)
 344:/usr/include/c++/5/bits/basic_string.tcc **** 	this->_S_move(_M_data() + __pos, _M_data() + __pos + __n, __how_much);
 345:/usr/include/c++/5/bits/basic_string.tcc **** 
 346:/usr/include/c++/5/bits/basic_string.tcc ****       _M_set_length(length() - __n);
 347:/usr/include/c++/5/bits/basic_string.tcc ****     }
 348:/usr/include/c++/5/bits/basic_string.tcc **** 
 349:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 350:/usr/include/c++/5/bits/basic_string.tcc ****     void
 351:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 352:/usr/include/c++/5/bits/basic_string.tcc ****     resize(size_type __n, _CharT __c)
 353:/usr/include/c++/5/bits/basic_string.tcc ****     {
 354:/usr/include/c++/5/bits/basic_string.tcc ****       const size_type __size = this->size();
 355:/usr/include/c++/5/bits/basic_string.tcc ****       if (__size < __n)
 356:/usr/include/c++/5/bits/basic_string.tcc **** 	this->append(__n - __size, __c);
 357:/usr/include/c++/5/bits/basic_string.tcc ****       else if (__n < __size)
 358:/usr/include/c++/5/bits/basic_string.tcc **** 	this->_M_erase(__n, __size - __n);
 359:/usr/include/c++/5/bits/basic_string.tcc ****     }
 360:/usr/include/c++/5/bits/basic_string.tcc **** 
 361:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 362:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 363:/usr/include/c++/5/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 364:/usr/include/c++/5/bits/basic_string.tcc ****     _M_append(const _CharT* __s, size_type __n)
 365:/usr/include/c++/5/bits/basic_string.tcc ****     {
 366:/usr/include/c++/5/bits/basic_string.tcc ****       const size_type __len = __n + this->size();
 367:/usr/include/c++/5/bits/basic_string.tcc **** 
 368:/usr/include/c++/5/bits/basic_string.tcc ****       if (__len <= this->capacity())
 369:/usr/include/c++/5/bits/basic_string.tcc **** 	{
 370:/usr/include/c++/5/bits/basic_string.tcc **** 	  if (__n)
 371:/usr/include/c++/5/bits/basic_string.tcc **** 	    this->_S_copy(this->_M_data() + this->size(), __s, __n);
 372:/usr/include/c++/5/bits/basic_string.tcc **** 	}
 373:/usr/include/c++/5/bits/basic_string.tcc ****       else
 374:/usr/include/c++/5/bits/basic_string.tcc **** 	this->_M_mutate(this->size(), size_type(0), __s, __n);
 375:/usr/include/c++/5/bits/basic_string.tcc **** 
 376:/usr/include/c++/5/bits/basic_string.tcc ****       this->_M_set_length(__len);
 377:/usr/include/c++/5/bits/basic_string.tcc ****       return *this;
 378:/usr/include/c++/5/bits/basic_string.tcc ****     }
 379:/usr/include/c++/5/bits/basic_string.tcc **** 
 380:/usr/include/c++/5/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 381:/usr/include/c++/5/bits/basic_string.tcc ****     template<typename _InputIterator>
 382:/usr/include/c++/5/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>&
 383:/usr/include/c++/5/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 7763              		.loc 37 383 0
 7764              		.cfi_startproc
 7765              		.cfi_personality 0x3,__gxx_personality_v0
 7766              		.cfi_lsda 0x3,.LLSDA10541
 7767 0000 55       		pushq	%rbp
 7768              		.cfi_def_cfa_offset 16
 7769              		.cfi_offset 6, -16
 7770 0001 4889E5   		movq	%rsp, %rbp
 7771              		.cfi_def_cfa_register 6
 7772 0004 4154     		pushq	%r12
 7773 0006 53       		pushq	%rbx
 7774 0007 4881ECB0 		subq	$176, %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 424


 7774      000000
 7775              		.cfi_offset 12, -24
 7776              		.cfi_offset 3, -32
 7777 000e 4889BD68 		movq	%rdi, -152(%rbp)
 7777      FFFFFF
 7778 0015 4889B560 		movq	%rsi, -160(%rbp)
 7778      FFFFFF
 7779 001c 48899550 		movq	%rdx, -176(%rbp)
 7779      FFFFFF
 7780 0023 48898D58 		movq	%rcx, -168(%rbp)
 7780      FFFFFF
 7781 002a 4C898548 		movq	%r8, -184(%rbp)
 7781      FFFFFF
 7782              		.loc 37 383 0
 7783 0031 64488B04 		movq	%fs:40, %rax
 7783      25280000 
 7783      00
 7784 003a 488945E8 		movq	%rax, -24(%rbp)
 7785 003e 31C0     		xorl	%eax, %eax
 384:/usr/include/c++/5/bits/basic_string.tcc ****       _M_replace_dispatch(const_iterator __i1, const_iterator __i2,
 385:/usr/include/c++/5/bits/basic_string.tcc **** 			  _InputIterator __k1, _InputIterator __k2,
 386:/usr/include/c++/5/bits/basic_string.tcc **** 			  std::__false_type)
 387:/usr/include/c++/5/bits/basic_string.tcc ****       {
 388:/usr/include/c++/5/bits/basic_string.tcc **** 	const basic_string __s(__k1, __k2);
 7786              		.loc 37 388 0
 7787 0040 488D8577 		leaq	-137(%rbp), %rax
 7787      FFFFFF
 7788 0047 4889C7   		movq	%rax, %rdi
 7789 004a E8000000 		call	_ZNSaIcEC1Ev
 7789      00
 7790 004f 488B9548 		movq	-184(%rbp), %rdx
 7790      FFFFFF
 7791 0056 488D45A0 		leaq	-96(%rbp), %rax
 7792 005a 4889D6   		movq	%rdx, %rsi
 7793 005d 4889C7   		movq	%rax, %rdi
 7794 0060 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 7794      00
 7795 0065 488B9558 		movq	-168(%rbp), %rdx
 7795      FFFFFF
 7796 006c 488D4580 		leaq	-128(%rbp), %rax
 7797 0070 4889D6   		movq	%rdx, %rsi
 7798 0073 4889C7   		movq	%rax, %rdi
 7799 0076 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 7799      00
 7800 007b 488D8D77 		leaq	-137(%rbp), %rcx
 7800      FFFFFF
 7801 0082 488D55A0 		leaq	-96(%rbp), %rdx
 7802 0086 488D7580 		leaq	-128(%rbp), %rsi
 7803 008a 488D45C0 		leaq	-64(%rbp), %rax
 7804 008e 4889C7   		movq	%rax, %rdi
 7805              	.LEHB46:
 7806 0091 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ISt15_Deque_iteratorIcRcPcEvEET_SA_RKS
 7806      00
 7807              	.LEHE46:
 7808              		.loc 37 388 0 is_stmt 0 discriminator 2
 7809 0096 488D8577 		leaq	-137(%rbp), %rax
 7809      FFFFFF
GAS LISTING /tmp/ccX8BQhk.s 			page 425


 7810 009d 4889C7   		movq	%rax, %rdi
 7811 00a0 E8000000 		call	_ZNSaIcED1Ev
 7811      00
 389:/usr/include/c++/5/bits/basic_string.tcc **** 	const size_type __n1 = __i2 - __i1;
 7812              		.loc 37 389 0 is_stmt 1 discriminator 2
 7813 00a5 488D9560 		leaq	-160(%rbp), %rdx
 7813      FFFFFF
 7814 00ac 488D8550 		leaq	-176(%rbp), %rax
 7814      FFFFFF
 7815 00b3 4889D6   		movq	%rdx, %rsi
 7816 00b6 4889C7   		movq	%rax, %rdi
 7817 00b9 E8000000 		call	_ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_iterat
 7817      00
 7818 00be 48898578 		movq	%rax, -136(%rbp)
 7818      FFFFFF
 390:/usr/include/c++/5/bits/basic_string.tcc **** 	return _M_replace(__i1 - begin(), __n1, __s._M_data(),
 7819              		.loc 37 390 0 discriminator 2
 7820 00c5 488D45C0 		leaq	-64(%rbp), %rax
 7821 00c9 4889C7   		movq	%rax, %rdi
 7822 00cc E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv
 7822      00
 7823 00d1 4989C4   		movq	%rax, %r12
 7824 00d4 488D45C0 		leaq	-64(%rbp), %rax
 7825 00d8 4889C7   		movq	%rax, %rdi
 7826              	.LEHB47:
 7827 00db E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
 7827      00
 7828 00e0 4889C3   		movq	%rax, %rbx
 7829 00e3 488B8568 		movq	-152(%rbp), %rax
 7829      FFFFFF
 7830 00ea 4889C7   		movq	%rax, %rdi
 7831 00ed E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
 7831      00
 7832 00f2 488945A0 		movq	%rax, -96(%rbp)
 7833 00f6 488D55A0 		leaq	-96(%rbp), %rdx
 7834 00fa 488D8560 		leaq	-160(%rbp), %rax
 7834      FFFFFF
 7835 0101 4889D6   		movq	%rdx, %rsi
 7836 0104 4889C7   		movq	%rax, %rdi
 7837 0107 E8000000 		call	_ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseEc
 7837      00
 7838 010c 4889C6   		movq	%rax, %rsi
 391:/usr/include/c++/5/bits/basic_string.tcc **** 			  __s.size());
 7839              		.loc 37 391 0 discriminator 2
 7840 010f 488B9578 		movq	-136(%rbp), %rdx
 7840      FFFFFF
 7841 0116 488B8568 		movq	-152(%rbp), %rax
 7841      FFFFFF
 7842 011d 4D89E0   		movq	%r12, %r8
 7843 0120 4889D9   		movq	%rbx, %rcx
 7844 0123 4889C7   		movq	%rax, %rdi
 7845 0126 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
 7845      00
 7846              	.LEHE47:
 7847              		.loc 37 391 0 is_stmt 0 discriminator 1
 7848 012b 4889C3   		movq	%rax, %rbx
 388:/usr/include/c++/5/bits/basic_string.tcc **** 	const size_type __n1 = __i2 - __i1;
GAS LISTING /tmp/ccX8BQhk.s 			page 426


 7849              		.loc 37 388 0 is_stmt 1 discriminator 1
 7850 012e 488D45C0 		leaq	-64(%rbp), %rax
 7851 0132 4889C7   		movq	%rax, %rdi
 7852 0135 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 7852      00
 7853              		.loc 37 391 0 discriminator 1
 7854 013a 4889D8   		movq	%rbx, %rax
 392:/usr/include/c++/5/bits/basic_string.tcc ****       }
 7855              		.loc 37 392 0 discriminator 1
 7856 013d 488B4DE8 		movq	-24(%rbp), %rcx
 7857 0141 6448330C 		xorq	%fs:40, %rcx
 7857      25280000 
 7857      00
 7858 014a 743E     		je	.L411
 7859 014c EB37     		jmp	.L414
 7860              	.L412:
 7861 014e 4889C3   		movq	%rax, %rbx
 7862 0151 488D8577 		leaq	-137(%rbp), %rax
 7862      FFFFFF
 7863 0158 4889C7   		movq	%rax, %rdi
 7864 015b E8000000 		call	_ZNSaIcED1Ev
 7864      00
 7865 0160 4889D8   		movq	%rbx, %rax
 7866 0163 4889C7   		movq	%rax, %rdi
 7867              	.LEHB48:
 7868 0166 E8000000 		call	_Unwind_Resume
 7868      00
 7869              	.L413:
 7870 016b 4889C3   		movq	%rax, %rbx
 388:/usr/include/c++/5/bits/basic_string.tcc **** 	const size_type __n1 = __i2 - __i1;
 7871              		.loc 37 388 0
 7872 016e 488D45C0 		leaq	-64(%rbp), %rax
 7873 0172 4889C7   		movq	%rax, %rdi
 7874 0175 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 7874      00
 7875 017a 4889D8   		movq	%rbx, %rax
 7876 017d 4889C7   		movq	%rax, %rdi
 7877 0180 E8000000 		call	_Unwind_Resume
 7877      00
 7878              	.LEHE48:
 7879              	.L414:
 7880              		.loc 37 392 0
 7881 0185 E8000000 		call	__stack_chk_fail
 7881      00
 7882              	.L411:
 7883 018a 4881C4B0 		addq	$176, %rsp
 7883      000000
 7884 0191 5B       		popq	%rbx
 7885 0192 415C     		popq	%r12
 7886 0194 5D       		popq	%rbp
 7887              		.cfi_def_cfa 7, 8
 7888 0195 C3       		ret
 7889              		.cfi_endproc
 7890              	.LFE10541:
 7891              		.section	.gcc_except_table
 7892              	.LLSDA10541:
 7893 012c FF       		.byte	0xff
GAS LISTING /tmp/ccX8BQhk.s 			page 427


 7894 012d FF       		.byte	0xff
 7895 012e 01       		.byte	0x1
 7896 012f 11       		.uleb128 .LLSDACSE10541-.LLSDACSB10541
 7897              	.LLSDACSB10541:
 7898 0130 9101     		.uleb128 .LEHB46-.LFB10541
 7899 0132 05       		.uleb128 .LEHE46-.LEHB46
 7900 0133 CE02     		.uleb128 .L412-.LFB10541
 7901 0135 00       		.uleb128 0
 7902 0136 DB01     		.uleb128 .LEHB47-.LFB10541
 7903 0138 50       		.uleb128 .LEHE47-.LEHB47
 7904 0139 EB02     		.uleb128 .L413-.LFB10541
 7905 013b 00       		.uleb128 0
 7906 013c E602     		.uleb128 .LEHB48-.LFB10541
 7907 013e 1F       		.uleb128 .LEHE48-.LEHB48
 7908 013f 00       		.uleb128 0
 7909 0140 00       		.uleb128 0
 7910              	.LLSDACSE10541:
 7911              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE19_M_replace_dispatchISt15_Deq
 7913              		.section	.text._ZNSt16allocator_traitsISaIPcEE8allocateERS1_m,"axG",@progbits,_ZNSt16allocator_tra
 7914              		.weak	_ZNSt16allocator_traitsISaIPcEE8allocateERS1_m
 7916              	_ZNSt16allocator_traitsISaIPcEE8allocateERS1_m:
 7917              	.LFB10543:
 490:/usr/include/c++/5/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 7918              		.loc 22 490 0
 7919              		.cfi_startproc
 7920 0000 55       		pushq	%rbp
 7921              		.cfi_def_cfa_offset 16
 7922              		.cfi_offset 6, -16
 7923 0001 4889E5   		movq	%rsp, %rbp
 7924              		.cfi_def_cfa_register 6
 7925 0004 4883EC10 		subq	$16, %rsp
 7926 0008 48897DF8 		movq	%rdi, -8(%rbp)
 7927 000c 488975F0 		movq	%rsi, -16(%rbp)
 491:/usr/include/c++/5/bits/alloc_traits.h **** 
 7928              		.loc 22 491 0
 7929 0010 488B4DF0 		movq	-16(%rbp), %rcx
 7930 0014 488B45F8 		movq	-8(%rbp), %rax
 7931 0018 BA000000 		movl	$0, %edx
 7931      00
 7932 001d 4889CE   		movq	%rcx, %rsi
 7933 0020 4889C7   		movq	%rax, %rdi
 7934 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIPcE8allocateEmPKv
 7934      00
 7935 0028 C9       		leave
 7936              		.cfi_def_cfa 7, 8
 7937 0029 C3       		ret
 7938              		.cfi_endproc
 7939              	.LFE10543:
 7941              		.section	.text._ZNSt11_Deque_baseIcSaIcEE16_M_allocate_nodeEv,"axG",@progbits,_ZNSt11_Deque_baseIc
 7942              		.align 2
 7943              		.weak	_ZNSt11_Deque_baseIcSaIcEE16_M_allocate_nodeEv
 7945              	_ZNSt11_Deque_baseIcSaIcEE16_M_allocate_nodeEv:
 7946              	.LFB10544:
 598:/usr/include/c++/5/bits/stl_deque.h ****       { 
 7947              		.loc 3 598 0
 7948              		.cfi_startproc
 7949 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 428


 7950              		.cfi_def_cfa_offset 16
 7951              		.cfi_offset 6, -16
 7952 0001 4889E5   		movq	%rsp, %rbp
 7953              		.cfi_def_cfa_register 6
 7954 0004 4883EC10 		subq	$16, %rsp
 7955 0008 48897DF8 		movq	%rdi, -8(%rbp)
 601:/usr/include/c++/5/bits/stl_deque.h ****       }
 7956              		.loc 3 601 0
 7957 000c BF010000 		movl	$1, %edi
 7957      00
 7958 0011 E8000000 		call	_ZSt16__deque_buf_sizem
 7958      00
 7959 0016 4889C2   		movq	%rax, %rdx
 7960 0019 488B45F8 		movq	-8(%rbp), %rax
 7961 001d 4889D6   		movq	%rdx, %rsi
 7962 0020 4889C7   		movq	%rax, %rdi
 7963 0023 E8000000 		call	_ZNSt16allocator_traitsISaIcEE8allocateERS0_m
 7963      00
 602:/usr/include/c++/5/bits/stl_deque.h **** 
 7964              		.loc 3 602 0
 7965 0028 C9       		leave
 7966              		.cfi_def_cfa 7, 8
 7967 0029 C3       		ret
 7968              		.cfi_endproc
 7969              	.LFE10544:
 7971              		.section	.text._ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv,"axG",@progbits,_ZNSt15_Deque_itera
 7972              		.weak	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
 7974              	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv:
 7975              	.LFB10545:
 126:/usr/include/c++/5/bits/stl_deque.h ****       { return __deque_buf_size(sizeof(_Tp)); }
 7976              		.loc 3 126 0
 7977              		.cfi_startproc
 7978 0000 55       		pushq	%rbp
 7979              		.cfi_def_cfa_offset 16
 7980              		.cfi_offset 6, -16
 7981 0001 4889E5   		movq	%rsp, %rbp
 7982              		.cfi_def_cfa_register 6
 127:/usr/include/c++/5/bits/stl_deque.h **** 
 7983              		.loc 3 127 0
 7984 0004 BF010000 		movl	$1, %edi
 7984      00
 7985 0009 E8000000 		call	_ZSt16__deque_buf_sizem
 7985      00
 7986 000e 5D       		popq	%rbp
 7987              		.cfi_def_cfa 7, 8
 7988 000f C3       		ret
 7989              		.cfi_endproc
 7990              	.LFE10545:
 7992              		.section	.text._ZNKSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv,"axG",@progbits,_ZNKSt11_Deque_b
 7993              		.align 2
 7994              		.weak	_ZNKSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 7996              	_ZNKSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv:
 7997              	.LFB10546:
 590:/usr/include/c++/5/bits/stl_deque.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 7998              		.loc 3 590 0
 7999              		.cfi_startproc
 8000 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 429


 8001              		.cfi_def_cfa_offset 16
 8002              		.cfi_offset 6, -16
 8003 0001 4889E5   		movq	%rsp, %rbp
 8004              		.cfi_def_cfa_register 6
 8005 0004 48897DF8 		movq	%rdi, -8(%rbp)
 591:/usr/include/c++/5/bits/stl_deque.h **** 
 8006              		.loc 3 591 0
 8007 0008 488B45F8 		movq	-8(%rbp), %rax
 8008 000c 5D       		popq	%rbp
 8009              		.cfi_def_cfa 7, 8
 8010 000d C3       		ret
 8011              		.cfi_endproc
 8012              	.LFE10546:
 8014              		.section	.text._ZNSaIPcEC2IcEERKSaIT_E,"axG",@progbits,_ZNSaIPcEC5IcEERKSaIT_E,comdat
 8015              		.align 2
 8016              		.weak	_ZNSaIPcEC2IcEERKSaIT_E
 8018              	_ZNSaIPcEC2IcEERKSaIT_E:
 8019              	.LFB10548:
 119:/usr/include/c++/5/bits/allocator.h **** 
 8020              		.loc 34 119 0
 8021              		.cfi_startproc
 8022 0000 55       		pushq	%rbp
 8023              		.cfi_def_cfa_offset 16
 8024              		.cfi_offset 6, -16
 8025 0001 4889E5   		movq	%rsp, %rbp
 8026              		.cfi_def_cfa_register 6
 8027 0004 4883EC10 		subq	$16, %rsp
 8028 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8029 000c 488975F0 		movq	%rsi, -16(%rbp)
 8030              	.LBB58:
 119:/usr/include/c++/5/bits/allocator.h **** 
 8031              		.loc 34 119 0
 8032 0010 488B45F8 		movq	-8(%rbp), %rax
 8033 0014 4889C7   		movq	%rax, %rdi
 8034 0017 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIPcEC2Ev
 8034      00
 8035              	.LBE58:
 8036 001c 90       		nop
 8037 001d C9       		leave
 8038              		.cfi_def_cfa 7, 8
 8039 001e C3       		ret
 8040              		.cfi_endproc
 8041              	.LFE10548:
 8043              		.weak	_ZNSaIPcEC1IcEERKSaIT_E
 8044              		.set	_ZNSaIPcEC1IcEERKSaIT_E,_ZNSaIPcEC2IcEERKSaIT_E
 8045              		.section	.text._ZN9__gnu_cxx13new_allocatorIPcED2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIP
 8046              		.align 2
 8047              		.weak	_ZN9__gnu_cxx13new_allocatorIPcED2Ev
 8049              	_ZN9__gnu_cxx13new_allocatorIPcED2Ev:
 8050              	.LFB10551:
  86:/usr/include/c++/5/ext/new_allocator.h **** 
 8051              		.loc 27 86 0
 8052              		.cfi_startproc
 8053 0000 55       		pushq	%rbp
 8054              		.cfi_def_cfa_offset 16
 8055              		.cfi_offset 6, -16
 8056 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 430


 8057              		.cfi_def_cfa_register 6
 8058 0004 48897DF8 		movq	%rdi, -8(%rbp)
  86:/usr/include/c++/5/ext/new_allocator.h **** 
 8059              		.loc 27 86 0
 8060 0008 90       		nop
 8061 0009 5D       		popq	%rbp
 8062              		.cfi_def_cfa 7, 8
 8063 000a C3       		ret
 8064              		.cfi_endproc
 8065              	.LFE10551:
 8067              		.weak	_ZN9__gnu_cxx13new_allocatorIPcED1Ev
 8068              		.set	_ZN9__gnu_cxx13new_allocatorIPcED1Ev,_ZN9__gnu_cxx13new_allocatorIPcED2Ev
 8069              		.section	.text._ZN9__gnu_cxx13new_allocatorIPcE10deallocateEPS1_m,"axG",@progbits,_ZN9__gnu_cxx13n
 8070              		.align 2
 8071              		.weak	_ZN9__gnu_cxx13new_allocatorIPcE10deallocateEPS1_m
 8073              	_ZN9__gnu_cxx13new_allocatorIPcE10deallocateEPS1_m:
 8074              	.LFB10556:
 109:/usr/include/c++/5/ext/new_allocator.h ****       { ::operator delete(__p); }
 8075              		.loc 27 109 0
 8076              		.cfi_startproc
 8077 0000 55       		pushq	%rbp
 8078              		.cfi_def_cfa_offset 16
 8079              		.cfi_offset 6, -16
 8080 0001 4889E5   		movq	%rsp, %rbp
 8081              		.cfi_def_cfa_register 6
 8082 0004 4883EC20 		subq	$32, %rsp
 8083 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8084 000c 488975F0 		movq	%rsi, -16(%rbp)
 8085 0010 488955E8 		movq	%rdx, -24(%rbp)
 110:/usr/include/c++/5/ext/new_allocator.h **** 
 8086              		.loc 27 110 0
 8087 0014 488B45F0 		movq	-16(%rbp), %rax
 8088 0018 4889C7   		movq	%rax, %rdi
 8089 001b E8000000 		call	_ZdlPv
 8089      00
 8090 0020 90       		nop
 8091 0021 C9       		leave
 8092              		.cfi_def_cfa 7, 8
 8093 0022 C3       		ret
 8094              		.cfi_endproc
 8095              	.LFE10556:
 8097              		.section	.text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11c
 8098              		.weak	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trait
 8100              	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 8101              	.LFB10558:
 206:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 207:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@}
 208:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 209:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // If _Iterator has a base returns it otherwise _Iterator is returned
 210:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // untouched
 211:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator, bool _HasBase>
 212:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct _Iter_base
 213:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 214:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Iterator iterator_type;
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       static iterator_type _S_base(_Iterator __it)
 8102              		.loc 32 215 0
 8103              		.cfi_startproc
GAS LISTING /tmp/ccX8BQhk.s 			page 431


 8104 0000 55       		pushq	%rbp
 8105              		.cfi_def_cfa_offset 16
 8106              		.cfi_offset 6, -16
 8107 0001 4889E5   		movq	%rsp, %rbp
 8108              		.cfi_def_cfa_register 6
 8109 0004 48897DF0 		movq	%rdi, -16(%rbp)
 216:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
 8110              		.loc 32 216 0
 8111 0008 488B45F0 		movq	-16(%rbp), %rax
 8112 000c 5D       		popq	%rbp
 8113              		.cfi_def_cfa 7, 8
 8114 000d C3       		ret
 8115              		.cfi_endproc
 8116              	.LFE10558:
 8118              		.section	.text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11
 8119              		.weak	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trai
 8121              	_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 8122              	.LFB10559:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 8123              		.loc 29 282 0
 8124              		.cfi_startproc
 8125 0000 55       		pushq	%rbp
 8126              		.cfi_def_cfa_offset 16
 8127              		.cfi_offset 6, -16
 8128 0001 4889E5   		movq	%rsp, %rbp
 8129              		.cfi_def_cfa_register 6
 8130 0004 4883EC10 		subq	$16, %rsp
 8131 0008 48897DF0 		movq	%rdi, -16(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 8132              		.loc 29 283 0
 8133 000c 488B45F0 		movq	-16(%rbp), %rax
 8134 0010 4889C7   		movq	%rax, %rdi
 8135 0013 E8000000 		call	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traits
 8135      00
 8136 0018 C9       		leave
 8137              		.cfi_def_cfa 7, 8
 8138 0019 C3       		ret
 8139              		.cfi_endproc
 8140              	.LFE10559:
 8142              		.section	.text._ZSt13__copy_move_aILb0EPcS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt13__copy_move_aILb0E
 8143              		.weak	_ZSt13__copy_move_aILb0EPcS0_ET1_T0_S2_S1_
 8145              	_ZSt13__copy_move_aILb0EPcS0_ET1_T0_S2_S1_:
 8146              	.LFB10560:
 391:/usr/include/c++/5/bits/stl_algobase.h ****     {
 8147              		.loc 29 391 0
 8148              		.cfi_startproc
 8149 0000 55       		pushq	%rbp
 8150              		.cfi_def_cfa_offset 16
 8151              		.cfi_offset 6, -16
 8152 0001 4889E5   		movq	%rsp, %rbp
 8153              		.cfi_def_cfa_register 6
 8154 0004 4883EC30 		subq	$48, %rsp
 8155 0008 48897DE8 		movq	%rdi, -24(%rbp)
 8156 000c 488975E0 		movq	%rsi, -32(%rbp)
 8157 0010 488955D8 		movq	%rdx, -40(%rbp)
 399:/usr/include/c++/5/bits/stl_algobase.h **** 
 8158              		.loc 29 399 0
GAS LISTING /tmp/ccX8BQhk.s 			page 432


 8159 0014 C645FF01 		movb	$1, -1(%rbp)
 402:/usr/include/c++/5/bits/stl_algobase.h ****     }
 8160              		.loc 29 402 0
 8161 0018 488B55D8 		movq	-40(%rbp), %rdx
 8162 001c 488B4DE0 		movq	-32(%rbp), %rcx
 8163 0020 488B45E8 		movq	-24(%rbp), %rax
 8164 0024 4889CE   		movq	%rcx, %rsi
 8165 0027 4889C7   		movq	%rax, %rdi
 8166 002a E8000000 		call	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_
 8166      00
 403:/usr/include/c++/5/bits/stl_algobase.h **** 
 8167              		.loc 29 403 0
 8168 002f C9       		leave
 8169              		.cfi_def_cfa 7, 8
 8170 0030 C3       		ret
 8171              		.cfi_endproc
 8172              	.LFE10560:
 8174              		.section	.text._ZN9__gnu_cxx13new_allocatorIcE9constructIcJRKcEEEvPT_DpOT0_,"axG",@progbits,_ZN9__
 8175              		.align 2
 8176              		.weak	_ZN9__gnu_cxx13new_allocatorIcE9constructIcJRKcEEEvPT_DpOT0_
 8178              	_ZN9__gnu_cxx13new_allocatorIcE9constructIcJRKcEEEvPT_DpOT0_:
 8179              	.LFB10561:
 115:/usr/include/c++/5/ext/new_allocator.h **** 
 116:/usr/include/c++/5/ext/new_allocator.h **** #if __cplusplus >= 201103L
 117:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Up, typename... _Args>
 118:/usr/include/c++/5/ext/new_allocator.h ****         void
 119:/usr/include/c++/5/ext/new_allocator.h ****         construct(_Up* __p, _Args&&... __args)
 8180              		.loc 27 119 0
 8181              		.cfi_startproc
 8182 0000 55       		pushq	%rbp
 8183              		.cfi_def_cfa_offset 16
 8184              		.cfi_offset 6, -16
 8185 0001 4889E5   		movq	%rsp, %rbp
 8186              		.cfi_def_cfa_register 6
 8187 0004 53       		pushq	%rbx
 8188 0005 4883EC28 		subq	$40, %rsp
 8189              		.cfi_offset 3, -24
 8190 0009 48897DE8 		movq	%rdi, -24(%rbp)
 8191 000d 488975E0 		movq	%rsi, -32(%rbp)
 8192 0011 488955D8 		movq	%rdx, -40(%rbp)
 120:/usr/include/c++/5/ext/new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8193              		.loc 27 120 0
 8194 0015 488B45D8 		movq	-40(%rbp), %rax
 8195 0019 4889C7   		movq	%rax, %rdi
 8196 001c E8000000 		call	_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE
 8196      00
 8197 0021 0FB618   		movzbl	(%rax), %ebx
 8198 0024 488B45E0 		movq	-32(%rbp), %rax
 8199 0028 4889C6   		movq	%rax, %rsi
 8200 002b BF010000 		movl	$1, %edi
 8200      00
 8201 0030 E8000000 		call	_ZnwmPv
 8201      00
 8202 0035 4885C0   		testq	%rax, %rax
 8203 0038 7402     		je	.L435
 8204 003a 8818     		movb	%bl, (%rax)
 8205              	.L435:
GAS LISTING /tmp/ccX8BQhk.s 			page 433


 8206 003c 90       		nop
 8207 003d 4883C428 		addq	$40, %rsp
 8208 0041 5B       		popq	%rbx
 8209 0042 5D       		popq	%rbp
 8210              		.cfi_def_cfa 7, 8
 8211 0043 C3       		ret
 8212              		.cfi_endproc
 8213              	.LFE10561:
 8215              		.weak	_ZN9__gnu_cxx13new_allocatorIcE9constructIcIRKcEEEvPT_DpOT0_
 8216              		.set	_ZN9__gnu_cxx13new_allocatorIcE9constructIcIRKcEEEvPT_DpOT0_,_ZN9__gnu_cxx13new_allocatorIcE9
 8217              		.section	.text._ZNSt5dequeIcSaIcEE22_M_reserve_map_at_backEm,"axG",@progbits,_ZNSt5dequeIcSaIcEE22
 8218              		.align 2
 8219              		.weak	_ZNSt5dequeIcSaIcEE22_M_reserve_map_at_backEm
 8221              	_ZNSt5dequeIcSaIcEE22_M_reserve_map_at_backEm:
 8222              	.LFB10562:
2039:/usr/include/c++/5/bits/stl_deque.h **** 
2040:/usr/include/c++/5/bits/stl_deque.h ****       // Called by erase(q1, q2).
2041:/usr/include/c++/5/bits/stl_deque.h ****       void
2042:/usr/include/c++/5/bits/stl_deque.h ****       _M_erase_at_begin(iterator __pos)
2043:/usr/include/c++/5/bits/stl_deque.h ****       {
2044:/usr/include/c++/5/bits/stl_deque.h **** 	_M_destroy_data(begin(), __pos, _M_get_Tp_allocator());
2045:/usr/include/c++/5/bits/stl_deque.h **** 	_M_destroy_nodes(this->_M_impl._M_start._M_node, __pos._M_node);
2046:/usr/include/c++/5/bits/stl_deque.h **** 	this->_M_impl._M_start = __pos;
2047:/usr/include/c++/5/bits/stl_deque.h ****       }
2048:/usr/include/c++/5/bits/stl_deque.h **** 
2049:/usr/include/c++/5/bits/stl_deque.h ****       // Called by erase(q1, q2), resize(), clear(), _M_assign_aux,
2050:/usr/include/c++/5/bits/stl_deque.h ****       // _M_fill_assign, operator=.
2051:/usr/include/c++/5/bits/stl_deque.h ****       void
2052:/usr/include/c++/5/bits/stl_deque.h ****       _M_erase_at_end(iterator __pos)
2053:/usr/include/c++/5/bits/stl_deque.h ****       {
2054:/usr/include/c++/5/bits/stl_deque.h **** 	_M_destroy_data(__pos, end(), _M_get_Tp_allocator());
2055:/usr/include/c++/5/bits/stl_deque.h **** 	_M_destroy_nodes(__pos._M_node + 1,
2056:/usr/include/c++/5/bits/stl_deque.h **** 			 this->_M_impl._M_finish._M_node + 1);
2057:/usr/include/c++/5/bits/stl_deque.h **** 	this->_M_impl._M_finish = __pos;
2058:/usr/include/c++/5/bits/stl_deque.h ****       }
2059:/usr/include/c++/5/bits/stl_deque.h **** 
2060:/usr/include/c++/5/bits/stl_deque.h ****       iterator
2061:/usr/include/c++/5/bits/stl_deque.h ****       _M_erase(iterator __pos);
2062:/usr/include/c++/5/bits/stl_deque.h **** 
2063:/usr/include/c++/5/bits/stl_deque.h ****       iterator
2064:/usr/include/c++/5/bits/stl_deque.h ****       _M_erase(iterator __first, iterator __last);
2065:/usr/include/c++/5/bits/stl_deque.h **** 
2066:/usr/include/c++/5/bits/stl_deque.h **** #if __cplusplus >= 201103L
2067:/usr/include/c++/5/bits/stl_deque.h ****       // Called by resize(sz).
2068:/usr/include/c++/5/bits/stl_deque.h ****       void
2069:/usr/include/c++/5/bits/stl_deque.h ****       _M_default_append(size_type __n);
2070:/usr/include/c++/5/bits/stl_deque.h **** 
2071:/usr/include/c++/5/bits/stl_deque.h ****       bool
2072:/usr/include/c++/5/bits/stl_deque.h ****       _M_shrink_to_fit();
2073:/usr/include/c++/5/bits/stl_deque.h **** #endif
2074:/usr/include/c++/5/bits/stl_deque.h **** 
2075:/usr/include/c++/5/bits/stl_deque.h ****       //@{
2076:/usr/include/c++/5/bits/stl_deque.h ****       /// Memory-handling helpers for the previous internal insert functions.
2077:/usr/include/c++/5/bits/stl_deque.h ****       iterator
2078:/usr/include/c++/5/bits/stl_deque.h ****       _M_reserve_elements_at_front(size_type __n)
2079:/usr/include/c++/5/bits/stl_deque.h ****       {
2080:/usr/include/c++/5/bits/stl_deque.h **** 	const size_type __vacancies = this->_M_impl._M_start._M_cur
GAS LISTING /tmp/ccX8BQhk.s 			page 434


2081:/usr/include/c++/5/bits/stl_deque.h **** 	                              - this->_M_impl._M_start._M_first;
2082:/usr/include/c++/5/bits/stl_deque.h **** 	if (__n > __vacancies)
2083:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_new_elements_at_front(__n - __vacancies);
2084:/usr/include/c++/5/bits/stl_deque.h **** 	return this->_M_impl._M_start - difference_type(__n);
2085:/usr/include/c++/5/bits/stl_deque.h ****       }
2086:/usr/include/c++/5/bits/stl_deque.h **** 
2087:/usr/include/c++/5/bits/stl_deque.h ****       iterator
2088:/usr/include/c++/5/bits/stl_deque.h ****       _M_reserve_elements_at_back(size_type __n)
2089:/usr/include/c++/5/bits/stl_deque.h ****       {
2090:/usr/include/c++/5/bits/stl_deque.h **** 	const size_type __vacancies = (this->_M_impl._M_finish._M_last
2091:/usr/include/c++/5/bits/stl_deque.h **** 				       - this->_M_impl._M_finish._M_cur) - 1;
2092:/usr/include/c++/5/bits/stl_deque.h **** 	if (__n > __vacancies)
2093:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_new_elements_at_back(__n - __vacancies);
2094:/usr/include/c++/5/bits/stl_deque.h **** 	return this->_M_impl._M_finish + difference_type(__n);
2095:/usr/include/c++/5/bits/stl_deque.h ****       }
2096:/usr/include/c++/5/bits/stl_deque.h **** 
2097:/usr/include/c++/5/bits/stl_deque.h ****       void
2098:/usr/include/c++/5/bits/stl_deque.h ****       _M_new_elements_at_front(size_type __new_elements);
2099:/usr/include/c++/5/bits/stl_deque.h **** 
2100:/usr/include/c++/5/bits/stl_deque.h ****       void
2101:/usr/include/c++/5/bits/stl_deque.h ****       _M_new_elements_at_back(size_type __new_elements);
2102:/usr/include/c++/5/bits/stl_deque.h ****       //@}
2103:/usr/include/c++/5/bits/stl_deque.h **** 
2104:/usr/include/c++/5/bits/stl_deque.h **** 
2105:/usr/include/c++/5/bits/stl_deque.h ****       //@{
2106:/usr/include/c++/5/bits/stl_deque.h ****       /**
2107:/usr/include/c++/5/bits/stl_deque.h ****        *  @brief Memory-handling helpers for the major %map.
2108:/usr/include/c++/5/bits/stl_deque.h ****        *
2109:/usr/include/c++/5/bits/stl_deque.h ****        *  Makes sure the _M_map has space for new nodes.  Does not
2110:/usr/include/c++/5/bits/stl_deque.h ****        *  actually add the nodes.  Can invalidate _M_map pointers.
2111:/usr/include/c++/5/bits/stl_deque.h ****        *  (And consequently, %deque iterators.)
2112:/usr/include/c++/5/bits/stl_deque.h ****        */
2113:/usr/include/c++/5/bits/stl_deque.h ****       void
2114:/usr/include/c++/5/bits/stl_deque.h ****       _M_reserve_map_at_back(size_type __nodes_to_add = 1)
 8223              		.loc 3 2114 0
 8224              		.cfi_startproc
 8225 0000 55       		pushq	%rbp
 8226              		.cfi_def_cfa_offset 16
 8227              		.cfi_offset 6, -16
 8228 0001 4889E5   		movq	%rsp, %rbp
 8229              		.cfi_def_cfa_register 6
 8230 0004 4883EC10 		subq	$16, %rsp
 8231 0008 48897DF8 		movq	%rdi, -8(%rbp)
 8232 000c 488975F0 		movq	%rsi, -16(%rbp)
2115:/usr/include/c++/5/bits/stl_deque.h ****       {
2116:/usr/include/c++/5/bits/stl_deque.h **** 	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
 8233              		.loc 3 2116 0
 8234 0010 488B45F0 		movq	-16(%rbp), %rax
 8235 0014 488D4801 		leaq	1(%rax), %rcx
2117:/usr/include/c++/5/bits/stl_deque.h **** 	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 8236              		.loc 3 2117 0
 8237 0018 488B45F8 		movq	-8(%rbp), %rax
 8238 001c 488B5008 		movq	8(%rax), %rdx
 8239 0020 488B45F8 		movq	-8(%rbp), %rax
 8240 0024 488B4048 		movq	72(%rax), %rax
2116:/usr/include/c++/5/bits/stl_deque.h **** 	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 8241              		.loc 3 2116 0
GAS LISTING /tmp/ccX8BQhk.s 			page 435


 8242 0028 4889C6   		movq	%rax, %rsi
 8243              		.loc 3 2117 0
 8244 002b 488B45F8 		movq	-8(%rbp), %rax
 8245 002f 488B00   		movq	(%rax), %rax
2116:/usr/include/c++/5/bits/stl_deque.h **** 	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 8246              		.loc 3 2116 0
 8247 0032 4829C6   		subq	%rax, %rsi
 8248 0035 4889F0   		movq	%rsi, %rax
 8249 0038 48C1F803 		sarq	$3, %rax
 8250 003c 4829C2   		subq	%rax, %rdx
 8251 003f 4889D0   		movq	%rdx, %rax
 8252 0042 4839C1   		cmpq	%rax, %rcx
 8253 0045 7618     		jbe	.L438
2118:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_reallocate_map(__nodes_to_add, false);
 8254              		.loc 3 2118 0
 8255 0047 488B4DF0 		movq	-16(%rbp), %rcx
 8256 004b 488B45F8 		movq	-8(%rbp), %rax
 8257 004f BA000000 		movl	$0, %edx
 8257      00
 8258 0054 4889CE   		movq	%rcx, %rsi
 8259 0057 4889C7   		movq	%rax, %rdi
 8260 005a E8000000 		call	_ZNSt5dequeIcSaIcEE17_M_reallocate_mapEmb
 8260      00
 8261              	.L438:
2119:/usr/include/c++/5/bits/stl_deque.h ****       }
 8262              		.loc 3 2119 0
 8263 005f 90       		nop
 8264 0060 C9       		leave
 8265              		.cfi_def_cfa 7, 8
 8266 0061 C3       		ret
 8267              		.cfi_endproc
 8268              	.LFE10562:
 8270              		.section	.text._ZN9__gnu_cxx13new_allocatorIcE7destroyIcEEvPT_,"axG",@progbits,_ZN9__gnu_cxx13new_
 8271              		.align 2
 8272              		.weak	_ZN9__gnu_cxx13new_allocatorIcE7destroyIcEEvPT_
 8274              	_ZN9__gnu_cxx13new_allocatorIcE7destroyIcEEvPT_:
 8275              	.LFB10563:
 121:/usr/include/c++/5/ext/new_allocator.h **** 
 122:/usr/include/c++/5/ext/new_allocator.h ****       template<typename _Up>
 123:/usr/include/c++/5/ext/new_allocator.h ****         void 
 124:/usr/include/c++/5/ext/new_allocator.h ****         destroy(_Up* __p) { __p->~_Up(); }
 8276              		.loc 27 124 0
 8277              		.cfi_startproc
 8278 0000 55       		pushq	%rbp
 8279              		.cfi_def_cfa_offset 16
 8280              		.cfi_offset 6, -16
 8281 0001 4889E5   		movq	%rsp, %rbp
 8282              		.cfi_def_cfa_register 6
 8283 0004 48897DF8 		movq	%rdi, -8(%rbp)
 8284 0008 488975F0 		movq	%rsi, -16(%rbp)
 8285              		.loc 27 124 0
 8286 000c 90       		nop
 8287 000d 5D       		popq	%rbp
 8288              		.cfi_def_cfa 7, 8
 8289 000e C3       		ret
 8290              		.cfi_endproc
 8291              	.LFE10563:
GAS LISTING /tmp/ccX8BQhk.s 			page 436


 8293              		.section	.text._ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEm,"axG",@progbits,_ZNSt5dequeIcSa
 8294              		.align 2
 8295              		.weak	_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEm
 8297              	_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEm:
 8298              	.LFB10564:
2078:/usr/include/c++/5/bits/stl_deque.h ****       {
 8299              		.loc 3 2078 0
 8300              		.cfi_startproc
 8301 0000 55       		pushq	%rbp
 8302              		.cfi_def_cfa_offset 16
 8303              		.cfi_offset 6, -16
 8304 0001 4889E5   		movq	%rsp, %rbp
 8305              		.cfi_def_cfa_register 6
 8306 0004 4883EC30 		subq	$48, %rsp
 8307 0008 48897DE8 		movq	%rdi, -24(%rbp)
 8308 000c 488975E0 		movq	%rsi, -32(%rbp)
 8309 0010 488955D8 		movq	%rdx, -40(%rbp)
2078:/usr/include/c++/5/bits/stl_deque.h ****       {
 8310              		.loc 3 2078 0
 8311 0014 64488B04 		movq	%fs:40, %rax
 8311      25280000 
 8311      00
 8312 001d 488945F8 		movq	%rax, -8(%rbp)
 8313 0021 31C0     		xorl	%eax, %eax
2081:/usr/include/c++/5/bits/stl_deque.h **** 	if (__n > __vacancies)
 8314              		.loc 3 2081 0
 8315 0023 488B45E0 		movq	-32(%rbp), %rax
 8316 0027 488B4010 		movq	16(%rax), %rax
 8317 002b 4889C2   		movq	%rax, %rdx
 8318 002e 488B45E0 		movq	-32(%rbp), %rax
 8319 0032 488B4018 		movq	24(%rax), %rax
 8320 0036 4829C2   		subq	%rax, %rdx
 8321 0039 4889D0   		movq	%rdx, %rax
 8322 003c 488945F0 		movq	%rax, -16(%rbp)
2082:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_new_elements_at_front(__n - __vacancies);
 8323              		.loc 3 2082 0
 8324 0040 488B45D8 		movq	-40(%rbp), %rax
 8325 0044 483B45F0 		cmpq	-16(%rbp), %rax
 8326 0048 761A     		jbe	.L441
2083:/usr/include/c++/5/bits/stl_deque.h **** 	return this->_M_impl._M_start - difference_type(__n);
 8327              		.loc 3 2083 0
 8328 004a 488B45D8 		movq	-40(%rbp), %rax
 8329 004e 482B45F0 		subq	-16(%rbp), %rax
 8330 0052 4889C2   		movq	%rax, %rdx
 8331 0055 488B45E0 		movq	-32(%rbp), %rax
 8332 0059 4889D6   		movq	%rdx, %rsi
 8333 005c 4889C7   		movq	%rax, %rdi
 8334 005f E8000000 		call	_ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEm
 8334      00
 8335              	.L441:
2084:/usr/include/c++/5/bits/stl_deque.h ****       }
 8336              		.loc 3 2084 0
 8337 0064 488B55D8 		movq	-40(%rbp), %rdx
 8338 0068 488B45E0 		movq	-32(%rbp), %rax
 8339 006c 488D4810 		leaq	16(%rax), %rcx
 8340 0070 488B45E8 		movq	-24(%rbp), %rax
 8341 0074 4889CE   		movq	%rcx, %rsi
GAS LISTING /tmp/ccX8BQhk.s 			page 437


 8342 0077 4889C7   		movq	%rax, %rdi
 8343 007a E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEmiEl
 8343      00
2085:/usr/include/c++/5/bits/stl_deque.h **** 
 8344              		.loc 3 2085 0
 8345 007f 488B45E8 		movq	-24(%rbp), %rax
 8346 0083 488B4DF8 		movq	-8(%rbp), %rcx
 8347 0087 6448330C 		xorq	%fs:40, %rcx
 8347      25280000 
 8347      00
 8348 0090 7405     		je	.L443
 8349 0092 E8000000 		call	__stack_chk_fail
 8349      00
 8350              	.L443:
 8351 0097 C9       		leave
 8352              		.cfi_def_cfa 7, 8
 8353 0098 C3       		ret
 8354              		.cfi_endproc
 8355              	.LFE10564:
 8357              		.section	.text._ZSt22__uninitialized_copy_aIPKcSt15_Deque_iteratorIcRcPcEcET0_T_S7_S6_RSaIT1_E,"ax
 8358              		.weak	_ZSt22__uninitialized_copy_aIPKcSt15_Deque_iteratorIcRcPcEcET0_T_S7_S6_RSaIT1_E
 8360              	_ZSt22__uninitialized_copy_aIPKcSt15_Deque_iteratorIcRcPcEcET0_T_S7_S6_RSaIT1_E:
 8361              	.LFB10565:
 8362              		.file 38 "/usr/include/c++/5/bits/stl_uninitialized.h"
   1:/usr/include/c++/5/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_uninitialized.h **** 
   3:/usr/include/c++/5/bits/stl_uninitialized.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_uninitialized.h **** //
   5:/usr/include/c++/5/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_uninitialized.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  11:/usr/include/c++/5/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  16:/usr/include/c++/5/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  20:/usr/include/c++/5/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  25:/usr/include/c++/5/bits/stl_uninitialized.h **** /*
  26:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  27:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  30:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
GAS LISTING /tmp/ccX8BQhk.s 			page 438


  34:/usr/include/c++/5/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  38:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  39:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_uninitialized.h ****  *
  42:/usr/include/c++/5/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_uninitialized.h ****  */
  50:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  51:/usr/include/c++/5/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/usr/include/c++/5/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/5/bits/stl_uninitialized.h ****  */
  55:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  56:/usr/include/c++/5/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/usr/include/c++/5/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  59:/usr/include/c++/5/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/usr/include/c++/5/bits/stl_uninitialized.h **** {
  61:/usr/include/c++/5/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  63:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  64:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  65:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
  66:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  67:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
  68:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  69:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  70:/usr/include/c++/5/bits/stl_uninitialized.h ****         {
  71:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  72:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
  73:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
  74:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, ++__cur)
  75:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  76:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      return __cur;
  77:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
  78:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __catch(...)
  79:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
  80:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  81:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  82:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
  83:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
  84:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
  85:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  86:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<>
  87:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  88:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
  89:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  90:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
GAS LISTING /tmp/ccX8BQhk.s 			page 439


  91:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  92:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  93:/usr/include/c++/5/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
  94:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
  95:/usr/include/c++/5/bits/stl_uninitialized.h **** 
  96:/usr/include/c++/5/bits/stl_uninitialized.h ****   /**
  97:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
  98:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
  99:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 100:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 101:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 102:/usr/include/c++/5/bits/stl_uninitialized.h ****    *
 103:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 104:/usr/include/c++/5/bits/stl_uninitialized.h ****   */
 105:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 106:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 107:/usr/include/c++/5/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 108:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 109:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 110:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 111:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType1;
 112:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 113:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType2;
 114:/usr/include/c++/5/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 115:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = true;
 116:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 117:/usr/include/c++/5/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 118:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 119:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
 120:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 121:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 122:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 123:/usr/include/c++/5/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 124:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 125:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       && __assignable>::
 126:/usr/include/c++/5/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 127:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 128:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 129:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 130:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 131:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 132:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 133:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 134:/usr/include/c++/5/bits/stl_uninitialized.h ****         static void
 135:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 136:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 137:/usr/include/c++/5/bits/stl_uninitialized.h ****         {
 138:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 139:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
 140:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 141:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 142:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 143:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 144:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __catch(...)
 145:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 146:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 147:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
GAS LISTING /tmp/ccX8BQhk.s 			page 440


 148:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 149:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 150:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 151:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 152:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<>
 153:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 154:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 155:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 156:/usr/include/c++/5/bits/stl_uninitialized.h ****         static void
 157:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 158:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 159:/usr/include/c++/5/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 160:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 161:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 162:/usr/include/c++/5/bits/stl_uninitialized.h ****   /**
 163:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 164:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 165:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 166:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 167:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @return   Nothing.
 168:/usr/include/c++/5/bits/stl_uninitialized.h ****    *
 169:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 170:/usr/include/c++/5/bits/stl_uninitialized.h ****   */
 171:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 172:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline void
 173:/usr/include/c++/5/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 174:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 175:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 176:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 177:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType;
 178:/usr/include/c++/5/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 179:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = true;
 180:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 181:/usr/include/c++/5/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 182:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 183:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 184:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 185:/usr/include/c++/5/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 186:/usr/include/c++/5/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 187:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 188:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 189:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 190:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 191:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 192:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 193:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 194:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
 195:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 196:/usr/include/c++/5/bits/stl_uninitialized.h **** 			const _Tp& __x)
 197:/usr/include/c++/5/bits/stl_uninitialized.h ****         {
 198:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 199:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __try
 200:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 201:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
 202:/usr/include/c++/5/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 203:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      return __cur;
 204:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
GAS LISTING /tmp/ccX8BQhk.s 			page 441


 205:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __catch(...)
 206:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    {
 207:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 208:/usr/include/c++/5/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 209:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    }
 210:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 211:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 212:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 213:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<>
 214:/usr/include/c++/5/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 215:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 216:/usr/include/c++/5/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 217:/usr/include/c++/5/bits/stl_uninitialized.h ****         static _ForwardIterator
 218:/usr/include/c++/5/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 219:/usr/include/c++/5/bits/stl_uninitialized.h **** 			const _Tp& __x)
 220:/usr/include/c++/5/bits/stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 221:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 222:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 223:/usr/include/c++/5/bits/stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 224:/usr/include/c++/5/bits/stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 225:/usr/include/c++/5/bits/stl_uninitialized.h ****   /**
 226:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 227:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 228:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 229:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 230:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  @return   Nothing.
 231:/usr/include/c++/5/bits/stl_uninitialized.h ****    *
 232:/usr/include/c++/5/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 233:/usr/include/c++/5/bits/stl_uninitialized.h ****   */
 234:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 235:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 236:/usr/include/c++/5/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 237:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 238:/usr/include/c++/5/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 239:/usr/include/c++/5/bits/stl_uninitialized.h **** 	_ValueType;
 240:/usr/include/c++/5/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 241:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = true;
 242:/usr/include/c++/5/bits/stl_uninitialized.h **** #else
 243:/usr/include/c++/5/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 244:/usr/include/c++/5/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 245:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 246:/usr/include/c++/5/bits/stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 247:/usr/include/c++/5/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 248:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 249:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 250:/usr/include/c++/5/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 251:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 252:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 253:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 254:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 255:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 256:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 257:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 258:/usr/include/c++/5/bits/stl_uninitialized.h ****     _ForwardIterator
 259:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 260:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 261:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
GAS LISTING /tmp/ccX8BQhk.s 			page 442


 262:/usr/include/c++/5/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 263:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 264:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 265:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 266:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, ++__cur)
 267:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 268:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  return __cur;
 269:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 270:/usr/include/c++/5/bits/stl_uninitialized.h ****       __catch(...)
 271:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 272:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 273:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 274:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 275:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 276:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 277:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 278:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 279:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 8363              		.loc 38 279 0
 8364              		.cfi_startproc
 8365 0000 55       		pushq	%rbp
 8366              		.cfi_def_cfa_offset 16
 8367              		.cfi_offset 6, -16
 8368 0001 4889E5   		movq	%rsp, %rbp
 8369              		.cfi_def_cfa_register 6
 8370 0004 4883EC60 		subq	$96, %rsp
 8371 0008 48897DC8 		movq	%rdi, -56(%rbp)
 8372 000c 488975C0 		movq	%rsi, -64(%rbp)
 8373 0010 488955B8 		movq	%rdx, -72(%rbp)
 8374 0014 48894DB0 		movq	%rcx, -80(%rbp)
 8375 0018 4C8945A8 		movq	%r8, -88(%rbp)
 8376              		.loc 38 279 0
 8377 001c 64488B04 		movq	%fs:40, %rax
 8377      25280000 
 8377      00
 8378 0025 488945F8 		movq	%rax, -8(%rbp)
 8379 0029 31C0     		xorl	%eax, %eax
 280:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 281:/usr/include/c++/5/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 8380              		.loc 38 281 0
 8381 002b 488B55B0 		movq	-80(%rbp), %rdx
 8382 002f 488D45D0 		leaq	-48(%rbp), %rax
 8383 0033 4889D6   		movq	%rdx, %rsi
 8384 0036 4889C7   		movq	%rax, %rdi
 8385 0039 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8385      00
 8386 003e 488B45C8 		movq	-56(%rbp), %rax
 8387 0042 488D4DD0 		leaq	-48(%rbp), %rcx
 8388 0046 488B55B8 		movq	-72(%rbp), %rdx
 8389 004a 488B75C0 		movq	-64(%rbp), %rsi
 8390 004e 4889C7   		movq	%rax, %rdi
 8391 0051 E8000000 		call	_ZSt18uninitialized_copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
 8391      00
 8392 0056 488B45C8 		movq	-56(%rbp), %rax
 8393 005a 488B7DF8 		movq	-8(%rbp), %rdi
 8394 005e 6448333C 		xorq	%fs:40, %rdi
 8394      25280000 
GAS LISTING /tmp/ccX8BQhk.s 			page 443


 8394      00
 8395 0067 7405     		je	.L446
 8396 0069 E8000000 		call	__stack_chk_fail
 8396      00
 8397              	.L446:
 8398 006e C9       		leave
 8399              		.cfi_def_cfa 7, 8
 8400 006f C3       		ret
 8401              		.cfi_endproc
 8402              	.LFE10565:
 8404              		.section	.text._ZNSt5dequeIcSaIcEE27_M_reserve_elements_at_backEm,"axG",@progbits,_ZNSt5dequeIcSaI
 8405              		.align 2
 8406              		.weak	_ZNSt5dequeIcSaIcEE27_M_reserve_elements_at_backEm
 8408              	_ZNSt5dequeIcSaIcEE27_M_reserve_elements_at_backEm:
 8409              	.LFB10566:
2088:/usr/include/c++/5/bits/stl_deque.h ****       {
 8410              		.loc 3 2088 0
 8411              		.cfi_startproc
 8412 0000 55       		pushq	%rbp
 8413              		.cfi_def_cfa_offset 16
 8414              		.cfi_offset 6, -16
 8415 0001 4889E5   		movq	%rsp, %rbp
 8416              		.cfi_def_cfa_register 6
 8417 0004 4883EC30 		subq	$48, %rsp
 8418 0008 48897DE8 		movq	%rdi, -24(%rbp)
 8419 000c 488975E0 		movq	%rsi, -32(%rbp)
 8420 0010 488955D8 		movq	%rdx, -40(%rbp)
2088:/usr/include/c++/5/bits/stl_deque.h ****       {
 8421              		.loc 3 2088 0
 8422 0014 64488B04 		movq	%fs:40, %rax
 8422      25280000 
 8422      00
 8423 001d 488945F8 		movq	%rax, -8(%rbp)
 8424 0021 31C0     		xorl	%eax, %eax
2091:/usr/include/c++/5/bits/stl_deque.h **** 	if (__n > __vacancies)
 8425              		.loc 3 2091 0
 8426 0023 488B45E0 		movq	-32(%rbp), %rax
 8427 0027 488B4040 		movq	64(%rax), %rax
 8428 002b 4889C2   		movq	%rax, %rdx
 8429 002e 488B45E0 		movq	-32(%rbp), %rax
 8430 0032 488B4030 		movq	48(%rax), %rax
 8431 0036 4829C2   		subq	%rax, %rdx
 8432 0039 4889D0   		movq	%rdx, %rax
 8433 003c 4883E801 		subq	$1, %rax
 8434 0040 488945F0 		movq	%rax, -16(%rbp)
2092:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_new_elements_at_back(__n - __vacancies);
 8435              		.loc 3 2092 0
 8436 0044 488B45D8 		movq	-40(%rbp), %rax
 8437 0048 483B45F0 		cmpq	-16(%rbp), %rax
 8438 004c 761A     		jbe	.L448
2093:/usr/include/c++/5/bits/stl_deque.h **** 	return this->_M_impl._M_finish + difference_type(__n);
 8439              		.loc 3 2093 0
 8440 004e 488B45D8 		movq	-40(%rbp), %rax
 8441 0052 482B45F0 		subq	-16(%rbp), %rax
 8442 0056 4889C2   		movq	%rax, %rdx
 8443 0059 488B45E0 		movq	-32(%rbp), %rax
 8444 005d 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccX8BQhk.s 			page 444


 8445 0060 4889C7   		movq	%rax, %rdi
 8446 0063 E8000000 		call	_ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEm
 8446      00
 8447              	.L448:
2094:/usr/include/c++/5/bits/stl_deque.h ****       }
 8448              		.loc 3 2094 0
 8449 0068 488B55D8 		movq	-40(%rbp), %rdx
 8450 006c 488B45E0 		movq	-32(%rbp), %rax
 8451 0070 488D4830 		leaq	48(%rax), %rcx
 8452 0074 488B45E8 		movq	-24(%rbp), %rax
 8453 0078 4889CE   		movq	%rcx, %rsi
 8454 007b 4889C7   		movq	%rax, %rdi
 8455 007e E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEplEl
 8455      00
2095:/usr/include/c++/5/bits/stl_deque.h **** 
 8456              		.loc 3 2095 0
 8457 0083 488B45E8 		movq	-24(%rbp), %rax
 8458 0087 488B4DF8 		movq	-8(%rbp), %rcx
 8459 008b 6448330C 		xorq	%fs:40, %rcx
 8459      25280000 
 8459      00
 8460 0094 7405     		je	.L450
 8461 0096 E8000000 		call	__stack_chk_fail
 8461      00
 8462              	.L450:
 8463 009b C9       		leave
 8464              		.cfi_def_cfa 7, 8
 8465 009c C3       		ret
 8466              		.cfi_endproc
 8467              	.LFE10566:
 8469              		.section	.text._ZNSt5dequeIcSaIcEE13_M_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_m,"axG",@pr
 8470              		.align 2
 8471              		.weak	_ZNSt5dequeIcSaIcEE13_M_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_m
 8473              	_ZNSt5dequeIcSaIcEE13_M_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_m:
 8474              	.LFB10567:
 610:/usr/include/c++/5/bits/deque.tcc **** 
 611:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp, typename _Alloc>
 612:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
 613:/usr/include/c++/5/bits/deque.tcc ****     template<typename... _Args>
 614:/usr/include/c++/5/bits/deque.tcc ****       typename deque<_Tp, _Alloc>::iterator
 615:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 616:/usr/include/c++/5/bits/deque.tcc ****       _M_insert_aux(iterator __pos, _Args&&... __args)
 617:/usr/include/c++/5/bits/deque.tcc ****       {
 618:/usr/include/c++/5/bits/deque.tcc **** 	value_type __x_copy(std::forward<_Args>(__args)...); // XXX copy
 619:/usr/include/c++/5/bits/deque.tcc **** #else
 620:/usr/include/c++/5/bits/deque.tcc ****     typename deque<_Tp, _Alloc>::iterator
 621:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 622:/usr/include/c++/5/bits/deque.tcc ****       _M_insert_aux(iterator __pos, const value_type& __x)
 623:/usr/include/c++/5/bits/deque.tcc ****       {
 624:/usr/include/c++/5/bits/deque.tcc **** 	value_type __x_copy = __x; // XXX copy
 625:/usr/include/c++/5/bits/deque.tcc **** #endif
 626:/usr/include/c++/5/bits/deque.tcc **** 	difference_type __index = __pos - this->_M_impl._M_start;
 627:/usr/include/c++/5/bits/deque.tcc **** 	if (static_cast<size_type>(__index) < size() / 2)
 628:/usr/include/c++/5/bits/deque.tcc **** 	  {
 629:/usr/include/c++/5/bits/deque.tcc **** 	    push_front(_GLIBCXX_MOVE(front()));
 630:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __front1 = this->_M_impl._M_start;
 631:/usr/include/c++/5/bits/deque.tcc **** 	    ++__front1;
GAS LISTING /tmp/ccX8BQhk.s 			page 445


 632:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __front2 = __front1;
 633:/usr/include/c++/5/bits/deque.tcc **** 	    ++__front2;
 634:/usr/include/c++/5/bits/deque.tcc **** 	    __pos = this->_M_impl._M_start + __index;
 635:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __pos1 = __pos;
 636:/usr/include/c++/5/bits/deque.tcc **** 	    ++__pos1;
 637:/usr/include/c++/5/bits/deque.tcc **** 	    _GLIBCXX_MOVE3(__front2, __pos1, __front1);
 638:/usr/include/c++/5/bits/deque.tcc **** 	  }
 639:/usr/include/c++/5/bits/deque.tcc **** 	else
 640:/usr/include/c++/5/bits/deque.tcc **** 	  {
 641:/usr/include/c++/5/bits/deque.tcc **** 	    push_back(_GLIBCXX_MOVE(back()));
 642:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __back1 = this->_M_impl._M_finish;
 643:/usr/include/c++/5/bits/deque.tcc **** 	    --__back1;
 644:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __back2 = __back1;
 645:/usr/include/c++/5/bits/deque.tcc **** 	    --__back2;
 646:/usr/include/c++/5/bits/deque.tcc **** 	    __pos = this->_M_impl._M_start + __index;
 647:/usr/include/c++/5/bits/deque.tcc **** 	    _GLIBCXX_MOVE_BACKWARD3(__pos, __back2, __back1);
 648:/usr/include/c++/5/bits/deque.tcc **** 	  }
 649:/usr/include/c++/5/bits/deque.tcc **** 	*__pos = _GLIBCXX_MOVE(__x_copy);
 650:/usr/include/c++/5/bits/deque.tcc **** 	return __pos;
 651:/usr/include/c++/5/bits/deque.tcc ****       }
 652:/usr/include/c++/5/bits/deque.tcc **** 
 653:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 654:/usr/include/c++/5/bits/deque.tcc ****     void
 655:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 656:/usr/include/c++/5/bits/deque.tcc ****     _M_insert_aux(iterator __pos, size_type __n, const value_type& __x)
 657:/usr/include/c++/5/bits/deque.tcc ****     {
 658:/usr/include/c++/5/bits/deque.tcc ****       const difference_type __elems_before = __pos - this->_M_impl._M_start;
 659:/usr/include/c++/5/bits/deque.tcc ****       const size_type __length = this->size();
 660:/usr/include/c++/5/bits/deque.tcc ****       value_type __x_copy = __x;
 661:/usr/include/c++/5/bits/deque.tcc ****       if (__elems_before < difference_type(__length / 2))
 662:/usr/include/c++/5/bits/deque.tcc **** 	{
 663:/usr/include/c++/5/bits/deque.tcc **** 	  iterator __new_start = _M_reserve_elements_at_front(__n);
 664:/usr/include/c++/5/bits/deque.tcc **** 	  iterator __old_start = this->_M_impl._M_start;
 665:/usr/include/c++/5/bits/deque.tcc **** 	  __pos = this->_M_impl._M_start + __elems_before;
 666:/usr/include/c++/5/bits/deque.tcc **** 	  __try
 667:/usr/include/c++/5/bits/deque.tcc **** 	    {
 668:/usr/include/c++/5/bits/deque.tcc **** 	      if (__elems_before >= difference_type(__n))
 669:/usr/include/c++/5/bits/deque.tcc **** 		{
 670:/usr/include/c++/5/bits/deque.tcc **** 		  iterator __start_n = (this->_M_impl._M_start
 671:/usr/include/c++/5/bits/deque.tcc **** 					+ difference_type(__n));
 672:/usr/include/c++/5/bits/deque.tcc **** 		  std::__uninitialized_move_a(this->_M_impl._M_start,
 673:/usr/include/c++/5/bits/deque.tcc **** 					      __start_n, __new_start,
 674:/usr/include/c++/5/bits/deque.tcc **** 					      _M_get_Tp_allocator());
 675:/usr/include/c++/5/bits/deque.tcc **** 		  this->_M_impl._M_start = __new_start;
 676:/usr/include/c++/5/bits/deque.tcc **** 		  _GLIBCXX_MOVE3(__start_n, __pos, __old_start);
 677:/usr/include/c++/5/bits/deque.tcc **** 		  std::fill(__pos - difference_type(__n), __pos, __x_copy);
 678:/usr/include/c++/5/bits/deque.tcc **** 		}
 679:/usr/include/c++/5/bits/deque.tcc **** 	      else
 680:/usr/include/c++/5/bits/deque.tcc **** 		{
 681:/usr/include/c++/5/bits/deque.tcc **** 		  std::__uninitialized_move_fill(this->_M_impl._M_start,
 682:/usr/include/c++/5/bits/deque.tcc **** 						 __pos, __new_start,
 683:/usr/include/c++/5/bits/deque.tcc **** 						 this->_M_impl._M_start,
 684:/usr/include/c++/5/bits/deque.tcc **** 						 __x_copy,
 685:/usr/include/c++/5/bits/deque.tcc **** 						 _M_get_Tp_allocator());
 686:/usr/include/c++/5/bits/deque.tcc **** 		  this->_M_impl._M_start = __new_start;
 687:/usr/include/c++/5/bits/deque.tcc **** 		  std::fill(__old_start, __pos, __x_copy);
 688:/usr/include/c++/5/bits/deque.tcc **** 		}
GAS LISTING /tmp/ccX8BQhk.s 			page 446


 689:/usr/include/c++/5/bits/deque.tcc **** 	    }
 690:/usr/include/c++/5/bits/deque.tcc **** 	  __catch(...)
 691:/usr/include/c++/5/bits/deque.tcc **** 	    {
 692:/usr/include/c++/5/bits/deque.tcc **** 	      _M_destroy_nodes(__new_start._M_node,
 693:/usr/include/c++/5/bits/deque.tcc **** 			       this->_M_impl._M_start._M_node);
 694:/usr/include/c++/5/bits/deque.tcc **** 	      __throw_exception_again;
 695:/usr/include/c++/5/bits/deque.tcc **** 	    }
 696:/usr/include/c++/5/bits/deque.tcc **** 	}
 697:/usr/include/c++/5/bits/deque.tcc ****       else
 698:/usr/include/c++/5/bits/deque.tcc **** 	{
 699:/usr/include/c++/5/bits/deque.tcc **** 	  iterator __new_finish = _M_reserve_elements_at_back(__n);
 700:/usr/include/c++/5/bits/deque.tcc **** 	  iterator __old_finish = this->_M_impl._M_finish;
 701:/usr/include/c++/5/bits/deque.tcc **** 	  const difference_type __elems_after =
 702:/usr/include/c++/5/bits/deque.tcc **** 	    difference_type(__length) - __elems_before;
 703:/usr/include/c++/5/bits/deque.tcc **** 	  __pos = this->_M_impl._M_finish - __elems_after;
 704:/usr/include/c++/5/bits/deque.tcc **** 	  __try
 705:/usr/include/c++/5/bits/deque.tcc **** 	    {
 706:/usr/include/c++/5/bits/deque.tcc **** 	      if (__elems_after > difference_type(__n))
 707:/usr/include/c++/5/bits/deque.tcc **** 		{
 708:/usr/include/c++/5/bits/deque.tcc **** 		  iterator __finish_n = (this->_M_impl._M_finish
 709:/usr/include/c++/5/bits/deque.tcc **** 					 - difference_type(__n));
 710:/usr/include/c++/5/bits/deque.tcc **** 		  std::__uninitialized_move_a(__finish_n,
 711:/usr/include/c++/5/bits/deque.tcc **** 					      this->_M_impl._M_finish,
 712:/usr/include/c++/5/bits/deque.tcc **** 					      this->_M_impl._M_finish,
 713:/usr/include/c++/5/bits/deque.tcc **** 					      _M_get_Tp_allocator());
 714:/usr/include/c++/5/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 715:/usr/include/c++/5/bits/deque.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__pos, __finish_n, __old_finish);
 716:/usr/include/c++/5/bits/deque.tcc **** 		  std::fill(__pos, __pos + difference_type(__n), __x_copy);
 717:/usr/include/c++/5/bits/deque.tcc **** 		}
 718:/usr/include/c++/5/bits/deque.tcc **** 	      else
 719:/usr/include/c++/5/bits/deque.tcc **** 		{
 720:/usr/include/c++/5/bits/deque.tcc **** 		  std::__uninitialized_fill_move(this->_M_impl._M_finish,
 721:/usr/include/c++/5/bits/deque.tcc **** 						 __pos + difference_type(__n),
 722:/usr/include/c++/5/bits/deque.tcc **** 						 __x_copy, __pos,
 723:/usr/include/c++/5/bits/deque.tcc **** 						 this->_M_impl._M_finish,
 724:/usr/include/c++/5/bits/deque.tcc **** 						 _M_get_Tp_allocator());
 725:/usr/include/c++/5/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 726:/usr/include/c++/5/bits/deque.tcc **** 		  std::fill(__pos, __old_finish, __x_copy);
 727:/usr/include/c++/5/bits/deque.tcc **** 		}
 728:/usr/include/c++/5/bits/deque.tcc **** 	    }
 729:/usr/include/c++/5/bits/deque.tcc **** 	  __catch(...)
 730:/usr/include/c++/5/bits/deque.tcc **** 	    {
 731:/usr/include/c++/5/bits/deque.tcc **** 	      _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 732:/usr/include/c++/5/bits/deque.tcc **** 			       __new_finish._M_node + 1);
 733:/usr/include/c++/5/bits/deque.tcc **** 	      __throw_exception_again;
 734:/usr/include/c++/5/bits/deque.tcc **** 	    }
 735:/usr/include/c++/5/bits/deque.tcc **** 	}
 736:/usr/include/c++/5/bits/deque.tcc ****     }
 737:/usr/include/c++/5/bits/deque.tcc **** 
 738:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 739:/usr/include/c++/5/bits/deque.tcc ****     template <typename _ForwardIterator>
 740:/usr/include/c++/5/bits/deque.tcc ****       void
 741:/usr/include/c++/5/bits/deque.tcc ****       deque<_Tp, _Alloc>::
 8475              		.loc 36 741 0
 8476              		.cfi_startproc
 8477              		.cfi_personality 0x3,__gxx_personality_v0
 8478              		.cfi_lsda 0x3,.LLSDA10567
GAS LISTING /tmp/ccX8BQhk.s 			page 447


 8479 0000 55       		pushq	%rbp
 8480              		.cfi_def_cfa_offset 16
 8481              		.cfi_offset 6, -16
 8482 0001 4889E5   		movq	%rsp, %rbp
 8483              		.cfi_def_cfa_register 6
 8484 0004 4154     		pushq	%r12
 8485 0006 53       		pushq	%rbx
 8486 0007 4881EC40 		subq	$320, %rsp
 8486      010000
 8487              		.cfi_offset 12, -24
 8488              		.cfi_offset 3, -32
 8489 000e 4889BDF8 		movq	%rdi, -264(%rbp)
 8489      FEFFFF
 8490 0015 4889B5F0 		movq	%rsi, -272(%rbp)
 8490      FEFFFF
 8491 001c 488995E8 		movq	%rdx, -280(%rbp)
 8491      FEFFFF
 8492 0023 48898DE0 		movq	%rcx, -288(%rbp)
 8492      FEFFFF
 8493 002a 4C8985D8 		movq	%r8, -296(%rbp)
 8493      FEFFFF
 8494              		.loc 36 741 0
 8495 0031 64488B04 		movq	%fs:40, %rax
 8495      25280000 
 8495      00
 8496 003a 488945E8 		movq	%rax, -24(%rbp)
 8497 003e 31C0     		xorl	%eax, %eax
 742:/usr/include/c++/5/bits/deque.tcc ****       _M_insert_aux(iterator __pos,
 743:/usr/include/c++/5/bits/deque.tcc ****                     _ForwardIterator __first, _ForwardIterator __last,
 744:/usr/include/c++/5/bits/deque.tcc ****                     size_type __n)
 745:/usr/include/c++/5/bits/deque.tcc ****       {
 746:/usr/include/c++/5/bits/deque.tcc ****         const difference_type __elemsbefore = __pos - this->_M_impl._M_start;
 8498              		.loc 36 746 0
 8499 0040 488B85F8 		movq	-264(%rbp), %rax
 8499      FEFFFF
 8500 0047 488D5010 		leaq	16(%rax), %rdx
 8501 004b 488B85F0 		movq	-272(%rbp), %rax
 8501      FEFFFF
 8502 0052 4889D6   		movq	%rdx, %rsi
 8503 0055 4889C7   		movq	%rax, %rdi
 8504 0058 E8000000 		call	_ZStmiIcRcPcENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_
 8504      00
 8505 005d 48898508 		movq	%rax, -248(%rbp)
 8505      FFFFFF
 747:/usr/include/c++/5/bits/deque.tcc ****         const size_type __length = size();
 8506              		.loc 36 747 0
 8507 0064 488B85F8 		movq	-264(%rbp), %rax
 8507      FEFFFF
 8508 006b 4889C7   		movq	%rax, %rdi
 8509 006e E8000000 		call	_ZNKSt5dequeIcSaIcEE4sizeEv
 8509      00
 8510 0073 48898510 		movq	%rax, -240(%rbp)
 8510      FFFFFF
 8511              	.LBB59:
 748:/usr/include/c++/5/bits/deque.tcc ****         if (static_cast<size_type>(__elemsbefore) < __length / 2)
 8512              		.loc 36 748 0
 8513 007a 488B8510 		movq	-240(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 448


 8513      FFFFFF
 8514 0081 48D1E8   		shrq	%rax
 8515 0084 4889C2   		movq	%rax, %rdx
 8516 0087 488B8508 		movq	-248(%rbp), %rax
 8516      FFFFFF
 8517 008e 4839C2   		cmpq	%rax, %rdx
 8518 0091 0F863603 		jbe	.L452
 8518      0000
 8519              	.LBB60:
 749:/usr/include/c++/5/bits/deque.tcc **** 	  {
 750:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __new_start = _M_reserve_elements_at_front(__n);
 8520              		.loc 36 750 0
 8521 0097 488D8520 		leaq	-224(%rbp), %rax
 8521      FFFFFF
 8522 009e 488B95D8 		movq	-296(%rbp), %rdx
 8522      FEFFFF
 8523 00a5 488B8DF8 		movq	-264(%rbp), %rcx
 8523      FEFFFF
 8524 00ac 4889CE   		movq	%rcx, %rsi
 8525 00af 4889C7   		movq	%rax, %rdi
 8526              	.LEHB49:
 8527 00b2 E8000000 		call	_ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEm
 8527      00
 8528              	.LEHE49:
 751:/usr/include/c++/5/bits/deque.tcc **** 	    iterator __old_start = this->_M_impl._M_start;
 8529              		.loc 36 751 0
 8530 00b7 488B85F8 		movq	-264(%rbp), %rax
 8530      FEFFFF
 8531 00be 488D5010 		leaq	16(%rax), %rdx
 8532 00c2 488D8540 		leaq	-192(%rbp), %rax
 8532      FFFFFF
 8533 00c9 4889D6   		movq	%rdx, %rsi
 8534 00cc 4889C7   		movq	%rax, %rdi
 8535 00cf E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8535      00
 752:/usr/include/c++/5/bits/deque.tcc **** 	    __pos = this->_M_impl._M_start + __elemsbefore;
 8536              		.loc 36 752 0
 8537 00d4 488B85F8 		movq	-264(%rbp), %rax
 8537      FEFFFF
 8538 00db 488D4810 		leaq	16(%rax), %rcx
 8539 00df 488D45C0 		leaq	-64(%rbp), %rax
 8540 00e3 488B9508 		movq	-248(%rbp), %rdx
 8540      FFFFFF
 8541 00ea 4889CE   		movq	%rcx, %rsi
 8542 00ed 4889C7   		movq	%rax, %rdi
 8543 00f0 E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEplEl
 8543      00
 8544 00f5 488B85F0 		movq	-272(%rbp), %rax
 8544      FEFFFF
 8545 00fc 488B55C0 		movq	-64(%rbp), %rdx
 8546 0100 488910   		movq	%rdx, (%rax)
 8547 0103 488B55C8 		movq	-56(%rbp), %rdx
 8548 0107 48895008 		movq	%rdx, 8(%rax)
 8549 010b 488B55D0 		movq	-48(%rbp), %rdx
 8550 010f 48895010 		movq	%rdx, 16(%rax)
 8551 0113 488B55D8 		movq	-40(%rbp), %rdx
 8552 0117 48895018 		movq	%rdx, 24(%rax)
GAS LISTING /tmp/ccX8BQhk.s 			page 449


 8553              	.LBB61:
 8554              	.LBB62:
 753:/usr/include/c++/5/bits/deque.tcc **** 	    __try
 754:/usr/include/c++/5/bits/deque.tcc **** 	      {
 755:/usr/include/c++/5/bits/deque.tcc **** 		if (__elemsbefore >= difference_type(__n))
 8555              		.loc 36 755 0
 8556 011b 488B85D8 		movq	-296(%rbp), %rax
 8556      FEFFFF
 8557 0122 48398508 		cmpq	%rax, -248(%rbp)
 8557      FFFFFF
 8558 0129 0F8C6D01 		jl	.L453
 8558      0000
 8559              	.LBB63:
 756:/usr/include/c++/5/bits/deque.tcc **** 		  {
 757:/usr/include/c++/5/bits/deque.tcc **** 		    iterator __start_n = (this->_M_impl._M_start
 758:/usr/include/c++/5/bits/deque.tcc **** 					  + difference_type(__n));
 8560              		.loc 36 758 0
 8561 012f 488B95D8 		movq	-296(%rbp), %rdx
 8561      FEFFFF
 8562 0136 488B85F8 		movq	-264(%rbp), %rax
 8562      FEFFFF
 8563 013d 488D4810 		leaq	16(%rax), %rcx
 8564 0141 488D8560 		leaq	-160(%rbp), %rax
 8564      FFFFFF
 8565 0148 4889CE   		movq	%rcx, %rsi
 8566 014b 4889C7   		movq	%rax, %rdi
 8567 014e E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEplEl
 8567      00
 759:/usr/include/c++/5/bits/deque.tcc **** 		    std::__uninitialized_move_a(this->_M_impl._M_start,
 760:/usr/include/c++/5/bits/deque.tcc **** 						__start_n, __new_start,
 761:/usr/include/c++/5/bits/deque.tcc **** 						_M_get_Tp_allocator());
 8568              		.loc 36 761 0
 8569 0153 488B85F8 		movq	-264(%rbp), %rax
 8569      FEFFFF
 8570 015a 4889C7   		movq	%rax, %rdi
 8571 015d E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 8571      00
 8572 0162 4889C3   		movq	%rax, %rbx
 759:/usr/include/c++/5/bits/deque.tcc **** 		    std::__uninitialized_move_a(this->_M_impl._M_start,
 8573              		.loc 36 759 0
 8574 0165 488D9520 		leaq	-224(%rbp), %rdx
 8574      FFFFFF
 8575 016c 488D45C0 		leaq	-64(%rbp), %rax
 8576 0170 4889D6   		movq	%rdx, %rsi
 8577 0173 4889C7   		movq	%rax, %rdi
 8578 0176 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8578      00
 8579 017b 488D9560 		leaq	-160(%rbp), %rdx
 8579      FFFFFF
 8580 0182 488D45A0 		leaq	-96(%rbp), %rax
 8581 0186 4889D6   		movq	%rdx, %rsi
 8582 0189 4889C7   		movq	%rax, %rdi
 8583 018c E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8583      00
 8584 0191 488B85F8 		movq	-264(%rbp), %rax
 8584      FEFFFF
 8585 0198 488D5010 		leaq	16(%rax), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 450


 8586 019c 488D4580 		leaq	-128(%rbp), %rax
 8587 01a0 4889D6   		movq	%rdx, %rsi
 8588 01a3 4889C7   		movq	%rax, %rdi
 8589 01a6 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8589      00
 8590 01ab 488D85B0 		leaq	-336(%rbp), %rax
 8590      FEFFFF
 8591 01b2 488D4DC0 		leaq	-64(%rbp), %rcx
 8592 01b6 488D55A0 		leaq	-96(%rbp), %rdx
 8593 01ba 488D7580 		leaq	-128(%rbp), %rsi
 8594 01be 4989D8   		movq	%rbx, %r8
 8595 01c1 4889C7   		movq	%rax, %rdi
 8596              	.LEHB50:
 8597 01c4 E8000000 		call	_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_
 8597      00
 762:/usr/include/c++/5/bits/deque.tcc **** 		    this->_M_impl._M_start = __new_start;
 8598              		.loc 36 762 0 discriminator 2
 8599 01c9 488B85F8 		movq	-264(%rbp), %rax
 8599      FEFFFF
 8600 01d0 488B9520 		movq	-224(%rbp), %rdx
 8600      FFFFFF
 8601 01d7 48895010 		movq	%rdx, 16(%rax)
 8602 01db 488B9528 		movq	-216(%rbp), %rdx
 8602      FFFFFF
 8603 01e2 48895018 		movq	%rdx, 24(%rax)
 8604 01e6 488B9530 		movq	-208(%rbp), %rdx
 8604      FFFFFF
 8605 01ed 48895020 		movq	%rdx, 32(%rax)
 8606 01f1 488B9538 		movq	-200(%rbp), %rdx
 8606      FFFFFF
 8607 01f8 48895028 		movq	%rdx, 40(%rax)
 763:/usr/include/c++/5/bits/deque.tcc **** 		    _GLIBCXX_MOVE3(__start_n, __pos, __old_start);
 8608              		.loc 36 763 0 discriminator 2
 8609 01fc 488D9540 		leaq	-192(%rbp), %rdx
 8609      FFFFFF
 8610 0203 488D45C0 		leaq	-64(%rbp), %rax
 8611 0207 4889D6   		movq	%rdx, %rsi
 8612 020a 4889C7   		movq	%rax, %rdi
 8613 020d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8613      00
 8614 0212 488B95F0 		movq	-272(%rbp), %rdx
 8614      FEFFFF
 8615 0219 488D45A0 		leaq	-96(%rbp), %rax
 8616 021d 4889D6   		movq	%rdx, %rsi
 8617 0220 4889C7   		movq	%rax, %rdi
 8618 0223 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8618      00
 8619 0228 488D9560 		leaq	-160(%rbp), %rdx
 8619      FFFFFF
 8620 022f 488D4580 		leaq	-128(%rbp), %rax
 8621 0233 4889D6   		movq	%rdx, %rsi
 8622 0236 4889C7   		movq	%rax, %rdi
 8623 0239 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8623      00
 8624 023e 488D85B0 		leaq	-336(%rbp), %rax
 8624      FEFFFF
 8625 0245 488D4DC0 		leaq	-64(%rbp), %rcx
GAS LISTING /tmp/ccX8BQhk.s 			page 451


 8626 0249 488D55A0 		leaq	-96(%rbp), %rdx
 8627 024d 488D7580 		leaq	-128(%rbp), %rsi
 8628 0251 4889C7   		movq	%rax, %rdi
 8629 0254 E8000000 		call	_ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_
 8629      00
 764:/usr/include/c++/5/bits/deque.tcc **** 		    std::copy(__first, __last, __pos - difference_type(__n));
 8630              		.loc 36 764 0 discriminator 2
 8631 0259 488B95D8 		movq	-296(%rbp), %rdx
 8631      FEFFFF
 8632 0260 488D45C0 		leaq	-64(%rbp), %rax
 8633 0264 488B8DF0 		movq	-272(%rbp), %rcx
 8633      FEFFFF
 8634 026b 4889CE   		movq	%rcx, %rsi
 8635 026e 4889C7   		movq	%rax, %rdi
 8636 0271 E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEmiEl
 8636      00
 8637 0276 488D85B0 		leaq	-336(%rbp), %rax
 8637      FEFFFF
 8638 027d 488D4DC0 		leaq	-64(%rbp), %rcx
 8639 0281 488B95E0 		movq	-288(%rbp), %rdx
 8639      FEFFFF
 8640 0288 488BB5E8 		movq	-280(%rbp), %rsi
 8640      FEFFFF
 8641 028f 4889C7   		movq	%rax, %rdi
 8642 0292 E8000000 		call	_ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
 8642      00
 8643              	.LBE63:
 8644              	.LBE62:
 8645              	.LBE61:
 8646              	.LBE60:
 8647              	.LBE59:
 765:/usr/include/c++/5/bits/deque.tcc **** 		  }
 766:/usr/include/c++/5/bits/deque.tcc **** 		else
 767:/usr/include/c++/5/bits/deque.tcc **** 		  {
 768:/usr/include/c++/5/bits/deque.tcc **** 		    _ForwardIterator __mid = __first;
 769:/usr/include/c++/5/bits/deque.tcc **** 		    std::advance(__mid, difference_type(__n) - __elemsbefore);
 770:/usr/include/c++/5/bits/deque.tcc **** 		    std::__uninitialized_move_copy(this->_M_impl._M_start,
 771:/usr/include/c++/5/bits/deque.tcc **** 						   __pos, __first, __mid,
 772:/usr/include/c++/5/bits/deque.tcc **** 						   __new_start,
 773:/usr/include/c++/5/bits/deque.tcc **** 						   _M_get_Tp_allocator());
 774:/usr/include/c++/5/bits/deque.tcc **** 		    this->_M_impl._M_start = __new_start;
 775:/usr/include/c++/5/bits/deque.tcc **** 		    std::copy(__mid, __last, __old_start);
 776:/usr/include/c++/5/bits/deque.tcc **** 		  }
 777:/usr/include/c++/5/bits/deque.tcc **** 	      }
 778:/usr/include/c++/5/bits/deque.tcc **** 	    __catch(...)
 779:/usr/include/c++/5/bits/deque.tcc **** 	      {
 780:/usr/include/c++/5/bits/deque.tcc **** 		_M_destroy_nodes(__new_start._M_node,
 781:/usr/include/c++/5/bits/deque.tcc **** 				 this->_M_impl._M_start._M_node);
 782:/usr/include/c++/5/bits/deque.tcc **** 		__throw_exception_again;
 783:/usr/include/c++/5/bits/deque.tcc **** 	      }
 784:/usr/include/c++/5/bits/deque.tcc **** 	  }
 785:/usr/include/c++/5/bits/deque.tcc ****         else
 786:/usr/include/c++/5/bits/deque.tcc ****         {
 787:/usr/include/c++/5/bits/deque.tcc ****           iterator __new_finish = _M_reserve_elements_at_back(__n);
 788:/usr/include/c++/5/bits/deque.tcc ****           iterator __old_finish = this->_M_impl._M_finish;
 789:/usr/include/c++/5/bits/deque.tcc ****           const difference_type __elemsafter =
 790:/usr/include/c++/5/bits/deque.tcc ****             difference_type(__length) - __elemsbefore;
GAS LISTING /tmp/ccX8BQhk.s 			page 452


 791:/usr/include/c++/5/bits/deque.tcc ****           __pos = this->_M_impl._M_finish - __elemsafter;
 792:/usr/include/c++/5/bits/deque.tcc ****           __try
 793:/usr/include/c++/5/bits/deque.tcc ****             {
 794:/usr/include/c++/5/bits/deque.tcc ****               if (__elemsafter > difference_type(__n))
 795:/usr/include/c++/5/bits/deque.tcc **** 		{
 796:/usr/include/c++/5/bits/deque.tcc **** 		  iterator __finish_n = (this->_M_impl._M_finish
 797:/usr/include/c++/5/bits/deque.tcc **** 					 - difference_type(__n));
 798:/usr/include/c++/5/bits/deque.tcc **** 		  std::__uninitialized_move_a(__finish_n,
 799:/usr/include/c++/5/bits/deque.tcc **** 					      this->_M_impl._M_finish,
 800:/usr/include/c++/5/bits/deque.tcc **** 					      this->_M_impl._M_finish,
 801:/usr/include/c++/5/bits/deque.tcc **** 					      _M_get_Tp_allocator());
 802:/usr/include/c++/5/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 803:/usr/include/c++/5/bits/deque.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__pos, __finish_n, __old_finish);
 804:/usr/include/c++/5/bits/deque.tcc **** 		  std::copy(__first, __last, __pos);
 805:/usr/include/c++/5/bits/deque.tcc **** 		}
 806:/usr/include/c++/5/bits/deque.tcc ****               else
 807:/usr/include/c++/5/bits/deque.tcc **** 		{
 808:/usr/include/c++/5/bits/deque.tcc **** 		  _ForwardIterator __mid = __first;
 809:/usr/include/c++/5/bits/deque.tcc **** 		  std::advance(__mid, __elemsafter);
 810:/usr/include/c++/5/bits/deque.tcc **** 		  std::__uninitialized_copy_move(__mid, __last, __pos,
 811:/usr/include/c++/5/bits/deque.tcc **** 						 this->_M_impl._M_finish,
 812:/usr/include/c++/5/bits/deque.tcc **** 						 this->_M_impl._M_finish,
 813:/usr/include/c++/5/bits/deque.tcc **** 						 _M_get_Tp_allocator());
 814:/usr/include/c++/5/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 815:/usr/include/c++/5/bits/deque.tcc **** 		  std::copy(__first, __mid, __pos);
 816:/usr/include/c++/5/bits/deque.tcc **** 		}
 817:/usr/include/c++/5/bits/deque.tcc ****             }
 818:/usr/include/c++/5/bits/deque.tcc ****           __catch(...)
 819:/usr/include/c++/5/bits/deque.tcc ****             {
 820:/usr/include/c++/5/bits/deque.tcc ****               _M_destroy_nodes(this->_M_impl._M_finish._M_node + 1,
 821:/usr/include/c++/5/bits/deque.tcc **** 			       __new_finish._M_node + 1);
 822:/usr/include/c++/5/bits/deque.tcc ****               __throw_exception_again;
 823:/usr/include/c++/5/bits/deque.tcc ****             }
 824:/usr/include/c++/5/bits/deque.tcc ****         }
 825:/usr/include/c++/5/bits/deque.tcc ****       }
 8648              		.loc 36 825 0
 8649 0297 E9020500 		jmp	.L451
 8649      00
 8650              	.L453:
 8651              	.LBB78:
 8652              	.LBB67:
 8653              	.LBB66:
 8654              	.LBB65:
 8655              	.LBB64:
 768:/usr/include/c++/5/bits/deque.tcc **** 		    std::advance(__mid, difference_type(__n) - __elemsbefore);
 8656              		.loc 36 768 0
 8657 029c 488B85E8 		movq	-280(%rbp), %rax
 8657      FEFFFF
 8658 02a3 48898560 		movq	%rax, -160(%rbp)
 8658      FFFFFF
 769:/usr/include/c++/5/bits/deque.tcc **** 		    std::__uninitialized_move_copy(this->_M_impl._M_start,
 8659              		.loc 36 769 0
 8660 02aa 488B85D8 		movq	-296(%rbp), %rax
 8660      FEFFFF
 8661 02b1 482B8508 		subq	-248(%rbp), %rax
 8661      FFFFFF
 8662 02b8 4889C2   		movq	%rax, %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 453


 8663 02bb 488D8560 		leaq	-160(%rbp), %rax
 8663      FFFFFF
 8664 02c2 4889D6   		movq	%rdx, %rsi
 8665 02c5 4889C7   		movq	%rax, %rdi
 8666 02c8 E8000000 		call	_ZSt7advanceIPKclEvRT_T0_
 8666      00
 773:/usr/include/c++/5/bits/deque.tcc **** 		    this->_M_impl._M_start = __new_start;
 8667              		.loc 36 773 0
 8668 02cd 488B85F8 		movq	-264(%rbp), %rax
 8668      FEFFFF
 8669 02d4 4889C7   		movq	%rax, %rdi
 8670 02d7 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 8670      00
 8671 02dc 4989C4   		movq	%rax, %r12
 770:/usr/include/c++/5/bits/deque.tcc **** 						   __pos, __first, __mid,
 8672              		.loc 36 770 0
 8673 02df 488D9520 		leaq	-224(%rbp), %rdx
 8673      FFFFFF
 8674 02e6 488D45C0 		leaq	-64(%rbp), %rax
 8675 02ea 4889D6   		movq	%rdx, %rsi
 8676 02ed 4889C7   		movq	%rax, %rdi
 8677 02f0 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8677      00
 8678 02f5 488B9D60 		movq	-160(%rbp), %rbx
 8678      FFFFFF
 8679 02fc 488B95F0 		movq	-272(%rbp), %rdx
 8679      FEFFFF
 8680 0303 488D45A0 		leaq	-96(%rbp), %rax
 8681 0307 4889D6   		movq	%rdx, %rsi
 8682 030a 4889C7   		movq	%rax, %rdi
 8683 030d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8683      00
 8684 0312 488B85F8 		movq	-264(%rbp), %rax
 8684      FEFFFF
 8685 0319 488D5010 		leaq	16(%rax), %rdx
 8686 031d 488D4580 		leaq	-128(%rbp), %rax
 8687 0321 4889D6   		movq	%rdx, %rsi
 8688 0324 4889C7   		movq	%rax, %rdi
 8689 0327 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8689      00
 8690 032c 488D85B0 		leaq	-336(%rbp), %rax
 8690      FEFFFF
 8691 0333 488D7DC0 		leaq	-64(%rbp), %rdi
 8692 0337 488B8DE8 		movq	-280(%rbp), %rcx
 8692      FEFFFF
 8693 033e 488D55A0 		leaq	-96(%rbp), %rdx
 8694 0342 488D7580 		leaq	-128(%rbp), %rsi
 8695 0346 4883EC08 		subq	$8, %rsp
 8696 034a 4154     		pushq	%r12
 8697 034c 4989F9   		movq	%rdi, %r9
 8698 034f 4989D8   		movq	%rbx, %r8
 8699 0352 4889C7   		movq	%rax, %rdi
 8700              		.cfi_escape 0x2e,0x10
 8701 0355 E8000000 		call	_ZSt25__uninitialized_move_copyISt15_Deque_iteratorIcRcPcEPKcS3_SaIcEET1_T_S8_T0_S9_S7_RT2_
 8701      00
 8702 035a 4883C410 		addq	$16, %rsp
 774:/usr/include/c++/5/bits/deque.tcc **** 		    std::copy(__mid, __last, __old_start);
GAS LISTING /tmp/ccX8BQhk.s 			page 454


 8703              		.loc 36 774 0
 8704 035e 488B85F8 		movq	-264(%rbp), %rax
 8704      FEFFFF
 8705 0365 488B9520 		movq	-224(%rbp), %rdx
 8705      FFFFFF
 8706 036c 48895010 		movq	%rdx, 16(%rax)
 8707 0370 488B9528 		movq	-216(%rbp), %rdx
 8707      FFFFFF
 8708 0377 48895018 		movq	%rdx, 24(%rax)
 8709 037b 488B9530 		movq	-208(%rbp), %rdx
 8709      FFFFFF
 8710 0382 48895020 		movq	%rdx, 32(%rax)
 8711 0386 488B9538 		movq	-200(%rbp), %rdx
 8711      FFFFFF
 8712 038d 48895028 		movq	%rdx, 40(%rax)
 775:/usr/include/c++/5/bits/deque.tcc **** 		  }
 8713              		.loc 36 775 0
 8714 0391 488D9540 		leaq	-192(%rbp), %rdx
 8714      FFFFFF
 8715 0398 488D45C0 		leaq	-64(%rbp), %rax
 8716 039c 4889D6   		movq	%rdx, %rsi
 8717 039f 4889C7   		movq	%rax, %rdi
 8718 03a2 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8718      00
 8719 03a7 488BB560 		movq	-160(%rbp), %rsi
 8719      FFFFFF
 8720 03ae 488D85B0 		leaq	-336(%rbp), %rax
 8720      FEFFFF
 8721 03b5 488D4DC0 		leaq	-64(%rbp), %rcx
 8722 03b9 488B95E0 		movq	-288(%rbp), %rdx
 8722      FEFFFF
 8723 03c0 4889C7   		movq	%rax, %rdi
 8724              		.cfi_escape 0x2e,0
 8725 03c3 E8000000 		call	_ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
 8725      00
 8726              	.LEHE50:
 8727              	.LBE64:
 8728              	.LBE65:
 8729              	.LBE66:
 8730              	.LBE67:
 8731              	.LBE78:
 8732              		.loc 36 825 0
 8733 03c8 E9D10300 		jmp	.L451
 8733      00
 8734              	.L452:
 8735              	.LBB79:
 8736              	.LBB68:
 787:/usr/include/c++/5/bits/deque.tcc ****           iterator __old_finish = this->_M_impl._M_finish;
 8737              		.loc 36 787 0
 8738 03cd 488D8520 		leaq	-224(%rbp), %rax
 8738      FFFFFF
 8739 03d4 488B95D8 		movq	-296(%rbp), %rdx
 8739      FEFFFF
 8740 03db 488B8DF8 		movq	-264(%rbp), %rcx
 8740      FEFFFF
 8741 03e2 4889CE   		movq	%rcx, %rsi
 8742 03e5 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 455


 8743              	.LEHB51:
 8744 03e8 E8000000 		call	_ZNSt5dequeIcSaIcEE27_M_reserve_elements_at_backEm
 8744      00
 8745              	.LEHE51:
 788:/usr/include/c++/5/bits/deque.tcc ****           const difference_type __elemsafter =
 8746              		.loc 36 788 0
 8747 03ed 488B85F8 		movq	-264(%rbp), %rax
 8747      FEFFFF
 8748 03f4 488D5030 		leaq	48(%rax), %rdx
 8749 03f8 488D8540 		leaq	-192(%rbp), %rax
 8749      FFFFFF
 8750 03ff 4889D6   		movq	%rdx, %rsi
 8751 0402 4889C7   		movq	%rax, %rdi
 8752 0405 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8752      00
 790:/usr/include/c++/5/bits/deque.tcc ****           __pos = this->_M_impl._M_finish - __elemsafter;
 8753              		.loc 36 790 0
 8754 040a 488B8510 		movq	-240(%rbp), %rax
 8754      FFFFFF
 8755 0411 482B8508 		subq	-248(%rbp), %rax
 8755      FFFFFF
 8756 0418 48898518 		movq	%rax, -232(%rbp)
 8756      FFFFFF
 791:/usr/include/c++/5/bits/deque.tcc ****           __try
 8757              		.loc 36 791 0
 8758 041f 488B85F8 		movq	-264(%rbp), %rax
 8758      FEFFFF
 8759 0426 488D4830 		leaq	48(%rax), %rcx
 8760 042a 488D45C0 		leaq	-64(%rbp), %rax
 8761 042e 488B9518 		movq	-232(%rbp), %rdx
 8761      FFFFFF
 8762 0435 4889CE   		movq	%rcx, %rsi
 8763 0438 4889C7   		movq	%rax, %rdi
 8764 043b E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEmiEl
 8764      00
 8765 0440 488B85F0 		movq	-272(%rbp), %rax
 8765      FEFFFF
 8766 0447 488B55C0 		movq	-64(%rbp), %rdx
 8767 044b 488910   		movq	%rdx, (%rax)
 8768 044e 488B55C8 		movq	-56(%rbp), %rdx
 8769 0452 48895008 		movq	%rdx, 8(%rax)
 8770 0456 488B55D0 		movq	-48(%rbp), %rdx
 8771 045a 48895010 		movq	%rdx, 16(%rax)
 8772 045e 488B55D8 		movq	-40(%rbp), %rdx
 8773 0462 48895018 		movq	%rdx, 24(%rax)
 8774              	.LBB69:
 8775              	.LBB70:
 794:/usr/include/c++/5/bits/deque.tcc **** 		{
 8776              		.loc 36 794 0
 8777 0466 488B85D8 		movq	-296(%rbp), %rax
 8777      FEFFFF
 8778 046d 48398518 		cmpq	%rax, -232(%rbp)
 8778      FFFFFF
 8779 0474 0F8E6A01 		jle	.L456
 8779      0000
 8780              	.LBB71:
 797:/usr/include/c++/5/bits/deque.tcc **** 		  std::__uninitialized_move_a(__finish_n,
GAS LISTING /tmp/ccX8BQhk.s 			page 456


 8781              		.loc 36 797 0
 8782 047a 488B95D8 		movq	-296(%rbp), %rdx
 8782      FEFFFF
 8783 0481 488B85F8 		movq	-264(%rbp), %rax
 8783      FEFFFF
 8784 0488 488D4830 		leaq	48(%rax), %rcx
 8785 048c 488D8560 		leaq	-160(%rbp), %rax
 8785      FFFFFF
 8786 0493 4889CE   		movq	%rcx, %rsi
 8787 0496 4889C7   		movq	%rax, %rdi
 8788 0499 E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEmiEl
 8788      00
 801:/usr/include/c++/5/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 8789              		.loc 36 801 0
 8790 049e 488B85F8 		movq	-264(%rbp), %rax
 8790      FEFFFF
 8791 04a5 4889C7   		movq	%rax, %rdi
 8792 04a8 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 8792      00
 8793 04ad 4889C3   		movq	%rax, %rbx
 798:/usr/include/c++/5/bits/deque.tcc **** 					      this->_M_impl._M_finish,
 8794              		.loc 36 798 0
 8795 04b0 488B85F8 		movq	-264(%rbp), %rax
 8795      FEFFFF
 8796 04b7 488D5030 		leaq	48(%rax), %rdx
 8797 04bb 488D45C0 		leaq	-64(%rbp), %rax
 8798 04bf 4889D6   		movq	%rdx, %rsi
 8799 04c2 4889C7   		movq	%rax, %rdi
 8800 04c5 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8800      00
 8801 04ca 488B85F8 		movq	-264(%rbp), %rax
 8801      FEFFFF
 8802 04d1 488D5030 		leaq	48(%rax), %rdx
 8803 04d5 488D45A0 		leaq	-96(%rbp), %rax
 8804 04d9 4889D6   		movq	%rdx, %rsi
 8805 04dc 4889C7   		movq	%rax, %rdi
 8806 04df E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8806      00
 8807 04e4 488D9560 		leaq	-160(%rbp), %rdx
 8807      FFFFFF
 8808 04eb 488D4580 		leaq	-128(%rbp), %rax
 8809 04ef 4889D6   		movq	%rdx, %rsi
 8810 04f2 4889C7   		movq	%rax, %rdi
 8811 04f5 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8811      00
 8812 04fa 488D85B0 		leaq	-336(%rbp), %rax
 8812      FEFFFF
 8813 0501 488D4DC0 		leaq	-64(%rbp), %rcx
 8814 0505 488D55A0 		leaq	-96(%rbp), %rdx
 8815 0509 488D7580 		leaq	-128(%rbp), %rsi
 8816 050d 4989D8   		movq	%rbx, %r8
 8817 0510 4889C7   		movq	%rax, %rdi
 8818              	.LEHB52:
 8819 0513 E8000000 		call	_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_
 8819      00
 802:/usr/include/c++/5/bits/deque.tcc **** 		  _GLIBCXX_MOVE_BACKWARD3(__pos, __finish_n, __old_finish);
 8820              		.loc 36 802 0 discriminator 2
GAS LISTING /tmp/ccX8BQhk.s 			page 457


 8821 0518 488B85F8 		movq	-264(%rbp), %rax
 8821      FEFFFF
 8822 051f 488B9520 		movq	-224(%rbp), %rdx
 8822      FFFFFF
 8823 0526 48895030 		movq	%rdx, 48(%rax)
 8824 052a 488B9528 		movq	-216(%rbp), %rdx
 8824      FFFFFF
 8825 0531 48895038 		movq	%rdx, 56(%rax)
 8826 0535 488B9530 		movq	-208(%rbp), %rdx
 8826      FFFFFF
 8827 053c 48895040 		movq	%rdx, 64(%rax)
 8828 0540 488B9538 		movq	-200(%rbp), %rdx
 8828      FFFFFF
 8829 0547 48895048 		movq	%rdx, 72(%rax)
 803:/usr/include/c++/5/bits/deque.tcc **** 		  std::copy(__first, __last, __pos);
 8830              		.loc 36 803 0 discriminator 2
 8831 054b 488D9540 		leaq	-192(%rbp), %rdx
 8831      FFFFFF
 8832 0552 488D45C0 		leaq	-64(%rbp), %rax
 8833 0556 4889D6   		movq	%rdx, %rsi
 8834 0559 4889C7   		movq	%rax, %rdi
 8835 055c E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8835      00
 8836 0561 488D9560 		leaq	-160(%rbp), %rdx
 8836      FFFFFF
 8837 0568 488D45A0 		leaq	-96(%rbp), %rax
 8838 056c 4889D6   		movq	%rdx, %rsi
 8839 056f 4889C7   		movq	%rax, %rdi
 8840 0572 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8840      00
 8841 0577 488B95F0 		movq	-272(%rbp), %rdx
 8841      FEFFFF
 8842 057e 488D4580 		leaq	-128(%rbp), %rax
 8843 0582 4889D6   		movq	%rdx, %rsi
 8844 0585 4889C7   		movq	%rax, %rdi
 8845 0588 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8845      00
 8846 058d 488D85B0 		leaq	-336(%rbp), %rax
 8846      FEFFFF
 8847 0594 488D4DC0 		leaq	-64(%rbp), %rcx
 8848 0598 488D55A0 		leaq	-96(%rbp), %rdx
 8849 059c 488D7580 		leaq	-128(%rbp), %rsi
 8850 05a0 4889C7   		movq	%rax, %rdi
 8851 05a3 E8000000 		call	_ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_
 8851      00
 804:/usr/include/c++/5/bits/deque.tcc **** 		}
 8852              		.loc 36 804 0 discriminator 2
 8853 05a8 488B95F0 		movq	-272(%rbp), %rdx
 8853      FEFFFF
 8854 05af 488D45C0 		leaq	-64(%rbp), %rax
 8855 05b3 4889D6   		movq	%rdx, %rsi
 8856 05b6 4889C7   		movq	%rax, %rdi
 8857 05b9 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8857      00
 8858 05be 488D85B0 		leaq	-336(%rbp), %rax
 8858      FEFFFF
 8859 05c5 488D4DC0 		leaq	-64(%rbp), %rcx
GAS LISTING /tmp/ccX8BQhk.s 			page 458


 8860 05c9 488B95E0 		movq	-288(%rbp), %rdx
 8860      FEFFFF
 8861 05d0 488BB5E8 		movq	-280(%rbp), %rsi
 8861      FEFFFF
 8862 05d7 4889C7   		movq	%rax, %rdi
 8863 05da E8000000 		call	_ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
 8863      00
 8864              	.LBE71:
 8865              	.LBE70:
 8866              	.LBE69:
 8867              	.LBE68:
 8868              	.LBE79:
 8869              		.loc 36 825 0
 8870 05df E9BA0100 		jmp	.L451
 8870      00
 8871              	.L456:
 8872              	.LBB80:
 8873              	.LBB75:
 8874              	.LBB74:
 8875              	.LBB73:
 8876              	.LBB72:
 808:/usr/include/c++/5/bits/deque.tcc **** 		  std::advance(__mid, __elemsafter);
 8877              		.loc 36 808 0
 8878 05e4 488B85E8 		movq	-280(%rbp), %rax
 8878      FEFFFF
 8879 05eb 48898560 		movq	%rax, -160(%rbp)
 8879      FFFFFF
 809:/usr/include/c++/5/bits/deque.tcc **** 		  std::__uninitialized_copy_move(__mid, __last, __pos,
 8880              		.loc 36 809 0
 8881 05f2 488B9518 		movq	-232(%rbp), %rdx
 8881      FFFFFF
 8882 05f9 488D8560 		leaq	-160(%rbp), %rax
 8882      FFFFFF
 8883 0600 4889D6   		movq	%rdx, %rsi
 8884 0603 4889C7   		movq	%rax, %rdi
 8885 0606 E8000000 		call	_ZSt7advanceIPKclEvRT_T0_
 8885      00
 813:/usr/include/c++/5/bits/deque.tcc **** 		  this->_M_impl._M_finish = __new_finish;
 8886              		.loc 36 813 0
 8887 060b 488B85F8 		movq	-264(%rbp), %rax
 8887      FEFFFF
 8888 0612 4889C7   		movq	%rax, %rdi
 8889 0615 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 8889      00
 8890 061a 4889C3   		movq	%rax, %rbx
 810:/usr/include/c++/5/bits/deque.tcc **** 						 this->_M_impl._M_finish,
 8891              		.loc 36 810 0
 8892 061d 488B85F8 		movq	-264(%rbp), %rax
 8892      FEFFFF
 8893 0624 488D5030 		leaq	48(%rax), %rdx
 8894 0628 488D45C0 		leaq	-64(%rbp), %rax
 8895 062c 4889D6   		movq	%rdx, %rsi
 8896 062f 4889C7   		movq	%rax, %rdi
 8897 0632 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8897      00
 8898 0637 488B85F8 		movq	-264(%rbp), %rax
 8898      FEFFFF
GAS LISTING /tmp/ccX8BQhk.s 			page 459


 8899 063e 488D5030 		leaq	48(%rax), %rdx
 8900 0642 488D45A0 		leaq	-96(%rbp), %rax
 8901 0646 4889D6   		movq	%rdx, %rsi
 8902 0649 4889C7   		movq	%rax, %rdi
 8903 064c E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8903      00
 8904 0651 488B95F0 		movq	-272(%rbp), %rdx
 8904      FEFFFF
 8905 0658 488D4580 		leaq	-128(%rbp), %rax
 8906 065c 4889D6   		movq	%rdx, %rsi
 8907 065f 4889C7   		movq	%rax, %rdi
 8908 0662 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8908      00
 8909 0667 488BB560 		movq	-160(%rbp), %rsi
 8909      FFFFFF
 8910 066e 488D85B0 		leaq	-336(%rbp), %rax
 8910      FEFFFF
 8911 0675 4C8D45C0 		leaq	-64(%rbp), %r8
 8912 0679 488D7DA0 		leaq	-96(%rbp), %rdi
 8913 067d 488D4D80 		leaq	-128(%rbp), %rcx
 8914 0681 488B95E0 		movq	-288(%rbp), %rdx
 8914      FEFFFF
 8915 0688 4883EC08 		subq	$8, %rsp
 8916 068c 53       		pushq	%rbx
 8917 068d 4D89C1   		movq	%r8, %r9
 8918 0690 4989F8   		movq	%rdi, %r8
 8919 0693 4889C7   		movq	%rax, %rdi
 8920              		.cfi_escape 0x2e,0x10
 8921 0696 E8000000 		call	_ZSt25__uninitialized_copy_moveIPKcSt15_Deque_iteratorIcRcPcES5_SaIcEET1_T_S8_T0_S9_S7_RT2_
 8921      00
 8922 069b 4883C410 		addq	$16, %rsp
 814:/usr/include/c++/5/bits/deque.tcc **** 		  std::copy(__first, __mid, __pos);
 8923              		.loc 36 814 0
 8924 069f 488B85F8 		movq	-264(%rbp), %rax
 8924      FEFFFF
 8925 06a6 488B9520 		movq	-224(%rbp), %rdx
 8925      FFFFFF
 8926 06ad 48895030 		movq	%rdx, 48(%rax)
 8927 06b1 488B9528 		movq	-216(%rbp), %rdx
 8927      FFFFFF
 8928 06b8 48895038 		movq	%rdx, 56(%rax)
 8929 06bc 488B9530 		movq	-208(%rbp), %rdx
 8929      FFFFFF
 8930 06c3 48895040 		movq	%rdx, 64(%rax)
 8931 06c7 488B9538 		movq	-200(%rbp), %rdx
 8931      FFFFFF
 8932 06ce 48895048 		movq	%rdx, 72(%rax)
 815:/usr/include/c++/5/bits/deque.tcc **** 		}
 8933              		.loc 36 815 0
 8934 06d2 488B95F0 		movq	-272(%rbp), %rdx
 8934      FEFFFF
 8935 06d9 488D45C0 		leaq	-64(%rbp), %rax
 8936 06dd 4889D6   		movq	%rdx, %rsi
 8937 06e0 4889C7   		movq	%rax, %rdi
 8938 06e3 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 8938      00
 8939 06e8 488B9560 		movq	-160(%rbp), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 460


 8939      FFFFFF
 8940 06ef 488D85B0 		leaq	-336(%rbp), %rax
 8940      FEFFFF
 8941 06f6 488D4DC0 		leaq	-64(%rbp), %rcx
 8942 06fa 488BB5E8 		movq	-280(%rbp), %rsi
 8942      FEFFFF
 8943 0701 4889C7   		movq	%rax, %rdi
 8944              		.cfi_escape 0x2e,0
 8945 0704 E8000000 		call	_ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
 8945      00
 8946              	.LEHE52:
 8947              	.LBE72:
 8948              	.LBE73:
 8949              	.LBE74:
 8950              	.LBE75:
 8951              	.LBE80:
 8952              		.loc 36 825 0
 8953 0709 E9900000 		jmp	.L451
 8953      00
 8954              	.L463:
 8955              	.LBB81:
 8956              	.LBB76:
 778:/usr/include/c++/5/bits/deque.tcc **** 	      {
 8957              		.loc 36 778 0
 8958 070e 4889C7   		movq	%rax, %rdi
 8959 0711 E8000000 		call	__cxa_begin_catch
 8959      00
 780:/usr/include/c++/5/bits/deque.tcc **** 				 this->_M_impl._M_start._M_node);
 8960              		.loc 36 780 0
 8961 0716 488B85F8 		movq	-264(%rbp), %rax
 8961      FEFFFF
 8962 071d 488B5028 		movq	40(%rax), %rdx
 8963 0721 488B8D38 		movq	-200(%rbp), %rcx
 8963      FFFFFF
 8964 0728 488B85F8 		movq	-264(%rbp), %rax
 8964      FEFFFF
 8965 072f 4889CE   		movq	%rcx, %rsi
 8966 0732 4889C7   		movq	%rax, %rdi
 8967 0735 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_
 8967      00
 8968              	.LEHB53:
 782:/usr/include/c++/5/bits/deque.tcc **** 	      }
 8969              		.loc 36 782 0
 8970 073a E8000000 		call	__cxa_rethrow
 8970      00
 8971              	.LEHE53:
 8972              	.L464:
 8973 073f 4889C3   		movq	%rax, %rbx
 778:/usr/include/c++/5/bits/deque.tcc **** 	      {
 8974              		.loc 36 778 0
 8975 0742 E8000000 		call	__cxa_end_catch
 8975      00
 8976 0747 4889D8   		movq	%rbx, %rax
 8977 074a 4889C7   		movq	%rax, %rdi
 8978              	.LEHB54:
 8979 074d E8000000 		call	_Unwind_Resume
 8979      00
GAS LISTING /tmp/ccX8BQhk.s 			page 461


 8980              	.LEHE54:
 8981              	.L465:
 8982              	.LBE76:
 8983              	.LBB77:
 818:/usr/include/c++/5/bits/deque.tcc ****             {
 8984              		.loc 36 818 0
 8985 0752 4889C7   		movq	%rax, %rdi
 8986 0755 E8000000 		call	__cxa_begin_catch
 8986      00
 821:/usr/include/c++/5/bits/deque.tcc ****               __throw_exception_again;
 8987              		.loc 36 821 0
 8988 075a 488B8538 		movq	-200(%rbp), %rax
 8988      FFFFFF
 820:/usr/include/c++/5/bits/deque.tcc **** 			       __new_finish._M_node + 1);
 8989              		.loc 36 820 0
 8990 0761 488D5008 		leaq	8(%rax), %rdx
 8991 0765 488B85F8 		movq	-264(%rbp), %rax
 8991      FEFFFF
 8992 076c 488B4048 		movq	72(%rax), %rax
 8993 0770 488D4808 		leaq	8(%rax), %rcx
 8994 0774 488B85F8 		movq	-264(%rbp), %rax
 8994      FEFFFF
 8995 077b 4889CE   		movq	%rcx, %rsi
 8996 077e 4889C7   		movq	%rax, %rdi
 8997 0781 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_
 8997      00
 8998              	.LEHB55:
 822:/usr/include/c++/5/bits/deque.tcc ****             }
 8999              		.loc 36 822 0
 9000 0786 E8000000 		call	__cxa_rethrow
 9000      00
 9001              	.LEHE55:
 9002              	.L466:
 9003 078b 4889C3   		movq	%rax, %rbx
 818:/usr/include/c++/5/bits/deque.tcc ****             {
 9004              		.loc 36 818 0
 9005 078e E8000000 		call	__cxa_end_catch
 9005      00
 9006 0793 4889D8   		movq	%rbx, %rax
 9007 0796 4889C7   		movq	%rax, %rdi
 9008              	.LEHB56:
 9009 0799 E8000000 		call	_Unwind_Resume
 9009      00
 9010              	.LEHE56:
 9011              	.L451:
 9012              	.LBE77:
 9013              	.LBE81:
 9014              		.loc 36 825 0
 9015 079e 488B45E8 		movq	-24(%rbp), %rax
 9016 07a2 64483304 		xorq	%fs:40, %rax
 9016      25280000 
 9016      00
 9017 07ab 7405     		je	.L462
 9018 07ad E8000000 		call	__stack_chk_fail
 9018      00
 9019              	.L462:
 9020 07b2 488D65F0 		leaq	-16(%rbp), %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 462


 9021 07b6 5B       		popq	%rbx
 9022 07b7 415C     		popq	%r12
 9023 07b9 5D       		popq	%rbp
 9024              		.cfi_def_cfa 7, 8
 9025 07ba C3       		ret
 9026              		.cfi_endproc
 9027              	.LFE10567:
 9028              		.section	.gcc_except_table
 9029 0141 000000   		.align 4
 9030              	.LLSDA10567:
 9031 0144 FF       		.byte	0xff
 9032 0145 03       		.byte	0x3
 9033 0146 39       		.uleb128 .LLSDATT10567-.LLSDATTD10567
 9034              	.LLSDATTD10567:
 9035 0147 01       		.byte	0x1
 9036 0148 2E       		.uleb128 .LLSDACSE10567-.LLSDACSB10567
 9037              	.LLSDACSB10567:
 9038 0149 B201     		.uleb128 .LEHB49-.LFB10567
 9039 014b 05       		.uleb128 .LEHE49-.LEHB49
 9040 014c 00       		.uleb128 0
 9041 014d 00       		.uleb128 0
 9042 014e C403     		.uleb128 .LEHB50-.LFB10567
 9043 0150 8404     		.uleb128 .LEHE50-.LEHB50
 9044 0152 8E0E     		.uleb128 .L463-.LFB10567
 9045 0154 01       		.uleb128 0x1
 9046 0155 E807     		.uleb128 .LEHB51-.LFB10567
 9047 0157 05       		.uleb128 .LEHE51-.LEHB51
 9048 0158 00       		.uleb128 0
 9049 0159 00       		.uleb128 0
 9050 015a 930A     		.uleb128 .LEHB52-.LFB10567
 9051 015c F603     		.uleb128 .LEHE52-.LEHB52
 9052 015e D20E     		.uleb128 .L465-.LFB10567
 9053 0160 01       		.uleb128 0x1
 9054 0161 BA0E     		.uleb128 .LEHB53-.LFB10567
 9055 0163 05       		.uleb128 .LEHE53-.LEHB53
 9056 0164 BF0E     		.uleb128 .L464-.LFB10567
 9057 0166 00       		.uleb128 0
 9058 0167 CD0E     		.uleb128 .LEHB54-.LFB10567
 9059 0169 05       		.uleb128 .LEHE54-.LEHB54
 9060 016a 00       		.uleb128 0
 9061 016b 00       		.uleb128 0
 9062 016c 860F     		.uleb128 .LEHB55-.LFB10567
 9063 016e 05       		.uleb128 .LEHE55-.LEHB55
 9064 016f 8B0F     		.uleb128 .L466-.LFB10567
 9065 0171 00       		.uleb128 0
 9066 0172 990F     		.uleb128 .LEHB56-.LFB10567
 9067 0174 05       		.uleb128 .LEHE56-.LEHB56
 9068 0175 00       		.uleb128 0
 9069 0176 00       		.uleb128 0
 9070              	.LLSDACSE10567:
 9071 0177 01       		.byte	0x1
 9072 0178 00       		.byte	0
 9073 0179 000000   		.align 4
 9074 017c 00000000 		.long	0
 9075              	
 9076              	.LLSDATT10567:
 9077              		.section	.text._ZNSt5dequeIcSaIcEE13_M_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_m,"axG",@pr
GAS LISTING /tmp/ccX8BQhk.s 			page 463


 9079              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt15_Deque_iteratorIcRcPcEv
 9080              		.align 2
 9081              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt15_Deque_iteratorIcRcPcEvEET_SA_RK
 9083              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt15_Deque_iteratorIcRcPcEvEET_SA_RKS3_:
 9084              	.LFB10569:
 534:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 9085              		.loc 11 534 0
 9086              		.cfi_startproc
 9087              		.cfi_personality 0x3,__gxx_personality_v0
 9088              		.cfi_lsda 0x3,.LLSDA10569
 9089 0000 55       		pushq	%rbp
 9090              		.cfi_def_cfa_offset 16
 9091              		.cfi_offset 6, -16
 9092 0001 4889E5   		movq	%rsp, %rbp
 9093              		.cfi_def_cfa_register 6
 9094 0004 53       		pushq	%rbx
 9095 0005 4883EC78 		subq	$120, %rsp
 9096              		.cfi_offset 3, -24
 9097 0009 48897D98 		movq	%rdi, -104(%rbp)
 9098 000d 48897590 		movq	%rsi, -112(%rbp)
 9099 0011 48895588 		movq	%rdx, -120(%rbp)
 9100 0015 48894D80 		movq	%rcx, -128(%rbp)
 534:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 9101              		.loc 11 534 0
 9102 0019 64488B04 		movq	%fs:40, %rax
 9102      25280000 
 9102      00
 9103 0022 488945E8 		movq	%rax, -24(%rbp)
 9104 0026 31C0     		xorl	%eax, %eax
 9105              	.LBB82:
 536:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 9106              		.loc 11 536 0
 9107 0028 488B4598 		movq	-104(%rbp), %rax
 9108 002c 4889C7   		movq	%rax, %rdi
 9109              	.LEHB57:
 9110 002f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
 9110      00
 9111 0034 4889C1   		movq	%rax, %rcx
 9112 0037 488B4598 		movq	-104(%rbp), %rax
 9113 003b 488B5580 		movq	-128(%rbp), %rdx
 9114 003f 4889CE   		movq	%rcx, %rsi
 9115 0042 4889C7   		movq	%rax, %rdi
 9116 0045 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_
 9116      00
 9117              	.LEHE57:
 537:/usr/include/c++/5/bits/basic_string.h **** 
 9118              		.loc 11 537 0
 9119 004a 488B5588 		movq	-120(%rbp), %rdx
 9120 004e 488D45C0 		leaq	-64(%rbp), %rax
 9121 0052 4889D6   		movq	%rdx, %rsi
 9122 0055 4889C7   		movq	%rax, %rdi
 9123 0058 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 9123      00
 9124 005d 488B5590 		movq	-112(%rbp), %rdx
 9125 0061 488D45A0 		leaq	-96(%rbp), %rax
 9126 0065 4889D6   		movq	%rdx, %rsi
 9127 0068 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 464


 9128 006b E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 9128      00
 9129 0070 488D55C0 		leaq	-64(%rbp), %rdx
 9130 0074 488D4DA0 		leaq	-96(%rbp), %rcx
 9131 0078 488B4598 		movq	-104(%rbp), %rax
 9132 007c 4889CE   		movq	%rcx, %rsi
 9133 007f 4889C7   		movq	%rax, %rdi
 9134              	.LEHB58:
 9135 0082 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcPc
 9135      00
 9136              	.LEHE58:
 9137              	.LBE82:
 9138 0087 EB1A     		jmp	.L471
 9139              	.L470:
 9140 0089 4889C3   		movq	%rax, %rbx
 9141              	.LBB83:
 536:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 9142              		.loc 11 536 0
 9143 008c 488B4598 		movq	-104(%rbp), %rax
 9144 0090 4889C7   		movq	%rax, %rdi
 9145 0093 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev
 9145      00
 9146 0098 4889D8   		movq	%rbx, %rax
 9147 009b 4889C7   		movq	%rax, %rdi
 9148              	.LEHB59:
 9149 009e E8000000 		call	_Unwind_Resume
 9149      00
 9150              	.LEHE59:
 9151              	.L471:
 9152              	.LBE83:
 537:/usr/include/c++/5/bits/basic_string.h **** 
 9153              		.loc 11 537 0
 9154 00a3 488B45E8 		movq	-24(%rbp), %rax
 9155 00a7 64483304 		xorq	%fs:40, %rax
 9155      25280000 
 9155      00
 9156 00b0 7405     		je	.L469
 9157 00b2 E8000000 		call	__stack_chk_fail
 9157      00
 9158              	.L469:
 9159 00b7 4883C478 		addq	$120, %rsp
 9160 00bb 5B       		popq	%rbx
 9161 00bc 5D       		popq	%rbp
 9162              		.cfi_def_cfa 7, 8
 9163 00bd C3       		ret
 9164              		.cfi_endproc
 9165              	.LFE10569:
 9166              		.section	.gcc_except_table
 9167              	.LLSDA10569:
 9168 0180 FF       		.byte	0xff
 9169 0181 FF       		.byte	0xff
 9170 0182 01       		.byte	0x1
 9171 0183 0F       		.uleb128 .LLSDACSE10569-.LLSDACSB10569
 9172              	.LLSDACSB10569:
 9173 0184 2F       		.uleb128 .LEHB57-.LFB10569
 9174 0185 1B       		.uleb128 .LEHE57-.LEHB57
 9175 0186 00       		.uleb128 0
GAS LISTING /tmp/ccX8BQhk.s 			page 465


 9176 0187 00       		.uleb128 0
 9177 0188 8201     		.uleb128 .LEHB58-.LFB10569
 9178 018a 05       		.uleb128 .LEHE58-.LEHB58
 9179 018b 8901     		.uleb128 .L470-.LFB10569
 9180 018d 00       		.uleb128 0
 9181 018e 9E01     		.uleb128 .LEHB59-.LFB10569
 9182 0190 05       		.uleb128 .LEHE59-.LEHB59
 9183 0191 00       		.uleb128 0
 9184 0192 00       		.uleb128 0
 9185              	.LLSDACSE10569:
 9186              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt15_Deque_iteratorIcRcPcEv
 9188              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ISt15_Deque_iteratorIcRcPcEvEET_SA_RK
 9189              		.set	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ISt15_Deque_iteratorIcRcPcEvEET_SA_RKS
 9190              		.section	.text._ZN9__gnu_cxx13new_allocatorIPcE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_a
 9191              		.align 2
 9192              		.weak	_ZN9__gnu_cxx13new_allocatorIPcE8allocateEmPKv
 9194              	_ZN9__gnu_cxx13new_allocatorIPcE8allocateEmPKv:
 9195              	.LFB10572:
  99:/usr/include/c++/5/ext/new_allocator.h ****       { 
 9196              		.loc 27 99 0
 9197              		.cfi_startproc
 9198 0000 55       		pushq	%rbp
 9199              		.cfi_def_cfa_offset 16
 9200              		.cfi_offset 6, -16
 9201 0001 4889E5   		movq	%rsp, %rbp
 9202              		.cfi_def_cfa_register 6
 9203 0004 4883EC20 		subq	$32, %rsp
 9204 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9205 000c 488975F0 		movq	%rsi, -16(%rbp)
 9206 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 9207              		.loc 27 101 0
 9208 0014 488B45F8 		movq	-8(%rbp), %rax
 9209 0018 4889C7   		movq	%rax, %rdi
 9210 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIPcE8max_sizeEv
 9210      00
 9211 0020 483B45F0 		cmpq	-16(%rbp), %rax
 9212 0024 0F92C0   		setb	%al
 9213 0027 84C0     		testb	%al, %al
 9214 0029 7405     		je	.L473
 102:/usr/include/c++/5/ext/new_allocator.h **** 
 9215              		.loc 27 102 0
 9216 002b E8000000 		call	_ZSt17__throw_bad_allocv
 9216      00
 9217              	.L473:
 104:/usr/include/c++/5/ext/new_allocator.h ****       }
 9218              		.loc 27 104 0
 9219 0030 488B45F0 		movq	-16(%rbp), %rax
 9220 0034 48C1E003 		salq	$3, %rax
 9221 0038 4889C7   		movq	%rax, %rdi
 9222 003b E8000000 		call	_Znwm
 9222      00
 105:/usr/include/c++/5/ext/new_allocator.h **** 
 9223              		.loc 27 105 0
 9224 0040 C9       		leave
 9225              		.cfi_def_cfa 7, 8
 9226 0041 C3       		ret
GAS LISTING /tmp/ccX8BQhk.s 			page 466


 9227              		.cfi_endproc
 9228              	.LFE10572:
 9230              		.section	.text._ZNSt16allocator_traitsISaIcEE8allocateERS0_m,"axG",@progbits,_ZNSt16allocator_trai
 9231              		.weak	_ZNSt16allocator_traitsISaIcEE8allocateERS0_m
 9233              	_ZNSt16allocator_traitsISaIcEE8allocateERS0_m:
 9234              	.LFB10573:
 490:/usr/include/c++/5/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 9235              		.loc 22 490 0
 9236              		.cfi_startproc
 9237 0000 55       		pushq	%rbp
 9238              		.cfi_def_cfa_offset 16
 9239              		.cfi_offset 6, -16
 9240 0001 4889E5   		movq	%rsp, %rbp
 9241              		.cfi_def_cfa_register 6
 9242 0004 4883EC10 		subq	$16, %rsp
 9243 0008 48897DF8 		movq	%rdi, -8(%rbp)
 9244 000c 488975F0 		movq	%rsi, -16(%rbp)
 491:/usr/include/c++/5/bits/alloc_traits.h **** 
 9245              		.loc 22 491 0
 9246 0010 488B4DF0 		movq	-16(%rbp), %rcx
 9247 0014 488B45F8 		movq	-8(%rbp), %rax
 9248 0018 BA000000 		movl	$0, %edx
 9248      00
 9249 001d 4889CE   		movq	%rcx, %rsi
 9250 0020 4889C7   		movq	%rax, %rdi
 9251 0023 E8000000 		call	_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv
 9251      00
 9252 0028 C9       		leave
 9253              		.cfi_def_cfa 7, 8
 9254 0029 C3       		ret
 9255              		.cfi_endproc
 9256              	.LFE10573:
 9258              		.section	.text._ZN9__gnu_cxx13new_allocatorIPcEC2Ev,"axG",@progbits,_ZN9__gnu_cxx13new_allocatorIP
 9259              		.align 2
 9260              		.weak	_ZN9__gnu_cxx13new_allocatorIPcEC2Ev
 9262              	_ZN9__gnu_cxx13new_allocatorIPcEC2Ev:
 9263              	.LFB10575:
  79:/usr/include/c++/5/ext/new_allocator.h **** 
 9264              		.loc 27 79 0
 9265              		.cfi_startproc
 9266 0000 55       		pushq	%rbp
 9267              		.cfi_def_cfa_offset 16
 9268              		.cfi_offset 6, -16
 9269 0001 4889E5   		movq	%rsp, %rbp
 9270              		.cfi_def_cfa_register 6
 9271 0004 48897DF8 		movq	%rdi, -8(%rbp)
  79:/usr/include/c++/5/ext/new_allocator.h **** 
 9272              		.loc 27 79 0
 9273 0008 90       		nop
 9274 0009 5D       		popq	%rbp
 9275              		.cfi_def_cfa 7, 8
 9276 000a C3       		ret
 9277              		.cfi_endproc
 9278              	.LFE10575:
 9280              		.weak	_ZN9__gnu_cxx13new_allocatorIPcEC1Ev
 9281              		.set	_ZN9__gnu_cxx13new_allocatorIPcEC1Ev,_ZN9__gnu_cxx13new_allocatorIPcEC2Ev
 9282              		.section	.text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11c
GAS LISTING /tmp/ccX8BQhk.s 			page 467


 9283              		.weak	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_trait
 9285              	_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaI
 9286              	.LFB10578:
 217:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 218:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 219:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 220:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct _Iter_base<_Iterator, true>
 221:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 222:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_type iterator_type;
 223:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       static iterator_type _S_base(_Iterator __it)
 9287              		.loc 32 223 0
 9288              		.cfi_startproc
 9289 0000 55       		pushq	%rbp
 9290              		.cfi_def_cfa_offset 16
 9291              		.cfi_offset 6, -16
 9292 0001 4889E5   		movq	%rsp, %rbp
 9293              		.cfi_def_cfa_register 6
 9294 0004 4883EC10 		subq	$16, %rsp
 9295 0008 48897DF0 		movq	%rdi, -16(%rbp)
 224:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it.base(); }
 9296              		.loc 32 224 0
 9297 000c 488D45F0 		leaq	-16(%rbp), %rax
 9298 0010 4889C7   		movq	%rax, %rdi
 9299 0013 E8000000 		call	_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4bas
 9299      00
 9300 0018 488B00   		movq	(%rax), %rax
 9301 001b C9       		leave
 9302              		.cfi_def_cfa 7, 8
 9303 001c C3       		ret
 9304              		.cfi_endproc
 9305              	.LFE10578:
 9307              		.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S
 9308              		.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_
 9310              	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_:
 9311              	.LFB10579:
 373:/usr/include/c++/5/bits/stl_algobase.h ****         {
 9312              		.loc 29 373 0
 9313              		.cfi_startproc
 9314 0000 55       		pushq	%rbp
 9315              		.cfi_def_cfa_offset 16
 9316              		.cfi_offset 6, -16
 9317 0001 4889E5   		movq	%rsp, %rbp
 9318              		.cfi_def_cfa_register 6
 9319 0004 4883EC30 		subq	$48, %rsp
 9320 0008 48897DE8 		movq	%rdi, -24(%rbp)
 9321 000c 488975E0 		movq	%rsi, -32(%rbp)
 9322 0010 488955D8 		movq	%rdx, -40(%rbp)
 382:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 9323              		.loc 29 382 0
 9324 0014 488B55E0 		movq	-32(%rbp), %rdx
 9325 0018 488B45E8 		movq	-24(%rbp), %rax
 9326 001c 4829C2   		subq	%rax, %rdx
 9327 001f 4889D0   		movq	%rdx, %rax
 9328 0022 488945F8 		movq	%rax, -8(%rbp)
 383:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 9329              		.loc 29 383 0
 9330 0026 48837DF8 		cmpq	$0, -8(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 468


 9330      00
 9331 002b 7417     		je	.L481
 384:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result + _Num;
 9332              		.loc 29 384 0
 9333 002d 488B55F8 		movq	-8(%rbp), %rdx
 9334 0031 488B4DE8 		movq	-24(%rbp), %rcx
 9335 0035 488B45D8 		movq	-40(%rbp), %rax
 9336 0039 4889CE   		movq	%rcx, %rsi
 9337 003c 4889C7   		movq	%rax, %rdi
 9338 003f E8000000 		call	memmove
 9338      00
 9339              	.L481:
 385:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 9340              		.loc 29 385 0
 9341 0044 488B55F8 		movq	-8(%rbp), %rdx
 9342 0048 488B45D8 		movq	-40(%rbp), %rax
 9343 004c 4801D0   		addq	%rdx, %rax
 386:/usr/include/c++/5/bits/stl_algobase.h ****     };
 9344              		.loc 29 386 0
 9345 004f C9       		leave
 9346              		.cfi_def_cfa 7, 8
 9347 0050 C3       		ret
 9348              		.cfi_endproc
 9349              	.LFE10579:
 9351              		.section	.text._ZNSt5dequeIcSaIcEE17_M_reallocate_mapEmb,"axG",@progbits,_ZNSt5dequeIcSaIcEE17_M_r
 9352              		.align 2
 9353              		.weak	_ZNSt5dequeIcSaIcEE17_M_reallocate_mapEmb
 9355              	_ZNSt5dequeIcSaIcEE17_M_reallocate_mapEmb:
 9356              	.LFB10580:
 826:/usr/include/c++/5/bits/deque.tcc **** 
 827:/usr/include/c++/5/bits/deque.tcc ****    template<typename _Tp, typename _Alloc>
 828:/usr/include/c++/5/bits/deque.tcc ****      void
 829:/usr/include/c++/5/bits/deque.tcc ****      deque<_Tp, _Alloc>::
 830:/usr/include/c++/5/bits/deque.tcc ****      _M_destroy_data_aux(iterator __first, iterator __last)
 831:/usr/include/c++/5/bits/deque.tcc ****      {
 832:/usr/include/c++/5/bits/deque.tcc ****        for (_Map_pointer __node = __first._M_node + 1;
 833:/usr/include/c++/5/bits/deque.tcc **** 	    __node < __last._M_node; ++__node)
 834:/usr/include/c++/5/bits/deque.tcc **** 	 std::_Destroy(*__node, *__node + _S_buffer_size(),
 835:/usr/include/c++/5/bits/deque.tcc **** 		       _M_get_Tp_allocator());
 836:/usr/include/c++/5/bits/deque.tcc **** 
 837:/usr/include/c++/5/bits/deque.tcc ****        if (__first._M_node != __last._M_node)
 838:/usr/include/c++/5/bits/deque.tcc **** 	 {
 839:/usr/include/c++/5/bits/deque.tcc **** 	   std::_Destroy(__first._M_cur, __first._M_last,
 840:/usr/include/c++/5/bits/deque.tcc **** 			 _M_get_Tp_allocator());
 841:/usr/include/c++/5/bits/deque.tcc **** 	   std::_Destroy(__last._M_first, __last._M_cur,
 842:/usr/include/c++/5/bits/deque.tcc **** 			 _M_get_Tp_allocator());
 843:/usr/include/c++/5/bits/deque.tcc **** 	 }
 844:/usr/include/c++/5/bits/deque.tcc ****        else
 845:/usr/include/c++/5/bits/deque.tcc **** 	 std::_Destroy(__first._M_cur, __last._M_cur,
 846:/usr/include/c++/5/bits/deque.tcc **** 		       _M_get_Tp_allocator());
 847:/usr/include/c++/5/bits/deque.tcc ****      }
 848:/usr/include/c++/5/bits/deque.tcc **** 
 849:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 850:/usr/include/c++/5/bits/deque.tcc ****     void
 851:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 852:/usr/include/c++/5/bits/deque.tcc ****     _M_new_elements_at_front(size_type __new_elems)
 853:/usr/include/c++/5/bits/deque.tcc ****     {
GAS LISTING /tmp/ccX8BQhk.s 			page 469


 854:/usr/include/c++/5/bits/deque.tcc ****       if (this->max_size() - this->size() < __new_elems)
 855:/usr/include/c++/5/bits/deque.tcc **** 	__throw_length_error(__N("deque::_M_new_elements_at_front"));
 856:/usr/include/c++/5/bits/deque.tcc **** 
 857:/usr/include/c++/5/bits/deque.tcc ****       const size_type __new_nodes = ((__new_elems + _S_buffer_size() - 1)
 858:/usr/include/c++/5/bits/deque.tcc **** 				     / _S_buffer_size());
 859:/usr/include/c++/5/bits/deque.tcc ****       _M_reserve_map_at_front(__new_nodes);
 860:/usr/include/c++/5/bits/deque.tcc ****       size_type __i;
 861:/usr/include/c++/5/bits/deque.tcc ****       __try
 862:/usr/include/c++/5/bits/deque.tcc ****         {
 863:/usr/include/c++/5/bits/deque.tcc ****           for (__i = 1; __i <= __new_nodes; ++__i)
 864:/usr/include/c++/5/bits/deque.tcc ****             *(this->_M_impl._M_start._M_node - __i) = this->_M_allocate_node();
 865:/usr/include/c++/5/bits/deque.tcc ****         }
 866:/usr/include/c++/5/bits/deque.tcc ****       __catch(...)
 867:/usr/include/c++/5/bits/deque.tcc ****         {
 868:/usr/include/c++/5/bits/deque.tcc ****           for (size_type __j = 1; __j < __i; ++__j)
 869:/usr/include/c++/5/bits/deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_start._M_node - __j));
 870:/usr/include/c++/5/bits/deque.tcc ****           __throw_exception_again;
 871:/usr/include/c++/5/bits/deque.tcc ****         }
 872:/usr/include/c++/5/bits/deque.tcc ****     }
 873:/usr/include/c++/5/bits/deque.tcc **** 
 874:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 875:/usr/include/c++/5/bits/deque.tcc ****     void
 876:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 877:/usr/include/c++/5/bits/deque.tcc ****     _M_new_elements_at_back(size_type __new_elems)
 878:/usr/include/c++/5/bits/deque.tcc ****     {
 879:/usr/include/c++/5/bits/deque.tcc ****       if (this->max_size() - this->size() < __new_elems)
 880:/usr/include/c++/5/bits/deque.tcc **** 	__throw_length_error(__N("deque::_M_new_elements_at_back"));
 881:/usr/include/c++/5/bits/deque.tcc **** 
 882:/usr/include/c++/5/bits/deque.tcc ****       const size_type __new_nodes = ((__new_elems + _S_buffer_size() - 1)
 883:/usr/include/c++/5/bits/deque.tcc **** 				     / _S_buffer_size());
 884:/usr/include/c++/5/bits/deque.tcc ****       _M_reserve_map_at_back(__new_nodes);
 885:/usr/include/c++/5/bits/deque.tcc ****       size_type __i;
 886:/usr/include/c++/5/bits/deque.tcc ****       __try
 887:/usr/include/c++/5/bits/deque.tcc ****         {
 888:/usr/include/c++/5/bits/deque.tcc ****           for (__i = 1; __i <= __new_nodes; ++__i)
 889:/usr/include/c++/5/bits/deque.tcc ****             *(this->_M_impl._M_finish._M_node + __i) = this->_M_allocate_node();
 890:/usr/include/c++/5/bits/deque.tcc ****         }
 891:/usr/include/c++/5/bits/deque.tcc ****       __catch(...)
 892:/usr/include/c++/5/bits/deque.tcc ****         {
 893:/usr/include/c++/5/bits/deque.tcc ****           for (size_type __j = 1; __j < __i; ++__j)
 894:/usr/include/c++/5/bits/deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_finish._M_node + __j));
 895:/usr/include/c++/5/bits/deque.tcc ****           __throw_exception_again;
 896:/usr/include/c++/5/bits/deque.tcc ****         }
 897:/usr/include/c++/5/bits/deque.tcc ****     }
 898:/usr/include/c++/5/bits/deque.tcc **** 
 899:/usr/include/c++/5/bits/deque.tcc ****   template <typename _Tp, typename _Alloc>
 900:/usr/include/c++/5/bits/deque.tcc ****     void
 901:/usr/include/c++/5/bits/deque.tcc ****     deque<_Tp, _Alloc>::
 9357              		.loc 36 901 0
 9358              		.cfi_startproc
 9359 0000 55       		pushq	%rbp
 9360              		.cfi_def_cfa_offset 16
 9361              		.cfi_offset 6, -16
 9362 0001 4889E5   		movq	%rsp, %rbp
 9363              		.cfi_def_cfa_register 6
 9364 0004 53       		pushq	%rbx
 9365 0005 4883EC58 		subq	$88, %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 470


 9366              		.cfi_offset 3, -24
 9367 0009 48897DB8 		movq	%rdi, -72(%rbp)
 9368 000d 488975B0 		movq	%rsi, -80(%rbp)
 9369 0011 89D0     		movl	%edx, %eax
 9370 0013 8845AC   		movb	%al, -84(%rbp)
 902:/usr/include/c++/5/bits/deque.tcc ****     _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
 903:/usr/include/c++/5/bits/deque.tcc ****     {
 904:/usr/include/c++/5/bits/deque.tcc ****       const size_type __old_num_nodes
 905:/usr/include/c++/5/bits/deque.tcc **** 	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
 9371              		.loc 36 905 0
 9372 0016 488B45B8 		movq	-72(%rbp), %rax
 9373 001a 488B4048 		movq	72(%rax), %rax
 9374 001e 4889C2   		movq	%rax, %rdx
 9375 0021 488B45B8 		movq	-72(%rbp), %rax
 9376 0025 488B4028 		movq	40(%rax), %rax
 9377 0029 4829C2   		subq	%rax, %rdx
 9378 002c 4889D0   		movq	%rdx, %rax
 9379 002f 48C1F803 		sarq	$3, %rax
 9380 0033 4883C001 		addq	$1, %rax
 9381 0037 488945D0 		movq	%rax, -48(%rbp)
 906:/usr/include/c++/5/bits/deque.tcc ****       const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
 9382              		.loc 36 906 0
 9383 003b 488B55B0 		movq	-80(%rbp), %rdx
 9384 003f 488B45D0 		movq	-48(%rbp), %rax
 9385 0043 4801D0   		addq	%rdx, %rax
 9386 0046 488945D8 		movq	%rax, -40(%rbp)
 9387              	.LBB84:
 907:/usr/include/c++/5/bits/deque.tcc **** 
 908:/usr/include/c++/5/bits/deque.tcc ****       _Map_pointer __new_nstart;
 909:/usr/include/c++/5/bits/deque.tcc ****       if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
 9388              		.loc 36 909 0
 9389 004a 488B45B8 		movq	-72(%rbp), %rax
 9390 004e 488B4008 		movq	8(%rax), %rax
 9391 0052 488B55D8 		movq	-40(%rbp), %rdx
 9392 0056 4801D2   		addq	%rdx, %rdx
 9393 0059 4839D0   		cmpq	%rdx, %rax
 9394 005c 0F86AA00 		jbe	.L484
 9394      0000
 910:/usr/include/c++/5/bits/deque.tcc **** 	{
 911:/usr/include/c++/5/bits/deque.tcc **** 	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 9395              		.loc 36 911 0
 9396 0062 488B45B8 		movq	-72(%rbp), %rax
 9397 0066 488B10   		movq	(%rax), %rdx
 912:/usr/include/c++/5/bits/deque.tcc **** 					 - __new_num_nodes) / 2
 9398              		.loc 36 912 0
 9399 0069 488B45B8 		movq	-72(%rbp), %rax
 9400 006d 488B4008 		movq	8(%rax), %rax
 913:/usr/include/c++/5/bits/deque.tcc **** 	                 + (__add_at_front ? __nodes_to_add : 0);
 9401              		.loc 36 913 0
 9402 0071 482B45D8 		subq	-40(%rbp), %rax
 9403 0075 48D1E8   		shrq	%rax
 9404 0078 488D0CC5 		leaq	0(,%rax,8), %rcx
 9404      00000000 
 9405 0080 807DAC00 		cmpb	$0, -84(%rbp)
 9406 0084 740A     		je	.L485
 9407              		.loc 36 913 0 is_stmt 0 discriminator 1
 9408 0086 488B45B0 		movq	-80(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 471


 9409 008a 48C1E003 		salq	$3, %rax
 9410 008e EB05     		jmp	.L486
 9411              	.L485:
 9412              		.loc 36 913 0 discriminator 2
 9413 0090 B8000000 		movl	$0, %eax
 9413      00
 9414              	.L486:
 9415              		.loc 36 913 0 discriminator 4
 9416 0095 4801C8   		addq	%rcx, %rax
 911:/usr/include/c++/5/bits/deque.tcc **** 					 - __new_num_nodes) / 2
 9417              		.loc 36 911 0 is_stmt 1 discriminator 4
 9418 0098 4801D0   		addq	%rdx, %rax
 9419 009b 488945C8 		movq	%rax, -56(%rbp)
 914:/usr/include/c++/5/bits/deque.tcc **** 	  if (__new_nstart < this->_M_impl._M_start._M_node)
 9420              		.loc 36 914 0 discriminator 4
 9421 009f 488B45B8 		movq	-72(%rbp), %rax
 9422 00a3 488B4028 		movq	40(%rax), %rax
 9423 00a7 483B45C8 		cmpq	-56(%rbp), %rax
 9424 00ab 7628     		jbe	.L487
 915:/usr/include/c++/5/bits/deque.tcc **** 	    std::copy(this->_M_impl._M_start._M_node,
 916:/usr/include/c++/5/bits/deque.tcc **** 		      this->_M_impl._M_finish._M_node + 1,
 9425              		.loc 36 916 0
 9426 00ad 488B45B8 		movq	-72(%rbp), %rax
 9427 00b1 488B4048 		movq	72(%rax), %rax
 915:/usr/include/c++/5/bits/deque.tcc **** 	    std::copy(this->_M_impl._M_start._M_node,
 9428              		.loc 36 915 0
 9429 00b5 488D4808 		leaq	8(%rax), %rcx
 9430 00b9 488B45B8 		movq	-72(%rbp), %rax
 9431 00bd 488B4028 		movq	40(%rax), %rax
 9432 00c1 488B55C8 		movq	-56(%rbp), %rdx
 9433 00c5 4889CE   		movq	%rcx, %rsi
 9434 00c8 4889C7   		movq	%rax, %rdi
 9435 00cb E8000000 		call	_ZSt4copyIPPcS1_ET0_T_S3_S2_
 9435      00
 9436 00d0 E9090100 		jmp	.L489
 9436      00
 9437              	.L487:
 917:/usr/include/c++/5/bits/deque.tcc **** 		      __new_nstart);
 918:/usr/include/c++/5/bits/deque.tcc **** 	  else
 919:/usr/include/c++/5/bits/deque.tcc **** 	    std::copy_backward(this->_M_impl._M_start._M_node,
 9438              		.loc 36 919 0
 9439 00d5 488B45D0 		movq	-48(%rbp), %rax
 9440 00d9 488D14C5 		leaq	0(,%rax,8), %rdx
 9440      00000000 
 9441 00e1 488B45C8 		movq	-56(%rbp), %rax
 9442 00e5 4801C2   		addq	%rax, %rdx
 920:/usr/include/c++/5/bits/deque.tcc **** 			       this->_M_impl._M_finish._M_node + 1,
 9443              		.loc 36 920 0
 9444 00e8 488B45B8 		movq	-72(%rbp), %rax
 9445 00ec 488B4048 		movq	72(%rax), %rax
 919:/usr/include/c++/5/bits/deque.tcc **** 			       this->_M_impl._M_finish._M_node + 1,
 9446              		.loc 36 919 0
 9447 00f0 488D4808 		leaq	8(%rax), %rcx
 9448 00f4 488B45B8 		movq	-72(%rbp), %rax
 9449 00f8 488B4028 		movq	40(%rax), %rax
 9450 00fc 4889CE   		movq	%rcx, %rsi
 9451 00ff 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 472


 9452 0102 E8000000 		call	_ZSt13copy_backwardIPPcS1_ET0_T_S3_S2_
 9452      00
 9453 0107 E9D20000 		jmp	.L489
 9453      00
 9454              	.L484:
 9455              	.LBB85:
 921:/usr/include/c++/5/bits/deque.tcc **** 			       __new_nstart + __old_num_nodes);
 922:/usr/include/c++/5/bits/deque.tcc **** 	}
 923:/usr/include/c++/5/bits/deque.tcc ****       else
 924:/usr/include/c++/5/bits/deque.tcc **** 	{
 925:/usr/include/c++/5/bits/deque.tcc **** 	  size_type __new_map_size = this->_M_impl._M_map_size
 926:/usr/include/c++/5/bits/deque.tcc **** 	                             + std::max(this->_M_impl._M_map_size,
 9456              		.loc 36 926 0
 9457 010c 488B45B8 		movq	-72(%rbp), %rax
 9458 0110 488B5808 		movq	8(%rax), %rbx
 9459 0114 488B45B8 		movq	-72(%rbp), %rax
 9460 0118 488D5008 		leaq	8(%rax), %rdx
 9461 011c 488D45B0 		leaq	-80(%rbp), %rax
 9462 0120 4889C6   		movq	%rax, %rsi
 9463 0123 4889D7   		movq	%rdx, %rdi
 9464 0126 E8000000 		call	_ZSt3maxImERKT_S2_S2_
 9464      00
 927:/usr/include/c++/5/bits/deque.tcc **** 						__nodes_to_add) + 2;
 9465              		.loc 36 927 0
 9466 012b 488B00   		movq	(%rax), %rax
 9467 012e 4801D8   		addq	%rbx, %rax
 9468 0131 4883C002 		addq	$2, %rax
 9469 0135 488945E0 		movq	%rax, -32(%rbp)
 928:/usr/include/c++/5/bits/deque.tcc **** 
 929:/usr/include/c++/5/bits/deque.tcc **** 	  _Map_pointer __new_map = this->_M_allocate_map(__new_map_size);
 9470              		.loc 36 929 0
 9471 0139 488B45B8 		movq	-72(%rbp), %rax
 9472 013d 488B55E0 		movq	-32(%rbp), %rdx
 9473 0141 4889D6   		movq	%rdx, %rsi
 9474 0144 4889C7   		movq	%rax, %rdi
 9475 0147 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE15_M_allocate_mapEm
 9475      00
 9476 014c 488945E8 		movq	%rax, -24(%rbp)
 930:/usr/include/c++/5/bits/deque.tcc **** 	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 931:/usr/include/c++/5/bits/deque.tcc **** 	                 + (__add_at_front ? __nodes_to_add : 0);
 9477              		.loc 36 931 0
 9478 0150 488B45E0 		movq	-32(%rbp), %rax
 9479 0154 482B45D8 		subq	-40(%rbp), %rax
 9480 0158 48D1E8   		shrq	%rax
 9481 015b 488D14C5 		leaq	0(,%rax,8), %rdx
 9481      00000000 
 9482 0163 807DAC00 		cmpb	$0, -84(%rbp)
 9483 0167 740A     		je	.L490
 9484              		.loc 36 931 0 is_stmt 0 discriminator 1
 9485 0169 488B45B0 		movq	-80(%rbp), %rax
 9486 016d 48C1E003 		salq	$3, %rax
 9487 0171 EB05     		jmp	.L491
 9488              	.L490:
 9489              		.loc 36 931 0 discriminator 2
 9490 0173 B8000000 		movl	$0, %eax
 9490      00
 9491              	.L491:
GAS LISTING /tmp/ccX8BQhk.s 			page 473


 9492              		.loc 36 931 0 discriminator 4
 9493 0178 4801C2   		addq	%rax, %rdx
 930:/usr/include/c++/5/bits/deque.tcc **** 	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 9494              		.loc 36 930 0 is_stmt 1 discriminator 4
 9495 017b 488B45E8 		movq	-24(%rbp), %rax
 9496 017f 4801D0   		addq	%rdx, %rax
 9497 0182 488945C8 		movq	%rax, -56(%rbp)
 932:/usr/include/c++/5/bits/deque.tcc **** 	  std::copy(this->_M_impl._M_start._M_node,
 933:/usr/include/c++/5/bits/deque.tcc **** 		    this->_M_impl._M_finish._M_node + 1,
 9498              		.loc 36 933 0 discriminator 4
 9499 0186 488B45B8 		movq	-72(%rbp), %rax
 9500 018a 488B4048 		movq	72(%rax), %rax
 932:/usr/include/c++/5/bits/deque.tcc **** 	  std::copy(this->_M_impl._M_start._M_node,
 9501              		.loc 36 932 0 discriminator 4
 9502 018e 488D4808 		leaq	8(%rax), %rcx
 9503 0192 488B45B8 		movq	-72(%rbp), %rax
 9504 0196 488B4028 		movq	40(%rax), %rax
 9505 019a 488B55C8 		movq	-56(%rbp), %rdx
 9506 019e 4889CE   		movq	%rcx, %rsi
 9507 01a1 4889C7   		movq	%rax, %rdi
 9508 01a4 E8000000 		call	_ZSt4copyIPPcS1_ET0_T_S3_S2_
 9508      00
 934:/usr/include/c++/5/bits/deque.tcc **** 		    __new_nstart);
 935:/usr/include/c++/5/bits/deque.tcc **** 	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 9509              		.loc 36 935 0 discriminator 4
 9510 01a9 488B45B8 		movq	-72(%rbp), %rax
 9511 01ad 488B5008 		movq	8(%rax), %rdx
 9512 01b1 488B45B8 		movq	-72(%rbp), %rax
 9513 01b5 488B08   		movq	(%rax), %rcx
 9514 01b8 488B45B8 		movq	-72(%rbp), %rax
 9515 01bc 4889CE   		movq	%rcx, %rsi
 9516 01bf 4889C7   		movq	%rax, %rdi
 9517 01c2 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE17_M_deallocate_mapEPPcm
 9517      00
 936:/usr/include/c++/5/bits/deque.tcc **** 
 937:/usr/include/c++/5/bits/deque.tcc **** 	  this->_M_impl._M_map = __new_map;
 9518              		.loc 36 937 0 discriminator 4
 9519 01c7 488B45B8 		movq	-72(%rbp), %rax
 9520 01cb 488B55E8 		movq	-24(%rbp), %rdx
 9521 01cf 488910   		movq	%rdx, (%rax)
 938:/usr/include/c++/5/bits/deque.tcc **** 	  this->_M_impl._M_map_size = __new_map_size;
 9522              		.loc 36 938 0 discriminator 4
 9523 01d2 488B45B8 		movq	-72(%rbp), %rax
 9524 01d6 488B55E0 		movq	-32(%rbp), %rdx
 9525 01da 48895008 		movq	%rdx, 8(%rax)
 9526              	.L489:
 9527              	.LBE85:
 9528              	.LBE84:
 939:/usr/include/c++/5/bits/deque.tcc **** 	}
 940:/usr/include/c++/5/bits/deque.tcc **** 
 941:/usr/include/c++/5/bits/deque.tcc ****       this->_M_impl._M_start._M_set_node(__new_nstart);
 9529              		.loc 36 941 0
 9530 01de 488B45B8 		movq	-72(%rbp), %rax
 9531 01e2 488D5010 		leaq	16(%rax), %rdx
 9532 01e6 488B45C8 		movq	-56(%rbp), %rax
 9533 01ea 4889C6   		movq	%rax, %rsi
 9534 01ed 4889D7   		movq	%rdx, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 474


 9535 01f0 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
 9535      00
 942:/usr/include/c++/5/bits/deque.tcc ****       this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
 9536              		.loc 36 942 0
 9537 01f5 488B45D0 		movq	-48(%rbp), %rax
 9538 01f9 48C1E003 		salq	$3, %rax
 9539 01fd 488D50F8 		leaq	-8(%rax), %rdx
 9540 0201 488B45C8 		movq	-56(%rbp), %rax
 9541 0205 4801C2   		addq	%rax, %rdx
 9542 0208 488B45B8 		movq	-72(%rbp), %rax
 9543 020c 4883C030 		addq	$48, %rax
 9544 0210 4889D6   		movq	%rdx, %rsi
 9545 0213 4889C7   		movq	%rax, %rdi
 9546 0216 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
 9546      00
 943:/usr/include/c++/5/bits/deque.tcc ****     }
 9547              		.loc 36 943 0
 9548 021b 90       		nop
 9549 021c 4883C458 		addq	$88, %rsp
 9550 0220 5B       		popq	%rbx
 9551 0221 5D       		popq	%rbp
 9552              		.cfi_def_cfa 7, 8
 9553 0222 C3       		ret
 9554              		.cfi_endproc
 9555              	.LFE10580:
 9557              		.section	.rodata
 9558 003c 00000000 		.align 8
 9559              	.LC16:
 9560 0040 64657175 		.string	"deque::_M_new_elements_at_front"
 9560      653A3A5F 
 9560      4D5F6E65 
 9560      775F656C 
 9560      656D656E 
 9561              		.section	.text._ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEm,"axG",@progbits,_ZNSt5dequeIcSaIcEE
 9562              		.align 2
 9563              		.weak	_ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEm
 9565              	_ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEm:
 9566              	.LFB10581:
 851:/usr/include/c++/5/bits/deque.tcc ****     _M_new_elements_at_front(size_type __new_elems)
 9567              		.loc 36 851 0
 9568              		.cfi_startproc
 9569              		.cfi_personality 0x3,__gxx_personality_v0
 9570              		.cfi_lsda 0x3,.LLSDA10581
 9571 0000 55       		pushq	%rbp
 9572              		.cfi_def_cfa_offset 16
 9573              		.cfi_offset 6, -16
 9574 0001 4889E5   		movq	%rsp, %rbp
 9575              		.cfi_def_cfa_register 6
 9576 0004 53       		pushq	%rbx
 9577 0005 4883EC38 		subq	$56, %rsp
 9578              		.cfi_offset 3, -24
 9579 0009 48897DC8 		movq	%rdi, -56(%rbp)
 9580 000d 488975C0 		movq	%rsi, -64(%rbp)
 854:/usr/include/c++/5/bits/deque.tcc **** 	__throw_length_error(__N("deque::_M_new_elements_at_front"));
 9581              		.loc 36 854 0
 9582 0011 488B45C8 		movq	-56(%rbp), %rax
 9583 0015 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 475


 9584 0018 E8000000 		call	_ZNKSt5dequeIcSaIcEE8max_sizeEv
 9584      00
 9585 001d 4889C3   		movq	%rax, %rbx
 9586 0020 488B45C8 		movq	-56(%rbp), %rax
 9587 0024 4889C7   		movq	%rax, %rdi
 9588 0027 E8000000 		call	_ZNKSt5dequeIcSaIcEE4sizeEv
 9588      00
 9589 002c 4829C3   		subq	%rax, %rbx
 9590 002f 4889D8   		movq	%rbx, %rax
 9591 0032 483B45C0 		cmpq	-64(%rbp), %rax
 9592 0036 0F92C0   		setb	%al
 9593 0039 84C0     		testb	%al, %al
 9594 003b 740A     		je	.L493
 855:/usr/include/c++/5/bits/deque.tcc **** 
 9595              		.loc 36 855 0
 9596 003d BF000000 		movl	$.LC16, %edi
 9596      00
 9597              	.LEHB60:
 9598 0042 E8000000 		call	_ZSt20__throw_length_errorPKc
 9598      00
 9599              	.L493:
 857:/usr/include/c++/5/bits/deque.tcc **** 				     / _S_buffer_size());
 9600              		.loc 36 857 0
 9601 0047 E8000000 		call	_ZNSt5dequeIcSaIcEE14_S_buffer_sizeEv
 9601      00
 9602 004c 4889C2   		movq	%rax, %rdx
 858:/usr/include/c++/5/bits/deque.tcc ****       _M_reserve_map_at_front(__new_nodes);
 9603              		.loc 36 858 0
 9604 004f 488B45C0 		movq	-64(%rbp), %rax
 9605 0053 4801D0   		addq	%rdx, %rax
 9606 0056 488D58FF 		leaq	-1(%rax), %rbx
 9607 005a E8000000 		call	_ZNSt5dequeIcSaIcEE14_S_buffer_sizeEv
 9607      00
 9608 005f 4889C1   		movq	%rax, %rcx
 9609 0062 4889D8   		movq	%rbx, %rax
 9610 0065 BA000000 		movl	$0, %edx
 9610      00
 9611 006a 48F7F1   		divq	%rcx
 9612 006d 488945E8 		movq	%rax, -24(%rbp)
 859:/usr/include/c++/5/bits/deque.tcc ****       size_type __i;
 9613              		.loc 36 859 0
 9614 0071 488B55E8 		movq	-24(%rbp), %rdx
 9615 0075 488B45C8 		movq	-56(%rbp), %rax
 9616 0079 4889D6   		movq	%rdx, %rsi
 9617 007c 4889C7   		movq	%rax, %rdi
 9618 007f E8000000 		call	_ZNSt5dequeIcSaIcEE23_M_reserve_map_at_frontEm
 9618      00
 9619              	.LEHE60:
 863:/usr/include/c++/5/bits/deque.tcc ****             *(this->_M_impl._M_start._M_node - __i) = this->_M_allocate_node();
 9620              		.loc 36 863 0
 9621 0084 48C745D8 		movq	$1, -40(%rbp)
 9621      01000000 
 9622              	.L495:
 863:/usr/include/c++/5/bits/deque.tcc ****             *(this->_M_impl._M_start._M_node - __i) = this->_M_allocate_node();
 9623              		.loc 36 863 0 is_stmt 0 discriminator 2
 9624 008c 488B45D8 		movq	-40(%rbp), %rax
 9625 0090 483B45E8 		cmpq	-24(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 476


 9626 0094 0F878E00 		ja	.L502
 9626      0000
 864:/usr/include/c++/5/bits/deque.tcc ****         }
 9627              		.loc 36 864 0 is_stmt 1
 9628 009a 488B45C8 		movq	-56(%rbp), %rax
 9629 009e 488B4028 		movq	40(%rax), %rax
 9630 00a2 488B55D8 		movq	-40(%rbp), %rdx
 9631 00a6 48C1E203 		salq	$3, %rdx
 9632 00aa 48F7DA   		negq	%rdx
 9633 00ad 488D1C10 		leaq	(%rax,%rdx), %rbx
 9634 00b1 488B45C8 		movq	-56(%rbp), %rax
 9635 00b5 4889C7   		movq	%rax, %rdi
 9636              	.LEHB61:
 9637 00b8 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_allocate_nodeEv
 9637      00
 9638              	.LEHE61:
 864:/usr/include/c++/5/bits/deque.tcc ****         }
 9639              		.loc 36 864 0 is_stmt 0 discriminator 1
 9640 00bd 488903   		movq	%rax, (%rbx)
 863:/usr/include/c++/5/bits/deque.tcc ****             *(this->_M_impl._M_start._M_node - __i) = this->_M_allocate_node();
 9641              		.loc 36 863 0 is_stmt 1 discriminator 1
 9642 00c0 488345D8 		addq	$1, -40(%rbp)
 9642      01
 9643 00c5 EBC5     		jmp	.L495
 9644              	.L500:
 9645              	.LBB86:
 866:/usr/include/c++/5/bits/deque.tcc ****         {
 9646              		.loc 36 866 0
 9647 00c7 4889C7   		movq	%rax, %rdi
 9648 00ca E8000000 		call	__cxa_begin_catch
 9648      00
 9649              	.LBB87:
 9650              	.LBB88:
 868:/usr/include/c++/5/bits/deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_start._M_node - __j));
 9651              		.loc 36 868 0
 9652 00cf 48C745E0 		movq	$1, -32(%rbp)
 9652      01000000 
 9653              	.L498:
 868:/usr/include/c++/5/bits/deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_start._M_node - __j));
 9654              		.loc 36 868 0 is_stmt 0 discriminator 3
 9655 00d7 488B45E0 		movq	-32(%rbp), %rax
 9656 00db 483B45D8 		cmpq	-40(%rbp), %rax
 9657 00df 732F     		jnb	.L497
 869:/usr/include/c++/5/bits/deque.tcc ****           __throw_exception_again;
 9658              		.loc 36 869 0 is_stmt 1 discriminator 2
 9659 00e1 488B45C8 		movq	-56(%rbp), %rax
 9660 00e5 488B4028 		movq	40(%rax), %rax
 9661 00e9 488B55E0 		movq	-32(%rbp), %rdx
 9662 00ed 48C1E203 		salq	$3, %rdx
 9663 00f1 48F7DA   		negq	%rdx
 9664 00f4 4801D0   		addq	%rdx, %rax
 9665 00f7 488B10   		movq	(%rax), %rdx
 9666 00fa 488B45C8 		movq	-56(%rbp), %rax
 9667 00fe 4889D6   		movq	%rdx, %rsi
 9668 0101 4889C7   		movq	%rax, %rdi
 9669 0104 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE18_M_deallocate_nodeEPc
 9669      00
GAS LISTING /tmp/ccX8BQhk.s 			page 477


 868:/usr/include/c++/5/bits/deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_start._M_node - __j));
 9670              		.loc 36 868 0 discriminator 2
 9671 0109 488345E0 		addq	$1, -32(%rbp)
 9671      01
 9672 010e EBC7     		jmp	.L498
 9673              	.L497:
 9674              	.LEHB62:
 9675              	.LBE88:
 870:/usr/include/c++/5/bits/deque.tcc ****         }
 9676              		.loc 36 870 0
 9677 0110 E8000000 		call	__cxa_rethrow
 9677      00
 9678              	.LEHE62:
 9679              	.L501:
 9680 0115 4889C3   		movq	%rax, %rbx
 9681              	.LBE87:
 866:/usr/include/c++/5/bits/deque.tcc ****         {
 9682              		.loc 36 866 0
 9683 0118 E8000000 		call	__cxa_end_catch
 9683      00
 9684 011d 4889D8   		movq	%rbx, %rax
 9685 0120 4889C7   		movq	%rax, %rdi
 9686              	.LEHB63:
 9687 0123 E8000000 		call	_Unwind_Resume
 9687      00
 9688              	.LEHE63:
 9689              	.L502:
 9690              	.LBE86:
 872:/usr/include/c++/5/bits/deque.tcc **** 
 9691              		.loc 36 872 0
 9692 0128 90       		nop
 9693 0129 4883C438 		addq	$56, %rsp
 9694 012d 5B       		popq	%rbx
 9695 012e 5D       		popq	%rbp
 9696              		.cfi_def_cfa 7, 8
 9697 012f C3       		ret
 9698              		.cfi_endproc
 9699              	.LFE10581:
 9700              		.section	.gcc_except_table
 9701 0193 00       		.align 4
 9702              	.LLSDA10581:
 9703 0194 FF       		.byte	0xff
 9704 0195 03       		.byte	0x3
 9705 0196 1D       		.uleb128 .LLSDATT10581-.LLSDATTD10581
 9706              	.LLSDATTD10581:
 9707 0197 01       		.byte	0x1
 9708 0198 15       		.uleb128 .LLSDACSE10581-.LLSDACSB10581
 9709              	.LLSDACSB10581:
 9710 0199 42       		.uleb128 .LEHB60-.LFB10581
 9711 019a 42       		.uleb128 .LEHE60-.LEHB60
 9712 019b 00       		.uleb128 0
 9713 019c 00       		.uleb128 0
 9714 019d B801     		.uleb128 .LEHB61-.LFB10581
 9715 019f 05       		.uleb128 .LEHE61-.LEHB61
 9716 01a0 C701     		.uleb128 .L500-.LFB10581
 9717 01a2 01       		.uleb128 0x1
 9718 01a3 9002     		.uleb128 .LEHB62-.LFB10581
GAS LISTING /tmp/ccX8BQhk.s 			page 478


 9719 01a5 05       		.uleb128 .LEHE62-.LEHB62
 9720 01a6 9502     		.uleb128 .L501-.LFB10581
 9721 01a8 00       		.uleb128 0
 9722 01a9 A302     		.uleb128 .LEHB63-.LFB10581
 9723 01ab 05       		.uleb128 .LEHE63-.LEHB63
 9724 01ac 00       		.uleb128 0
 9725 01ad 00       		.uleb128 0
 9726              	.LLSDACSE10581:
 9727 01ae 01       		.byte	0x1
 9728 01af 00       		.byte	0
 9729              		.align 4
 9730 01b0 00000000 		.long	0
 9731              	
 9732              	.LLSDATT10581:
 9733              		.section	.text._ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEm,"axG",@progbits,_ZNSt5dequeIcSaIcEE
 9735              		.section	.text._ZNKSt15_Deque_iteratorIcRcPcEmiEl,"axG",@progbits,_ZNKSt15_Deque_iteratorIcRcPcEmi
 9736              		.align 2
 9737              		.weak	_ZNKSt15_Deque_iteratorIcRcPcEmiEl
 9739              	_ZNKSt15_Deque_iteratorIcRcPcEmiEl:
 9740              	.LFB10582:
 236:/usr/include/c++/5/bits/stl_deque.h ****       {
 9741              		.loc 3 236 0
 9742              		.cfi_startproc
 9743 0000 55       		pushq	%rbp
 9744              		.cfi_def_cfa_offset 16
 9745              		.cfi_offset 6, -16
 9746 0001 4889E5   		movq	%rsp, %rbp
 9747              		.cfi_def_cfa_register 6
 9748 0004 4883EC50 		subq	$80, %rsp
 9749 0008 48897DC8 		movq	%rdi, -56(%rbp)
 9750 000c 488975C0 		movq	%rsi, -64(%rbp)
 9751 0010 488955B8 		movq	%rdx, -72(%rbp)
 236:/usr/include/c++/5/bits/stl_deque.h ****       {
 9752              		.loc 3 236 0
 9753 0014 64488B04 		movq	%fs:40, %rax
 9753      25280000 
 9753      00
 9754 001d 488945F8 		movq	%rax, -8(%rbp)
 9755 0021 31C0     		xorl	%eax, %eax
 238:/usr/include/c++/5/bits/stl_deque.h **** 	return __tmp -= __n;
 9756              		.loc 3 238 0
 9757 0023 488B55C0 		movq	-64(%rbp), %rdx
 9758 0027 488D45D0 		leaq	-48(%rbp), %rax
 9759 002b 4889D6   		movq	%rdx, %rsi
 9760 002e 4889C7   		movq	%rax, %rdi
 9761 0031 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 9761      00
 239:/usr/include/c++/5/bits/stl_deque.h ****       }
 9762              		.loc 3 239 0
 9763 0036 488B55B8 		movq	-72(%rbp), %rdx
 9764 003a 488D45D0 		leaq	-48(%rbp), %rax
 9765 003e 4889D6   		movq	%rdx, %rsi
 9766 0041 4889C7   		movq	%rax, %rdi
 9767 0044 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEmIEl
 9767      00
 9768 0049 4889C2   		movq	%rax, %rdx
 9769 004c 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 479


 9770 0050 4889D6   		movq	%rdx, %rsi
 9771 0053 4889C7   		movq	%rax, %rdi
 9772 0056 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 9772      00
 240:/usr/include/c++/5/bits/stl_deque.h **** 
 9773              		.loc 3 240 0
 9774 005b 488B45C8 		movq	-56(%rbp), %rax
 9775 005f 488B4DF8 		movq	-8(%rbp), %rcx
 9776 0063 6448330C 		xorq	%fs:40, %rcx
 9776      25280000 
 9776      00
 9777 006c 7405     		je	.L505
 9778 006e E8000000 		call	__stack_chk_fail
 9778      00
 9779              	.L505:
 9780 0073 C9       		leave
 9781              		.cfi_def_cfa 7, 8
 9782 0074 C3       		ret
 9783              		.cfi_endproc
 9784              	.LFE10582:
 9786              		.section	.text._ZSt18uninitialized_copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_,"axG",@progbits,
 9787              		.weak	_ZSt18uninitialized_copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
 9789              	_ZSt18uninitialized_copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_:
 9790              	.LFB10583:
 107:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 9791              		.loc 38 107 0
 9792              		.cfi_startproc
 9793 0000 55       		pushq	%rbp
 9794              		.cfi_def_cfa_offset 16
 9795              		.cfi_offset 6, -16
 9796 0001 4889E5   		movq	%rsp, %rbp
 9797              		.cfi_def_cfa_register 6
 9798 0004 4883EC60 		subq	$96, %rsp
 9799 0008 48897DB8 		movq	%rdi, -72(%rbp)
 9800 000c 488975B0 		movq	%rsi, -80(%rbp)
 9801 0010 488955A8 		movq	%rdx, -88(%rbp)
 9802 0014 48894DA0 		movq	%rcx, -96(%rbp)
 107:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 9803              		.loc 38 107 0
 9804 0018 64488B04 		movq	%fs:40, %rax
 9804      25280000 
 9804      00
 9805 0021 488945F8 		movq	%rax, -8(%rbp)
 9806 0025 31C0     		xorl	%eax, %eax
 120:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 9807              		.loc 38 120 0
 9808 0027 C645CF01 		movb	$1, -49(%rbp)
 126:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 9809              		.loc 38 126 0
 9810 002b 488B55A0 		movq	-96(%rbp), %rdx
 9811 002f 488D45D0 		leaq	-48(%rbp), %rax
 9812 0033 4889D6   		movq	%rdx, %rsi
 9813 0036 4889C7   		movq	%rax, %rdi
 9814 0039 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 9814      00
 9815 003e 488B45B8 		movq	-72(%rbp), %rax
 9816 0042 488D4DD0 		leaq	-48(%rbp), %rcx
GAS LISTING /tmp/ccX8BQhk.s 			page 480


 9817 0046 488B55A8 		movq	-88(%rbp), %rdx
 9818 004a 488B75B0 		movq	-80(%rbp), %rsi
 9819 004e 4889C7   		movq	%rax, %rdi
 9820 0051 E8000000 		call	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKcSt15_Deque_iteratorIcRcPcEEET0_T_S9_S8_
 9820      00
 127:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 9821              		.loc 38 127 0
 9822 0056 488B45B8 		movq	-72(%rbp), %rax
 9823 005a 488B7DF8 		movq	-8(%rbp), %rdi
 9824 005e 6448333C 		xorq	%fs:40, %rdi
 9824      25280000 
 9824      00
 9825 0067 7405     		je	.L508
 9826 0069 E8000000 		call	__stack_chk_fail
 9826      00
 9827              	.L508:
 9828 006e C9       		leave
 9829              		.cfi_def_cfa 7, 8
 9830 006f C3       		ret
 9831              		.cfi_endproc
 9832              	.LFE10583:
 9834              		.section	.rodata
 9835              		.align 8
 9836              	.LC17:
 9837 0060 64657175 		.string	"deque::_M_new_elements_at_back"
 9837      653A3A5F 
 9837      4D5F6E65 
 9837      775F656C 
 9837      656D656E 
 9838              		.section	.text._ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEm,"axG",@progbits,_ZNSt5dequeIcSaIcEE2
 9839              		.align 2
 9840              		.weak	_ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEm
 9842              	_ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEm:
 9843              	.LFB10584:
 876:/usr/include/c++/5/bits/deque.tcc ****     _M_new_elements_at_back(size_type __new_elems)
 9844              		.loc 36 876 0
 9845              		.cfi_startproc
 9846              		.cfi_personality 0x3,__gxx_personality_v0
 9847              		.cfi_lsda 0x3,.LLSDA10584
 9848 0000 55       		pushq	%rbp
 9849              		.cfi_def_cfa_offset 16
 9850              		.cfi_offset 6, -16
 9851 0001 4889E5   		movq	%rsp, %rbp
 9852              		.cfi_def_cfa_register 6
 9853 0004 53       		pushq	%rbx
 9854 0005 4883EC38 		subq	$56, %rsp
 9855              		.cfi_offset 3, -24
 9856 0009 48897DC8 		movq	%rdi, -56(%rbp)
 9857 000d 488975C0 		movq	%rsi, -64(%rbp)
 879:/usr/include/c++/5/bits/deque.tcc **** 	__throw_length_error(__N("deque::_M_new_elements_at_back"));
 9858              		.loc 36 879 0
 9859 0011 488B45C8 		movq	-56(%rbp), %rax
 9860 0015 4889C7   		movq	%rax, %rdi
 9861 0018 E8000000 		call	_ZNKSt5dequeIcSaIcEE8max_sizeEv
 9861      00
 9862 001d 4889C3   		movq	%rax, %rbx
 9863 0020 488B45C8 		movq	-56(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 481


 9864 0024 4889C7   		movq	%rax, %rdi
 9865 0027 E8000000 		call	_ZNKSt5dequeIcSaIcEE4sizeEv
 9865      00
 9866 002c 4829C3   		subq	%rax, %rbx
 9867 002f 4889D8   		movq	%rbx, %rax
 9868 0032 483B45C0 		cmpq	-64(%rbp), %rax
 9869 0036 0F92C0   		setb	%al
 9870 0039 84C0     		testb	%al, %al
 9871 003b 740A     		je	.L510
 880:/usr/include/c++/5/bits/deque.tcc **** 
 9872              		.loc 36 880 0
 9873 003d BF000000 		movl	$.LC17, %edi
 9873      00
 9874              	.LEHB64:
 9875 0042 E8000000 		call	_ZSt20__throw_length_errorPKc
 9875      00
 9876              	.L510:
 882:/usr/include/c++/5/bits/deque.tcc **** 				     / _S_buffer_size());
 9877              		.loc 36 882 0
 9878 0047 E8000000 		call	_ZNSt5dequeIcSaIcEE14_S_buffer_sizeEv
 9878      00
 9879 004c 4889C2   		movq	%rax, %rdx
 883:/usr/include/c++/5/bits/deque.tcc ****       _M_reserve_map_at_back(__new_nodes);
 9880              		.loc 36 883 0
 9881 004f 488B45C0 		movq	-64(%rbp), %rax
 9882 0053 4801D0   		addq	%rdx, %rax
 9883 0056 488D58FF 		leaq	-1(%rax), %rbx
 9884 005a E8000000 		call	_ZNSt5dequeIcSaIcEE14_S_buffer_sizeEv
 9884      00
 9885 005f 4889C1   		movq	%rax, %rcx
 9886 0062 4889D8   		movq	%rbx, %rax
 9887 0065 BA000000 		movl	$0, %edx
 9887      00
 9888 006a 48F7F1   		divq	%rcx
 9889 006d 488945E8 		movq	%rax, -24(%rbp)
 884:/usr/include/c++/5/bits/deque.tcc ****       size_type __i;
 9890              		.loc 36 884 0
 9891 0071 488B55E8 		movq	-24(%rbp), %rdx
 9892 0075 488B45C8 		movq	-56(%rbp), %rax
 9893 0079 4889D6   		movq	%rdx, %rsi
 9894 007c 4889C7   		movq	%rax, %rdi
 9895 007f E8000000 		call	_ZNSt5dequeIcSaIcEE22_M_reserve_map_at_backEm
 9895      00
 9896              	.LEHE64:
 888:/usr/include/c++/5/bits/deque.tcc ****             *(this->_M_impl._M_finish._M_node + __i) = this->_M_allocate_node();
 9897              		.loc 36 888 0
 9898 0084 48C745D8 		movq	$1, -40(%rbp)
 9898      01000000 
 9899              	.L512:
 888:/usr/include/c++/5/bits/deque.tcc ****             *(this->_M_impl._M_finish._M_node + __i) = this->_M_allocate_node();
 9900              		.loc 36 888 0 is_stmt 0 discriminator 2
 9901 008c 488B45D8 		movq	-40(%rbp), %rax
 9902 0090 483B45E8 		cmpq	-24(%rbp), %rax
 9903 0094 0F878800 		ja	.L519
 9903      0000
 889:/usr/include/c++/5/bits/deque.tcc ****         }
 9904              		.loc 36 889 0 is_stmt 1
GAS LISTING /tmp/ccX8BQhk.s 			page 482


 9905 009a 488B45C8 		movq	-56(%rbp), %rax
 9906 009e 488B4048 		movq	72(%rax), %rax
 9907 00a2 488B55D8 		movq	-40(%rbp), %rdx
 9908 00a6 48C1E203 		salq	$3, %rdx
 9909 00aa 488D1C10 		leaq	(%rax,%rdx), %rbx
 9910 00ae 488B45C8 		movq	-56(%rbp), %rax
 9911 00b2 4889C7   		movq	%rax, %rdi
 9912              	.LEHB65:
 9913 00b5 E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE16_M_allocate_nodeEv
 9913      00
 9914              	.LEHE65:
 889:/usr/include/c++/5/bits/deque.tcc ****         }
 9915              		.loc 36 889 0 is_stmt 0 discriminator 1
 9916 00ba 488903   		movq	%rax, (%rbx)
 888:/usr/include/c++/5/bits/deque.tcc ****             *(this->_M_impl._M_finish._M_node + __i) = this->_M_allocate_node();
 9917              		.loc 36 888 0 is_stmt 1 discriminator 1
 9918 00bd 488345D8 		addq	$1, -40(%rbp)
 9918      01
 9919 00c2 EBC8     		jmp	.L512
 9920              	.L517:
 9921              	.LBB89:
 891:/usr/include/c++/5/bits/deque.tcc ****         {
 9922              		.loc 36 891 0
 9923 00c4 4889C7   		movq	%rax, %rdi
 9924 00c7 E8000000 		call	__cxa_begin_catch
 9924      00
 9925              	.LBB90:
 9926              	.LBB91:
 893:/usr/include/c++/5/bits/deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_finish._M_node + __j));
 9927              		.loc 36 893 0
 9928 00cc 48C745E0 		movq	$1, -32(%rbp)
 9928      01000000 
 9929              	.L515:
 893:/usr/include/c++/5/bits/deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_finish._M_node + __j));
 9930              		.loc 36 893 0 is_stmt 0 discriminator 3
 9931 00d4 488B45E0 		movq	-32(%rbp), %rax
 9932 00d8 483B45D8 		cmpq	-40(%rbp), %rax
 9933 00dc 732C     		jnb	.L514
 894:/usr/include/c++/5/bits/deque.tcc ****           __throw_exception_again;
 9934              		.loc 36 894 0 is_stmt 1 discriminator 2
 9935 00de 488B45C8 		movq	-56(%rbp), %rax
 9936 00e2 488B4048 		movq	72(%rax), %rax
 9937 00e6 488B55E0 		movq	-32(%rbp), %rdx
 9938 00ea 48C1E203 		salq	$3, %rdx
 9939 00ee 4801D0   		addq	%rdx, %rax
 9940 00f1 488B10   		movq	(%rax), %rdx
 9941 00f4 488B45C8 		movq	-56(%rbp), %rax
 9942 00f8 4889D6   		movq	%rdx, %rsi
 9943 00fb 4889C7   		movq	%rax, %rdi
 9944 00fe E8000000 		call	_ZNSt11_Deque_baseIcSaIcEE18_M_deallocate_nodeEPc
 9944      00
 893:/usr/include/c++/5/bits/deque.tcc ****             _M_deallocate_node(*(this->_M_impl._M_finish._M_node + __j));
 9945              		.loc 36 893 0 discriminator 2
 9946 0103 488345E0 		addq	$1, -32(%rbp)
 9946      01
 9947 0108 EBCA     		jmp	.L515
 9948              	.L514:
GAS LISTING /tmp/ccX8BQhk.s 			page 483


 9949              	.LEHB66:
 9950              	.LBE91:
 895:/usr/include/c++/5/bits/deque.tcc ****         }
 9951              		.loc 36 895 0
 9952 010a E8000000 		call	__cxa_rethrow
 9952      00
 9953              	.LEHE66:
 9954              	.L518:
 9955 010f 4889C3   		movq	%rax, %rbx
 9956              	.LBE90:
 891:/usr/include/c++/5/bits/deque.tcc ****         {
 9957              		.loc 36 891 0
 9958 0112 E8000000 		call	__cxa_end_catch
 9958      00
 9959 0117 4889D8   		movq	%rbx, %rax
 9960 011a 4889C7   		movq	%rax, %rdi
 9961              	.LEHB67:
 9962 011d E8000000 		call	_Unwind_Resume
 9962      00
 9963              	.LEHE67:
 9964              	.L519:
 9965              	.LBE89:
 897:/usr/include/c++/5/bits/deque.tcc **** 
 9966              		.loc 36 897 0
 9967 0122 90       		nop
 9968 0123 4883C438 		addq	$56, %rsp
 9969 0127 5B       		popq	%rbx
 9970 0128 5D       		popq	%rbp
 9971              		.cfi_def_cfa 7, 8
 9972 0129 C3       		ret
 9973              		.cfi_endproc
 9974              	.LFE10584:
 9975              		.section	.gcc_except_table
 9976              		.align 4
 9977              	.LLSDA10584:
 9978 01b4 FF       		.byte	0xff
 9979 01b5 03       		.byte	0x3
 9980 01b6 1D       		.uleb128 .LLSDATT10584-.LLSDATTD10584
 9981              	.LLSDATTD10584:
 9982 01b7 01       		.byte	0x1
 9983 01b8 15       		.uleb128 .LLSDACSE10584-.LLSDACSB10584
 9984              	.LLSDACSB10584:
 9985 01b9 42       		.uleb128 .LEHB64-.LFB10584
 9986 01ba 42       		.uleb128 .LEHE64-.LEHB64
 9987 01bb 00       		.uleb128 0
 9988 01bc 00       		.uleb128 0
 9989 01bd B501     		.uleb128 .LEHB65-.LFB10584
 9990 01bf 05       		.uleb128 .LEHE65-.LEHB65
 9991 01c0 C401     		.uleb128 .L517-.LFB10584
 9992 01c2 01       		.uleb128 0x1
 9993 01c3 8A02     		.uleb128 .LEHB66-.LFB10584
 9994 01c5 05       		.uleb128 .LEHE66-.LEHB66
 9995 01c6 8F02     		.uleb128 .L518-.LFB10584
 9996 01c8 00       		.uleb128 0
 9997 01c9 9D02     		.uleb128 .LEHB67-.LFB10584
 9998 01cb 05       		.uleb128 .LEHE67-.LEHB67
 9999 01cc 00       		.uleb128 0
GAS LISTING /tmp/ccX8BQhk.s 			page 484


 10000 01cd 00       		.uleb128 0
 10001              	.LLSDACSE10584:
 10002 01ce 01       		.byte	0x1
 10003 01cf 00       		.byte	0
 10004              		.align 4
 10005 01d0 00000000 		.long	0
 10006              	
 10007              	.LLSDATT10584:
 10008              		.section	.text._ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEm,"axG",@progbits,_ZNSt5dequeIcSaIcEE2
 10010              		.section	.text._ZStmiIcRcPcENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_,"axG",@progbi
 10011              		.weak	_ZStmiIcRcPcENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_
 10013              	_ZStmiIcRcPcENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_:
 10014              	.LFB10585:
 349:/usr/include/c++/5/bits/stl_deque.h **** 	      const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 10015              		.loc 3 349 0
 10016              		.cfi_startproc
 10017 0000 55       		pushq	%rbp
 10018              		.cfi_def_cfa_offset 16
 10019              		.cfi_offset 6, -16
 10020 0001 4889E5   		movq	%rsp, %rbp
 10021              		.cfi_def_cfa_register 6
 10022 0004 4883EC10 		subq	$16, %rsp
 10023 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10024 000c 488975F0 		movq	%rsi, -16(%rbp)
 353:/usr/include/c++/5/bits/stl_deque.h **** 	* (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)
 10025              		.loc 3 353 0
 10026 0010 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
 10026      00
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 10027              		.loc 3 355 0
 10028 0015 4889C2   		movq	%rax, %rdx
 354:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 10029              		.loc 3 354 0
 10030 0018 488B45F8 		movq	-8(%rbp), %rax
 10031 001c 488B4018 		movq	24(%rax), %rax
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 10032              		.loc 3 355 0
 10033 0020 4889C1   		movq	%rax, %rcx
 354:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 10034              		.loc 3 354 0
 10035 0023 488B45F0 		movq	-16(%rbp), %rax
 10036 0027 488B4018 		movq	24(%rax), %rax
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 10037              		.loc 3 355 0
 10038 002b 4829C1   		subq	%rax, %rcx
 10039 002e 4889C8   		movq	%rcx, %rax
 10040 0031 48C1F803 		sarq	$3, %rax
 10041 0035 4883E801 		subq	$1, %rax
 10042 0039 480FAFD0 		imulq	%rax, %rdx
 354:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
 10043              		.loc 3 354 0
 10044 003d 488B45F8 		movq	-8(%rbp), %rax
 10045 0041 488B00   		movq	(%rax), %rax
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 10046              		.loc 3 355 0
 10047 0044 4889C1   		movq	%rax, %rcx
 354:/usr/include/c++/5/bits/stl_deque.h **** 	+ (__y._M_last - __y._M_cur);
GAS LISTING /tmp/ccX8BQhk.s 			page 485


 10048              		.loc 3 354 0
 10049 0047 488B45F8 		movq	-8(%rbp), %rax
 10050 004b 488B4008 		movq	8(%rax), %rax
 355:/usr/include/c++/5/bits/stl_deque.h ****     }
 10051              		.loc 3 355 0
 10052 004f 4829C1   		subq	%rax, %rcx
 10053 0052 4889C8   		movq	%rcx, %rax
 10054 0055 4801C2   		addq	%rax, %rdx
 10055 0058 488B45F0 		movq	-16(%rbp), %rax
 10056 005c 488B4010 		movq	16(%rax), %rax
 10057 0060 4889C1   		movq	%rax, %rcx
 10058 0063 488B45F0 		movq	-16(%rbp), %rax
 10059 0067 488B00   		movq	(%rax), %rax
 10060 006a 4829C1   		subq	%rax, %rcx
 10061 006d 4889C8   		movq	%rcx, %rax
 10062 0070 4801D0   		addq	%rdx, %rax
 356:/usr/include/c++/5/bits/stl_deque.h **** 
 10063              		.loc 3 356 0
 10064 0073 C9       		leave
 10065              		.cfi_def_cfa 7, 8
 10066 0074 C3       		ret
 10067              		.cfi_endproc
 10068              	.LFE10585:
 10070              		.section	.text._ZNKSt5dequeIcSaIcEE4sizeEv,"axG",@progbits,_ZNKSt5dequeIcSaIcEE4sizeEv,comdat
 10071              		.align 2
 10072              		.weak	_ZNKSt5dequeIcSaIcEE4sizeEv
 10074              	_ZNKSt5dequeIcSaIcEE4sizeEv:
 10075              	.LFB10586:
1263:/usr/include/c++/5/bits/stl_deque.h ****       { return this->_M_impl._M_finish - this->_M_impl._M_start; }
 10076              		.loc 3 1263 0
 10077              		.cfi_startproc
 10078 0000 55       		pushq	%rbp
 10079              		.cfi_def_cfa_offset 16
 10080              		.cfi_offset 6, -16
 10081 0001 4889E5   		movq	%rsp, %rbp
 10082              		.cfi_def_cfa_register 6
 10083 0004 4883EC10 		subq	$16, %rsp
 10084 0008 48897DF8 		movq	%rdi, -8(%rbp)
1264:/usr/include/c++/5/bits/stl_deque.h **** 
 10085              		.loc 3 1264 0
 10086 000c 488B45F8 		movq	-8(%rbp), %rax
 10087 0010 488D5010 		leaq	16(%rax), %rdx
 10088 0014 488B45F8 		movq	-8(%rbp), %rax
 10089 0018 4883C030 		addq	$48, %rax
 10090 001c 4889D6   		movq	%rdx, %rsi
 10091 001f 4889C7   		movq	%rax, %rdi
 10092 0022 E8000000 		call	_ZStmiIcRcPcENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_
 10092      00
 10093 0027 C9       		leave
 10094              		.cfi_def_cfa 7, 8
 10095 0028 C3       		ret
 10096              		.cfi_endproc
 10097              	.LFE10586:
 10099              		.section	.text._ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_,"ax
 10100              		.weak	_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_
 10102              	_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_:
 10103              	.LFB10587:
GAS LISTING /tmp/ccX8BQhk.s 			page 486


 282:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 283:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 284:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 285:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 286:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 10104              		.loc 38 286 0
 10105              		.cfi_startproc
 10106              		.cfi_personality 0x3,__gxx_personality_v0
 10107              		.cfi_lsda 0x3,.LLSDA10587
 10108 0000 55       		pushq	%rbp
 10109              		.cfi_def_cfa_offset 16
 10110              		.cfi_offset 6, -16
 10111 0001 4889E5   		movq	%rsp, %rbp
 10112              		.cfi_def_cfa_register 6
 10113 0004 4881ECE0 		subq	$224, %rsp
 10113      000000
 10114 000b 4889BD48 		movq	%rdi, -184(%rbp)
 10114      FFFFFF
 10115 0012 4889B540 		movq	%rsi, -192(%rbp)
 10115      FFFFFF
 10116 0019 48899538 		movq	%rdx, -200(%rbp)
 10116      FFFFFF
 10117 0020 48898D30 		movq	%rcx, -208(%rbp)
 10117      FFFFFF
 10118 0027 4C898528 		movq	%r8, -216(%rbp)
 10118      FFFFFF
 10119              		.loc 38 286 0
 10120 002e 64488B04 		movq	%fs:40, %rax
 10120      25280000 
 10120      00
 10121 0037 488945F8 		movq	%rax, -8(%rbp)
 10122 003b 31C0     		xorl	%eax, %eax
 287:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 288:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 289:/usr/include/c++/5/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 290:/usr/include/c++/5/bits/stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 291:/usr/include/c++/5/bits/stl_uninitialized.h **** 					 __result, __alloc);
 10123              		.loc 38 291 0
 10124 003d 488B9530 		movq	-208(%rbp), %rdx
 10124      FFFFFF
 10125 0044 488D45D0 		leaq	-48(%rbp), %rax
 10126 0048 4889D6   		movq	%rdx, %rsi
 10127 004b 4889C7   		movq	%rax, %rdi
 10128 004e E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10128      00
 10129 0053 488B9538 		movq	-200(%rbp), %rdx
 10129      FFFFFF
 10130 005a 488D4590 		leaq	-112(%rbp), %rax
 10131 005e 4889D6   		movq	%rdx, %rsi
 10132 0061 4889C7   		movq	%rax, %rdi
 10133 0064 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10133      00
 10134 0069 488D45B0 		leaq	-80(%rbp), %rax
 10135 006d 488D5590 		leaq	-112(%rbp), %rdx
 10136 0071 4889D6   		movq	%rdx, %rsi
 10137 0074 4889C7   		movq	%rax, %rdi
 10138              	.LEHB68:
GAS LISTING /tmp/ccX8BQhk.s 			page 487


 10139 0077 E8000000 		call	_ZSt18make_move_iteratorISt15_Deque_iteratorIcRcPcEESt13move_iteratorIT_ES5_
 10139      00
 10140              	.LEHE68:
 10141              		.loc 38 291 0 is_stmt 0 discriminator 2
 10142 007c 488B9540 		movq	-192(%rbp), %rdx
 10142      FFFFFF
 10143 0083 488D8550 		leaq	-176(%rbp), %rax
 10143      FFFFFF
 10144 008a 4889D6   		movq	%rdx, %rsi
 10145 008d 4889C7   		movq	%rax, %rdi
 10146 0090 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10146      00
 10147 0095 488D8570 		leaq	-144(%rbp), %rax
 10147      FFFFFF
 10148 009c 488D9550 		leaq	-176(%rbp), %rdx
 10148      FFFFFF
 10149 00a3 4889D6   		movq	%rdx, %rsi
 10150 00a6 4889C7   		movq	%rax, %rdi
 10151              	.LEHB69:
 10152 00a9 E8000000 		call	_ZSt18make_move_iteratorISt15_Deque_iteratorIcRcPcEESt13move_iteratorIT_ES5_
 10152      00
 10153              		.loc 38 291 0 discriminator 4
 10154 00ae 488B8548 		movq	-184(%rbp), %rax
 10154      FFFFFF
 10155 00b5 488BBD28 		movq	-216(%rbp), %rdi
 10155      FFFFFF
 10156 00bc 488D4DD0 		leaq	-48(%rbp), %rcx
 10157 00c0 488D55B0 		leaq	-80(%rbp), %rdx
 10158 00c4 488DB570 		leaq	-144(%rbp), %rsi
 10158      FFFFFF
 10159 00cb 4989F8   		movq	%rdi, %r8
 10160 00ce 4889C7   		movq	%rax, %rdi
 10161 00d1 E8000000 		call	_ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_cET0_T_S7_S6_RSa
 10161      00
 10162              	.LEHE69:
 10163              		.loc 38 291 0
 10164 00d6 EB0A     		jmp	.L531
 10165              	.L530:
 10166 00d8 EB00     		jmp	.L527
 10167              	.L529:
 10168              	.L527:
 10169 00da 4889C7   		movq	%rax, %rdi
 10170              	.LEHB70:
 10171 00dd E8000000 		call	_Unwind_Resume
 10171      00
 10172              	.LEHE70:
 10173              	.L531:
 292:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 10174              		.loc 38 292 0 is_stmt 1
 10175 00e2 488B8548 		movq	-184(%rbp), %rax
 10175      FFFFFF
 10176 00e9 488B4DF8 		movq	-8(%rbp), %rcx
 10177 00ed 6448330C 		xorq	%fs:40, %rcx
 10177      25280000 
 10177      00
 10178 00f6 7405     		je	.L528
 10179 00f8 E8000000 		call	__stack_chk_fail
GAS LISTING /tmp/ccX8BQhk.s 			page 488


 10179      00
 10180              	.L528:
 10181 00fd C9       		leave
 10182              		.cfi_def_cfa 7, 8
 10183 00fe C3       		ret
 10184              		.cfi_endproc
 10185              	.LFE10587:
 10186              		.section	.gcc_except_table
 10187              	.LLSDA10587:
 10188 01d4 FF       		.byte	0xff
 10189 01d5 FF       		.byte	0xff
 10190 01d6 01       		.byte	0x1
 10191 01d7 10       		.uleb128 .LLSDACSE10587-.LLSDACSB10587
 10192              	.LLSDACSB10587:
 10193 01d8 77       		.uleb128 .LEHB68-.LFB10587
 10194 01d9 05       		.uleb128 .LEHE68-.LEHB68
 10195 01da DA01     		.uleb128 .L529-.LFB10587
 10196 01dc 00       		.uleb128 0
 10197 01dd A901     		.uleb128 .LEHB69-.LFB10587
 10198 01df 2D       		.uleb128 .LEHE69-.LEHB69
 10199 01e0 D801     		.uleb128 .L530-.LFB10587
 10200 01e2 00       		.uleb128 0
 10201 01e3 DD01     		.uleb128 .LEHB70-.LFB10587
 10202 01e5 05       		.uleb128 .LEHE70-.LEHB70
 10203 01e6 00       		.uleb128 0
 10204 01e7 00       		.uleb128 0
 10205              	.LLSDACSE10587:
 10206              		.section	.text._ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_,"ax
 10208              		.section	.text._ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_,"axG",@progbits,_ZSt4moveIcESt
 10209              		.weak	_ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_
 10211              	_ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_:
 10212              	.LFB10591:
 422:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 10213              		.loc 3 422 0
 10214              		.cfi_startproc
 10215 0000 55       		pushq	%rbp
 10216              		.cfi_def_cfa_offset 16
 10217              		.cfi_offset 6, -16
 10218 0001 4889E5   		movq	%rsp, %rbp
 10219              		.cfi_def_cfa_register 6
 10220 0004 4881EC90 		subq	$144, %rsp
 10220      000000
 10221 000b 48897D88 		movq	%rdi, -120(%rbp)
 10222 000f 48897580 		movq	%rsi, -128(%rbp)
 10223 0013 48899578 		movq	%rdx, -136(%rbp)
 10223      FFFFFF
 10224 001a 48898D70 		movq	%rcx, -144(%rbp)
 10224      FFFFFF
 422:/usr/include/c++/5/bits/stl_deque.h **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 10225              		.loc 3 422 0
 10226 0021 64488B04 		movq	%fs:40, %rax
 10226      25280000 
 10226      00
 10227 002a 488945F8 		movq	%rax, -8(%rbp)
 10228 002e 31C0     		xorl	%eax, %eax
 427:/usr/include/c++/5/bits/stl_deque.h **** 
 10229              		.loc 3 427 0
GAS LISTING /tmp/ccX8BQhk.s 			page 489


 10230 0030 488B9570 		movq	-144(%rbp), %rdx
 10230      FFFFFF
 10231 0037 488D45D0 		leaq	-48(%rbp), %rax
 10232 003b 4889D6   		movq	%rdx, %rsi
 10233 003e 4889C7   		movq	%rax, %rdi
 10234 0041 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10234      00
 10235 0046 488B9578 		movq	-136(%rbp), %rdx
 10235      FFFFFF
 10236 004d 488D45B0 		leaq	-80(%rbp), %rax
 10237 0051 4889D6   		movq	%rdx, %rsi
 10238 0054 4889C7   		movq	%rax, %rdi
 10239 0057 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_EC1ERKS_IcRcPcE
 10239      00
 10240 005c 488B5580 		movq	-128(%rbp), %rdx
 10241 0060 488D4590 		leaq	-112(%rbp), %rax
 10242 0064 4889D6   		movq	%rdx, %rsi
 10243 0067 4889C7   		movq	%rax, %rdi
 10244 006a E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_EC1ERKS_IcRcPcE
 10244      00
 10245 006f 488B4588 		movq	-120(%rbp), %rax
 10246 0073 488D55D0 		leaq	-48(%rbp), %rdx
 10247 0077 FF75C8   		pushq	-56(%rbp)
 10248 007a FF75C0   		pushq	-64(%rbp)
 10249 007d FF75B8   		pushq	-72(%rbp)
 10250 0080 FF75B0   		pushq	-80(%rbp)
 10251 0083 FF75A8   		pushq	-88(%rbp)
 10252 0086 FF75A0   		pushq	-96(%rbp)
 10253 0089 FF7598   		pushq	-104(%rbp)
 10254 008c FF7590   		pushq	-112(%rbp)
 10255 008f 4889D6   		movq	%rdx, %rsi
 10256 0092 4889C7   		movq	%rax, %rdi
 10257 0095 E8000000 		call	_ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_
 10257      00
 10258 009a 4883C440 		addq	$64, %rsp
 10259 009e 488B4588 		movq	-120(%rbp), %rax
 10260 00a2 488B4DF8 		movq	-8(%rbp), %rcx
 10261 00a6 6448330C 		xorq	%fs:40, %rcx
 10261      25280000 
 10261      00
 10262 00af 7405     		je	.L534
 10263 00b1 E8000000 		call	__stack_chk_fail
 10263      00
 10264              	.L534:
 10265 00b6 C9       		leave
 10266              		.cfi_def_cfa 7, 8
 10267 00b7 C3       		ret
 10268              		.cfi_endproc
 10269              	.LFE10591:
 10271              		.section	.text._ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_,"axG",@progbits,_ZSt4copyIPKcSt
 10272              		.weak	_ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
 10274              	_ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_:
 10275              	.LFB10592:
 462:/usr/include/c++/5/bits/stl_algobase.h ****     {
 10276              		.loc 29 462 0
 10277              		.cfi_startproc
 10278 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 490


 10279              		.cfi_def_cfa_offset 16
 10280              		.cfi_offset 6, -16
 10281 0001 4889E5   		movq	%rsp, %rbp
 10282              		.cfi_def_cfa_register 6
 10283 0004 53       		pushq	%rbx
 10284 0005 4883EC58 		subq	$88, %rsp
 10285              		.cfi_offset 3, -24
 10286 0009 48897DB8 		movq	%rdi, -72(%rbp)
 10287 000d 488975B0 		movq	%rsi, -80(%rbp)
 10288 0011 488955A8 		movq	%rdx, -88(%rbp)
 10289 0015 48894DA0 		movq	%rcx, -96(%rbp)
 462:/usr/include/c++/5/bits/stl_algobase.h ****     {
 10290              		.loc 29 462 0
 10291 0019 64488B04 		movq	%fs:40, %rax
 10291      25280000 
 10291      00
 10292 0022 488945E8 		movq	%rax, -24(%rbp)
 10293 0026 31C0     		xorl	%eax, %eax
 472:/usr/include/c++/5/bits/stl_algobase.h ****     }
 10294              		.loc 29 472 0
 10295 0028 488B55A0 		movq	-96(%rbp), %rdx
 10296 002c 488D45C0 		leaq	-64(%rbp), %rax
 10297 0030 4889D6   		movq	%rdx, %rsi
 10298 0033 4889C7   		movq	%rax, %rdi
 10299 0036 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10299      00
 10300 003b 488B45A8 		movq	-88(%rbp), %rax
 10301 003f 4889C7   		movq	%rax, %rdi
 10302 0042 E8000000 		call	_ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_
 10302      00
 10303 0047 4889C3   		movq	%rax, %rbx
 10304 004a 488B45B0 		movq	-80(%rbp), %rax
 10305 004e 4889C7   		movq	%rax, %rdi
 10306 0051 E8000000 		call	_ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_
 10306      00
 10307 0056 4889C6   		movq	%rax, %rsi
 10308 0059 488B45B8 		movq	-72(%rbp), %rax
 10309 005d 488D55C0 		leaq	-64(%rbp), %rdx
 10310 0061 4889D1   		movq	%rdx, %rcx
 10311 0064 4889DA   		movq	%rbx, %rdx
 10312 0067 4889C7   		movq	%rax, %rdi
 10313 006a E8000000 		call	_ZSt14__copy_move_a2ILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_
 10313      00
 10314              		.loc 29 473 0
 10315 006f 488B45B8 		movq	-72(%rbp), %rax
 10316 0073 488B4DE8 		movq	-24(%rbp), %rcx
 10317 0077 6448330C 		xorq	%fs:40, %rcx
 10317      25280000 
 10317      00
 10318 0080 7405     		je	.L537
 10319 0082 E8000000 		call	__stack_chk_fail
 10319      00
 10320              	.L537:
 10321 0087 4883C458 		addq	$88, %rsp
 10322 008b 5B       		popq	%rbx
 10323 008c 5D       		popq	%rbp
 10324              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccX8BQhk.s 			page 491


 10325 008d C3       		ret
 10326              		.cfi_endproc
 10327              	.LFE10592:
 10329              		.section	.text._ZSt7advanceIPKclEvRT_T0_,"axG",@progbits,_ZSt7advanceIPKclEvRT_T0_,comdat
 10330              		.weak	_ZSt7advanceIPKclEvRT_T0_
 10332              	_ZSt7advanceIPKclEvRT_T0_:
 10333              	.LFB10593:
 120:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
 121:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator, typename _Distance>
 122:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     inline void
 123:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)
 124:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     {
 125:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       // concept requirements
 126:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 127:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       _GLIBCXX_DEBUG_ASSERT(__n >= 0);
 128:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       while (__n--)
 129:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 	++__i;
 130:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
 131:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
 132:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   template<typename _BidirectionalIterator, typename _Distance>
 133:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     inline void
 134:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     __advance(_BidirectionalIterator& __i, _Distance __n,
 135:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 	      bidirectional_iterator_tag)
 136:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     {
 137:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       // concept requirements
 138:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 139:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 				  _BidirectionalIterator>)
 140:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       if (__n > 0)
 141:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****         while (__n--)
 142:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 	  ++__i;
 143:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       else
 144:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****         while (__n++)
 145:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 	  --__i;
 146:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
 147:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
 148:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator, typename _Distance>
 149:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     inline void
 150:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     __advance(_RandomAccessIterator& __i, _Distance __n,
 151:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****               random_access_iterator_tag)
 152:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     {
 153:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       // concept requirements
 154:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 155:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 156:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       __i += __n;
 157:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
 158:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
 159:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   /**
 160:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 161:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  @param  __i  An input iterator.
 162:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  @param  __n  The @a delta by which to change @p __i.
 163:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  @return  Nothing.
 164:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *
 165:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  This increments @p i by @p n.  For bidirectional and random access
 166:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  iterators, @p __n may be negative, in which case @p __i is decremented.
 167:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *
 168:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 169:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
GAS LISTING /tmp/ccX8BQhk.s 			page 492


 170:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   */
 171:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator, typename _Distance>
 172:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     inline void
 173:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     advance(_InputIterator& __i, _Distance __n)
 10334              		.loc 28 173 0
 10335              		.cfi_startproc
 10336 0000 55       		pushq	%rbp
 10337              		.cfi_def_cfa_offset 16
 10338              		.cfi_offset 6, -16
 10339 0001 4889E5   		movq	%rsp, %rbp
 10340              		.cfi_def_cfa_register 6
 10341 0004 53       		pushq	%rbx
 10342 0005 4883EC38 		subq	$56, %rsp
 10343              		.cfi_offset 3, -24
 10344 0009 48897DC8 		movq	%rdi, -56(%rbp)
 10345 000d 488975C0 		movq	%rsi, -64(%rbp)
 10346              		.loc 28 173 0
 10347 0011 64488B04 		movq	%fs:40, %rax
 10347      25280000 
 10347      00
 10348 001a 488945E8 		movq	%rax, -24(%rbp)
 10349 001e 31C0     		xorl	%eax, %eax
 174:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     {
 175:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       // concept requirements -- taken care of in __advance
 176:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __d = __n;
 10350              		.loc 28 176 0
 10351 0020 488B45C0 		movq	-64(%rbp), %rax
 10352 0024 488945E0 		movq	%rax, -32(%rbp)
 177:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****       std::__advance(__i, __d, std::__iterator_category(__i));
 10353              		.loc 28 177 0
 10354 0028 488B45C8 		movq	-56(%rbp), %rax
 10355 002c 4889C7   		movq	%rax, %rdi
 10356 002f E8000000 		call	_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
 10356      00
 10357 0034 488B55E0 		movq	-32(%rbp), %rdx
 10358 0038 488B45C8 		movq	-56(%rbp), %rax
 10359 003c 4883EC08 		subq	$8, %rsp
 10360 0040 53       		pushq	%rbx
 10361 0041 4889D6   		movq	%rdx, %rsi
 10362 0044 4889C7   		movq	%rax, %rdi
 10363 0047 E8000000 		call	_ZSt9__advanceIPKclEvRT_T0_St26random_access_iterator_tag
 10363      00
 10364 004c 4883C410 		addq	$16, %rsp
 178:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
 10365              		.loc 28 178 0
 10366 0050 90       		nop
 10367 0051 488B45E8 		movq	-24(%rbp), %rax
 10368 0055 64483304 		xorq	%fs:40, %rax
 10368      25280000 
 10368      00
 10369 005e 7405     		je	.L539
 10370 0060 E8000000 		call	__stack_chk_fail
 10370      00
 10371              	.L539:
 10372 0065 488B5DF8 		movq	-8(%rbp), %rbx
 10373 0069 C9       		leave
 10374              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccX8BQhk.s 			page 493


 10375 006a C3       		ret
 10376              		.cfi_endproc
 10377              	.LFE10593:
 10379              		.section	.text._ZSt25__uninitialized_move_copyISt15_Deque_iteratorIcRcPcEPKcS3_SaIcEET1_T_S8_T0_S9
 10380              		.weak	_ZSt25__uninitialized_move_copyISt15_Deque_iteratorIcRcPcEPKcS3_SaIcEET1_T_S8_T0_S9_S7_RT2_
 10382              	_ZSt25__uninitialized_move_copyISt15_Deque_iteratorIcRcPcEPKcS3_SaIcEET1_T_S8_T0_S9_S7_RT2_:
 10383              	.LFB10594:
 293:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 294:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 295:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 296:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 297:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 298:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _InputIterator __last,
 299:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _ForwardIterator __result,
 300:/usr/include/c++/5/bits/stl_uninitialized.h **** 				       _Allocator& __alloc)
 301:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 302:/usr/include/c++/5/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a
 303:/usr/include/c++/5/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 304:/usr/include/c++/5/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 305:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 306:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 307:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 308:/usr/include/c++/5/bits/stl_uninitialized.h ****     void
 309:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 310:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 311:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 312:/usr/include/c++/5/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 313:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 314:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 315:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 316:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 317:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 318:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 319:/usr/include/c++/5/bits/stl_uninitialized.h ****       __catch(...)
 320:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 321:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 322:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 323:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 324:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 325:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 326:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 327:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline void
 328:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 329:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 330:/usr/include/c++/5/bits/stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 331:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 332:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 333:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Allocator>
 334:/usr/include/c++/5/bits/stl_uninitialized.h ****     _ForwardIterator
 335:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 336:/usr/include/c++/5/bits/stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 337:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 338:/usr/include/c++/5/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 339:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 340:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 341:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 342:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, ++__cur)
GAS LISTING /tmp/ccX8BQhk.s 			page 494


 343:/usr/include/c++/5/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 344:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  return __cur;
 345:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 346:/usr/include/c++/5/bits/stl_uninitialized.h ****       __catch(...)
 347:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 348:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 349:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 350:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 351:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 352:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 353:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 354:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _Tp2>
 355:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 356:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 357:/usr/include/c++/5/bits/stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 358:/usr/include/c++/5/bits/stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 359:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 360:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 361:/usr/include/c++/5/bits/stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 362:/usr/include/c++/5/bits/stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 363:/usr/include/c++/5/bits/stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 364:/usr/include/c++/5/bits/stl_uninitialized.h ****   // for construction and destruction.
 365:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 366:/usr/include/c++/5/bits/stl_uninitialized.h ****   // __uninitialized_copy_move
 367:/usr/include/c++/5/bits/stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 368:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  move [first2, last2) into
 369:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 370:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 371:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 372:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 373:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 374:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 375:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _InputIterator2 __first2,
 376:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _InputIterator2 __last2,
 377:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _ForwardIterator __result,
 378:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 379:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 380:/usr/include/c++/5/bits/stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 381:/usr/include/c++/5/bits/stl_uninitialized.h **** 							   __result,
 382:/usr/include/c++/5/bits/stl_uninitialized.h **** 							   __alloc);
 383:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 384:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 385:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 386:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 387:/usr/include/c++/5/bits/stl_uninitialized.h ****       __catch(...)
 388:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 389:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 390:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 391:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 392:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 393:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 394:/usr/include/c++/5/bits/stl_uninitialized.h ****   // __uninitialized_move_copy
 395:/usr/include/c++/5/bits/stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 396:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  copies [first2, last2) into
 397:/usr/include/c++/5/bits/stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 398:/usr/include/c++/5/bits/stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 399:/usr/include/c++/5/bits/stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
GAS LISTING /tmp/ccX8BQhk.s 			page 495


 400:/usr/include/c++/5/bits/stl_uninitialized.h ****     inline _ForwardIterator
 401:/usr/include/c++/5/bits/stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 10384              		.loc 38 401 0
 10385              		.cfi_startproc
 10386              		.cfi_personality 0x3,__gxx_personality_v0
 10387              		.cfi_lsda 0x3,.LLSDA10594
 10388 0000 55       		pushq	%rbp
 10389              		.cfi_def_cfa_offset 16
 10390              		.cfi_offset 6, -16
 10391 0001 4889E5   		movq	%rsp, %rbp
 10392              		.cfi_def_cfa_register 6
 10393 0004 53       		pushq	%rbx
 10394 0005 4881ECD8 		subq	$216, %rsp
 10394      000000
 10395              		.cfi_offset 3, -24
 10396 000c 4889BD58 		movq	%rdi, -168(%rbp)
 10396      FFFFFF
 10397 0013 4889B550 		movq	%rsi, -176(%rbp)
 10397      FFFFFF
 10398 001a 48899548 		movq	%rdx, -184(%rbp)
 10398      FFFFFF
 10399 0021 48898D40 		movq	%rcx, -192(%rbp)
 10399      FFFFFF
 10400 0028 4C898538 		movq	%r8, -200(%rbp)
 10400      FFFFFF
 10401 002f 4C898D30 		movq	%r9, -208(%rbp)
 10401      FFFFFF
 10402 0036 488B4510 		movq	16(%rbp), %rax
 10403 003a 48898528 		movq	%rax, -216(%rbp)
 10403      FFFFFF
 10404              		.loc 38 401 0
 10405 0041 64488B04 		movq	%fs:40, %rax
 10405      25280000 
 10405      00
 10406 004a 488945E8 		movq	%rax, -24(%rbp)
 10407 004e 31C0     		xorl	%eax, %eax
 402:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 403:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _InputIterator2 __first2,
 404:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _InputIterator2 __last2,
 405:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _ForwardIterator __result,
 406:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 407:/usr/include/c++/5/bits/stl_uninitialized.h ****     {
 408:/usr/include/c++/5/bits/stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 409:/usr/include/c++/5/bits/stl_uninitialized.h **** 							   __result,
 410:/usr/include/c++/5/bits/stl_uninitialized.h **** 							   __alloc);
 10408              		.loc 38 410 0
 10409 0050 488B9530 		movq	-208(%rbp), %rdx
 10409      FFFFFF
 10410 0057 488D45C0 		leaq	-64(%rbp), %rax
 10411 005b 4889D6   		movq	%rdx, %rsi
 10412 005e 4889C7   		movq	%rax, %rdi
 10413 0061 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10413      00
 10414 0066 488B9548 		movq	-184(%rbp), %rdx
 10414      FFFFFF
 10415 006d 488D45A0 		leaq	-96(%rbp), %rax
 10416 0071 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccX8BQhk.s 			page 496


 10417 0074 4889C7   		movq	%rax, %rdi
 10418 0077 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10418      00
 10419 007c 488B9550 		movq	-176(%rbp), %rdx
 10419      FFFFFF
 10420 0083 488D4580 		leaq	-128(%rbp), %rax
 10421 0087 4889D6   		movq	%rdx, %rsi
 10422 008a 4889C7   		movq	%rax, %rdi
 10423 008d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10423      00
 10424 0092 488D8560 		leaq	-160(%rbp), %rax
 10424      FFFFFF
 10425 0099 488BBD28 		movq	-216(%rbp), %rdi
 10425      FFFFFF
 10426 00a0 488D4DC0 		leaq	-64(%rbp), %rcx
 10427 00a4 488D55A0 		leaq	-96(%rbp), %rdx
 10428 00a8 488D7580 		leaq	-128(%rbp), %rsi
 10429 00ac 4989F8   		movq	%rdi, %r8
 10430 00af 4889C7   		movq	%rax, %rdi
 10431              	.LEHB71:
 10432 00b2 E8000000 		call	_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_
 10432      00
 10433              	.LEHE71:
 411:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 412:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 413:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 10434              		.loc 38 413 0
 10435 00b7 488D9560 		leaq	-160(%rbp), %rdx
 10435      FFFFFF
 10436 00be 488D45C0 		leaq	-64(%rbp), %rax
 10437 00c2 4889D6   		movq	%rdx, %rsi
 10438 00c5 4889C7   		movq	%rax, %rdi
 10439 00c8 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10439      00
 10440 00cd 488B8558 		movq	-168(%rbp), %rax
 10440      FFFFFF
 10441 00d4 488BBD28 		movq	-216(%rbp), %rdi
 10441      FFFFFF
 10442 00db 488D4DC0 		leaq	-64(%rbp), %rcx
 10443 00df 488B9538 		movq	-200(%rbp), %rdx
 10443      FFFFFF
 10444 00e6 488BB540 		movq	-192(%rbp), %rsi
 10444      FFFFFF
 10445 00ed 4989F8   		movq	%rdi, %r8
 10446 00f0 4889C7   		movq	%rax, %rdi
 10447              	.LEHB72:
 10448 00f3 E8000000 		call	_ZSt22__uninitialized_copy_aIPKcSt15_Deque_iteratorIcRcPcEcET0_T_S7_S6_RSaIT1_E
 10448      00
 10449              	.LEHE72:
 10450 00f8 EB66     		jmp	.L547
 10451              	.L545:
 414:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 415:/usr/include/c++/5/bits/stl_uninitialized.h ****       __catch(...)
 10452              		.loc 38 415 0
 10453 00fa 4889C7   		movq	%rax, %rdi
 10454 00fd E8000000 		call	__cxa_begin_catch
 10454      00
GAS LISTING /tmp/ccX8BQhk.s 			page 497


 416:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 417:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 10455              		.loc 38 417 0
 10456 0102 488D9560 		leaq	-160(%rbp), %rdx
 10456      FFFFFF
 10457 0109 488D45C0 		leaq	-64(%rbp), %rax
 10458 010d 4889D6   		movq	%rdx, %rsi
 10459 0110 4889C7   		movq	%rax, %rdi
 10460 0113 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10460      00
 10461 0118 488B9530 		movq	-208(%rbp), %rdx
 10461      FFFFFF
 10462 011f 488D45A0 		leaq	-96(%rbp), %rax
 10463 0123 4889D6   		movq	%rdx, %rsi
 10464 0126 4889C7   		movq	%rax, %rdi
 10465 0129 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10465      00
 10466 012e 488B9528 		movq	-216(%rbp), %rdx
 10466      FFFFFF
 10467 0135 488D4DC0 		leaq	-64(%rbp), %rcx
 10468 0139 488D45A0 		leaq	-96(%rbp), %rax
 10469 013d 4889CE   		movq	%rcx, %rsi
 10470 0140 4889C7   		movq	%rax, %rdi
 10471              	.LEHB73:
 10472 0143 E8000000 		call	_ZSt8_DestroyISt15_Deque_iteratorIcRcPcEcEvT_S4_RSaIT0_E
 10472      00
 418:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 10473              		.loc 38 418 0 discriminator 2
 10474 0148 E8000000 		call	__cxa_rethrow
 10474      00
 10475              	.LEHE73:
 10476              	.L546:
 10477 014d 4889C3   		movq	%rax, %rbx
 415:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 10478              		.loc 38 415 0
 10479 0150 E8000000 		call	__cxa_end_catch
 10479      00
 10480 0155 4889D8   		movq	%rbx, %rax
 10481 0158 4889C7   		movq	%rax, %rdi
 10482              	.LEHB74:
 10483 015b E8000000 		call	_Unwind_Resume
 10483      00
 10484              	.LEHE74:
 10485              	.L547:
 419:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 420:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 10486              		.loc 38 420 0
 10487 0160 488B8558 		movq	-168(%rbp), %rax
 10487      FFFFFF
 10488 0167 488B5DE8 		movq	-24(%rbp), %rbx
 10489 016b 6448331C 		xorq	%fs:40, %rbx
 10489      25280000 
 10489      00
 10490 0174 7405     		je	.L544
 10491 0176 E8000000 		call	__stack_chk_fail
 10491      00
 10492              	.L544:
GAS LISTING /tmp/ccX8BQhk.s 			page 498


 10493 017b 4881C4D8 		addq	$216, %rsp
 10493      000000
 10494 0182 5B       		popq	%rbx
 10495 0183 5D       		popq	%rbp
 10496              		.cfi_def_cfa 7, 8
 10497 0184 C3       		ret
 10498              		.cfi_endproc
 10499              	.LFE10594:
 10500              		.section	.gcc_except_table
 10501              		.align 4
 10502              	.LLSDA10594:
 10503 01e8 FF       		.byte	0xff
 10504 01e9 03       		.byte	0x3
 10505 01ea 21       		.uleb128 .LLSDATT10594-.LLSDATTD10594
 10506              	.LLSDATTD10594:
 10507 01eb 01       		.byte	0x1
 10508 01ec 16       		.uleb128 .LLSDACSE10594-.LLSDACSB10594
 10509              	.LLSDACSB10594:
 10510 01ed B201     		.uleb128 .LEHB71-.LFB10594
 10511 01ef 05       		.uleb128 .LEHE71-.LEHB71
 10512 01f0 00       		.uleb128 0
 10513 01f1 00       		.uleb128 0
 10514 01f2 F301     		.uleb128 .LEHB72-.LFB10594
 10515 01f4 05       		.uleb128 .LEHE72-.LEHB72
 10516 01f5 FA01     		.uleb128 .L545-.LFB10594
 10517 01f7 01       		.uleb128 0x1
 10518 01f8 C302     		.uleb128 .LEHB73-.LFB10594
 10519 01fa 0A       		.uleb128 .LEHE73-.LEHB73
 10520 01fb CD02     		.uleb128 .L546-.LFB10594
 10521 01fd 00       		.uleb128 0
 10522 01fe DB02     		.uleb128 .LEHB74-.LFB10594
 10523 0200 05       		.uleb128 .LEHE74-.LEHB74
 10524 0201 00       		.uleb128 0
 10525 0202 00       		.uleb128 0
 10526              	.LLSDACSE10594:
 10527 0203 01       		.byte	0x1
 10528 0204 00       		.byte	0
 10529 0205 000000   		.align 4
 10530 0208 00000000 		.long	0
 10531              	
 10532              	.LLSDATT10594:
 10533              		.section	.text._ZSt25__uninitialized_move_copyISt15_Deque_iteratorIcRcPcEPKcS3_SaIcEET1_T_S8_T0_S9
 10535              		.section	.text._ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_,"axG",@progbits,_ZSt
 10536              		.weak	_ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_
 10538              	_ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_:
 10539              	.LFB10595:
 437:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 10540              		.loc 3 437 0
 10541              		.cfi_startproc
 10542 0000 55       		pushq	%rbp
 10543              		.cfi_def_cfa_offset 16
 10544              		.cfi_offset 6, -16
 10545 0001 4889E5   		movq	%rsp, %rbp
 10546              		.cfi_def_cfa_register 6
 10547 0004 4881EC90 		subq	$144, %rsp
 10547      000000
 10548 000b 48897D88 		movq	%rdi, -120(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 499


 10549 000f 48897580 		movq	%rsi, -128(%rbp)
 10550 0013 48899578 		movq	%rdx, -136(%rbp)
 10550      FFFFFF
 10551 001a 48898D70 		movq	%rcx, -144(%rbp)
 10551      FFFFFF
 437:/usr/include/c++/5/bits/stl_deque.h **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __last,
 10552              		.loc 3 437 0
 10553 0021 64488B04 		movq	%fs:40, %rax
 10553      25280000 
 10553      00
 10554 002a 488945F8 		movq	%rax, -8(%rbp)
 10555 002e 31C0     		xorl	%eax, %eax
 444:/usr/include/c++/5/bits/stl_deque.h **** #endif
 10556              		.loc 3 444 0
 10557 0030 488B9570 		movq	-144(%rbp), %rdx
 10557      FFFFFF
 10558 0037 488D45D0 		leaq	-48(%rbp), %rax
 10559 003b 4889D6   		movq	%rdx, %rsi
 10560 003e 4889C7   		movq	%rax, %rdi
 10561 0041 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10561      00
 10562 0046 488B9578 		movq	-136(%rbp), %rdx
 10562      FFFFFF
 10563 004d 488D45B0 		leaq	-80(%rbp), %rax
 10564 0051 4889D6   		movq	%rdx, %rsi
 10565 0054 4889C7   		movq	%rax, %rdi
 10566 0057 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_EC1ERKS_IcRcPcE
 10566      00
 10567 005c 488B5580 		movq	-128(%rbp), %rdx
 10568 0060 488D4590 		leaq	-112(%rbp), %rax
 10569 0064 4889D6   		movq	%rdx, %rsi
 10570 0067 4889C7   		movq	%rax, %rdi
 10571 006a E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_EC1ERKS_IcRcPcE
 10571      00
 10572 006f 488B4588 		movq	-120(%rbp), %rax
 10573 0073 488D55D0 		leaq	-48(%rbp), %rdx
 10574 0077 FF75C8   		pushq	-56(%rbp)
 10575 007a FF75C0   		pushq	-64(%rbp)
 10576 007d FF75B8   		pushq	-72(%rbp)
 10577 0080 FF75B0   		pushq	-80(%rbp)
 10578 0083 FF75A8   		pushq	-88(%rbp)
 10579 0086 FF75A0   		pushq	-96(%rbp)
 10580 0089 FF7598   		pushq	-104(%rbp)
 10581 008c FF7590   		pushq	-112(%rbp)
 10582 008f 4889D6   		movq	%rdx, %rsi
 10583 0092 4889C7   		movq	%rax, %rdi
 10584 0095 E8000000 		call	_ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_
 10584      00
 10585 009a 4883C440 		addq	$64, %rsp
 10586 009e 488B4588 		movq	-120(%rbp), %rax
 10587 00a2 488B4DF8 		movq	-8(%rbp), %rcx
 10588 00a6 6448330C 		xorq	%fs:40, %rcx
 10588      25280000 
 10588      00
 10589 00af 7405     		je	.L550
 10590 00b1 E8000000 		call	__stack_chk_fail
 10590      00
GAS LISTING /tmp/ccX8BQhk.s 			page 500


 10591              	.L550:
 10592 00b6 C9       		leave
 10593              		.cfi_def_cfa 7, 8
 10594 00b7 C3       		ret
 10595              		.cfi_endproc
 10596              	.LFE10595:
 10598              		.section	.text._ZSt25__uninitialized_copy_moveIPKcSt15_Deque_iteratorIcRcPcES5_SaIcEET1_T_S8_T0_S9
 10599              		.weak	_ZSt25__uninitialized_copy_moveIPKcSt15_Deque_iteratorIcRcPcES5_SaIcEET1_T_S8_T0_S9_S7_RT2_
 10601              	_ZSt25__uninitialized_copy_moveIPKcSt15_Deque_iteratorIcRcPcES5_SaIcEET1_T_S8_T0_S9_S7_RT2_:
 10602              	.LFB10596:
 373:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 10603              		.loc 38 373 0
 10604              		.cfi_startproc
 10605              		.cfi_personality 0x3,__gxx_personality_v0
 10606              		.cfi_lsda 0x3,.LLSDA10596
 10607 0000 55       		pushq	%rbp
 10608              		.cfi_def_cfa_offset 16
 10609              		.cfi_offset 6, -16
 10610 0001 4889E5   		movq	%rsp, %rbp
 10611              		.cfi_def_cfa_register 6
 10612 0004 53       		pushq	%rbx
 10613 0005 4881ECD8 		subq	$216, %rsp
 10613      000000
 10614              		.cfi_offset 3, -24
 10615 000c 4889BD58 		movq	%rdi, -168(%rbp)
 10615      FFFFFF
 10616 0013 4889B550 		movq	%rsi, -176(%rbp)
 10616      FFFFFF
 10617 001a 48899548 		movq	%rdx, -184(%rbp)
 10617      FFFFFF
 10618 0021 48898D40 		movq	%rcx, -192(%rbp)
 10618      FFFFFF
 10619 0028 4C898538 		movq	%r8, -200(%rbp)
 10619      FFFFFF
 10620 002f 4C898D30 		movq	%r9, -208(%rbp)
 10620      FFFFFF
 10621 0036 488B4510 		movq	16(%rbp), %rax
 10622 003a 48898528 		movq	%rax, -216(%rbp)
 10622      FFFFFF
 373:/usr/include/c++/5/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 10623              		.loc 38 373 0
 10624 0041 64488B04 		movq	%fs:40, %rax
 10624      25280000 
 10624      00
 10625 004a 488945E8 		movq	%rax, -24(%rbp)
 10626 004e 31C0     		xorl	%eax, %eax
 382:/usr/include/c++/5/bits/stl_uninitialized.h ****       __try
 10627              		.loc 38 382 0
 10628 0050 488B9530 		movq	-208(%rbp), %rdx
 10628      FFFFFF
 10629 0057 488D45C0 		leaq	-64(%rbp), %rax
 10630 005b 4889D6   		movq	%rdx, %rsi
 10631 005e 4889C7   		movq	%rax, %rdi
 10632 0061 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10632      00
 10633 0066 488D8560 		leaq	-160(%rbp), %rax
 10633      FFFFFF
GAS LISTING /tmp/ccX8BQhk.s 			page 501


 10634 006d 488BBD28 		movq	-216(%rbp), %rdi
 10634      FFFFFF
 10635 0074 488D4DC0 		leaq	-64(%rbp), %rcx
 10636 0078 488B9548 		movq	-184(%rbp), %rdx
 10636      FFFFFF
 10637 007f 488BB550 		movq	-176(%rbp), %rsi
 10637      FFFFFF
 10638 0086 4989F8   		movq	%rdi, %r8
 10639 0089 4889C7   		movq	%rax, %rdi
 10640              	.LEHB75:
 10641 008c E8000000 		call	_ZSt22__uninitialized_copy_aIPKcSt15_Deque_iteratorIcRcPcEcET0_T_S7_S6_RSaIT1_E
 10641      00
 10642              	.LEHE75:
 385:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 10643              		.loc 38 385 0
 10644 0091 488D9560 		leaq	-160(%rbp), %rdx
 10644      FFFFFF
 10645 0098 488D45C0 		leaq	-64(%rbp), %rax
 10646 009c 4889D6   		movq	%rdx, %rsi
 10647 009f 4889C7   		movq	%rax, %rdi
 10648 00a2 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10648      00
 10649 00a7 488B9538 		movq	-200(%rbp), %rdx
 10649      FFFFFF
 10650 00ae 488D45A0 		leaq	-96(%rbp), %rax
 10651 00b2 4889D6   		movq	%rdx, %rsi
 10652 00b5 4889C7   		movq	%rax, %rdi
 10653 00b8 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10653      00
 10654 00bd 488B9540 		movq	-192(%rbp), %rdx
 10654      FFFFFF
 10655 00c4 488D4580 		leaq	-128(%rbp), %rax
 10656 00c8 4889D6   		movq	%rdx, %rsi
 10657 00cb 4889C7   		movq	%rax, %rdi
 10658 00ce E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10658      00
 10659 00d3 488B8558 		movq	-168(%rbp), %rax
 10659      FFFFFF
 10660 00da 488BBD28 		movq	-216(%rbp), %rdi
 10660      FFFFFF
 10661 00e1 488D4DC0 		leaq	-64(%rbp), %rcx
 10662 00e5 488D55A0 		leaq	-96(%rbp), %rdx
 10663 00e9 488D7580 		leaq	-128(%rbp), %rsi
 10664 00ed 4989F8   		movq	%rdi, %r8
 10665 00f0 4889C7   		movq	%rax, %rdi
 10666              	.LEHB76:
 10667 00f3 E8000000 		call	_ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_
 10667      00
 10668              	.LEHE76:
 10669 00f8 EB66     		jmp	.L558
 10670              	.L556:
 387:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 10671              		.loc 38 387 0
 10672 00fa 4889C7   		movq	%rax, %rdi
 10673 00fd E8000000 		call	__cxa_begin_catch
 10673      00
 389:/usr/include/c++/5/bits/stl_uninitialized.h **** 	  __throw_exception_again;
GAS LISTING /tmp/ccX8BQhk.s 			page 502


 10674              		.loc 38 389 0
 10675 0102 488D9560 		leaq	-160(%rbp), %rdx
 10675      FFFFFF
 10676 0109 488D45C0 		leaq	-64(%rbp), %rax
 10677 010d 4889D6   		movq	%rdx, %rsi
 10678 0110 4889C7   		movq	%rax, %rdi
 10679 0113 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10679      00
 10680 0118 488B9530 		movq	-208(%rbp), %rdx
 10680      FFFFFF
 10681 011f 488D45A0 		leaq	-96(%rbp), %rax
 10682 0123 4889D6   		movq	%rdx, %rsi
 10683 0126 4889C7   		movq	%rax, %rdi
 10684 0129 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10684      00
 10685 012e 488B9528 		movq	-216(%rbp), %rdx
 10685      FFFFFF
 10686 0135 488D4DC0 		leaq	-64(%rbp), %rcx
 10687 0139 488D45A0 		leaq	-96(%rbp), %rax
 10688 013d 4889CE   		movq	%rcx, %rsi
 10689 0140 4889C7   		movq	%rax, %rdi
 10690              	.LEHB77:
 10691 0143 E8000000 		call	_ZSt8_DestroyISt15_Deque_iteratorIcRcPcEcEvT_S4_RSaIT0_E
 10691      00
 390:/usr/include/c++/5/bits/stl_uninitialized.h **** 	}
 10692              		.loc 38 390 0 discriminator 2
 10693 0148 E8000000 		call	__cxa_rethrow
 10693      00
 10694              	.LEHE77:
 10695              	.L557:
 10696 014d 4889C3   		movq	%rax, %rbx
 387:/usr/include/c++/5/bits/stl_uninitialized.h **** 	{
 10697              		.loc 38 387 0
 10698 0150 E8000000 		call	__cxa_end_catch
 10698      00
 10699 0155 4889D8   		movq	%rbx, %rax
 10700 0158 4889C7   		movq	%rax, %rdi
 10701              	.LEHB78:
 10702 015b E8000000 		call	_Unwind_Resume
 10702      00
 10703              	.LEHE78:
 10704              	.L558:
 392:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 10705              		.loc 38 392 0
 10706 0160 488B8558 		movq	-168(%rbp), %rax
 10706      FFFFFF
 10707 0167 488B5DE8 		movq	-24(%rbp), %rbx
 10708 016b 6448331C 		xorq	%fs:40, %rbx
 10708      25280000 
 10708      00
 10709 0174 7405     		je	.L555
 10710 0176 E8000000 		call	__stack_chk_fail
 10710      00
 10711              	.L555:
 10712 017b 4881C4D8 		addq	$216, %rsp
 10712      000000
 10713 0182 5B       		popq	%rbx
GAS LISTING /tmp/ccX8BQhk.s 			page 503


 10714 0183 5D       		popq	%rbp
 10715              		.cfi_def_cfa 7, 8
 10716 0184 C3       		ret
 10717              		.cfi_endproc
 10718              	.LFE10596:
 10719              		.section	.gcc_except_table
 10720              		.align 4
 10721              	.LLSDA10596:
 10722 020c FF       		.byte	0xff
 10723 020d 03       		.byte	0x3
 10724 020e 21       		.uleb128 .LLSDATT10596-.LLSDATTD10596
 10725              	.LLSDATTD10596:
 10726 020f 01       		.byte	0x1
 10727 0210 16       		.uleb128 .LLSDACSE10596-.LLSDACSB10596
 10728              	.LLSDACSB10596:
 10729 0211 8C01     		.uleb128 .LEHB75-.LFB10596
 10730 0213 05       		.uleb128 .LEHE75-.LEHB75
 10731 0214 00       		.uleb128 0
 10732 0215 00       		.uleb128 0
 10733 0216 F301     		.uleb128 .LEHB76-.LFB10596
 10734 0218 05       		.uleb128 .LEHE76-.LEHB76
 10735 0219 FA01     		.uleb128 .L556-.LFB10596
 10736 021b 01       		.uleb128 0x1
 10737 021c C302     		.uleb128 .LEHB77-.LFB10596
 10738 021e 0A       		.uleb128 .LEHE77-.LEHB77
 10739 021f CD02     		.uleb128 .L557-.LFB10596
 10740 0221 00       		.uleb128 0
 10741 0222 DB02     		.uleb128 .LEHB78-.LFB10596
 10742 0224 05       		.uleb128 .LEHE78-.LEHB78
 10743 0225 00       		.uleb128 0
 10744 0226 00       		.uleb128 0
 10745              	.LLSDACSE10596:
 10746 0227 01       		.byte	0x1
 10747 0228 00       		.byte	0
 10748 0229 000000   		.align 4
 10749 022c 00000000 		.long	0
 10750              	
 10751              	.LLSDATT10596:
 10752              		.section	.text._ZSt25__uninitialized_copy_moveIPKcSt15_Deque_iteratorIcRcPcES5_SaIcEET1_T_S8_T0_S9
 10754              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iter
 10755              		.align 2
 10756              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcP
 10758              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcPcEEEvT_
 10759              	.LFB10597:
 211:/usr/include/c++/5/bits/basic_string.h **** 	{
 10760              		.loc 11 211 0
 10761              		.cfi_startproc
 10762 0000 55       		pushq	%rbp
 10763              		.cfi_def_cfa_offset 16
 10764              		.cfi_offset 6, -16
 10765 0001 4889E5   		movq	%rsp, %rbp
 10766              		.cfi_def_cfa_register 6
 10767 0004 53       		pushq	%rbx
 10768 0005 4883EC78 		subq	$120, %rsp
 10769              		.cfi_offset 3, -24
 10770 0009 48897D98 		movq	%rdi, -104(%rbp)
 10771 000d 48897590 		movq	%rsi, -112(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 504


 10772 0011 48895588 		movq	%rdx, -120(%rbp)
 211:/usr/include/c++/5/bits/basic_string.h **** 	{
 10773              		.loc 11 211 0
 10774 0015 64488B04 		movq	%fs:40, %rax
 10774      25280000 
 10774      00
 10775 001e 488945E8 		movq	%rax, -24(%rbp)
 10776 0022 31C0     		xorl	%eax, %eax
 214:/usr/include/c++/5/bits/basic_string.h ****         }
 10777              		.loc 11 214 0
 10778 0024 488B5588 		movq	-120(%rbp), %rdx
 10779 0028 488D45C0 		leaq	-64(%rbp), %rax
 10780 002c 4889D6   		movq	%rdx, %rsi
 10781 002f 4889C7   		movq	%rax, %rdi
 10782 0032 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10782      00
 10783 0037 488B5590 		movq	-112(%rbp), %rdx
 10784 003b 488D45A0 		leaq	-96(%rbp), %rax
 10785 003f 4889D6   		movq	%rdx, %rsi
 10786 0042 4889C7   		movq	%rax, %rdi
 10787 0045 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 10787      00
 10788 004a 488D55C0 		leaq	-64(%rbp), %rdx
 10789 004e 488D4DA0 		leaq	-96(%rbp), %rcx
 10790 0052 488B4598 		movq	-104(%rbp), %rax
 10791 0056 4883EC08 		subq	$8, %rsp
 10792 005a 53       		pushq	%rbx
 10793 005b 4889CE   		movq	%rcx, %rsi
 10794 005e 4889C7   		movq	%rax, %rdi
 10795 0061 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxISt15_Deque_iteratorIc
 10795      00
 10796 0066 4883C410 		addq	$16, %rsp
 215:/usr/include/c++/5/bits/basic_string.h **** 
 10797              		.loc 11 215 0
 10798 006a 90       		nop
 10799 006b 488B45E8 		movq	-24(%rbp), %rax
 10800 006f 64483304 		xorq	%fs:40, %rax
 10800      25280000 
 10800      00
 10801 0078 7405     		je	.L560
 10802 007a E8000000 		call	__stack_chk_fail
 10802      00
 10803              	.L560:
 10804 007f 488B5DF8 		movq	-8(%rbp), %rbx
 10805 0083 C9       		leave
 10806              		.cfi_def_cfa 7, 8
 10807 0084 C3       		ret
 10808              		.cfi_endproc
 10809              	.LFE10597:
 10811              		.section	.text._ZNK9__gnu_cxx13new_allocatorIPcE8max_sizeEv,"axG",@progbits,_ZNK9__gnu_cxx13new_al
 10812              		.align 2
 10813              		.weak	_ZNK9__gnu_cxx13new_allocatorIPcE8max_sizeEv
 10815              	_ZNK9__gnu_cxx13new_allocatorIPcE8max_sizeEv:
 10816              	.LFB10598:
 113:/usr/include/c++/5/ext/new_allocator.h ****       { return size_t(-1) / sizeof(_Tp); }
 10817              		.loc 27 113 0
 10818              		.cfi_startproc
GAS LISTING /tmp/ccX8BQhk.s 			page 505


 10819 0000 55       		pushq	%rbp
 10820              		.cfi_def_cfa_offset 16
 10821              		.cfi_offset 6, -16
 10822 0001 4889E5   		movq	%rsp, %rbp
 10823              		.cfi_def_cfa_register 6
 10824 0004 48897DF8 		movq	%rdi, -8(%rbp)
 114:/usr/include/c++/5/ext/new_allocator.h **** 
 10825              		.loc 27 114 0
 10826 0008 48B8FFFF 		movabsq	$2305843009213693951, %rax
 10826      FFFFFFFF 
 10826      FF1F
 10827 0012 5D       		popq	%rbp
 10828              		.cfi_def_cfa 7, 8
 10829 0013 C3       		ret
 10830              		.cfi_endproc
 10831              	.LFE10598:
 10833              		.section	.text._ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv,"axG",@progbits,_ZN9__gnu_cxx13new_al
 10834              		.align 2
 10835              		.weak	_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv
 10837              	_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv:
 10838              	.LFB10599:
  99:/usr/include/c++/5/ext/new_allocator.h ****       { 
 10839              		.loc 27 99 0
 10840              		.cfi_startproc
 10841 0000 55       		pushq	%rbp
 10842              		.cfi_def_cfa_offset 16
 10843              		.cfi_offset 6, -16
 10844 0001 4889E5   		movq	%rsp, %rbp
 10845              		.cfi_def_cfa_register 6
 10846 0004 4883EC20 		subq	$32, %rsp
 10847 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10848 000c 488975F0 		movq	%rsi, -16(%rbp)
 10849 0010 488955E8 		movq	%rdx, -24(%rbp)
 101:/usr/include/c++/5/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 10850              		.loc 27 101 0
 10851 0014 488B45F8 		movq	-8(%rbp), %rax
 10852 0018 4889C7   		movq	%rax, %rdi
 10853 001b E8000000 		call	_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv
 10853      00
 10854 0020 483B45F0 		cmpq	-16(%rbp), %rax
 10855 0024 0F92C0   		setb	%al
 10856 0027 84C0     		testb	%al, %al
 10857 0029 7405     		je	.L564
 102:/usr/include/c++/5/ext/new_allocator.h **** 
 10858              		.loc 27 102 0
 10859 002b E8000000 		call	_ZSt17__throw_bad_allocv
 10859      00
 10860              	.L564:
 104:/usr/include/c++/5/ext/new_allocator.h ****       }
 10861              		.loc 27 104 0
 10862 0030 488B45F0 		movq	-16(%rbp), %rax
 10863 0034 4889C7   		movq	%rax, %rdi
 10864 0037 E8000000 		call	_Znwm
 10864      00
 105:/usr/include/c++/5/ext/new_allocator.h **** 
 10865              		.loc 27 105 0
 10866 003c C9       		leave
GAS LISTING /tmp/ccX8BQhk.s 			page 506


 10867              		.cfi_def_cfa 7, 8
 10868 003d C3       		ret
 10869              		.cfi_endproc
 10870              	.LFE10599:
 10872              		.section	.text._ZSt4copyIPPcS1_ET0_T_S3_S2_,"axG",@progbits,_ZSt4copyIPPcS1_ET0_T_S3_S2_,comdat
 10873              		.weak	_ZSt4copyIPPcS1_ET0_T_S3_S2_
 10875              	_ZSt4copyIPPcS1_ET0_T_S3_S2_:
 10876              	.LFB10600:
 462:/usr/include/c++/5/bits/stl_algobase.h ****     {
 10877              		.loc 29 462 0
 10878              		.cfi_startproc
 10879 0000 55       		pushq	%rbp
 10880              		.cfi_def_cfa_offset 16
 10881              		.cfi_offset 6, -16
 10882 0001 4889E5   		movq	%rsp, %rbp
 10883              		.cfi_def_cfa_register 6
 10884 0004 53       		pushq	%rbx
 10885 0005 4883EC28 		subq	$40, %rsp
 10886              		.cfi_offset 3, -24
 10887 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10888 000d 488975E0 		movq	%rsi, -32(%rbp)
 10889 0011 488955D8 		movq	%rdx, -40(%rbp)
 471:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 10890              		.loc 29 471 0
 10891 0015 488B45E0 		movq	-32(%rbp), %rax
 10892 0019 4889C7   		movq	%rax, %rdi
 10893 001c E8000000 		call	_ZSt12__miter_baseIPPcENSt11_Miter_baseIT_E13iterator_typeES3_
 10893      00
 10894 0021 4889C3   		movq	%rax, %rbx
 10895 0024 488B45E8 		movq	-24(%rbp), %rax
 10896 0028 4889C7   		movq	%rax, %rdi
 10897 002b E8000000 		call	_ZSt12__miter_baseIPPcENSt11_Miter_baseIT_E13iterator_typeES3_
 10897      00
 10898 0030 4889C1   		movq	%rax, %rcx
 472:/usr/include/c++/5/bits/stl_algobase.h ****     }
 10899              		.loc 29 472 0
 10900 0033 488B45D8 		movq	-40(%rbp), %rax
 10901 0037 4889C2   		movq	%rax, %rdx
 10902 003a 4889DE   		movq	%rbx, %rsi
 10903 003d 4889CF   		movq	%rcx, %rdi
 10904 0040 E8000000 		call	_ZSt14__copy_move_a2ILb0EPPcS1_ET1_T0_S3_S2_
 10904      00
 10905              		.loc 29 473 0
 10906 0045 4883C428 		addq	$40, %rsp
 10907 0049 5B       		popq	%rbx
 10908 004a 5D       		popq	%rbp
 10909              		.cfi_def_cfa 7, 8
 10910 004b C3       		ret
 10911              		.cfi_endproc
 10912              	.LFE10600:
 10914              		.section	.text._ZSt13copy_backwardIPPcS1_ET0_T_S3_S2_,"axG",@progbits,_ZSt13copy_backwardIPPcS1_ET
 10915              		.weak	_ZSt13copy_backwardIPPcS1_ET0_T_S3_S2_
 10917              	_ZSt13copy_backwardIPPcS1_ET0_T_S3_S2_:
 10918              	.LFB10601:
 474:/usr/include/c++/5/bits/stl_algobase.h **** 
 475:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 476:/usr/include/c++/5/bits/stl_algobase.h ****   /**
GAS LISTING /tmp/ccX8BQhk.s 			page 507


 477:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 478:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 479:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 480:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 481:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 482:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result + (first - last)
 483:/usr/include/c++/5/bits/stl_algobase.h ****    *
 484:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 485:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 486:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 487:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 488:/usr/include/c++/5/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 489:/usr/include/c++/5/bits/stl_algobase.h ****    *
 490:/usr/include/c++/5/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 491:/usr/include/c++/5/bits/stl_algobase.h ****    *  within [first,last).
 492:/usr/include/c++/5/bits/stl_algobase.h ****   */
 493:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 494:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 495:/usr/include/c++/5/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 496:/usr/include/c++/5/bits/stl_algobase.h ****     {
 497:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 498:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 499:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 500:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 501:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 502:/usr/include/c++/5/bits/stl_algobase.h **** 
 503:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 504:/usr/include/c++/5/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 505:/usr/include/c++/5/bits/stl_algobase.h ****     }
 506:/usr/include/c++/5/bits/stl_algobase.h **** 
 507:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 508:/usr/include/c++/5/bits/stl_algobase.h **** #else
 509:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 510:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 511:/usr/include/c++/5/bits/stl_algobase.h **** 
 512:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool, bool, typename>
 513:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward
 514:/usr/include/c++/5/bits/stl_algobase.h ****     {
 515:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 516:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 517:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 518:/usr/include/c++/5/bits/stl_algobase.h ****         {
 519:/usr/include/c++/5/bits/stl_algobase.h **** 	  while (__first != __last)
 520:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 521:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 522:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 523:/usr/include/c++/5/bits/stl_algobase.h ****     };
 524:/usr/include/c++/5/bits/stl_algobase.h **** 
 525:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 526:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Category>
 527:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 528:/usr/include/c++/5/bits/stl_algobase.h ****     {
 529:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 530:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 531:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 532:/usr/include/c++/5/bits/stl_algobase.h ****         {
 533:/usr/include/c++/5/bits/stl_algobase.h **** 	  while (__first != __last)
GAS LISTING /tmp/ccX8BQhk.s 			page 508


 534:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 535:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 536:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 537:/usr/include/c++/5/bits/stl_algobase.h ****     };
 538:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 539:/usr/include/c++/5/bits/stl_algobase.h **** 
 540:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 541:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 542:/usr/include/c++/5/bits/stl_algobase.h ****     {
 543:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 544:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 545:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 546:/usr/include/c++/5/bits/stl_algobase.h ****         {
 547:/usr/include/c++/5/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 549:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 550:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 551:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 552:/usr/include/c++/5/bits/stl_algobase.h ****     };
 553:/usr/include/c++/5/bits/stl_algobase.h **** 
 554:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 555:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 556:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 557:/usr/include/c++/5/bits/stl_algobase.h ****     {
 558:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 559:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 560:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 561:/usr/include/c++/5/bits/stl_algobase.h ****         {
 562:/usr/include/c++/5/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 563:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 564:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 565:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 566:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 567:/usr/include/c++/5/bits/stl_algobase.h ****     };
 568:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 569:/usr/include/c++/5/bits/stl_algobase.h **** 
 570:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove>
 571:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 572:/usr/include/c++/5/bits/stl_algobase.h ****     {
 573:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _Tp>
 574:/usr/include/c++/5/bits/stl_algobase.h ****         static _Tp*
 575:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 576:/usr/include/c++/5/bits/stl_algobase.h ****         {
 577:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 578:/usr/include/c++/5/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 579:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 580:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 581:/usr/include/c++/5/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 582:/usr/include/c++/5/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 583:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 584:/usr/include/c++/5/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 585:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 586:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 587:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result - _Num;
 588:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 589:/usr/include/c++/5/bits/stl_algobase.h ****     };
 590:/usr/include/c++/5/bits/stl_algobase.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 509


 591:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 592:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 593:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 594:/usr/include/c++/5/bits/stl_algobase.h ****     {
 595:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 596:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 597:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 598:/usr/include/c++/5/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 599:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 600:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 601:/usr/include/c++/5/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 602:/usr/include/c++/5/bits/stl_algobase.h **** 
 603:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 604:/usr/include/c++/5/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 605:/usr/include/c++/5/bits/stl_algobase.h **** 								 __last,
 606:/usr/include/c++/5/bits/stl_algobase.h **** 								 __result);
 607:/usr/include/c++/5/bits/stl_algobase.h ****     }
 608:/usr/include/c++/5/bits/stl_algobase.h **** 
 609:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 610:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 611:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 612:/usr/include/c++/5/bits/stl_algobase.h ****     {
 613:/usr/include/c++/5/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 614:/usr/include/c++/5/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 615:/usr/include/c++/5/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 616:/usr/include/c++/5/bits/stl_algobase.h ****     }
 617:/usr/include/c++/5/bits/stl_algobase.h **** 
 618:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 619:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 620:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 621:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 622:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 623:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 624:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result - (first - last)
 625:/usr/include/c++/5/bits/stl_algobase.h ****    *
 626:/usr/include/c++/5/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 627:/usr/include/c++/5/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 628:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 629:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 630:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 631:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 632:/usr/include/c++/5/bits/stl_algobase.h ****    *
 633:/usr/include/c++/5/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 634:/usr/include/c++/5/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 635:/usr/include/c++/5/bits/stl_algobase.h ****   */
 636:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 637:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 638:/usr/include/c++/5/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 10919              		.loc 29 638 0
 10920              		.cfi_startproc
 10921 0000 55       		pushq	%rbp
 10922              		.cfi_def_cfa_offset 16
 10923              		.cfi_offset 6, -16
 10924 0001 4889E5   		movq	%rsp, %rbp
 10925              		.cfi_def_cfa_register 6
 10926 0004 53       		pushq	%rbx
 10927 0005 4883EC28 		subq	$40, %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 510


 10928              		.cfi_offset 3, -24
 10929 0009 48897DE8 		movq	%rdi, -24(%rbp)
 10930 000d 488975E0 		movq	%rsi, -32(%rbp)
 10931 0011 488955D8 		movq	%rdx, -40(%rbp)
 639:/usr/include/c++/5/bits/stl_algobase.h ****     {
 640:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 641:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 642:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 643:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 644:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 645:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 646:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 647:/usr/include/c++/5/bits/stl_algobase.h **** 
 648:/usr/include/c++/5/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 649:/usr/include/c++/5/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 10932              		.loc 29 649 0
 10933 0015 488B45E0 		movq	-32(%rbp), %rax
 10934 0019 4889C7   		movq	%rax, %rdi
 10935 001c E8000000 		call	_ZSt12__miter_baseIPPcENSt11_Miter_baseIT_E13iterator_typeES3_
 10935      00
 10936 0021 4889C3   		movq	%rax, %rbx
 10937 0024 488B45E8 		movq	-24(%rbp), %rax
 10938 0028 4889C7   		movq	%rax, %rdi
 10939 002b E8000000 		call	_ZSt12__miter_baseIPPcENSt11_Miter_baseIT_E13iterator_typeES3_
 10939      00
 10940 0030 4889C1   		movq	%rax, %rcx
 650:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 10941              		.loc 29 650 0
 10942 0033 488B45D8 		movq	-40(%rbp), %rax
 10943 0037 4889C2   		movq	%rax, %rdx
 10944 003a 4889DE   		movq	%rbx, %rsi
 10945 003d 4889CF   		movq	%rcx, %rdi
 10946 0040 E8000000 		call	_ZSt23__copy_move_backward_a2ILb0EPPcS1_ET1_T0_S3_S2_
 10946      00
 651:/usr/include/c++/5/bits/stl_algobase.h ****     }
 10947              		.loc 29 651 0
 10948 0045 4883C428 		addq	$40, %rsp
 10949 0049 5B       		popq	%rbx
 10950 004a 5D       		popq	%rbp
 10951              		.cfi_def_cfa 7, 8
 10952 004b C3       		ret
 10953              		.cfi_endproc
 10954              	.LFE10601:
 10956              		.section	.text._ZNKSt5dequeIcSaIcEE8max_sizeEv,"axG",@progbits,_ZNKSt5dequeIcSaIcEE8max_sizeEv,com
 10957              		.align 2
 10958              		.weak	_ZNKSt5dequeIcSaIcEE8max_sizeEv
 10960              	_ZNKSt5dequeIcSaIcEE8max_sizeEv:
 10961              	.LFB10602:
1268:/usr/include/c++/5/bits/stl_deque.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 10962              		.loc 3 1268 0
 10963              		.cfi_startproc
 10964 0000 55       		pushq	%rbp
 10965              		.cfi_def_cfa_offset 16
 10966              		.cfi_offset 6, -16
 10967 0001 4889E5   		movq	%rsp, %rbp
 10968              		.cfi_def_cfa_register 6
 10969 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 511


 10970 0008 48897DF8 		movq	%rdi, -8(%rbp)
1269:/usr/include/c++/5/bits/stl_deque.h **** 
 10971              		.loc 3 1269 0
 10972 000c 488B45F8 		movq	-8(%rbp), %rax
 10973 0010 4889C7   		movq	%rax, %rdi
 10974 0013 E8000000 		call	_ZNKSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
 10974      00
 10975 0018 4889C7   		movq	%rax, %rdi
 10976 001b E8000000 		call	_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_
 10976      00
 10977 0020 C9       		leave
 10978              		.cfi_def_cfa 7, 8
 10979 0021 C3       		ret
 10980              		.cfi_endproc
 10981              	.LFE10602:
 10983              		.section	.text._ZNSt5dequeIcSaIcEE23_M_reserve_map_at_frontEm,"axG",@progbits,_ZNSt5dequeIcSaIcEE2
 10984              		.align 2
 10985              		.weak	_ZNSt5dequeIcSaIcEE23_M_reserve_map_at_frontEm
 10987              	_ZNSt5dequeIcSaIcEE23_M_reserve_map_at_frontEm:
 10988              	.LFB10603:
2120:/usr/include/c++/5/bits/stl_deque.h **** 
2121:/usr/include/c++/5/bits/stl_deque.h ****       void
2122:/usr/include/c++/5/bits/stl_deque.h ****       _M_reserve_map_at_front(size_type __nodes_to_add = 1)
 10989              		.loc 3 2122 0
 10990              		.cfi_startproc
 10991 0000 55       		pushq	%rbp
 10992              		.cfi_def_cfa_offset 16
 10993              		.cfi_offset 6, -16
 10994 0001 4889E5   		movq	%rsp, %rbp
 10995              		.cfi_def_cfa_register 6
 10996 0004 4883EC10 		subq	$16, %rsp
 10997 0008 48897DF8 		movq	%rdi, -8(%rbp)
 10998 000c 488975F0 		movq	%rsi, -16(%rbp)
2123:/usr/include/c++/5/bits/stl_deque.h ****       {
2124:/usr/include/c++/5/bits/stl_deque.h **** 	if (__nodes_to_add > size_type(this->_M_impl._M_start._M_node
2125:/usr/include/c++/5/bits/stl_deque.h **** 				       - this->_M_impl._M_map))
 10999              		.loc 3 2125 0
 11000 0010 488B45F8 		movq	-8(%rbp), %rax
 11001 0014 488B4028 		movq	40(%rax), %rax
2124:/usr/include/c++/5/bits/stl_deque.h **** 				       - this->_M_impl._M_map))
 11002              		.loc 3 2124 0
 11003 0018 4889C2   		movq	%rax, %rdx
 11004              		.loc 3 2125 0
 11005 001b 488B45F8 		movq	-8(%rbp), %rax
 11006 001f 488B00   		movq	(%rax), %rax
2124:/usr/include/c++/5/bits/stl_deque.h **** 				       - this->_M_impl._M_map))
 11007              		.loc 3 2124 0
 11008 0022 4829C2   		subq	%rax, %rdx
 11009 0025 4889D0   		movq	%rdx, %rax
 11010 0028 48C1F803 		sarq	$3, %rax
 11011 002c 483B45F0 		cmpq	-16(%rbp), %rax
 11012 0030 7318     		jnb	.L574
2126:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_reallocate_map(__nodes_to_add, true);
 11013              		.loc 3 2126 0
 11014 0032 488B4DF0 		movq	-16(%rbp), %rcx
 11015 0036 488B45F8 		movq	-8(%rbp), %rax
 11016 003a BA010000 		movl	$1, %edx
GAS LISTING /tmp/ccX8BQhk.s 			page 512


 11016      00
 11017 003f 4889CE   		movq	%rcx, %rsi
 11018 0042 4889C7   		movq	%rax, %rdi
 11019 0045 E8000000 		call	_ZNSt5dequeIcSaIcEE17_M_reallocate_mapEmb
 11019      00
 11020              	.L574:
2127:/usr/include/c++/5/bits/stl_deque.h ****       }
 11021              		.loc 3 2127 0
 11022 004a 90       		nop
 11023 004b C9       		leave
 11024              		.cfi_def_cfa 7, 8
 11025 004c C3       		ret
 11026              		.cfi_endproc
 11027              	.LFE10603:
 11029              		.section	.text._ZNSt15_Deque_iteratorIcRcPcEmIEl,"axG",@progbits,_ZNSt15_Deque_iteratorIcRcPcEmIEl
 11030              		.align 2
 11031              		.weak	_ZNSt15_Deque_iteratorIcRcPcEmIEl
 11033              	_ZNSt15_Deque_iteratorIcRcPcEmIEl:
 11034              	.LFB10604:
 232:/usr/include/c++/5/bits/stl_deque.h ****       { return *this += -__n; }
 11035              		.loc 3 232 0
 11036              		.cfi_startproc
 11037 0000 55       		pushq	%rbp
 11038              		.cfi_def_cfa_offset 16
 11039              		.cfi_offset 6, -16
 11040 0001 4889E5   		movq	%rsp, %rbp
 11041              		.cfi_def_cfa_register 6
 11042 0004 4883EC10 		subq	$16, %rsp
 11043 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11044 000c 488975F0 		movq	%rsi, -16(%rbp)
 233:/usr/include/c++/5/bits/stl_deque.h **** 
 11045              		.loc 3 233 0
 11046 0010 488B45F0 		movq	-16(%rbp), %rax
 11047 0014 48F7D8   		negq	%rax
 11048 0017 4889C2   		movq	%rax, %rdx
 11049 001a 488B45F8 		movq	-8(%rbp), %rax
 11050 001e 4889D6   		movq	%rdx, %rsi
 11051 0021 4889C7   		movq	%rax, %rdi
 11052 0024 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEpLEl
 11052      00
 11053 0029 C9       		leave
 11054              		.cfi_def_cfa 7, 8
 11055 002a C3       		ret
 11056              		.cfi_endproc
 11057              	.LFE10604:
 11059              		.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKcSt15_Deque_iteratorIcRcPcEEET0_
 11060              		.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKcSt15_Deque_iteratorIcRcPcEEET0_T_S9_S8_
 11062              	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKcSt15_Deque_iteratorIcRcPcEEET0_T_S9_S8_:
 11063              	.LFB10605:
  91:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 11064              		.loc 38 91 0
 11065              		.cfi_startproc
 11066 0000 55       		pushq	%rbp
 11067              		.cfi_def_cfa_offset 16
 11068              		.cfi_offset 6, -16
 11069 0001 4889E5   		movq	%rsp, %rbp
 11070              		.cfi_def_cfa_register 6
GAS LISTING /tmp/ccX8BQhk.s 			page 513


 11071 0004 4883EC50 		subq	$80, %rsp
 11072 0008 48897DC8 		movq	%rdi, -56(%rbp)
 11073 000c 488975C0 		movq	%rsi, -64(%rbp)
 11074 0010 488955B8 		movq	%rdx, -72(%rbp)
 11075 0014 48894DB0 		movq	%rcx, -80(%rbp)
  91:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 11076              		.loc 38 91 0
 11077 0018 64488B04 		movq	%fs:40, %rax
 11077      25280000 
 11077      00
 11078 0021 488945F8 		movq	%rax, -8(%rbp)
 11079 0025 31C0     		xorl	%eax, %eax
  93:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 11080              		.loc 38 93 0
 11081 0027 488B55B0 		movq	-80(%rbp), %rdx
 11082 002b 488D45D0 		leaq	-48(%rbp), %rax
 11083 002f 4889D6   		movq	%rdx, %rsi
 11084 0032 4889C7   		movq	%rax, %rdi
 11085 0035 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11085      00
 11086 003a 488B45C8 		movq	-56(%rbp), %rax
 11087 003e 488D4DD0 		leaq	-48(%rbp), %rcx
 11088 0042 488B55B8 		movq	-72(%rbp), %rdx
 11089 0046 488B75C0 		movq	-64(%rbp), %rsi
 11090 004a 4889C7   		movq	%rax, %rdi
 11091 004d E8000000 		call	_ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
 11091      00
 11092 0052 488B45C8 		movq	-56(%rbp), %rax
 11093 0056 488B7DF8 		movq	-8(%rbp), %rdi
 11094 005a 6448333C 		xorq	%fs:40, %rdi
 11094      25280000 
 11094      00
 11095 0063 7405     		je	.L579
 11096 0065 E8000000 		call	__stack_chk_fail
 11096      00
 11097              	.L579:
 11098 006a C9       		leave
 11099              		.cfi_def_cfa 7, 8
 11100 006b C3       		ret
 11101              		.cfi_endproc
 11102              	.LFE10605:
 11104              		.section	.text._ZSt18make_move_iteratorISt15_Deque_iteratorIcRcPcEESt13move_iteratorIT_ES5_,"axG",
 11105              		.weak	_ZSt18make_move_iteratorISt15_Deque_iteratorIcRcPcEESt13move_iteratorIT_ES5_
 11107              	_ZSt18make_move_iteratorISt15_Deque_iteratorIcRcPcEESt13move_iteratorIT_ES5_:
 11108              	.LFB10606:
 927:/usr/include/c++/5/bits/stl_iterator.h **** 
 928:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 929:/usr/include/c++/5/bits/stl_iterator.h ****     inline __normal_iterator<_Iterator, _Container>
 930:/usr/include/c++/5/bits/stl_iterator.h ****     operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
 931:/usr/include/c++/5/bits/stl_iterator.h **** 	      __n, const __normal_iterator<_Iterator, _Container>& __i)
 932:/usr/include/c++/5/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 933:/usr/include/c++/5/bits/stl_iterator.h ****     { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }
 934:/usr/include/c++/5/bits/stl_iterator.h **** 
 935:/usr/include/c++/5/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 936:/usr/include/c++/5/bits/stl_iterator.h **** } // namespace
 937:/usr/include/c++/5/bits/stl_iterator.h **** 
 938:/usr/include/c++/5/bits/stl_iterator.h **** #if __cplusplus >= 201103L
GAS LISTING /tmp/ccX8BQhk.s 			page 514


 939:/usr/include/c++/5/bits/stl_iterator.h **** 
 940:/usr/include/c++/5/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
 941:/usr/include/c++/5/bits/stl_iterator.h **** {
 942:/usr/include/c++/5/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 943:/usr/include/c++/5/bits/stl_iterator.h **** 
 944:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 945:/usr/include/c++/5/bits/stl_iterator.h ****    * @addtogroup iterators
 946:/usr/include/c++/5/bits/stl_iterator.h ****    * @{
 947:/usr/include/c++/5/bits/stl_iterator.h ****    */
 948:/usr/include/c++/5/bits/stl_iterator.h **** 
 949:/usr/include/c++/5/bits/stl_iterator.h ****   // 24.4.3  Move iterators
 950:/usr/include/c++/5/bits/stl_iterator.h ****   /**
 951:/usr/include/c++/5/bits/stl_iterator.h ****    *  Class template move_iterator is an iterator adapter with the same
 952:/usr/include/c++/5/bits/stl_iterator.h ****    *  behavior as the underlying iterator except that its dereference
 953:/usr/include/c++/5/bits/stl_iterator.h ****    *  operator implicitly converts the value returned by the underlying
 954:/usr/include/c++/5/bits/stl_iterator.h ****    *  iterator's dereference operator to an rvalue reference.  Some
 955:/usr/include/c++/5/bits/stl_iterator.h ****    *  generic algorithms can be called with move iterators to replace
 956:/usr/include/c++/5/bits/stl_iterator.h ****    *  copying with moving.
 957:/usr/include/c++/5/bits/stl_iterator.h ****    */
 958:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
 959:/usr/include/c++/5/bits/stl_iterator.h ****     class move_iterator
 960:/usr/include/c++/5/bits/stl_iterator.h ****     {
 961:/usr/include/c++/5/bits/stl_iterator.h ****     protected:
 962:/usr/include/c++/5/bits/stl_iterator.h ****       _Iterator _M_current;
 963:/usr/include/c++/5/bits/stl_iterator.h **** 
 964:/usr/include/c++/5/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 965:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::reference		__base_ref;
 966:/usr/include/c++/5/bits/stl_iterator.h **** 
 967:/usr/include/c++/5/bits/stl_iterator.h ****     public:
 968:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 969:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 970:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 971:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 972:/usr/include/c++/5/bits/stl_iterator.h ****       // NB: DR 680.
 973:/usr/include/c++/5/bits/stl_iterator.h ****       typedef _Iterator					pointer;
 974:/usr/include/c++/5/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 975:/usr/include/c++/5/bits/stl_iterator.h ****       // 2106. move_iterator wrapping iterators returning prvalues
 976:/usr/include/c++/5/bits/stl_iterator.h ****       typedef typename conditional<is_reference<__base_ref>::value,
 977:/usr/include/c++/5/bits/stl_iterator.h **** 			 typename remove_reference<__base_ref>::type&&,
 978:/usr/include/c++/5/bits/stl_iterator.h **** 			 __base_ref>::type		reference;
 979:/usr/include/c++/5/bits/stl_iterator.h **** 
 980:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator()
 981:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current() { }
 982:/usr/include/c++/5/bits/stl_iterator.h **** 
 983:/usr/include/c++/5/bits/stl_iterator.h ****       explicit
 984:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator(iterator_type __i)
 985:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(__i) { }
 986:/usr/include/c++/5/bits/stl_iterator.h **** 
 987:/usr/include/c++/5/bits/stl_iterator.h ****       template<typename _Iter>
 988:/usr/include/c++/5/bits/stl_iterator.h **** 	move_iterator(const move_iterator<_Iter>& __i)
 989:/usr/include/c++/5/bits/stl_iterator.h **** 	: _M_current(__i.base()) { }
 990:/usr/include/c++/5/bits/stl_iterator.h **** 
 991:/usr/include/c++/5/bits/stl_iterator.h ****       iterator_type
 992:/usr/include/c++/5/bits/stl_iterator.h ****       base() const
 993:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
 994:/usr/include/c++/5/bits/stl_iterator.h **** 
 995:/usr/include/c++/5/bits/stl_iterator.h ****       reference
GAS LISTING /tmp/ccX8BQhk.s 			page 515


 996:/usr/include/c++/5/bits/stl_iterator.h ****       operator*() const
 997:/usr/include/c++/5/bits/stl_iterator.h ****       { return static_cast<reference>(*_M_current); }
 998:/usr/include/c++/5/bits/stl_iterator.h **** 
 999:/usr/include/c++/5/bits/stl_iterator.h ****       pointer
1000:/usr/include/c++/5/bits/stl_iterator.h ****       operator->() const
1001:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
1002:/usr/include/c++/5/bits/stl_iterator.h **** 
1003:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator&
1004:/usr/include/c++/5/bits/stl_iterator.h ****       operator++()
1005:/usr/include/c++/5/bits/stl_iterator.h ****       {
1006:/usr/include/c++/5/bits/stl_iterator.h **** 	++_M_current;
1007:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
1008:/usr/include/c++/5/bits/stl_iterator.h ****       }
1009:/usr/include/c++/5/bits/stl_iterator.h **** 
1010:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator
1011:/usr/include/c++/5/bits/stl_iterator.h ****       operator++(int)
1012:/usr/include/c++/5/bits/stl_iterator.h ****       {
1013:/usr/include/c++/5/bits/stl_iterator.h **** 	move_iterator __tmp = *this;
1014:/usr/include/c++/5/bits/stl_iterator.h **** 	++_M_current;
1015:/usr/include/c++/5/bits/stl_iterator.h **** 	return __tmp;
1016:/usr/include/c++/5/bits/stl_iterator.h ****       }
1017:/usr/include/c++/5/bits/stl_iterator.h **** 
1018:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator&
1019:/usr/include/c++/5/bits/stl_iterator.h ****       operator--()
1020:/usr/include/c++/5/bits/stl_iterator.h ****       {
1021:/usr/include/c++/5/bits/stl_iterator.h **** 	--_M_current;
1022:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
1023:/usr/include/c++/5/bits/stl_iterator.h ****       }
1024:/usr/include/c++/5/bits/stl_iterator.h **** 
1025:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator
1026:/usr/include/c++/5/bits/stl_iterator.h ****       operator--(int)
1027:/usr/include/c++/5/bits/stl_iterator.h ****       {
1028:/usr/include/c++/5/bits/stl_iterator.h **** 	move_iterator __tmp = *this;
1029:/usr/include/c++/5/bits/stl_iterator.h **** 	--_M_current;
1030:/usr/include/c++/5/bits/stl_iterator.h **** 	return __tmp;
1031:/usr/include/c++/5/bits/stl_iterator.h ****       }
1032:/usr/include/c++/5/bits/stl_iterator.h **** 
1033:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator
1034:/usr/include/c++/5/bits/stl_iterator.h ****       operator+(difference_type __n) const
1035:/usr/include/c++/5/bits/stl_iterator.h ****       { return move_iterator(_M_current + __n); }
1036:/usr/include/c++/5/bits/stl_iterator.h **** 
1037:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator&
1038:/usr/include/c++/5/bits/stl_iterator.h ****       operator+=(difference_type __n)
1039:/usr/include/c++/5/bits/stl_iterator.h ****       {
1040:/usr/include/c++/5/bits/stl_iterator.h **** 	_M_current += __n;
1041:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
1042:/usr/include/c++/5/bits/stl_iterator.h ****       }
1043:/usr/include/c++/5/bits/stl_iterator.h **** 
1044:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator
1045:/usr/include/c++/5/bits/stl_iterator.h ****       operator-(difference_type __n) const
1046:/usr/include/c++/5/bits/stl_iterator.h ****       { return move_iterator(_M_current - __n); }
1047:/usr/include/c++/5/bits/stl_iterator.h ****     
1048:/usr/include/c++/5/bits/stl_iterator.h ****       move_iterator&
1049:/usr/include/c++/5/bits/stl_iterator.h ****       operator-=(difference_type __n)
1050:/usr/include/c++/5/bits/stl_iterator.h ****       { 
1051:/usr/include/c++/5/bits/stl_iterator.h **** 	_M_current -= __n;
1052:/usr/include/c++/5/bits/stl_iterator.h **** 	return *this;
GAS LISTING /tmp/ccX8BQhk.s 			page 516


1053:/usr/include/c++/5/bits/stl_iterator.h ****       }
1054:/usr/include/c++/5/bits/stl_iterator.h **** 
1055:/usr/include/c++/5/bits/stl_iterator.h ****       reference
1056:/usr/include/c++/5/bits/stl_iterator.h ****       operator[](difference_type __n) const
1057:/usr/include/c++/5/bits/stl_iterator.h ****       { return std::move(_M_current[__n]); }
1058:/usr/include/c++/5/bits/stl_iterator.h ****     };
1059:/usr/include/c++/5/bits/stl_iterator.h **** 
1060:/usr/include/c++/5/bits/stl_iterator.h ****   // Note: See __normal_iterator operators note from Gaby to understand
1061:/usr/include/c++/5/bits/stl_iterator.h ****   // why there are always 2 versions for most of the move_iterator
1062:/usr/include/c++/5/bits/stl_iterator.h ****   // operators.
1063:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1064:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1065:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const move_iterator<_IteratorL>& __x,
1066:/usr/include/c++/5/bits/stl_iterator.h **** 	       const move_iterator<_IteratorR>& __y)
1067:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
1068:/usr/include/c++/5/bits/stl_iterator.h **** 
1069:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
1070:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1071:/usr/include/c++/5/bits/stl_iterator.h ****     operator==(const move_iterator<_Iterator>& __x,
1072:/usr/include/c++/5/bits/stl_iterator.h **** 	       const move_iterator<_Iterator>& __y)
1073:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
1074:/usr/include/c++/5/bits/stl_iterator.h **** 
1075:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1076:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1077:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const move_iterator<_IteratorL>& __x,
1078:/usr/include/c++/5/bits/stl_iterator.h **** 	       const move_iterator<_IteratorR>& __y)
1079:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x == __y); }
1080:/usr/include/c++/5/bits/stl_iterator.h **** 
1081:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
1082:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1083:/usr/include/c++/5/bits/stl_iterator.h ****     operator!=(const move_iterator<_Iterator>& __x,
1084:/usr/include/c++/5/bits/stl_iterator.h **** 	       const move_iterator<_Iterator>& __y)
1085:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x == __y); }
1086:/usr/include/c++/5/bits/stl_iterator.h **** 
1087:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1088:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1089:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const move_iterator<_IteratorL>& __x,
1090:/usr/include/c++/5/bits/stl_iterator.h **** 	      const move_iterator<_IteratorR>& __y)
1091:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() < __y.base(); }
1092:/usr/include/c++/5/bits/stl_iterator.h **** 
1093:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
1094:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1095:/usr/include/c++/5/bits/stl_iterator.h ****     operator<(const move_iterator<_Iterator>& __x,
1096:/usr/include/c++/5/bits/stl_iterator.h **** 	      const move_iterator<_Iterator>& __y)
1097:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() < __y.base(); }
1098:/usr/include/c++/5/bits/stl_iterator.h **** 
1099:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1100:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1101:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const move_iterator<_IteratorL>& __x,
1102:/usr/include/c++/5/bits/stl_iterator.h **** 	       const move_iterator<_IteratorR>& __y)
1103:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__y < __x); }
1104:/usr/include/c++/5/bits/stl_iterator.h **** 
1105:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
1106:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1107:/usr/include/c++/5/bits/stl_iterator.h ****     operator<=(const move_iterator<_Iterator>& __x,
1108:/usr/include/c++/5/bits/stl_iterator.h **** 	       const move_iterator<_Iterator>& __y)
1109:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__y < __x); }
GAS LISTING /tmp/ccX8BQhk.s 			page 517


1110:/usr/include/c++/5/bits/stl_iterator.h **** 
1111:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1112:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1113:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const move_iterator<_IteratorL>& __x,
1114:/usr/include/c++/5/bits/stl_iterator.h **** 	      const move_iterator<_IteratorR>& __y)
1115:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y < __x; }
1116:/usr/include/c++/5/bits/stl_iterator.h **** 
1117:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
1118:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1119:/usr/include/c++/5/bits/stl_iterator.h ****     operator>(const move_iterator<_Iterator>& __x,
1120:/usr/include/c++/5/bits/stl_iterator.h **** 	      const move_iterator<_Iterator>& __y)
1121:/usr/include/c++/5/bits/stl_iterator.h ****     { return __y < __x; }
1122:/usr/include/c++/5/bits/stl_iterator.h **** 
1123:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1124:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1125:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const move_iterator<_IteratorL>& __x,
1126:/usr/include/c++/5/bits/stl_iterator.h **** 	       const move_iterator<_IteratorR>& __y)
1127:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x < __y); }
1128:/usr/include/c++/5/bits/stl_iterator.h **** 
1129:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
1130:/usr/include/c++/5/bits/stl_iterator.h ****     inline bool
1131:/usr/include/c++/5/bits/stl_iterator.h ****     operator>=(const move_iterator<_Iterator>& __x,
1132:/usr/include/c++/5/bits/stl_iterator.h **** 	       const move_iterator<_Iterator>& __y)
1133:/usr/include/c++/5/bits/stl_iterator.h ****     { return !(__x < __y); }
1134:/usr/include/c++/5/bits/stl_iterator.h **** 
1135:/usr/include/c++/5/bits/stl_iterator.h ****   // DR 685.
1136:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
1137:/usr/include/c++/5/bits/stl_iterator.h ****     inline auto
1138:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const move_iterator<_IteratorL>& __x,
1139:/usr/include/c++/5/bits/stl_iterator.h **** 	      const move_iterator<_IteratorR>& __y)
1140:/usr/include/c++/5/bits/stl_iterator.h ****     -> decltype(__x.base() - __y.base())
1141:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() - __y.base(); }
1142:/usr/include/c++/5/bits/stl_iterator.h **** 
1143:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
1144:/usr/include/c++/5/bits/stl_iterator.h ****     inline auto
1145:/usr/include/c++/5/bits/stl_iterator.h ****     operator-(const move_iterator<_Iterator>& __x,
1146:/usr/include/c++/5/bits/stl_iterator.h **** 	      const move_iterator<_Iterator>& __y)
1147:/usr/include/c++/5/bits/stl_iterator.h ****     -> decltype(__x.base() - __y.base())
1148:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x.base() - __y.base(); }
1149:/usr/include/c++/5/bits/stl_iterator.h **** 
1150:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
1151:/usr/include/c++/5/bits/stl_iterator.h ****     inline move_iterator<_Iterator>
1152:/usr/include/c++/5/bits/stl_iterator.h ****     operator+(typename move_iterator<_Iterator>::difference_type __n,
1153:/usr/include/c++/5/bits/stl_iterator.h **** 	      const move_iterator<_Iterator>& __x)
1154:/usr/include/c++/5/bits/stl_iterator.h ****     { return __x + __n; }
1155:/usr/include/c++/5/bits/stl_iterator.h **** 
1156:/usr/include/c++/5/bits/stl_iterator.h ****   template<typename _Iterator>
1157:/usr/include/c++/5/bits/stl_iterator.h ****     inline move_iterator<_Iterator>
1158:/usr/include/c++/5/bits/stl_iterator.h ****     make_move_iterator(_Iterator __i)
 11109              		.loc 13 1158 0
 11110              		.cfi_startproc
 11111 0000 55       		pushq	%rbp
 11112              		.cfi_def_cfa_offset 16
 11113              		.cfi_offset 6, -16
 11114 0001 4889E5   		movq	%rsp, %rbp
 11115              		.cfi_def_cfa_register 6
 11116 0004 4883EC40 		subq	$64, %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 518


 11117 0008 48897DC8 		movq	%rdi, -56(%rbp)
 11118 000c 488975C0 		movq	%rsi, -64(%rbp)
 11119              		.loc 13 1158 0
 11120 0010 64488B04 		movq	%fs:40, %rax
 11120      25280000 
 11120      00
 11121 0019 488945F8 		movq	%rax, -8(%rbp)
 11122 001d 31C0     		xorl	%eax, %eax
1159:/usr/include/c++/5/bits/stl_iterator.h ****     { return move_iterator<_Iterator>(__i); }
 11123              		.loc 13 1159 0
 11124 001f 488B55C0 		movq	-64(%rbp), %rdx
 11125 0023 488D45D0 		leaq	-48(%rbp), %rax
 11126 0027 4889D6   		movq	%rdx, %rsi
 11127 002a 4889C7   		movq	%rax, %rdi
 11128 002d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11128      00
 11129 0032 488D55D0 		leaq	-48(%rbp), %rdx
 11130 0036 488B45C8 		movq	-56(%rbp), %rax
 11131 003a 4889D6   		movq	%rdx, %rsi
 11132 003d 4889C7   		movq	%rax, %rdi
 11133 0040 E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ES3_
 11133      00
 11134 0045 488B45C8 		movq	-56(%rbp), %rax
 11135 0049 488B4DF8 		movq	-8(%rbp), %rcx
 11136 004d 6448330C 		xorq	%fs:40, %rcx
 11136      25280000 
 11136      00
 11137 0056 7405     		je	.L582
 11138 0058 E8000000 		call	__stack_chk_fail
 11138      00
 11139              	.L582:
 11140 005d C9       		leave
 11141              		.cfi_def_cfa 7, 8
 11142 005e C3       		ret
 11143              		.cfi_endproc
 11144              	.LFE10606:
 11146              		.section	.text._ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ERKS4_,"axG",@progbits,_ZNSt13mov
 11147              		.align 2
 11148              		.weak	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ERKS4_
 11150              	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ERKS4_:
 11151              	.LFB10609:
 959:/usr/include/c++/5/bits/stl_iterator.h ****     {
 11152              		.loc 13 959 0
 11153              		.cfi_startproc
 11154 0000 55       		pushq	%rbp
 11155              		.cfi_def_cfa_offset 16
 11156              		.cfi_offset 6, -16
 11157 0001 4889E5   		movq	%rsp, %rbp
 11158              		.cfi_def_cfa_register 6
 11159 0004 4883EC10 		subq	$16, %rsp
 11160 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11161 000c 488975F0 		movq	%rsi, -16(%rbp)
 11162              	.LBB92:
 959:/usr/include/c++/5/bits/stl_iterator.h ****     {
 11163              		.loc 13 959 0
 11164 0010 488B55F0 		movq	-16(%rbp), %rdx
 11165 0014 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 519


 11166 0018 4889D6   		movq	%rdx, %rsi
 11167 001b 4889C7   		movq	%rax, %rdi
 11168 001e E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11168      00
 11169              	.LBE92:
 11170 0023 90       		nop
 11171 0024 C9       		leave
 11172              		.cfi_def_cfa 7, 8
 11173 0025 C3       		ret
 11174              		.cfi_endproc
 11175              	.LFE10609:
 11177              		.weak	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
 11178              		.set	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_,_ZNSt13move_iteratorISt15_Deque_iter
 11179              		.section	.text._ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_cET0_T
 11180              		.weak	_ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_cET0_T_S7_S6_RS
 11182              	_ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_cET0_T_S7_S6_RSaIT1_E:
 11183              	.LFB10607:
 279:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 11184              		.loc 38 279 0
 11185              		.cfi_startproc
 11186 0000 55       		pushq	%rbp
 11187              		.cfi_def_cfa_offset 16
 11188              		.cfi_offset 6, -16
 11189 0001 4889E5   		movq	%rsp, %rbp
 11190              		.cfi_def_cfa_register 6
 11191 0004 4881ECA0 		subq	$160, %rsp
 11191      000000
 11192 000b 48897D88 		movq	%rdi, -120(%rbp)
 11193 000f 48897580 		movq	%rsi, -128(%rbp)
 11194 0013 48899578 		movq	%rdx, -136(%rbp)
 11194      FFFFFF
 11195 001a 48898D70 		movq	%rcx, -144(%rbp)
 11195      FFFFFF
 11196 0021 4C898568 		movq	%r8, -152(%rbp)
 11196      FFFFFF
 279:/usr/include/c++/5/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 11197              		.loc 38 279 0
 11198 0028 64488B04 		movq	%fs:40, %rax
 11198      25280000 
 11198      00
 11199 0031 488945F8 		movq	%rax, -8(%rbp)
 11200 0035 31C0     		xorl	%eax, %eax
 281:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 11201              		.loc 38 281 0
 11202 0037 488B9570 		movq	-144(%rbp), %rdx
 11202      FFFFFF
 11203 003e 488D45D0 		leaq	-48(%rbp), %rax
 11204 0042 4889D6   		movq	%rdx, %rsi
 11205 0045 4889C7   		movq	%rax, %rdi
 11206 0048 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11206      00
 11207 004d 488B9578 		movq	-136(%rbp), %rdx
 11207      FFFFFF
 11208 0054 488D45B0 		leaq	-80(%rbp), %rax
 11209 0058 4889D6   		movq	%rdx, %rsi
 11210 005b 4889C7   		movq	%rax, %rdi
 11211 005e E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
GAS LISTING /tmp/ccX8BQhk.s 			page 520


 11211      00
 11212 0063 488B5580 		movq	-128(%rbp), %rdx
 11213 0067 488D4590 		leaq	-112(%rbp), %rax
 11214 006b 4889D6   		movq	%rdx, %rsi
 11215 006e 4889C7   		movq	%rax, %rdi
 11216 0071 E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
 11216      00
 11217 0076 488B4588 		movq	-120(%rbp), %rax
 11218 007a 488D4DD0 		leaq	-48(%rbp), %rcx
 11219 007e 488D55B0 		leaq	-80(%rbp), %rdx
 11220 0082 488D7590 		leaq	-112(%rbp), %rsi
 11221 0086 4889C7   		movq	%rax, %rdi
 11222 0089 E8000000 		call	_ZSt18uninitialized_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_
 11222      00
 11223 008e 488B4588 		movq	-120(%rbp), %rax
 11224 0092 488B4DF8 		movq	-8(%rbp), %rcx
 11225 0096 6448330C 		xorq	%fs:40, %rcx
 11225      25280000 
 11225      00
 11226 009f 7405     		je	.L586
 11227 00a1 E8000000 		call	__stack_chk_fail
 11227      00
 11228              	.L586:
 11229 00a6 C9       		leave
 11230              		.cfi_def_cfa 7, 8
 11231 00a7 C3       		ret
 11232              		.cfi_endproc
 11233              	.LFE10607:
 11235              		.section	.text._ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_,"axG",@progbits,
 11236              		.weak	_ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_
 11238              	_ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_:
 11239              	.LFB10611:
 944:/usr/include/c++/5/bits/deque.tcc **** 
 945:/usr/include/c++/5/bits/deque.tcc ****   // Overload for deque::iterators, exploiting the "segmented-iterator
 946:/usr/include/c++/5/bits/deque.tcc ****   // optimization".
 947:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp>
 948:/usr/include/c++/5/bits/deque.tcc ****     void
 949:/usr/include/c++/5/bits/deque.tcc ****     fill(const _Deque_iterator<_Tp, _Tp&, _Tp*>& __first,
 950:/usr/include/c++/5/bits/deque.tcc **** 	 const _Deque_iterator<_Tp, _Tp&, _Tp*>& __last, const _Tp& __value)
 951:/usr/include/c++/5/bits/deque.tcc ****     {
 952:/usr/include/c++/5/bits/deque.tcc ****       typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
 953:/usr/include/c++/5/bits/deque.tcc **** 
 954:/usr/include/c++/5/bits/deque.tcc ****       for (typename _Self::_Map_pointer __node = __first._M_node + 1;
 955:/usr/include/c++/5/bits/deque.tcc ****            __node < __last._M_node; ++__node)
 956:/usr/include/c++/5/bits/deque.tcc **** 	std::fill(*__node, *__node + _Self::_S_buffer_size(), __value);
 957:/usr/include/c++/5/bits/deque.tcc **** 
 958:/usr/include/c++/5/bits/deque.tcc ****       if (__first._M_node != __last._M_node)
 959:/usr/include/c++/5/bits/deque.tcc **** 	{
 960:/usr/include/c++/5/bits/deque.tcc **** 	  std::fill(__first._M_cur, __first._M_last, __value);
 961:/usr/include/c++/5/bits/deque.tcc **** 	  std::fill(__last._M_first, __last._M_cur, __value);
 962:/usr/include/c++/5/bits/deque.tcc **** 	}
 963:/usr/include/c++/5/bits/deque.tcc ****       else
 964:/usr/include/c++/5/bits/deque.tcc **** 	std::fill(__first._M_cur, __last._M_cur, __value);
 965:/usr/include/c++/5/bits/deque.tcc ****     }
 966:/usr/include/c++/5/bits/deque.tcc **** 
 967:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp>
 968:/usr/include/c++/5/bits/deque.tcc ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
GAS LISTING /tmp/ccX8BQhk.s 			page 521


 969:/usr/include/c++/5/bits/deque.tcc ****     copy(_Deque_iterator<_Tp, const _Tp&, const _Tp*> __first,
 970:/usr/include/c++/5/bits/deque.tcc **** 	 _Deque_iterator<_Tp, const _Tp&, const _Tp*> __last,
 971:/usr/include/c++/5/bits/deque.tcc **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 972:/usr/include/c++/5/bits/deque.tcc ****     {
 973:/usr/include/c++/5/bits/deque.tcc ****       typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
 974:/usr/include/c++/5/bits/deque.tcc ****       typedef typename _Self::difference_type difference_type;
 975:/usr/include/c++/5/bits/deque.tcc **** 
 976:/usr/include/c++/5/bits/deque.tcc ****       difference_type __len = __last - __first;
 977:/usr/include/c++/5/bits/deque.tcc ****       while (__len > 0)
 978:/usr/include/c++/5/bits/deque.tcc **** 	{
 979:/usr/include/c++/5/bits/deque.tcc **** 	  const difference_type __clen
 980:/usr/include/c++/5/bits/deque.tcc **** 	    = std::min(__len, std::min(__first._M_last - __first._M_cur,
 981:/usr/include/c++/5/bits/deque.tcc **** 				       __result._M_last - __result._M_cur));
 982:/usr/include/c++/5/bits/deque.tcc **** 	  std::copy(__first._M_cur, __first._M_cur + __clen, __result._M_cur);
 983:/usr/include/c++/5/bits/deque.tcc **** 	  __first += __clen;
 984:/usr/include/c++/5/bits/deque.tcc **** 	  __result += __clen;
 985:/usr/include/c++/5/bits/deque.tcc **** 	  __len -= __clen;
 986:/usr/include/c++/5/bits/deque.tcc **** 	}
 987:/usr/include/c++/5/bits/deque.tcc ****       return __result;
 988:/usr/include/c++/5/bits/deque.tcc ****     }
 989:/usr/include/c++/5/bits/deque.tcc **** 
 990:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp>
 991:/usr/include/c++/5/bits/deque.tcc ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
 992:/usr/include/c++/5/bits/deque.tcc ****     copy_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*> __first,
 993:/usr/include/c++/5/bits/deque.tcc **** 		  _Deque_iterator<_Tp, const _Tp&, const _Tp*> __last,
 994:/usr/include/c++/5/bits/deque.tcc **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
 995:/usr/include/c++/5/bits/deque.tcc ****     {
 996:/usr/include/c++/5/bits/deque.tcc ****       typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
 997:/usr/include/c++/5/bits/deque.tcc ****       typedef typename _Self::difference_type difference_type;
 998:/usr/include/c++/5/bits/deque.tcc **** 
 999:/usr/include/c++/5/bits/deque.tcc ****       difference_type __len = __last - __first;
1000:/usr/include/c++/5/bits/deque.tcc ****       while (__len > 0)
1001:/usr/include/c++/5/bits/deque.tcc **** 	{
1002:/usr/include/c++/5/bits/deque.tcc **** 	  difference_type __llen = __last._M_cur - __last._M_first;
1003:/usr/include/c++/5/bits/deque.tcc **** 	  _Tp* __lend = __last._M_cur;
1004:/usr/include/c++/5/bits/deque.tcc **** 
1005:/usr/include/c++/5/bits/deque.tcc **** 	  difference_type __rlen = __result._M_cur - __result._M_first;
1006:/usr/include/c++/5/bits/deque.tcc **** 	  _Tp* __rend = __result._M_cur;
1007:/usr/include/c++/5/bits/deque.tcc **** 
1008:/usr/include/c++/5/bits/deque.tcc **** 	  if (!__llen)
1009:/usr/include/c++/5/bits/deque.tcc **** 	    {
1010:/usr/include/c++/5/bits/deque.tcc **** 	      __llen = _Self::_S_buffer_size();
1011:/usr/include/c++/5/bits/deque.tcc **** 	      __lend = *(__last._M_node - 1) + __llen;
1012:/usr/include/c++/5/bits/deque.tcc **** 	    }
1013:/usr/include/c++/5/bits/deque.tcc **** 	  if (!__rlen)
1014:/usr/include/c++/5/bits/deque.tcc **** 	    {
1015:/usr/include/c++/5/bits/deque.tcc **** 	      __rlen = _Self::_S_buffer_size();
1016:/usr/include/c++/5/bits/deque.tcc **** 	      __rend = *(__result._M_node - 1) + __rlen;
1017:/usr/include/c++/5/bits/deque.tcc **** 	    }
1018:/usr/include/c++/5/bits/deque.tcc **** 
1019:/usr/include/c++/5/bits/deque.tcc **** 	  const difference_type __clen = std::min(__len,
1020:/usr/include/c++/5/bits/deque.tcc **** 						  std::min(__llen, __rlen));
1021:/usr/include/c++/5/bits/deque.tcc **** 	  std::copy_backward(__lend - __clen, __lend, __rend);
1022:/usr/include/c++/5/bits/deque.tcc **** 	  __last -= __clen;
1023:/usr/include/c++/5/bits/deque.tcc **** 	  __result -= __clen;
1024:/usr/include/c++/5/bits/deque.tcc **** 	  __len -= __clen;
1025:/usr/include/c++/5/bits/deque.tcc **** 	}
GAS LISTING /tmp/ccX8BQhk.s 			page 522


1026:/usr/include/c++/5/bits/deque.tcc ****       return __result;
1027:/usr/include/c++/5/bits/deque.tcc ****     }
1028:/usr/include/c++/5/bits/deque.tcc **** 
1029:/usr/include/c++/5/bits/deque.tcc **** #if __cplusplus >= 201103L
1030:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp>
1031:/usr/include/c++/5/bits/deque.tcc ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
1032:/usr/include/c++/5/bits/deque.tcc ****     move(_Deque_iterator<_Tp, const _Tp&, const _Tp*> __first,
 11240              		.loc 36 1032 0
 11241              		.cfi_startproc
 11242 0000 55       		pushq	%rbp
 11243              		.cfi_def_cfa_offset 16
 11244              		.cfi_offset 6, -16
 11245 0001 4889E5   		movq	%rsp, %rbp
 11246              		.cfi_def_cfa_register 6
 11247 0004 4883EC40 		subq	$64, %rsp
 11248 0008 48897DC8 		movq	%rdi, -56(%rbp)
 11249 000c 488975C0 		movq	%rsi, -64(%rbp)
 11250              		.loc 36 1032 0
 11251 0010 64488B04 		movq	%fs:40, %rax
 11251      25280000 
 11251      00
 11252 0019 488945F8 		movq	%rax, -8(%rbp)
 11253 001d 31C0     		xorl	%eax, %eax
1033:/usr/include/c++/5/bits/deque.tcc **** 	 _Deque_iterator<_Tp, const _Tp&, const _Tp*> __last,
1034:/usr/include/c++/5/bits/deque.tcc **** 	 _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
1035:/usr/include/c++/5/bits/deque.tcc ****     {
1036:/usr/include/c++/5/bits/deque.tcc ****       typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
1037:/usr/include/c++/5/bits/deque.tcc ****       typedef typename _Self::difference_type difference_type;
1038:/usr/include/c++/5/bits/deque.tcc **** 
1039:/usr/include/c++/5/bits/deque.tcc ****       difference_type __len = __last - __first;
 11254              		.loc 36 1039 0
 11255 001f 488D4530 		leaq	48(%rbp), %rax
 11256 0023 488D7510 		leaq	16(%rbp), %rsi
 11257 0027 4889C7   		movq	%rax, %rdi
 11258 002a E8000000 		call	_ZStmiIcRKcPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_
 11258      00
 11259 002f 488945D8 		movq	%rax, -40(%rbp)
 11260              	.L589:
1040:/usr/include/c++/5/bits/deque.tcc ****       while (__len > 0)
 11261              		.loc 36 1040 0
 11262 0033 488B45D8 		movq	-40(%rbp), %rax
 11263 0037 4885C0   		testq	%rax, %rax
 11264 003a 0F8EB200 		jle	.L588
 11264      0000
 11265              	.LBB93:
1041:/usr/include/c++/5/bits/deque.tcc **** 	{
1042:/usr/include/c++/5/bits/deque.tcc **** 	  const difference_type __clen
1043:/usr/include/c++/5/bits/deque.tcc **** 	    = std::min(__len, std::min(__first._M_last - __first._M_cur,
1044:/usr/include/c++/5/bits/deque.tcc **** 				       __result._M_last - __result._M_cur));
 11266              		.loc 36 1044 0
 11267 0040 488B45C0 		movq	-64(%rbp), %rax
 11268 0044 488B4010 		movq	16(%rax), %rax
1043:/usr/include/c++/5/bits/deque.tcc **** 				       __result._M_last - __result._M_cur));
 11269              		.loc 36 1043 0
 11270 0048 4889C2   		movq	%rax, %rdx
 11271              		.loc 36 1044 0
 11272 004b 488B45C0 		movq	-64(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 523


 11273 004f 488B00   		movq	(%rax), %rax
1043:/usr/include/c++/5/bits/deque.tcc **** 				       __result._M_last - __result._M_cur));
 11274              		.loc 36 1043 0
 11275 0052 4829C2   		subq	%rax, %rdx
 11276 0055 4889D0   		movq	%rdx, %rax
 11277 0058 488945E8 		movq	%rax, -24(%rbp)
 11278 005c 488B4520 		movq	32(%rbp), %rax
 11279 0060 4889C2   		movq	%rax, %rdx
 11280 0063 488B4510 		movq	16(%rbp), %rax
 11281 0067 4829C2   		subq	%rax, %rdx
 11282 006a 4889D0   		movq	%rdx, %rax
 11283 006d 488945E0 		movq	%rax, -32(%rbp)
 11284 0071 488D55E8 		leaq	-24(%rbp), %rdx
 11285 0075 488D45E0 		leaq	-32(%rbp), %rax
 11286 0079 4889D6   		movq	%rdx, %rsi
 11287 007c 4889C7   		movq	%rax, %rdi
 11288 007f E8000000 		call	_ZSt3minIlERKT_S2_S2_
 11288      00
 11289 0084 4889C2   		movq	%rax, %rdx
 11290 0087 488D45D8 		leaq	-40(%rbp), %rax
 11291 008b 4889D6   		movq	%rdx, %rsi
 11292 008e 4889C7   		movq	%rax, %rdi
 11293 0091 E8000000 		call	_ZSt3minIlERKT_S2_S2_
 11293      00
 11294              		.loc 36 1044 0
 11295 0096 488B00   		movq	(%rax), %rax
 11296 0099 488945F0 		movq	%rax, -16(%rbp)
1045:/usr/include/c++/5/bits/deque.tcc **** 	  std::move(__first._M_cur, __first._M_cur + __clen, __result._M_cur);
 11297              		.loc 36 1045 0
 11298 009d 488B45C0 		movq	-64(%rbp), %rax
 11299 00a1 488B10   		movq	(%rax), %rdx
 11300 00a4 488B4D10 		movq	16(%rbp), %rcx
 11301 00a8 488B45F0 		movq	-16(%rbp), %rax
 11302 00ac 4801C1   		addq	%rax, %rcx
 11303 00af 488B4510 		movq	16(%rbp), %rax
 11304 00b3 4889CE   		movq	%rcx, %rsi
 11305 00b6 4889C7   		movq	%rax, %rdi
 11306 00b9 E8000000 		call	_ZSt4moveIPcS0_ET0_T_S2_S1_
 11306      00
1046:/usr/include/c++/5/bits/deque.tcc **** 	  __first += __clen;
 11307              		.loc 36 1046 0
 11308 00be 488B45F0 		movq	-16(%rbp), %rax
 11309 00c2 4889C6   		movq	%rax, %rsi
 11310 00c5 488D7D10 		leaq	16(%rbp), %rdi
 11311 00c9 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_EpLEl
 11311      00
1047:/usr/include/c++/5/bits/deque.tcc **** 	  __result += __clen;
 11312              		.loc 36 1047 0
 11313 00ce 488B55F0 		movq	-16(%rbp), %rdx
 11314 00d2 488B45C0 		movq	-64(%rbp), %rax
 11315 00d6 4889D6   		movq	%rdx, %rsi
 11316 00d9 4889C7   		movq	%rax, %rdi
 11317 00dc E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEpLEl
 11317      00
1048:/usr/include/c++/5/bits/deque.tcc **** 	  __len -= __clen;
 11318              		.loc 36 1048 0
 11319 00e1 488B45D8 		movq	-40(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 524


 11320 00e5 482B45F0 		subq	-16(%rbp), %rax
 11321 00e9 488945D8 		movq	%rax, -40(%rbp)
 11322              	.LBE93:
1040:/usr/include/c++/5/bits/deque.tcc **** 	{
 11323              		.loc 36 1040 0
 11324 00ed E941FFFF 		jmp	.L589
 11324      FF
 11325              	.L588:
1049:/usr/include/c++/5/bits/deque.tcc **** 	}
1050:/usr/include/c++/5/bits/deque.tcc ****       return __result;
 11326              		.loc 36 1050 0
 11327 00f2 488B55C0 		movq	-64(%rbp), %rdx
 11328 00f6 488B45C8 		movq	-56(%rbp), %rax
 11329 00fa 4889D6   		movq	%rdx, %rsi
 11330 00fd 4889C7   		movq	%rax, %rdi
 11331 0100 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11331      00
1051:/usr/include/c++/5/bits/deque.tcc ****     }
 11332              		.loc 36 1051 0
 11333 0105 488B45C8 		movq	-56(%rbp), %rax
 11334 0109 488B4DF8 		movq	-8(%rbp), %rcx
 11335 010d 6448330C 		xorq	%fs:40, %rcx
 11335      25280000 
 11335      00
 11336 0116 7405     		je	.L591
 11337 0118 E8000000 		call	__stack_chk_fail
 11337      00
 11338              	.L591:
 11339 011d C9       		leave
 11340              		.cfi_def_cfa 7, 8
 11341 011e C3       		ret
 11342              		.cfi_endproc
 11343              	.LFE10611:
 11345              		.section	.text._ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_,"axG",@progbits,_ZSt
 11346              		.weak	_ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_
 11348              	_ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_:
 11349              	.LFB10612:
 293:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 11350              		.loc 29 293 0
 11351              		.cfi_startproc
 11352 0000 55       		pushq	%rbp
 11353              		.cfi_def_cfa_offset 16
 11354              		.cfi_offset 6, -16
 11355 0001 4889E5   		movq	%rsp, %rbp
 11356              		.cfi_def_cfa_register 6
 11357 0004 4883EC10 		subq	$16, %rsp
 11358 0008 48897DF8 		movq	%rdi, -8(%rbp)
 294:/usr/include/c++/5/bits/stl_algobase.h **** 
 11359              		.loc 29 294 0
 11360 000c 488B45F8 		movq	-8(%rbp), %rax
 11361 0010 4889C7   		movq	%rax, %rdi
 11362 0013 E8000000 		call	_ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_
 11362      00
 11363 0018 C9       		leave
 11364              		.cfi_def_cfa 7, 8
 11365 0019 C3       		ret
 11366              		.cfi_endproc
GAS LISTING /tmp/ccX8BQhk.s 			page 525


 11367              	.LFE10612:
 11369              		.section	.text._ZSt14__copy_move_a2ILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_,"axG",@progbits
 11370              		.weak	_ZSt14__copy_move_a2ILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_
 11372              	_ZSt14__copy_move_a2ILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_:
 11373              	.LFB10613:
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 11374              		.loc 29 436 0
 11375              		.cfi_startproc
 11376 0000 55       		pushq	%rbp
 11377              		.cfi_def_cfa_offset 16
 11378              		.cfi_offset 6, -16
 11379 0001 4889E5   		movq	%rsp, %rbp
 11380              		.cfi_def_cfa_register 6
 11381 0004 53       		pushq	%rbx
 11382 0005 4883EC78 		subq	$120, %rsp
 11383              		.cfi_offset 3, -24
 11384 0009 48897D98 		movq	%rdi, -104(%rbp)
 11385 000d 48897590 		movq	%rsi, -112(%rbp)
 11386 0011 48895588 		movq	%rdx, -120(%rbp)
 11387 0015 48894D80 		movq	%rcx, -128(%rbp)
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 11388              		.loc 29 436 0
 11389 0019 64488B04 		movq	%fs:40, %rax
 11389      25280000 
 11389      00
 11390 0022 488945E8 		movq	%rax, -24(%rbp)
 11391 0026 31C0     		xorl	%eax, %eax
 440:/usr/include/c++/5/bits/stl_algobase.h ****     }
 11392              		.loc 29 440 0
 11393 0028 488B5580 		movq	-128(%rbp), %rdx
 11394 002c 488D45A0 		leaq	-96(%rbp), %rax
 11395 0030 4889D6   		movq	%rdx, %rsi
 11396 0033 4889C7   		movq	%rax, %rdi
 11397 0036 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11397      00
 11398 003b 488D45C0 		leaq	-64(%rbp), %rax
 11399 003f 488D55A0 		leaq	-96(%rbp), %rdx
 11400 0043 4889D6   		movq	%rdx, %rsi
 11401 0046 4889C7   		movq	%rax, %rdi
 11402 0049 E8000000 		call	_ZSt12__niter_baseISt15_Deque_iteratorIcRcPcEENSt11_Niter_baseIT_E13iterator_typeES5_
 11402      00
 11403 004e 488B4588 		movq	-120(%rbp), %rax
 11404 0052 4889C7   		movq	%rax, %rdi
 11405 0055 E8000000 		call	_ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_
 11405      00
 11406 005a 4889C3   		movq	%rax, %rbx
 11407 005d 488B4590 		movq	-112(%rbp), %rax
 11408 0061 4889C7   		movq	%rax, %rdi
 11409 0064 E8000000 		call	_ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_
 11409      00
 11410 0069 4889C6   		movq	%rax, %rsi
 11411 006c 488B4598 		movq	-104(%rbp), %rax
 11412 0070 488D55C0 		leaq	-64(%rbp), %rdx
 11413 0074 4889D1   		movq	%rdx, %rcx
 11414 0077 4889DA   		movq	%rbx, %rdx
 11415 007a 4889C7   		movq	%rax, %rdi
 11416 007d E8000000 		call	_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_
GAS LISTING /tmp/ccX8BQhk.s 			page 526


 11416      00
 441:/usr/include/c++/5/bits/stl_algobase.h **** 
 11417              		.loc 29 441 0
 11418 0082 488B4598 		movq	-104(%rbp), %rax
 11419 0086 488B4DE8 		movq	-24(%rbp), %rcx
 11420 008a 6448330C 		xorq	%fs:40, %rcx
 11420      25280000 
 11420      00
 11421 0093 7405     		je	.L596
 11422 0095 E8000000 		call	__stack_chk_fail
 11422      00
 11423              	.L596:
 11424 009a 4883C478 		addq	$120, %rsp
 11425 009e 5B       		popq	%rbx
 11426 009f 5D       		popq	%rbp
 11427              		.cfi_def_cfa 7, 8
 11428 00a0 C3       		ret
 11429              		.cfi_endproc
 11430              	.LFE10613:
 11432              		.section	.text._ZSt9__advanceIPKclEvRT_T0_St26random_access_iterator_tag,"axG",@progbits,_ZSt9__ad
 11433              		.weak	_ZSt9__advanceIPKclEvRT_T0_St26random_access_iterator_tag
 11435              	_ZSt9__advanceIPKclEvRT_T0_St26random_access_iterator_tag:
 11436              	.LFB10614:
 150:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****               random_access_iterator_tag)
 11437              		.loc 28 150 0
 11438              		.cfi_startproc
 11439 0000 55       		pushq	%rbp
 11440              		.cfi_def_cfa_offset 16
 11441              		.cfi_offset 6, -16
 11442 0001 4889E5   		movq	%rsp, %rbp
 11443              		.cfi_def_cfa_register 6
 11444 0004 48897DF8 		movq	%rdi, -8(%rbp)
 11445 0008 488975F0 		movq	%rsi, -16(%rbp)
 156:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
 11446              		.loc 28 156 0
 11447 000c 488B45F8 		movq	-8(%rbp), %rax
 11448 0010 488B10   		movq	(%rax), %rdx
 11449 0013 488B45F0 		movq	-16(%rbp), %rax
 11450 0017 4801C2   		addq	%rax, %rdx
 11451 001a 488B45F8 		movq	-8(%rbp), %rax
 11452 001e 488910   		movq	%rdx, (%rax)
 157:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
 11453              		.loc 28 157 0
 11454 0021 90       		nop
 11455 0022 5D       		popq	%rbp
 11456              		.cfi_def_cfa 7, 8
 11457 0023 C3       		ret
 11458              		.cfi_endproc
 11459              	.LFE10614:
 11461              		.section	.text._ZSt8_DestroyISt15_Deque_iteratorIcRcPcEcEvT_S4_RSaIT0_E,"axG",@progbits,_ZSt8_Dest
 11462              		.weak	_ZSt8_DestroyISt15_Deque_iteratorIcRcPcEcEvT_S4_RSaIT0_E
 11464              	_ZSt8_DestroyISt15_Deque_iteratorIcRcPcEcEvT_S4_RSaIT0_E:
 11465              	.LFB10615:
 11466              		.file 39 "/usr/include/c++/5/bits/stl_construct.h"
   1:/usr/include/c++/5/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_construct.h **** 
   3:/usr/include/c++/5/bits/stl_construct.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
GAS LISTING /tmp/ccX8BQhk.s 			page 527


   4:/usr/include/c++/5/bits/stl_construct.h **** //
   5:/usr/include/c++/5/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_construct.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_construct.h **** 
  11:/usr/include/c++/5/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_construct.h **** 
  16:/usr/include/c++/5/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_construct.h **** 
  20:/usr/include/c++/5/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_construct.h **** 
  25:/usr/include/c++/5/bits/stl_construct.h **** /*
  26:/usr/include/c++/5/bits/stl_construct.h ****  *
  27:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_construct.h ****  *
  30:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_construct.h ****  *
  38:/usr/include/c++/5/bits/stl_construct.h ****  *
  39:/usr/include/c++/5/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/usr/include/c++/5/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_construct.h ****  *
  42:/usr/include/c++/5/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_construct.h ****  */
  50:/usr/include/c++/5/bits/stl_construct.h **** 
  51:/usr/include/c++/5/bits/stl_construct.h **** /** @file bits/stl_construct.h
  52:/usr/include/c++/5/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/usr/include/c++/5/bits/stl_construct.h ****  */
  55:/usr/include/c++/5/bits/stl_construct.h **** 
  56:/usr/include/c++/5/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/usr/include/c++/5/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/usr/include/c++/5/bits/stl_construct.h **** 
  59:/usr/include/c++/5/bits/stl_construct.h **** #include <new>
  60:/usr/include/c++/5/bits/stl_construct.h **** #include <bits/move.h>
GAS LISTING /tmp/ccX8BQhk.s 			page 528


  61:/usr/include/c++/5/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/usr/include/c++/5/bits/stl_construct.h **** 
  63:/usr/include/c++/5/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/usr/include/c++/5/bits/stl_construct.h **** {
  65:/usr/include/c++/5/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/usr/include/c++/5/bits/stl_construct.h **** 
  67:/usr/include/c++/5/bits/stl_construct.h ****   /**
  68:/usr/include/c++/5/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/usr/include/c++/5/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/usr/include/c++/5/bits/stl_construct.h ****    */
  71:/usr/include/c++/5/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  74:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  75:/usr/include/c++/5/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/usr/include/c++/5/bits/stl_construct.h **** #else
  77:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  79:/usr/include/c++/5/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/usr/include/c++/5/bits/stl_construct.h ****     {
  81:/usr/include/c++/5/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/5/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/usr/include/c++/5/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/usr/include/c++/5/bits/stl_construct.h ****     }
  85:/usr/include/c++/5/bits/stl_construct.h **** #endif
  86:/usr/include/c++/5/bits/stl_construct.h **** 
  87:/usr/include/c++/5/bits/stl_construct.h ****   /**
  88:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  89:/usr/include/c++/5/bits/stl_construct.h ****    */
  90:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _Tp>
  91:/usr/include/c++/5/bits/stl_construct.h ****     inline void
  92:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  93:/usr/include/c++/5/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  94:/usr/include/c++/5/bits/stl_construct.h **** 
  95:/usr/include/c++/5/bits/stl_construct.h ****   template<bool>
  96:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux
  97:/usr/include/c++/5/bits/stl_construct.h ****     {
  98:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
  99:/usr/include/c++/5/bits/stl_construct.h ****         static void
 100:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 101:/usr/include/c++/5/bits/stl_construct.h **** 	{
 102:/usr/include/c++/5/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 103:/usr/include/c++/5/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 104:/usr/include/c++/5/bits/stl_construct.h **** 	}
 105:/usr/include/c++/5/bits/stl_construct.h ****     };
 106:/usr/include/c++/5/bits/stl_construct.h **** 
 107:/usr/include/c++/5/bits/stl_construct.h ****   template<>
 108:/usr/include/c++/5/bits/stl_construct.h ****     struct _Destroy_aux<true>
 109:/usr/include/c++/5/bits/stl_construct.h ****     {
 110:/usr/include/c++/5/bits/stl_construct.h ****       template<typename _ForwardIterator>
 111:/usr/include/c++/5/bits/stl_construct.h ****         static void
 112:/usr/include/c++/5/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 113:/usr/include/c++/5/bits/stl_construct.h ****     };
 114:/usr/include/c++/5/bits/stl_construct.h **** 
 115:/usr/include/c++/5/bits/stl_construct.h ****   /**
 116:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 117:/usr/include/c++/5/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
GAS LISTING /tmp/ccX8BQhk.s 			page 529


 118:/usr/include/c++/5/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 119:/usr/include/c++/5/bits/stl_construct.h ****    */
 120:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator>
 121:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 122:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 123:/usr/include/c++/5/bits/stl_construct.h ****     {
 124:/usr/include/c++/5/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 125:/usr/include/c++/5/bits/stl_construct.h ****                        _Value_type;
 126:/usr/include/c++/5/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 127:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 128:/usr/include/c++/5/bits/stl_construct.h ****     }
 129:/usr/include/c++/5/bits/stl_construct.h **** 
 130:/usr/include/c++/5/bits/stl_construct.h ****   /**
 131:/usr/include/c++/5/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 132:/usr/include/c++/5/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 133:/usr/include/c++/5/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
 134:/usr/include/c++/5/bits/stl_construct.h ****    */
 135:/usr/include/c++/5/bits/stl_construct.h **** 
 136:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 137:/usr/include/c++/5/bits/stl_construct.h ****     void
 138:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 139:/usr/include/c++/5/bits/stl_construct.h **** 	     _Allocator& __alloc)
 140:/usr/include/c++/5/bits/stl_construct.h ****     {
 141:/usr/include/c++/5/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 142:/usr/include/c++/5/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 143:/usr/include/c++/5/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 144:/usr/include/c++/5/bits/stl_construct.h ****     }
 145:/usr/include/c++/5/bits/stl_construct.h **** 
 146:/usr/include/c++/5/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 147:/usr/include/c++/5/bits/stl_construct.h ****     inline void
 148:/usr/include/c++/5/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 11467              		.loc 39 148 0
 11468              		.cfi_startproc
 11469 0000 55       		pushq	%rbp
 11470              		.cfi_def_cfa_offset 16
 11471              		.cfi_offset 6, -16
 11472 0001 4889E5   		movq	%rsp, %rbp
 11473              		.cfi_def_cfa_register 6
 11474 0004 4883EC70 		subq	$112, %rsp
 11475 0008 48897DA8 		movq	%rdi, -88(%rbp)
 11476 000c 488975A0 		movq	%rsi, -96(%rbp)
 11477 0010 48895598 		movq	%rdx, -104(%rbp)
 11478              		.loc 39 148 0
 11479 0014 64488B04 		movq	%fs:40, %rax
 11479      25280000 
 11479      00
 11480 001d 488945F8 		movq	%rax, -8(%rbp)
 11481 0021 31C0     		xorl	%eax, %eax
 149:/usr/include/c++/5/bits/stl_construct.h **** 	     allocator<_Tp>&)
 150:/usr/include/c++/5/bits/stl_construct.h ****     {
 151:/usr/include/c++/5/bits/stl_construct.h ****       _Destroy(__first, __last);
 11482              		.loc 39 151 0
 11483 0023 488B55A0 		movq	-96(%rbp), %rdx
 11484 0027 488D45D0 		leaq	-48(%rbp), %rax
 11485 002b 4889D6   		movq	%rdx, %rsi
 11486 002e 4889C7   		movq	%rax, %rdi
 11487 0031 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
GAS LISTING /tmp/ccX8BQhk.s 			page 530


 11487      00
 11488 0036 488B55A8 		movq	-88(%rbp), %rdx
 11489 003a 488D45B0 		leaq	-80(%rbp), %rax
 11490 003e 4889D6   		movq	%rdx, %rsi
 11491 0041 4889C7   		movq	%rax, %rdi
 11492 0044 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11492      00
 11493 0049 488D55D0 		leaq	-48(%rbp), %rdx
 11494 004d 488D45B0 		leaq	-80(%rbp), %rax
 11495 0051 4889D6   		movq	%rdx, %rsi
 11496 0054 4889C7   		movq	%rax, %rdi
 11497 0057 E8000000 		call	_ZSt8_DestroyISt15_Deque_iteratorIcRcPcEEvT_S4_
 11497      00
 152:/usr/include/c++/5/bits/stl_construct.h ****     }
 11498              		.loc 39 152 0
 11499 005c 90       		nop
 11500 005d 488B45F8 		movq	-8(%rbp), %rax
 11501 0061 64483304 		xorq	%fs:40, %rax
 11501      25280000 
 11501      00
 11502 006a 7405     		je	.L599
 11503 006c E8000000 		call	__stack_chk_fail
 11503      00
 11504              	.L599:
 11505 0071 C9       		leave
 11506              		.cfi_def_cfa 7, 8
 11507 0072 C3       		ret
 11508              		.cfi_endproc
 11509              	.LFE10615:
 11511              		.section	.text._ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_,"axG",
 11512              		.weak	_ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_
 11514              	_ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_:
 11515              	.LFB10616:
1052:/usr/include/c++/5/bits/deque.tcc **** 
1053:/usr/include/c++/5/bits/deque.tcc ****   template<typename _Tp>
1054:/usr/include/c++/5/bits/deque.tcc ****     _Deque_iterator<_Tp, _Tp&, _Tp*>
1055:/usr/include/c++/5/bits/deque.tcc ****     move_backward(_Deque_iterator<_Tp, const _Tp&, const _Tp*> __first,
 11516              		.loc 36 1055 0
 11517              		.cfi_startproc
 11518 0000 55       		pushq	%rbp
 11519              		.cfi_def_cfa_offset 16
 11520              		.cfi_offset 6, -16
 11521 0001 4889E5   		movq	%rsp, %rbp
 11522              		.cfi_def_cfa_register 6
 11523 0004 4883EC50 		subq	$80, %rsp
 11524 0008 48897DB8 		movq	%rdi, -72(%rbp)
 11525 000c 488975B0 		movq	%rsi, -80(%rbp)
 11526              		.loc 36 1055 0
 11527 0010 64488B04 		movq	%fs:40, %rax
 11527      25280000 
 11527      00
 11528 0019 488945F8 		movq	%rax, -8(%rbp)
 11529 001d 31C0     		xorl	%eax, %eax
1056:/usr/include/c++/5/bits/deque.tcc **** 		  _Deque_iterator<_Tp, const _Tp&, const _Tp*> __last,
1057:/usr/include/c++/5/bits/deque.tcc **** 		  _Deque_iterator<_Tp, _Tp&, _Tp*> __result)
1058:/usr/include/c++/5/bits/deque.tcc ****     {
1059:/usr/include/c++/5/bits/deque.tcc ****       typedef typename _Deque_iterator<_Tp, _Tp&, _Tp*>::_Self _Self;
GAS LISTING /tmp/ccX8BQhk.s 			page 531


1060:/usr/include/c++/5/bits/deque.tcc ****       typedef typename _Self::difference_type difference_type;
1061:/usr/include/c++/5/bits/deque.tcc **** 
1062:/usr/include/c++/5/bits/deque.tcc ****       difference_type __len = __last - __first;
 11530              		.loc 36 1062 0
 11531 001f 488D4530 		leaq	48(%rbp), %rax
 11532 0023 488D7510 		leaq	16(%rbp), %rsi
 11533 0027 4889C7   		movq	%rax, %rdi
 11534 002a E8000000 		call	_ZStmiIcRKcPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_
 11534      00
 11535 002f 488945C8 		movq	%rax, -56(%rbp)
 11536              	.L604:
1063:/usr/include/c++/5/bits/deque.tcc ****       while (__len > 0)
 11537              		.loc 36 1063 0
 11538 0033 488B45C8 		movq	-56(%rbp), %rax
 11539 0037 4885C0   		testq	%rax, %rax
 11540 003a 0F8E2001 		jle	.L601
 11540      0000
 11541              	.LBB94:
1064:/usr/include/c++/5/bits/deque.tcc **** 	{
1065:/usr/include/c++/5/bits/deque.tcc **** 	  difference_type __llen = __last._M_cur - __last._M_first;
 11542              		.loc 36 1065 0
 11543 0040 488B4530 		movq	48(%rbp), %rax
 11544 0044 4889C2   		movq	%rax, %rdx
 11545 0047 488B4538 		movq	56(%rbp), %rax
 11546 004b 4829C2   		subq	%rax, %rdx
 11547 004e 4889D0   		movq	%rdx, %rax
 11548 0051 488945D0 		movq	%rax, -48(%rbp)
1066:/usr/include/c++/5/bits/deque.tcc **** 	  _Tp* __lend = __last._M_cur;
 11549              		.loc 36 1066 0
 11550 0055 488B4530 		movq	48(%rbp), %rax
 11551 0059 488945E0 		movq	%rax, -32(%rbp)
1067:/usr/include/c++/5/bits/deque.tcc **** 
1068:/usr/include/c++/5/bits/deque.tcc **** 	  difference_type __rlen = __result._M_cur - __result._M_first;
 11552              		.loc 36 1068 0
 11553 005d 488B45B0 		movq	-80(%rbp), %rax
 11554 0061 488B00   		movq	(%rax), %rax
 11555 0064 4889C2   		movq	%rax, %rdx
 11556 0067 488B45B0 		movq	-80(%rbp), %rax
 11557 006b 488B4008 		movq	8(%rax), %rax
 11558 006f 4829C2   		subq	%rax, %rdx
 11559 0072 4889D0   		movq	%rdx, %rax
 11560 0075 488945D8 		movq	%rax, -40(%rbp)
1069:/usr/include/c++/5/bits/deque.tcc **** 	  _Tp* __rend = __result._M_cur;
 11561              		.loc 36 1069 0
 11562 0079 488B45B0 		movq	-80(%rbp), %rax
 11563 007d 488B00   		movq	(%rax), %rax
 11564 0080 488945E8 		movq	%rax, -24(%rbp)
1070:/usr/include/c++/5/bits/deque.tcc **** 
1071:/usr/include/c++/5/bits/deque.tcc **** 	  if (!__llen)
 11565              		.loc 36 1071 0
 11566 0084 488B45D0 		movq	-48(%rbp), %rax
 11567 0088 4885C0   		testq	%rax, %rax
 11568 008b 751F     		jne	.L602
1072:/usr/include/c++/5/bits/deque.tcc **** 	    {
1073:/usr/include/c++/5/bits/deque.tcc **** 	      __llen = _Self::_S_buffer_size();
 11569              		.loc 36 1073 0
 11570 008d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
GAS LISTING /tmp/ccX8BQhk.s 			page 532


 11570      00
 11571 0092 488945D0 		movq	%rax, -48(%rbp)
1074:/usr/include/c++/5/bits/deque.tcc **** 	      __lend = *(__last._M_node - 1) + __llen;
 11572              		.loc 36 1074 0
 11573 0096 488B4548 		movq	72(%rbp), %rax
 11574 009a 4883E808 		subq	$8, %rax
 11575 009e 488B00   		movq	(%rax), %rax
 11576 00a1 488B55D0 		movq	-48(%rbp), %rdx
 11577 00a5 4801D0   		addq	%rdx, %rax
 11578 00a8 488945E0 		movq	%rax, -32(%rbp)
 11579              	.L602:
1075:/usr/include/c++/5/bits/deque.tcc **** 	    }
1076:/usr/include/c++/5/bits/deque.tcc **** 	  if (!__rlen)
 11580              		.loc 36 1076 0
 11581 00ac 488B45D8 		movq	-40(%rbp), %rax
 11582 00b0 4885C0   		testq	%rax, %rax
 11583 00b3 7523     		jne	.L603
1077:/usr/include/c++/5/bits/deque.tcc **** 	    {
1078:/usr/include/c++/5/bits/deque.tcc **** 	      __rlen = _Self::_S_buffer_size();
 11584              		.loc 36 1078 0
 11585 00b5 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
 11585      00
 11586 00ba 488945D8 		movq	%rax, -40(%rbp)
1079:/usr/include/c++/5/bits/deque.tcc **** 	      __rend = *(__result._M_node - 1) + __rlen;
 11587              		.loc 36 1079 0
 11588 00be 488B45B0 		movq	-80(%rbp), %rax
 11589 00c2 488B4018 		movq	24(%rax), %rax
 11590 00c6 4883E808 		subq	$8, %rax
 11591 00ca 488B00   		movq	(%rax), %rax
 11592 00cd 488B55D8 		movq	-40(%rbp), %rdx
 11593 00d1 4801D0   		addq	%rdx, %rax
 11594 00d4 488945E8 		movq	%rax, -24(%rbp)
 11595              	.L603:
1080:/usr/include/c++/5/bits/deque.tcc **** 	    }
1081:/usr/include/c++/5/bits/deque.tcc **** 
1082:/usr/include/c++/5/bits/deque.tcc **** 	  const difference_type __clen = std::min(__len,
1083:/usr/include/c++/5/bits/deque.tcc **** 						  std::min(__llen, __rlen));
 11596              		.loc 36 1083 0
 11597 00d8 488D55D8 		leaq	-40(%rbp), %rdx
 11598 00dc 488D45D0 		leaq	-48(%rbp), %rax
 11599 00e0 4889D6   		movq	%rdx, %rsi
 11600 00e3 4889C7   		movq	%rax, %rdi
 11601 00e6 E8000000 		call	_ZSt3minIlERKT_S2_S2_
 11601      00
 11602 00eb 4889C2   		movq	%rax, %rdx
1082:/usr/include/c++/5/bits/deque.tcc **** 						  std::min(__llen, __rlen));
 11603              		.loc 36 1082 0
 11604 00ee 488D45C8 		leaq	-56(%rbp), %rax
 11605 00f2 4889D6   		movq	%rdx, %rsi
 11606 00f5 4889C7   		movq	%rax, %rdi
 11607 00f8 E8000000 		call	_ZSt3minIlERKT_S2_S2_
 11607      00
 11608              		.loc 36 1083 0
 11609 00fd 488B00   		movq	(%rax), %rax
 11610 0100 488945F0 		movq	%rax, -16(%rbp)
1084:/usr/include/c++/5/bits/deque.tcc **** 	  std::move_backward(__lend - __clen, __lend, __rend);
 11611              		.loc 36 1084 0
GAS LISTING /tmp/ccX8BQhk.s 			page 533


 11612 0104 488B45F0 		movq	-16(%rbp), %rax
 11613 0108 48F7D8   		negq	%rax
 11614 010b 4889C2   		movq	%rax, %rdx
 11615 010e 488B45E0 		movq	-32(%rbp), %rax
 11616 0112 488D0C02 		leaq	(%rdx,%rax), %rcx
 11617 0116 488B55E8 		movq	-24(%rbp), %rdx
 11618 011a 488B45E0 		movq	-32(%rbp), %rax
 11619 011e 4889C6   		movq	%rax, %rsi
 11620 0121 4889CF   		movq	%rcx, %rdi
 11621 0124 E8000000 		call	_ZSt13move_backwardIPcS0_ET0_T_S2_S1_
 11621      00
1085:/usr/include/c++/5/bits/deque.tcc **** 	  __last -= __clen;
 11622              		.loc 36 1085 0
 11623 0129 488B55F0 		movq	-16(%rbp), %rdx
 11624 012d 488D4530 		leaq	48(%rbp), %rax
 11625 0131 4889D6   		movq	%rdx, %rsi
 11626 0134 4889C7   		movq	%rax, %rdi
 11627 0137 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_EmIEl
 11627      00
1086:/usr/include/c++/5/bits/deque.tcc **** 	  __result -= __clen;
 11628              		.loc 36 1086 0
 11629 013c 488B55F0 		movq	-16(%rbp), %rdx
 11630 0140 488B45B0 		movq	-80(%rbp), %rax
 11631 0144 4889D6   		movq	%rdx, %rsi
 11632 0147 4889C7   		movq	%rax, %rdi
 11633 014a E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEmIEl
 11633      00
1087:/usr/include/c++/5/bits/deque.tcc **** 	  __len -= __clen;
 11634              		.loc 36 1087 0
 11635 014f 488B45C8 		movq	-56(%rbp), %rax
 11636 0153 482B45F0 		subq	-16(%rbp), %rax
 11637 0157 488945C8 		movq	%rax, -56(%rbp)
 11638              	.LBE94:
1063:/usr/include/c++/5/bits/deque.tcc **** 	{
 11639              		.loc 36 1063 0
 11640 015b E9D3FEFF 		jmp	.L604
 11640      FF
 11641              	.L601:
1088:/usr/include/c++/5/bits/deque.tcc **** 	}
1089:/usr/include/c++/5/bits/deque.tcc ****       return __result;
 11642              		.loc 36 1089 0
 11643 0160 488B55B0 		movq	-80(%rbp), %rdx
 11644 0164 488B45B8 		movq	-72(%rbp), %rax
 11645 0168 4889D6   		movq	%rdx, %rsi
 11646 016b 4889C7   		movq	%rax, %rdi
 11647 016e E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11647      00
1090:/usr/include/c++/5/bits/deque.tcc ****     }
 11648              		.loc 36 1090 0
 11649 0173 488B45B8 		movq	-72(%rbp), %rax
 11650 0177 488B4DF8 		movq	-8(%rbp), %rcx
 11651 017b 6448330C 		xorq	%fs:40, %rcx
 11651      25280000 
 11651      00
 11652 0184 7405     		je	.L606
 11653 0186 E8000000 		call	__stack_chk_fail
 11653      00
GAS LISTING /tmp/ccX8BQhk.s 			page 534


 11654              	.L606:
 11655 018b C9       		leave
 11656              		.cfi_def_cfa 7, 8
 11657 018c C3       		ret
 11658              		.cfi_endproc
 11659              	.LFE10616:
 11661              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxISt15_Deque_
 11662              		.align 2
 11663              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxISt15_Deque_iteratorI
 11665              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxISt15_Deque_iteratorIcRcPcEE
 11666              	.LFB10617:
 191:/usr/include/c++/5/bits/basic_string.h **** 			 std::__false_type)
 11667              		.loc 11 191 0
 11668              		.cfi_startproc
 11669 0000 55       		pushq	%rbp
 11670              		.cfi_def_cfa_offset 16
 11671              		.cfi_offset 6, -16
 11672 0001 4889E5   		movq	%rsp, %rbp
 11673              		.cfi_def_cfa_register 6
 11674 0004 53       		pushq	%rbx
 11675 0005 4881EC88 		subq	$136, %rsp
 11675      000000
 11676              		.cfi_offset 3, -24
 11677 000c 48897D88 		movq	%rdi, -120(%rbp)
 11678 0010 48897580 		movq	%rsi, -128(%rbp)
 11679 0014 48899578 		movq	%rdx, -136(%rbp)
 11679      FFFFFF
 191:/usr/include/c++/5/bits/basic_string.h **** 			 std::__false_type)
 11680              		.loc 11 191 0
 11681 001b 64488B04 		movq	%fs:40, %rax
 11681      25280000 
 11681      00
 11682 0024 488945E8 		movq	%rax, -24(%rbp)
 11683 0028 31C0     		xorl	%eax, %eax
 195:/usr/include/c++/5/bits/basic_string.h **** 	}
 11684              		.loc 11 195 0
 11685 002a 488B9578 		movq	-136(%rbp), %rdx
 11685      FFFFFF
 11686 0031 488D45C0 		leaq	-64(%rbp), %rax
 11687 0035 4889D6   		movq	%rdx, %rsi
 11688 0038 4889C7   		movq	%rax, %rdi
 11689 003b E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11689      00
 11690 0040 488B5580 		movq	-128(%rbp), %rdx
 11691 0044 488D45A0 		leaq	-96(%rbp), %rax
 11692 0048 4889D6   		movq	%rdx, %rsi
 11693 004b 4889C7   		movq	%rax, %rdi
 11694 004e E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11694      00
 11695 0053 488D55C0 		leaq	-64(%rbp), %rdx
 11696 0057 488D4DA0 		leaq	-96(%rbp), %rcx
 11697 005b 488B4588 		movq	-120(%rbp), %rax
 11698 005f 4883EC08 		subq	$8, %rsp
 11699 0063 53       		pushq	%rbx
 11700 0064 4889CE   		movq	%rcx, %rsi
 11701 0067 4889C7   		movq	%rax, %rdi
 11702 006a E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcPc
GAS LISTING /tmp/ccX8BQhk.s 			page 535


 11702      00
 11703 006f 4883C410 		addq	$16, %rsp
 196:/usr/include/c++/5/bits/basic_string.h **** 
 11704              		.loc 11 196 0
 11705 0073 90       		nop
 11706 0074 488B45E8 		movq	-24(%rbp), %rax
 11707 0078 64483304 		xorq	%fs:40, %rax
 11707      25280000 
 11707      00
 11708 0081 7405     		je	.L608
 11709 0083 E8000000 		call	__stack_chk_fail
 11709      00
 11710              	.L608:
 11711 0088 488B5DF8 		movq	-8(%rbp), %rbx
 11712 008c C9       		leave
 11713              		.cfi_def_cfa 7, 8
 11714 008d C3       		ret
 11715              		.cfi_endproc
 11716              	.LFE10617:
 11718              		.section	.text._ZSt12__miter_baseIPPcENSt11_Miter_baseIT_E13iterator_typeES3_,"axG",@progbits,_ZSt
 11719              		.weak	_ZSt12__miter_baseIPPcENSt11_Miter_baseIT_E13iterator_typeES3_
 11721              	_ZSt12__miter_baseIPPcENSt11_Miter_baseIT_E13iterator_typeES3_:
 11722              	.LFB10618:
 293:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 11723              		.loc 29 293 0
 11724              		.cfi_startproc
 11725 0000 55       		pushq	%rbp
 11726              		.cfi_def_cfa_offset 16
 11727              		.cfi_offset 6, -16
 11728 0001 4889E5   		movq	%rsp, %rbp
 11729              		.cfi_def_cfa_register 6
 11730 0004 4883EC10 		subq	$16, %rsp
 11731 0008 48897DF8 		movq	%rdi, -8(%rbp)
 294:/usr/include/c++/5/bits/stl_algobase.h **** 
 11732              		.loc 29 294 0
 11733 000c 488B45F8 		movq	-8(%rbp), %rax
 11734 0010 4889C7   		movq	%rax, %rdi
 11735 0013 E8000000 		call	_ZNSt10_Iter_baseIPPcLb0EE7_S_baseES1_
 11735      00
 11736 0018 C9       		leave
 11737              		.cfi_def_cfa 7, 8
 11738 0019 C3       		ret
 11739              		.cfi_endproc
 11740              	.LFE10618:
 11742              		.section	.text._ZSt14__copy_move_a2ILb0EPPcS1_ET1_T0_S3_S2_,"axG",@progbits,_ZSt14__copy_move_a2IL
 11743              		.weak	_ZSt14__copy_move_a2ILb0EPPcS1_ET1_T0_S3_S2_
 11745              	_ZSt14__copy_move_a2ILb0EPPcS1_ET1_T0_S3_S2_:
 11746              	.LFB10619:
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 11747              		.loc 29 436 0
 11748              		.cfi_startproc
 11749 0000 55       		pushq	%rbp
 11750              		.cfi_def_cfa_offset 16
 11751              		.cfi_offset 6, -16
 11752 0001 4889E5   		movq	%rsp, %rbp
 11753              		.cfi_def_cfa_register 6
 11754 0004 4154     		pushq	%r12
GAS LISTING /tmp/ccX8BQhk.s 			page 536


 11755 0006 53       		pushq	%rbx
 11756 0007 4883EC20 		subq	$32, %rsp
 11757              		.cfi_offset 12, -24
 11758              		.cfi_offset 3, -32
 11759 000b 48897DE8 		movq	%rdi, -24(%rbp)
 11760 000f 488975E0 		movq	%rsi, -32(%rbp)
 11761 0013 488955D8 		movq	%rdx, -40(%rbp)
 438:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 11762              		.loc 29 438 0
 11763 0017 488B45D8 		movq	-40(%rbp), %rax
 11764 001b 4889C7   		movq	%rax, %rdi
 11765 001e E8000000 		call	_ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_
 11765      00
 11766 0023 4989C4   		movq	%rax, %r12
 11767 0026 488B45E0 		movq	-32(%rbp), %rax
 11768 002a 4889C7   		movq	%rax, %rdi
 11769 002d E8000000 		call	_ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_
 11769      00
 11770 0032 4889C3   		movq	%rax, %rbx
 11771 0035 488B45E8 		movq	-24(%rbp), %rax
 11772 0039 4889C7   		movq	%rax, %rdi
 11773 003c E8000000 		call	_ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_
 11773      00
 440:/usr/include/c++/5/bits/stl_algobase.h ****     }
 11774              		.loc 29 440 0
 11775 0041 4C89E2   		movq	%r12, %rdx
 11776 0044 4889DE   		movq	%rbx, %rsi
 11777 0047 4889C7   		movq	%rax, %rdi
 11778 004a E8000000 		call	_ZSt13__copy_move_aILb0EPPcS1_ET1_T0_S3_S2_
 11778      00
 441:/usr/include/c++/5/bits/stl_algobase.h **** 
 11779              		.loc 29 441 0
 11780 004f 4883C420 		addq	$32, %rsp
 11781 0053 5B       		popq	%rbx
 11782 0054 415C     		popq	%r12
 11783 0056 5D       		popq	%rbp
 11784              		.cfi_def_cfa 7, 8
 11785 0057 C3       		ret
 11786              		.cfi_endproc
 11787              	.LFE10619:
 11789              		.section	.text._ZSt23__copy_move_backward_a2ILb0EPPcS1_ET1_T0_S3_S2_,"axG",@progbits,_ZSt23__copy_
 11790              		.weak	_ZSt23__copy_move_backward_a2ILb0EPPcS1_ET1_T0_S3_S2_
 11792              	_ZSt23__copy_move_backward_a2ILb0EPPcS1_ET1_T0_S3_S2_:
 11793              	.LFB10620:
 611:/usr/include/c++/5/bits/stl_algobase.h ****     {
 11794              		.loc 29 611 0
 11795              		.cfi_startproc
 11796 0000 55       		pushq	%rbp
 11797              		.cfi_def_cfa_offset 16
 11798              		.cfi_offset 6, -16
 11799 0001 4889E5   		movq	%rsp, %rbp
 11800              		.cfi_def_cfa_register 6
 11801 0004 4154     		pushq	%r12
 11802 0006 53       		pushq	%rbx
 11803 0007 4883EC20 		subq	$32, %rsp
 11804              		.cfi_offset 12, -24
 11805              		.cfi_offset 3, -32
GAS LISTING /tmp/ccX8BQhk.s 			page 537


 11806 000b 48897DE8 		movq	%rdi, -24(%rbp)
 11807 000f 488975E0 		movq	%rsi, -32(%rbp)
 11808 0013 488955D8 		movq	%rdx, -40(%rbp)
 614:/usr/include/c++/5/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 11809              		.loc 29 614 0
 11810 0017 488B45D8 		movq	-40(%rbp), %rax
 11811 001b 4889C7   		movq	%rax, %rdi
 11812 001e E8000000 		call	_ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_
 11812      00
 11813 0023 4989C4   		movq	%rax, %r12
 11814 0026 488B45E0 		movq	-32(%rbp), %rax
 11815 002a 4889C7   		movq	%rax, %rdi
 11816 002d E8000000 		call	_ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_
 11816      00
 11817 0032 4889C3   		movq	%rax, %rbx
 11818 0035 488B45E8 		movq	-24(%rbp), %rax
 11819 0039 4889C7   		movq	%rax, %rdi
 11820 003c E8000000 		call	_ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_
 11820      00
 615:/usr/include/c++/5/bits/stl_algobase.h ****     }
 11821              		.loc 29 615 0
 11822 0041 4C89E2   		movq	%r12, %rdx
 11823 0044 4889DE   		movq	%rbx, %rsi
 11824 0047 4889C7   		movq	%rax, %rdi
 11825 004a E8000000 		call	_ZSt22__copy_move_backward_aILb0EPPcS1_ET1_T0_S3_S2_
 11825      00
 616:/usr/include/c++/5/bits/stl_algobase.h **** 
 11826              		.loc 29 616 0
 11827 004f 4883C420 		addq	$32, %rsp
 11828 0053 5B       		popq	%rbx
 11829 0054 415C     		popq	%r12
 11830 0056 5D       		popq	%rbp
 11831              		.cfi_def_cfa 7, 8
 11832 0057 C3       		ret
 11833              		.cfi_endproc
 11834              	.LFE10620:
 11836              		.section	.text._ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ES3_,"axG",@progbits,_ZNSt13move_
 11837              		.align 2
 11838              		.weak	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ES3_
 11840              	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ES3_:
 11841              	.LFB10622:
 984:/usr/include/c++/5/bits/stl_iterator.h ****       : _M_current(__i) { }
 11842              		.loc 13 984 0
 11843              		.cfi_startproc
 11844 0000 55       		pushq	%rbp
 11845              		.cfi_def_cfa_offset 16
 11846              		.cfi_offset 6, -16
 11847 0001 4889E5   		movq	%rsp, %rbp
 11848              		.cfi_def_cfa_register 6
 11849 0004 4883EC10 		subq	$16, %rsp
 11850 0008 48897DF8 		movq	%rdi, -8(%rbp)
 11851 000c 488975F0 		movq	%rsi, -16(%rbp)
 11852              	.LBB95:
 985:/usr/include/c++/5/bits/stl_iterator.h **** 
 11853              		.loc 13 985 0
 11854 0010 488B45F8 		movq	-8(%rbp), %rax
 11855 0014 488B55F0 		movq	-16(%rbp), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 538


 11856 0018 4889D6   		movq	%rdx, %rsi
 11857 001b 4889C7   		movq	%rax, %rdi
 11858 001e E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11858      00
 11859              	.LBE95:
 11860 0023 90       		nop
 11861 0024 C9       		leave
 11862              		.cfi_def_cfa 7, 8
 11863 0025 C3       		ret
 11864              		.cfi_endproc
 11865              	.LFE10622:
 11867              		.weak	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ES3_
 11868              		.set	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ES3_,_ZNSt13move_iteratorISt15_Deque_iterat
 11869              		.section	.text._ZSt18uninitialized_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S
 11870              		.weak	_ZSt18uninitialized_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_
 11872              	_ZSt18uninitialized_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_:
 11873              	.LFB10624:
 107:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 11874              		.loc 38 107 0
 11875              		.cfi_startproc
 11876 0000 55       		pushq	%rbp
 11877              		.cfi_def_cfa_offset 16
 11878              		.cfi_offset 6, -16
 11879 0001 4889E5   		movq	%rsp, %rbp
 11880              		.cfi_def_cfa_register 6
 11881 0004 4881ECA0 		subq	$160, %rsp
 11881      000000
 11882 000b 4889BD78 		movq	%rdi, -136(%rbp)
 11882      FFFFFF
 11883 0012 4889B570 		movq	%rsi, -144(%rbp)
 11883      FFFFFF
 11884 0019 48899568 		movq	%rdx, -152(%rbp)
 11884      FFFFFF
 11885 0020 48898D60 		movq	%rcx, -160(%rbp)
 11885      FFFFFF
 107:/usr/include/c++/5/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 11886              		.loc 38 107 0
 11887 0027 64488B04 		movq	%fs:40, %rax
 11887      25280000 
 11887      00
 11888 0030 488945F8 		movq	%rax, -8(%rbp)
 11889 0034 31C0     		xorl	%eax, %eax
 120:/usr/include/c++/5/bits/stl_uninitialized.h **** #endif
 11890              		.loc 38 120 0
 11891 0036 C6458F01 		movb	$1, -113(%rbp)
 126:/usr/include/c++/5/bits/stl_uninitialized.h ****     }
 11892              		.loc 38 126 0
 11893 003a 488B9560 		movq	-160(%rbp), %rdx
 11893      FFFFFF
 11894 0041 488D45D0 		leaq	-48(%rbp), %rax
 11895 0045 4889D6   		movq	%rdx, %rsi
 11896 0048 4889C7   		movq	%rax, %rdi
 11897 004b E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 11897      00
 11898 0050 488B9568 		movq	-152(%rbp), %rdx
 11898      FFFFFF
 11899 0057 488D45B0 		leaq	-80(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 539


 11900 005b 4889D6   		movq	%rdx, %rsi
 11901 005e 4889C7   		movq	%rax, %rdi
 11902 0061 E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
 11902      00
 11903 0066 488B9570 		movq	-144(%rbp), %rdx
 11903      FFFFFF
 11904 006d 488D4590 		leaq	-112(%rbp), %rax
 11905 0071 4889D6   		movq	%rdx, %rsi
 11906 0074 4889C7   		movq	%rax, %rdi
 11907 0077 E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
 11907      00
 11908 007c 488B8578 		movq	-136(%rbp), %rax
 11908      FFFFFF
 11909 0083 488D4DD0 		leaq	-48(%rbp), %rcx
 11910 0087 488D55B0 		leaq	-80(%rbp), %rdx
 11911 008b 488D7590 		leaq	-112(%rbp), %rsi
 11912 008f 4889C7   		movq	%rax, %rdi
 11913 0092 E8000000 		call	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcE
 11913      00
 127:/usr/include/c++/5/bits/stl_uninitialized.h **** 
 11914              		.loc 38 127 0
 11915 0097 488B8578 		movq	-136(%rbp), %rax
 11915      FFFFFF
 11916 009e 488B4DF8 		movq	-8(%rbp), %rcx
 11917 00a2 6448330C 		xorq	%fs:40, %rcx
 11917      25280000 
 11917      00
 11918 00ab 7405     		je	.L618
 11919 00ad E8000000 		call	__stack_chk_fail
 11919      00
 11920              	.L618:
 11921 00b2 C9       		leave
 11922              		.cfi_def_cfa 7, 8
 11923 00b3 C3       		ret
 11924              		.cfi_endproc
 11925              	.LFE10624:
 11927              		.section	.text._ZSt3minIlERKT_S2_S2_,"axG",@progbits,_ZSt3minIlERKT_S2_S2_,comdat
 11928              		.weak	_ZSt3minIlERKT_S2_S2_
 11930              	_ZSt3minIlERKT_S2_S2_:
 11931              	.LFB10625:
 195:/usr/include/c++/5/bits/stl_algobase.h ****     {
 11932              		.loc 29 195 0
 11933              		.cfi_startproc
 11934 0000 55       		pushq	%rbp
 11935              		.cfi_def_cfa_offset 16
 11936              		.cfi_offset 6, -16
 11937 0001 4889E5   		movq	%rsp, %rbp
 11938              		.cfi_def_cfa_register 6
 11939 0004 48897DF8 		movq	%rdi, -8(%rbp)
 11940 0008 488975F0 		movq	%rsi, -16(%rbp)
 200:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 11941              		.loc 29 200 0
 11942 000c 488B45F0 		movq	-16(%rbp), %rax
 11943 0010 488B10   		movq	(%rax), %rdx
 11944 0013 488B45F8 		movq	-8(%rbp), %rax
 11945 0017 488B00   		movq	(%rax), %rax
 11946 001a 4839C2   		cmpq	%rax, %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 540


 11947 001d 7D06     		jge	.L620
 201:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 11948              		.loc 29 201 0
 11949 001f 488B45F0 		movq	-16(%rbp), %rax
 11950 0023 EB04     		jmp	.L621
 11951              	.L620:
 202:/usr/include/c++/5/bits/stl_algobase.h ****     }
 11952              		.loc 29 202 0
 11953 0025 488B45F8 		movq	-8(%rbp), %rax
 11954              	.L621:
 203:/usr/include/c++/5/bits/stl_algobase.h **** 
 11955              		.loc 29 203 0
 11956 0029 5D       		popq	%rbp
 11957              		.cfi_def_cfa 7, 8
 11958 002a C3       		ret
 11959              		.cfi_endproc
 11960              	.LFE10625:
 11962              		.section	.text._ZSt4moveIPcS0_ET0_T_S2_S1_,"axG",@progbits,_ZSt4moveIPcS0_ET0_T_S2_S1_,comdat
 11963              		.weak	_ZSt4moveIPcS0_ET0_T_S2_S1_
 11965              	_ZSt4moveIPcS0_ET0_T_S2_S1_:
 11966              	.LFB10626:
 495:/usr/include/c++/5/bits/stl_algobase.h ****     {
 11967              		.loc 29 495 0
 11968              		.cfi_startproc
 11969 0000 55       		pushq	%rbp
 11970              		.cfi_def_cfa_offset 16
 11971              		.cfi_offset 6, -16
 11972 0001 4889E5   		movq	%rsp, %rbp
 11973              		.cfi_def_cfa_register 6
 11974 0004 53       		pushq	%rbx
 11975 0005 4883EC28 		subq	$40, %rsp
 11976              		.cfi_offset 3, -24
 11977 0009 48897DE8 		movq	%rdi, -24(%rbp)
 11978 000d 488975E0 		movq	%rsi, -32(%rbp)
 11979 0011 488955D8 		movq	%rdx, -40(%rbp)
 503:/usr/include/c++/5/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 11980              		.loc 29 503 0
 11981 0015 488B45E0 		movq	-32(%rbp), %rax
 11982 0019 4889C7   		movq	%rax, %rdi
 11983 001c E8000000 		call	_ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_
 11983      00
 11984 0021 4889C3   		movq	%rax, %rbx
 11985 0024 488B45E8 		movq	-24(%rbp), %rax
 11986 0028 4889C7   		movq	%rax, %rdi
 11987 002b E8000000 		call	_ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_
 11987      00
 11988 0030 4889C1   		movq	%rax, %rcx
 504:/usr/include/c++/5/bits/stl_algobase.h ****     }
 11989              		.loc 29 504 0
 11990 0033 488B45D8 		movq	-40(%rbp), %rax
 11991 0037 4889C2   		movq	%rax, %rdx
 11992 003a 4889DE   		movq	%rbx, %rsi
 11993 003d 4889CF   		movq	%rcx, %rdi
 11994 0040 E8000000 		call	_ZSt14__copy_move_a2ILb1EPcS0_ET1_T0_S2_S1_
 11994      00
 505:/usr/include/c++/5/bits/stl_algobase.h **** 
 11995              		.loc 29 505 0
GAS LISTING /tmp/ccX8BQhk.s 			page 541


 11996 0045 4883C428 		addq	$40, %rsp
 11997 0049 5B       		popq	%rbx
 11998 004a 5D       		popq	%rbp
 11999              		.cfi_def_cfa 7, 8
 12000 004b C3       		ret
 12001              		.cfi_endproc
 12002              	.LFE10626:
 12004              		.section	.text._ZNSt15_Deque_iteratorIcRKcPS0_EpLEl,"axG",@progbits,_ZNSt15_Deque_iteratorIcRKcPS0
 12005              		.align 2
 12006              		.weak	_ZNSt15_Deque_iteratorIcRKcPS0_EpLEl
 12008              	_ZNSt15_Deque_iteratorIcRKcPS0_EpLEl:
 12009              	.LFB10627:
 206:/usr/include/c++/5/bits/stl_deque.h ****       {
 12010              		.loc 3 206 0
 12011              		.cfi_startproc
 12012 0000 55       		pushq	%rbp
 12013              		.cfi_def_cfa_offset 16
 12014              		.cfi_offset 6, -16
 12015 0001 4889E5   		movq	%rsp, %rbp
 12016              		.cfi_def_cfa_register 6
 12017 0004 53       		pushq	%rbx
 12018 0005 4883EC28 		subq	$40, %rsp
 12019              		.cfi_offset 3, -24
 12020 0009 48897DD8 		movq	%rdi, -40(%rbp)
 12021 000d 488975D0 		movq	%rsi, -48(%rbp)
 208:/usr/include/c++/5/bits/stl_deque.h **** 	if (__offset >= 0 && __offset < difference_type(_S_buffer_size()))
 12022              		.loc 3 208 0
 12023 0011 488B45D8 		movq	-40(%rbp), %rax
 12024 0015 488B00   		movq	(%rax), %rax
 12025 0018 4889C2   		movq	%rax, %rdx
 12026 001b 488B45D8 		movq	-40(%rbp), %rax
 12027 001f 488B4008 		movq	8(%rax), %rax
 12028 0023 4829C2   		subq	%rax, %rdx
 12029 0026 488B45D0 		movq	-48(%rbp), %rax
 12030 002a 4801D0   		addq	%rdx, %rax
 12031 002d 488945E0 		movq	%rax, -32(%rbp)
 12032              	.LBB96:
 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 12033              		.loc 3 209 0
 12034 0031 48837DE0 		cmpq	$0, -32(%rbp)
 12034      00
 12035 0036 7812     		js	.L625
 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 12036              		.loc 3 209 0 is_stmt 0 discriminator 1
 12037 0038 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv
 12037      00
 12038 003d 483B45E0 		cmpq	-32(%rbp), %rax
 12039 0041 7E07     		jle	.L625
 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 12040              		.loc 3 209 0 discriminator 3
 12041 0043 B8010000 		movl	$1, %eax
 12041      00
 12042 0048 EB05     		jmp	.L626
 12043              	.L625:
 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 12044              		.loc 3 209 0 discriminator 4
 12045 004a B8000000 		movl	$0, %eax
GAS LISTING /tmp/ccX8BQhk.s 			page 542


 12045      00
 12046              	.L626:
 209:/usr/include/c++/5/bits/stl_deque.h **** 	  _M_cur += __n;
 12047              		.loc 3 209 0 discriminator 6
 12048 004f 84C0     		testb	%al, %al
 12049 0051 741A     		je	.L627
 210:/usr/include/c++/5/bits/stl_deque.h **** 	else
 12050              		.loc 3 210 0 is_stmt 1
 12051 0053 488B45D8 		movq	-40(%rbp), %rax
 12052 0057 488B10   		movq	(%rax), %rdx
 12053 005a 488B45D0 		movq	-48(%rbp), %rax
 12054 005e 4801C2   		addq	%rax, %rdx
 12055 0061 488B45D8 		movq	-40(%rbp), %rax
 12056 0065 488910   		movq	%rdx, (%rax)
 12057 0068 E9870000 		jmp	.L628
 12057      00
 12058              	.L627:
 12059              	.LBB97:
 216:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 12060              		.loc 3 216 0
 12061 006d 48837DE0 		cmpq	$0, -32(%rbp)
 12061      00
 12062 0072 7E13     		jle	.L629
 214:/usr/include/c++/5/bits/stl_deque.h **** 	                   : -difference_type((-__offset - 1)
 12063              		.loc 3 214 0 discriminator 1
 12064 0074 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv
 12064      00
 216:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 12065              		.loc 3 216 0 discriminator 1
 12066 0079 4889C1   		movq	%rax, %rcx
 12067 007c 488B45E0 		movq	-32(%rbp), %rax
 12068 0080 4899     		cqto
 12069 0082 48F7F9   		idivq	%rcx
 12070 0085 EB20     		jmp	.L630
 12071              	.L629:
 216:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 12072              		.loc 3 216 0 is_stmt 0 discriminator 2
 12073 0087 488B45E0 		movq	-32(%rbp), %rax
 12074 008b 48F7D0   		notq	%rax
 12075 008e 4889C3   		movq	%rax, %rbx
 12076 0091 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv
 12076      00
 12077 0096 4889C1   		movq	%rax, %rcx
 12078 0099 4889D8   		movq	%rbx, %rax
 12079 009c BA000000 		movl	$0, %edx
 12079      00
 12080 00a1 48F7F1   		divq	%rcx
 12081 00a4 48F7D0   		notq	%rax
 12082              	.L630:
 216:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_set_node(_M_node + __node_offset);
 12083              		.loc 3 216 0 discriminator 4
 12084 00a7 488945E8 		movq	%rax, -24(%rbp)
 217:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_cur = _M_first + (__offset - __node_offset
 12085              		.loc 3 217 0 is_stmt 1 discriminator 4
 12086 00ab 488B45D8 		movq	-40(%rbp), %rax
 12087 00af 488B4018 		movq	24(%rax), %rax
 12088 00b3 488B55E8 		movq	-24(%rbp), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 543


 12089 00b7 48C1E203 		salq	$3, %rdx
 12090 00bb 4801C2   		addq	%rax, %rdx
 12091 00be 488B45D8 		movq	-40(%rbp), %rax
 12092 00c2 4889D6   		movq	%rdx, %rsi
 12093 00c5 4889C7   		movq	%rax, %rdi
 12094 00c8 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_E11_M_set_nodeEPPc
 12094      00
 218:/usr/include/c++/5/bits/stl_deque.h **** 				 * difference_type(_S_buffer_size()));
 12095              		.loc 3 218 0 discriminator 4
 12096 00cd 488B45D8 		movq	-40(%rbp), %rax
 12097 00d1 488B5808 		movq	8(%rax), %rbx
 219:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 12098              		.loc 3 219 0 discriminator 4
 12099 00d5 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv
 12099      00
 218:/usr/include/c++/5/bits/stl_deque.h **** 				 * difference_type(_S_buffer_size()));
 12100              		.loc 3 218 0 discriminator 4
 12101 00da 480FAF45 		imulq	-24(%rbp), %rax
 12101      E8
 12102 00df 488B55E0 		movq	-32(%rbp), %rdx
 12103 00e3 4829C2   		subq	%rax, %rdx
 12104 00e6 4889D0   		movq	%rdx, %rax
 12105 00e9 488D1403 		leaq	(%rbx,%rax), %rdx
 12106 00ed 488B45D8 		movq	-40(%rbp), %rax
 12107 00f1 488910   		movq	%rdx, (%rax)
 12108              	.L628:
 12109              	.LBE97:
 12110              	.LBE96:
 221:/usr/include/c++/5/bits/stl_deque.h ****       }
 12111              		.loc 3 221 0
 12112 00f4 488B45D8 		movq	-40(%rbp), %rax
 222:/usr/include/c++/5/bits/stl_deque.h **** 
 12113              		.loc 3 222 0
 12114 00f8 4883C428 		addq	$40, %rsp
 12115 00fc 5B       		popq	%rbx
 12116 00fd 5D       		popq	%rbp
 12117              		.cfi_def_cfa 7, 8
 12118 00fe C3       		ret
 12119              		.cfi_endproc
 12120              	.LFE10627:
 12122              		.section	.text._ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_,"axG",@progbits,_ZNSt10_Iter_baseIPKcLb0EE7_
 12123              		.weak	_ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_
 12125              	_ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_:
 12126              	.LFB10628:
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
 12127              		.loc 32 215 0
 12128              		.cfi_startproc
 12129 0000 55       		pushq	%rbp
 12130              		.cfi_def_cfa_offset 16
 12131              		.cfi_offset 6, -16
 12132 0001 4889E5   		movq	%rsp, %rbp
 12133              		.cfi_def_cfa_register 6
 12134 0004 48897DF8 		movq	%rdi, -8(%rbp)
 216:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 12135              		.loc 32 216 0
 12136 0008 488B45F8 		movq	-8(%rbp), %rax
 12137 000c 5D       		popq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 544


 12138              		.cfi_def_cfa 7, 8
 12139 000d C3       		ret
 12140              		.cfi_endproc
 12141              	.LFE10628:
 12143              		.section	.text._ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_,"axG",@progbits,_ZSt
 12144              		.weak	_ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_
 12146              	_ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_:
 12147              	.LFB10629:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 12148              		.loc 29 282 0
 12149              		.cfi_startproc
 12150 0000 55       		pushq	%rbp
 12151              		.cfi_def_cfa_offset 16
 12152              		.cfi_offset 6, -16
 12153 0001 4889E5   		movq	%rsp, %rbp
 12154              		.cfi_def_cfa_register 6
 12155 0004 4883EC10 		subq	$16, %rsp
 12156 0008 48897DF8 		movq	%rdi, -8(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 12157              		.loc 29 283 0
 12158 000c 488B45F8 		movq	-8(%rbp), %rax
 12159 0010 4889C7   		movq	%rax, %rdi
 12160 0013 E8000000 		call	_ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_
 12160      00
 12161 0018 C9       		leave
 12162              		.cfi_def_cfa 7, 8
 12163 0019 C3       		ret
 12164              		.cfi_endproc
 12165              	.LFE10629:
 12167              		.section	.text._ZSt12__niter_baseISt15_Deque_iteratorIcRcPcEENSt11_Niter_baseIT_E13iterator_typeES
 12168              		.weak	_ZSt12__niter_baseISt15_Deque_iteratorIcRcPcEENSt11_Niter_baseIT_E13iterator_typeES5_
 12170              	_ZSt12__niter_baseISt15_Deque_iteratorIcRcPcEENSt11_Niter_baseIT_E13iterator_typeES5_:
 12171              	.LFB10630:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 12172              		.loc 29 282 0
 12173              		.cfi_startproc
 12174 0000 55       		pushq	%rbp
 12175              		.cfi_def_cfa_offset 16
 12176              		.cfi_offset 6, -16
 12177 0001 4889E5   		movq	%rsp, %rbp
 12178              		.cfi_def_cfa_register 6
 12179 0004 4883EC40 		subq	$64, %rsp
 12180 0008 48897DC8 		movq	%rdi, -56(%rbp)
 12181 000c 488975C0 		movq	%rsi, -64(%rbp)
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 12182              		.loc 29 282 0
 12183 0010 64488B04 		movq	%fs:40, %rax
 12183      25280000 
 12183      00
 12184 0019 488945F8 		movq	%rax, -8(%rbp)
 12185 001d 31C0     		xorl	%eax, %eax
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 12186              		.loc 29 283 0
 12187 001f 488B55C0 		movq	-64(%rbp), %rdx
 12188 0023 488D45D0 		leaq	-48(%rbp), %rax
 12189 0027 4889D6   		movq	%rdx, %rsi
 12190 002a 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 545


 12191 002d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12191      00
 12192 0032 488B45C8 		movq	-56(%rbp), %rax
 12193 0036 488D55D0 		leaq	-48(%rbp), %rdx
 12194 003a 4889D6   		movq	%rdx, %rsi
 12195 003d 4889C7   		movq	%rax, %rdi
 12196 0040 E8000000 		call	_ZNSt10_Iter_baseISt15_Deque_iteratorIcRcPcELb0EE7_S_baseES3_
 12196      00
 12197 0045 488B45C8 		movq	-56(%rbp), %rax
 12198 0049 488B4DF8 		movq	-8(%rbp), %rcx
 12199 004d 6448330C 		xorq	%fs:40, %rcx
 12199      25280000 
 12199      00
 12200 0056 7405     		je	.L638
 12201 0058 E8000000 		call	__stack_chk_fail
 12201      00
 12202              	.L638:
 12203 005d C9       		leave
 12204              		.cfi_def_cfa 7, 8
 12205 005e C3       		ret
 12206              		.cfi_endproc
 12207              	.LFE10630:
 12209              		.section	.text._ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_,"axG",@progbits,
 12210              		.weak	_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_
 12212              	_ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_:
 12213              	.LFB10631:
 391:/usr/include/c++/5/bits/stl_algobase.h ****     {
 12214              		.loc 29 391 0
 12215              		.cfi_startproc
 12216 0000 55       		pushq	%rbp
 12217              		.cfi_def_cfa_offset 16
 12218              		.cfi_offset 6, -16
 12219 0001 4889E5   		movq	%rsp, %rbp
 12220              		.cfi_def_cfa_register 6
 12221 0004 4883EC60 		subq	$96, %rsp
 12222 0008 48897DB8 		movq	%rdi, -72(%rbp)
 12223 000c 488975B0 		movq	%rsi, -80(%rbp)
 12224 0010 488955A8 		movq	%rdx, -88(%rbp)
 12225 0014 48894DA0 		movq	%rcx, -96(%rbp)
 391:/usr/include/c++/5/bits/stl_algobase.h ****     {
 12226              		.loc 29 391 0
 12227 0018 64488B04 		movq	%fs:40, %rax
 12227      25280000 
 12227      00
 12228 0021 488945F8 		movq	%rax, -8(%rbp)
 12229 0025 31C0     		xorl	%eax, %eax
 399:/usr/include/c++/5/bits/stl_algobase.h **** 
 12230              		.loc 29 399 0
 12231 0027 C645CF00 		movb	$0, -49(%rbp)
 402:/usr/include/c++/5/bits/stl_algobase.h ****     }
 12232              		.loc 29 402 0
 12233 002b 488B55A0 		movq	-96(%rbp), %rdx
 12234 002f 488D45D0 		leaq	-48(%rbp), %rax
 12235 0033 4889D6   		movq	%rdx, %rsi
 12236 0036 4889C7   		movq	%rax, %rdi
 12237 0039 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12237      00
GAS LISTING /tmp/ccX8BQhk.s 			page 546


 12238 003e 488B45B8 		movq	-72(%rbp), %rax
 12239 0042 488D4DD0 		leaq	-48(%rbp), %rcx
 12240 0046 488B55A8 		movq	-88(%rbp), %rdx
 12241 004a 488B75B0 		movq	-80(%rbp), %rsi
 12242 004e 4889C7   		movq	%rax, %rdi
 12243 0051 E8000000 		call	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKcSt15_Deque_iteratorIcR
 12243      00
 403:/usr/include/c++/5/bits/stl_algobase.h **** 
 12244              		.loc 29 403 0
 12245 0056 488B45B8 		movq	-72(%rbp), %rax
 12246 005a 488B7DF8 		movq	-8(%rbp), %rdi
 12247 005e 6448333C 		xorq	%fs:40, %rdi
 12247      25280000 
 12247      00
 12248 0067 7405     		je	.L641
 12249 0069 E8000000 		call	__stack_chk_fail
 12249      00
 12250              	.L641:
 12251 006e C9       		leave
 12252              		.cfi_def_cfa 7, 8
 12253 006f C3       		ret
 12254              		.cfi_endproc
 12255              	.LFE10631:
 12257              		.section	.text._ZSt8_DestroyISt15_Deque_iteratorIcRcPcEEvT_S4_,"axG",@progbits,_ZSt8_DestroyISt15_
 12258              		.weak	_ZSt8_DestroyISt15_Deque_iteratorIcRcPcEEvT_S4_
 12260              	_ZSt8_DestroyISt15_Deque_iteratorIcRcPcEEvT_S4_:
 12261              	.LFB10632:
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 12262              		.loc 39 122 0
 12263              		.cfi_startproc
 12264 0000 55       		pushq	%rbp
 12265              		.cfi_def_cfa_offset 16
 12266              		.cfi_offset 6, -16
 12267 0001 4889E5   		movq	%rsp, %rbp
 12268              		.cfi_def_cfa_register 6
 12269 0004 4883EC60 		subq	$96, %rsp
 12270 0008 48897DA8 		movq	%rdi, -88(%rbp)
 12271 000c 488975A0 		movq	%rsi, -96(%rbp)
 122:/usr/include/c++/5/bits/stl_construct.h ****     {
 12272              		.loc 39 122 0
 12273 0010 64488B04 		movq	%fs:40, %rax
 12273      25280000 
 12273      00
 12274 0019 488945F8 		movq	%rax, -8(%rbp)
 12275 001d 31C0     		xorl	%eax, %eax
 127:/usr/include/c++/5/bits/stl_construct.h ****     }
 12276              		.loc 39 127 0
 12277 001f 488B55A0 		movq	-96(%rbp), %rdx
 12278 0023 488D45D0 		leaq	-48(%rbp), %rax
 12279 0027 4889D6   		movq	%rdx, %rsi
 12280 002a 4889C7   		movq	%rax, %rdi
 12281 002d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12281      00
 12282 0032 488B55A8 		movq	-88(%rbp), %rdx
 12283 0036 488D45B0 		leaq	-80(%rbp), %rax
 12284 003a 4889D6   		movq	%rdx, %rsi
 12285 003d 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccX8BQhk.s 			page 547


 12286 0040 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12286      00
 126:/usr/include/c++/5/bits/stl_construct.h **** 	__destroy(__first, __last);
 12287              		.loc 39 126 0
 12288 0045 488D55D0 		leaq	-48(%rbp), %rdx
 12289 0049 488D45B0 		leaq	-80(%rbp), %rax
 12290 004d 4889D6   		movq	%rdx, %rsi
 12291 0050 4889C7   		movq	%rax, %rdi
 12292 0053 E8000000 		call	_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIcRcPcEEEvT_S6_
 12292      00
 128:/usr/include/c++/5/bits/stl_construct.h **** 
 12293              		.loc 39 128 0
 12294 0058 90       		nop
 12295 0059 488B45F8 		movq	-8(%rbp), %rax
 12296 005d 64483304 		xorq	%fs:40, %rax
 12296      25280000 
 12296      00
 12297 0066 7405     		je	.L643
 12298 0068 E8000000 		call	__stack_chk_fail
 12298      00
 12299              	.L643:
 12300 006d C9       		leave
 12301              		.cfi_def_cfa 7, 8
 12302 006e C3       		ret
 12303              		.cfi_endproc
 12304              	.LFE10632:
 12306              		.section	.text._ZSt13move_backwardIPcS0_ET0_T_S2_S1_,"axG",@progbits,_ZSt13move_backwardIPcS0_ET0_
 12307              		.weak	_ZSt13move_backwardIPcS0_ET0_T_S2_S1_
 12309              	_ZSt13move_backwardIPcS0_ET0_T_S2_S1_:
 12310              	.LFB10633:
 652:/usr/include/c++/5/bits/stl_algobase.h **** 
 653:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 654:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 655:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 656:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 657:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 658:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 659:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 660:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result - (first - last)
 661:/usr/include/c++/5/bits/stl_algobase.h ****    *
 662:/usr/include/c++/5/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 663:/usr/include/c++/5/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 664:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 665:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 666:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 667:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 668:/usr/include/c++/5/bits/stl_algobase.h ****    *
 669:/usr/include/c++/5/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 670:/usr/include/c++/5/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 671:/usr/include/c++/5/bits/stl_algobase.h ****   */
 672:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 673:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 674:/usr/include/c++/5/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 12311              		.loc 29 674 0
 12312              		.cfi_startproc
 12313 0000 55       		pushq	%rbp
 12314              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccX8BQhk.s 			page 548


 12315              		.cfi_offset 6, -16
 12316 0001 4889E5   		movq	%rsp, %rbp
 12317              		.cfi_def_cfa_register 6
 12318 0004 53       		pushq	%rbx
 12319 0005 4883EC28 		subq	$40, %rsp
 12320              		.cfi_offset 3, -24
 12321 0009 48897DE8 		movq	%rdi, -24(%rbp)
 12322 000d 488975E0 		movq	%rsi, -32(%rbp)
 12323 0011 488955D8 		movq	%rdx, -40(%rbp)
 675:/usr/include/c++/5/bits/stl_algobase.h ****     {
 676:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 677:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 678:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 679:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 680:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 681:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 682:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 683:/usr/include/c++/5/bits/stl_algobase.h **** 
 684:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 12324              		.loc 29 684 0
 12325 0015 488B45E0 		movq	-32(%rbp), %rax
 12326 0019 4889C7   		movq	%rax, %rdi
 12327 001c E8000000 		call	_ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_
 12327      00
 12328 0021 4889C3   		movq	%rax, %rbx
 12329 0024 488B45E8 		movq	-24(%rbp), %rax
 12330 0028 4889C7   		movq	%rax, %rdi
 12331 002b E8000000 		call	_ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_
 12331      00
 12332 0030 4889C1   		movq	%rax, %rcx
 685:/usr/include/c++/5/bits/stl_algobase.h **** 						std::__miter_base(__last),
 686:/usr/include/c++/5/bits/stl_algobase.h **** 						__result);
 12333              		.loc 29 686 0
 12334 0033 488B45D8 		movq	-40(%rbp), %rax
 12335 0037 4889C2   		movq	%rax, %rdx
 12336 003a 4889DE   		movq	%rbx, %rsi
 12337 003d 4889CF   		movq	%rcx, %rdi
 12338 0040 E8000000 		call	_ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_
 12338      00
 687:/usr/include/c++/5/bits/stl_algobase.h ****     }
 12339              		.loc 29 687 0
 12340 0045 4883C428 		addq	$40, %rsp
 12341 0049 5B       		popq	%rbx
 12342 004a 5D       		popq	%rbp
 12343              		.cfi_def_cfa 7, 8
 12344 004b C3       		ret
 12345              		.cfi_endproc
 12346              	.LFE10633:
 12348              		.section	.text._ZNSt15_Deque_iteratorIcRKcPS0_EmIEl,"axG",@progbits,_ZNSt15_Deque_iteratorIcRKcPS0
 12349              		.align 2
 12350              		.weak	_ZNSt15_Deque_iteratorIcRKcPS0_EmIEl
 12352              	_ZNSt15_Deque_iteratorIcRKcPS0_EmIEl:
 12353              	.LFB10634:
 232:/usr/include/c++/5/bits/stl_deque.h ****       { return *this += -__n; }
 12354              		.loc 3 232 0
 12355              		.cfi_startproc
 12356 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 549


 12357              		.cfi_def_cfa_offset 16
 12358              		.cfi_offset 6, -16
 12359 0001 4889E5   		movq	%rsp, %rbp
 12360              		.cfi_def_cfa_register 6
 12361 0004 4883EC10 		subq	$16, %rsp
 12362 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12363 000c 488975F0 		movq	%rsi, -16(%rbp)
 233:/usr/include/c++/5/bits/stl_deque.h **** 
 12364              		.loc 3 233 0
 12365 0010 488B45F0 		movq	-16(%rbp), %rax
 12366 0014 48F7D8   		negq	%rax
 12367 0017 4889C2   		movq	%rax, %rdx
 12368 001a 488B45F8 		movq	-8(%rbp), %rax
 12369 001e 4889D6   		movq	%rdx, %rsi
 12370 0021 4889C7   		movq	%rax, %rdi
 12371 0024 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_EpLEl
 12371      00
 12372 0029 C9       		leave
 12373              		.cfi_def_cfa 7, 8
 12374 002a C3       		ret
 12375              		.cfi_endproc
 12376              	.LFE10634:
 12378              		.section	.rodata
 12379 007f 00       		.align 8
 12380              	.LC18:
 12381 0080 62617369 		.string	"basic_string::_M_construct null not valid"
 12381      635F7374 
 12381      72696E67 
 12381      3A3A5F4D 
 12381      5F636F6E 
 12382              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iter
 12383              		.align 2
 12384              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcP
 12386              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcPcEEEvT_
 12387              	.LFB10635:
 210:/usr/include/c++/5/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12388              		.loc 37 210 0
 12389              		.cfi_startproc
 12390              		.cfi_personality 0x3,__gxx_personality_v0
 12391              		.cfi_lsda 0x3,.LLSDA10635
 12392 0000 55       		pushq	%rbp
 12393              		.cfi_def_cfa_offset 16
 12394              		.cfi_offset 6, -16
 12395 0001 4889E5   		movq	%rsp, %rbp
 12396              		.cfi_def_cfa_register 6
 12397 0004 53       		pushq	%rbx
 12398 0005 4881ECA8 		subq	$168, %rsp
 12398      000000
 12399              		.cfi_offset 3, -24
 12400 000c 4889BD68 		movq	%rdi, -152(%rbp)
 12400      FFFFFF
 12401 0013 4889B560 		movq	%rsi, -160(%rbp)
 12401      FFFFFF
 12402 001a 48899558 		movq	%rdx, -168(%rbp)
 12402      FFFFFF
 210:/usr/include/c++/5/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 12403              		.loc 37 210 0
GAS LISTING /tmp/ccX8BQhk.s 			page 550


 12404 0021 64488B04 		movq	%fs:40, %rax
 12404      25280000 
 12404      00
 12405 002a 488945E8 		movq	%rax, -24(%rbp)
 12406 002e 31C0     		xorl	%eax, %eax
 215:/usr/include/c++/5/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12407              		.loc 37 215 0
 12408 0030 488B9560 		movq	-160(%rbp), %rdx
 12408      FFFFFF
 12409 0037 488D4580 		leaq	-128(%rbp), %rax
 12410 003b 4889D6   		movq	%rdx, %rsi
 12411 003e 4889C7   		movq	%rax, %rdi
 12412 0041 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12412      00
 12413 0046 BB010000 		movl	$1, %ebx
 12413      00
 12414 004b 488D4580 		leaq	-128(%rbp), %rax
 12415 004f 4889C7   		movq	%rax, %rdi
 12416 0052 E8000000 		call	_ZN9__gnu_cxx17__is_null_pointerISt15_Deque_iteratorIcRcPcEEEbT_
 12416      00
 12417 0057 84C0     		testb	%al, %al
 12418 0059 7424     		je	.L649
 215:/usr/include/c++/5/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12419              		.loc 37 215 0 is_stmt 0 discriminator 1
 12420 005b 488B9558 		movq	-168(%rbp), %rdx
 12420      FFFFFF
 12421 0062 488B8560 		movq	-160(%rbp), %rax
 12421      FFFFFF
 12422 0069 4889D6   		movq	%rdx, %rsi
 12423 006c 4889C7   		movq	%rax, %rdi
 12424 006f E8000000 		call	_ZStneIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_
 12424      00
 12425 0074 84C0     		testb	%al, %al
 12426 0076 7407     		je	.L649
 215:/usr/include/c++/5/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12427              		.loc 37 215 0 discriminator 3
 12428 0078 B8010000 		movl	$1, %eax
 12428      00
 12429 007d EB05     		jmp	.L650
 12430              	.L649:
 215:/usr/include/c++/5/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12431              		.loc 37 215 0 discriminator 4
 12432 007f B8000000 		movl	$0, %eax
 12432      00
 12433              	.L650:
 215:/usr/include/c++/5/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 12434              		.loc 37 215 0 discriminator 6
 12435 0084 84DB     		testb	%bl, %bl
 12436 0086 84C0     		testb	%al, %al
 12437 0088 740A     		je	.L652
 216:/usr/include/c++/5/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 12438              		.loc 37 216 0 is_stmt 1
 12439 008a BF000000 		movl	$.LC18, %edi
 12439      00
 12440              	.LEHB79:
 12441 008f E8000000 		call	_ZSt19__throw_logic_errorPKc
 12441      00
GAS LISTING /tmp/ccX8BQhk.s 			page 551


 12442              	.L652:
 219:/usr/include/c++/5/bits/basic_string.tcc **** 
 12443              		.loc 37 219 0
 12444 0094 488B9558 		movq	-168(%rbp), %rdx
 12444      FFFFFF
 12445 009b 488D45C0 		leaq	-64(%rbp), %rax
 12446 009f 4889D6   		movq	%rdx, %rsi
 12447 00a2 4889C7   		movq	%rax, %rdi
 12448 00a5 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12448      00
 12449 00aa 488B9560 		movq	-160(%rbp), %rdx
 12449      FFFFFF
 12450 00b1 488D45A0 		leaq	-96(%rbp), %rax
 12451 00b5 4889D6   		movq	%rdx, %rsi
 12452 00b8 4889C7   		movq	%rax, %rdi
 12453 00bb E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12453      00
 12454 00c0 488D55C0 		leaq	-64(%rbp), %rdx
 12455 00c4 488D45A0 		leaq	-96(%rbp), %rax
 12456 00c8 4889D6   		movq	%rdx, %rsi
 12457 00cb 4889C7   		movq	%rax, %rdi
 12458 00ce E8000000 		call	_ZSt8distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_
 12458      00
 12459 00d3 48898578 		movq	%rax, -136(%rbp)
 12459      FFFFFF
 221:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
 12460              		.loc 37 221 0
 12461 00da 488B8578 		movq	-136(%rbp), %rax
 12461      FFFFFF
 12462 00e1 4883F80F 		cmpq	$15, %rax
 12463 00e5 764C     		jbe	.L653
 223:/usr/include/c++/5/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 12464              		.loc 37 223 0
 12465 00e7 488D8D78 		leaq	-136(%rbp), %rcx
 12465      FFFFFF
 12466 00ee 488B8568 		movq	-152(%rbp), %rax
 12466      FFFFFF
 12467 00f5 BA000000 		movl	$0, %edx
 12467      00
 12468 00fa 4889CE   		movq	%rcx, %rsi
 12469 00fd 4889C7   		movq	%rax, %rdi
 12470 0100 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
 12470      00
 12471 0105 4889C2   		movq	%rax, %rdx
 12472 0108 488B8568 		movq	-152(%rbp), %rax
 12472      FFFFFF
 12473 010f 4889D6   		movq	%rdx, %rsi
 12474 0112 4889C7   		movq	%rax, %rdi
 12475 0115 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc
 12475      00
 224:/usr/include/c++/5/bits/basic_string.tcc **** 	  }
 12476              		.loc 37 224 0
 12477 011a 488B9578 		movq	-136(%rbp), %rdx
 12477      FFFFFF
 12478 0121 488B8568 		movq	-152(%rbp), %rax
 12478      FFFFFF
 12479 0128 4889D6   		movq	%rdx, %rsi
GAS LISTING /tmp/ccX8BQhk.s 			page 552


 12480 012b 4889C7   		movq	%rax, %rdi
 12481 012e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm
 12481      00
 12482              	.LEHE79:
 12483              	.L653:
 229:/usr/include/c++/5/bits/basic_string.tcc **** 	__catch(...)
 12484              		.loc 37 229 0
 12485 0133 488B9558 		movq	-168(%rbp), %rdx
 12485      FFFFFF
 12486 013a 488D45C0 		leaq	-64(%rbp), %rax
 12487 013e 4889D6   		movq	%rdx, %rsi
 12488 0141 4889C7   		movq	%rax, %rdi
 12489 0144 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12489      00
 12490 0149 488B9560 		movq	-160(%rbp), %rdx
 12490      FFFFFF
 12491 0150 488D45A0 		leaq	-96(%rbp), %rax
 12492 0154 4889D6   		movq	%rdx, %rsi
 12493 0157 4889C7   		movq	%rax, %rdi
 12494 015a E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12494      00
 12495 015f 488B8568 		movq	-152(%rbp), %rax
 12495      FFFFFF
 12496 0166 4889C7   		movq	%rax, %rdi
 12497              	.LEHB80:
 12498 0169 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
 12498      00
 12499              	.LEHE80:
 12500 016e 4889C1   		movq	%rax, %rcx
 12501 0171 488D55C0 		leaq	-64(%rbp), %rdx
 12502 0175 488D45A0 		leaq	-96(%rbp), %rax
 12503 0179 4889C6   		movq	%rax, %rsi
 12504 017c 4889CF   		movq	%rcx, %rdi
 12505 017f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsISt15_Deque_iteratorIcRcP
 12505      00
 236:/usr/include/c++/5/bits/basic_string.tcc ****       }
 12506              		.loc 37 236 0
 12507 0184 488B9578 		movq	-136(%rbp), %rdx
 12507      FFFFFF
 12508 018b 488B8568 		movq	-152(%rbp), %rax
 12508      FFFFFF
 12509 0192 4889D6   		movq	%rdx, %rsi
 12510 0195 4889C7   		movq	%rax, %rdi
 12511              	.LEHB81:
 12512 0198 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm
 12512      00
 12513              	.LEHE81:
 237:/usr/include/c++/5/bits/basic_string.tcc **** 
 12514              		.loc 37 237 0
 12515 019d 90       		nop
 12516 019e 488B45E8 		movq	-24(%rbp), %rax
 12517 01a2 64483304 		xorq	%fs:40, %rax
 12517      25280000 
 12517      00
 12518 01ab 7436     		je	.L656
 12519 01ad EB2F     		jmp	.L659
 12520              	.L657:
GAS LISTING /tmp/ccX8BQhk.s 			page 553


 230:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
 12521              		.loc 37 230 0
 12522 01af 4889C7   		movq	%rax, %rdi
 12523 01b2 E8000000 		call	__cxa_begin_catch
 12523      00
 232:/usr/include/c++/5/bits/basic_string.tcc **** 	    __throw_exception_again;
 12524              		.loc 37 232 0
 12525 01b7 488B8568 		movq	-152(%rbp), %rax
 12525      FFFFFF
 12526 01be 4889C7   		movq	%rax, %rdi
 12527              	.LEHB82:
 12528 01c1 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 12528      00
 233:/usr/include/c++/5/bits/basic_string.tcc **** 	  }
 12529              		.loc 37 233 0
 12530 01c6 E8000000 		call	__cxa_rethrow
 12530      00
 12531              	.LEHE82:
 12532              	.L658:
 12533 01cb 4889C3   		movq	%rax, %rbx
 230:/usr/include/c++/5/bits/basic_string.tcc **** 	  {
 12534              		.loc 37 230 0
 12535 01ce E8000000 		call	__cxa_end_catch
 12535      00
 12536 01d3 4889D8   		movq	%rbx, %rax
 12537 01d6 4889C7   		movq	%rax, %rdi
 12538              	.LEHB83:
 12539 01d9 E8000000 		call	_Unwind_Resume
 12539      00
 12540              	.LEHE83:
 12541              	.L659:
 237:/usr/include/c++/5/bits/basic_string.tcc **** 
 12542              		.loc 37 237 0
 12543 01de E8000000 		call	__stack_chk_fail
 12543      00
 12544              	.L656:
 12545 01e3 4881C4A8 		addq	$168, %rsp
 12545      000000
 12546 01ea 5B       		popq	%rbx
 12547 01eb 5D       		popq	%rbp
 12548              		.cfi_def_cfa 7, 8
 12549 01ec C3       		ret
 12550              		.cfi_endproc
 12551              	.LFE10635:
 12552              		.section	.gcc_except_table
 12553              		.align 4
 12554              	.LLSDA10635:
 12555 0230 FF       		.byte	0xff
 12556 0231 03       		.byte	0x3
 12557 0232 25       		.uleb128 .LLSDATT10635-.LLSDATTD10635
 12558              	.LLSDATTD10635:
 12559 0233 01       		.byte	0x1
 12560 0234 1C       		.uleb128 .LLSDACSE10635-.LLSDACSB10635
 12561              	.LLSDACSB10635:
 12562 0235 8F01     		.uleb128 .LEHB79-.LFB10635
 12563 0237 A401     		.uleb128 .LEHE79-.LEHB79
 12564 0239 00       		.uleb128 0
GAS LISTING /tmp/ccX8BQhk.s 			page 554


 12565 023a 00       		.uleb128 0
 12566 023b E902     		.uleb128 .LEHB80-.LFB10635
 12567 023d 05       		.uleb128 .LEHE80-.LEHB80
 12568 023e AF03     		.uleb128 .L657-.LFB10635
 12569 0240 01       		.uleb128 0x1
 12570 0241 9803     		.uleb128 .LEHB81-.LFB10635
 12571 0243 05       		.uleb128 .LEHE81-.LEHB81
 12572 0244 00       		.uleb128 0
 12573 0245 00       		.uleb128 0
 12574 0246 C103     		.uleb128 .LEHB82-.LFB10635
 12575 0248 0A       		.uleb128 .LEHE82-.LEHB82
 12576 0249 CB03     		.uleb128 .L658-.LFB10635
 12577 024b 00       		.uleb128 0
 12578 024c D903     		.uleb128 .LEHB83-.LFB10635
 12579 024e 05       		.uleb128 .LEHE83-.LEHB83
 12580 024f 00       		.uleb128 0
 12581 0250 00       		.uleb128 0
 12582              	.LLSDACSE10635:
 12583 0251 01       		.byte	0x1
 12584 0252 00       		.byte	0
 12585 0253 00       		.align 4
 12586 0254 00000000 		.long	0
 12587              	
 12588              	.LLSDATT10635:
 12589              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iter
 12591              		.section	.text._ZNSt10_Iter_baseIPPcLb0EE7_S_baseES1_,"axG",@progbits,_ZNSt10_Iter_baseIPPcLb0EE7_
 12592              		.weak	_ZNSt10_Iter_baseIPPcLb0EE7_S_baseES1_
 12594              	_ZNSt10_Iter_baseIPPcLb0EE7_S_baseES1_:
 12595              	.LFB10636:
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
 12596              		.loc 32 215 0
 12597              		.cfi_startproc
 12598 0000 55       		pushq	%rbp
 12599              		.cfi_def_cfa_offset 16
 12600              		.cfi_offset 6, -16
 12601 0001 4889E5   		movq	%rsp, %rbp
 12602              		.cfi_def_cfa_register 6
 12603 0004 48897DF8 		movq	%rdi, -8(%rbp)
 216:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 12604              		.loc 32 216 0
 12605 0008 488B45F8 		movq	-8(%rbp), %rax
 12606 000c 5D       		popq	%rbp
 12607              		.cfi_def_cfa 7, 8
 12608 000d C3       		ret
 12609              		.cfi_endproc
 12610              	.LFE10636:
 12612              		.section	.text._ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_,"axG",@progbits,_ZSt
 12613              		.weak	_ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_
 12615              	_ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_:
 12616              	.LFB10637:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 12617              		.loc 29 282 0
 12618              		.cfi_startproc
 12619 0000 55       		pushq	%rbp
 12620              		.cfi_def_cfa_offset 16
 12621              		.cfi_offset 6, -16
 12622 0001 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 555


 12623              		.cfi_def_cfa_register 6
 12624 0004 4883EC10 		subq	$16, %rsp
 12625 0008 48897DF8 		movq	%rdi, -8(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 12626              		.loc 29 283 0
 12627 000c 488B45F8 		movq	-8(%rbp), %rax
 12628 0010 4889C7   		movq	%rax, %rdi
 12629 0013 E8000000 		call	_ZNSt10_Iter_baseIPPcLb0EE7_S_baseES1_
 12629      00
 12630 0018 C9       		leave
 12631              		.cfi_def_cfa 7, 8
 12632 0019 C3       		ret
 12633              		.cfi_endproc
 12634              	.LFE10637:
 12636              		.section	.text._ZSt13__copy_move_aILb0EPPcS1_ET1_T0_S3_S2_,"axG",@progbits,_ZSt13__copy_move_aILb0
 12637              		.weak	_ZSt13__copy_move_aILb0EPPcS1_ET1_T0_S3_S2_
 12639              	_ZSt13__copy_move_aILb0EPPcS1_ET1_T0_S3_S2_:
 12640              	.LFB10638:
 391:/usr/include/c++/5/bits/stl_algobase.h ****     {
 12641              		.loc 29 391 0
 12642              		.cfi_startproc
 12643 0000 55       		pushq	%rbp
 12644              		.cfi_def_cfa_offset 16
 12645              		.cfi_offset 6, -16
 12646 0001 4889E5   		movq	%rsp, %rbp
 12647              		.cfi_def_cfa_register 6
 12648 0004 4883EC30 		subq	$48, %rsp
 12649 0008 48897DE8 		movq	%rdi, -24(%rbp)
 12650 000c 488975E0 		movq	%rsi, -32(%rbp)
 12651 0010 488955D8 		movq	%rdx, -40(%rbp)
 399:/usr/include/c++/5/bits/stl_algobase.h **** 
 12652              		.loc 29 399 0
 12653 0014 C645FF01 		movb	$1, -1(%rbp)
 402:/usr/include/c++/5/bits/stl_algobase.h ****     }
 12654              		.loc 29 402 0
 12655 0018 488B55D8 		movq	-40(%rbp), %rdx
 12656 001c 488B4DE0 		movq	-32(%rbp), %rcx
 12657 0020 488B45E8 		movq	-24(%rbp), %rax
 12658 0024 4889CE   		movq	%rcx, %rsi
 12659 0027 4889C7   		movq	%rax, %rdi
 12660 002a E8000000 		call	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPcEEPT_PKS4_S7_S5_
 12660      00
 403:/usr/include/c++/5/bits/stl_algobase.h **** 
 12661              		.loc 29 403 0
 12662 002f C9       		leave
 12663              		.cfi_def_cfa 7, 8
 12664 0030 C3       		ret
 12665              		.cfi_endproc
 12666              	.LFE10638:
 12668              		.section	.text._ZSt22__copy_move_backward_aILb0EPPcS1_ET1_T0_S3_S2_,"axG",@progbits,_ZSt22__copy_m
 12669              		.weak	_ZSt22__copy_move_backward_aILb0EPPcS1_ET1_T0_S3_S2_
 12671              	_ZSt22__copy_move_backward_aILb0EPPcS1_ET1_T0_S3_S2_:
 12672              	.LFB10639:
 593:/usr/include/c++/5/bits/stl_algobase.h ****     {
 12673              		.loc 29 593 0
 12674              		.cfi_startproc
 12675 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 556


 12676              		.cfi_def_cfa_offset 16
 12677              		.cfi_offset 6, -16
 12678 0001 4889E5   		movq	%rsp, %rbp
 12679              		.cfi_def_cfa_register 6
 12680 0004 4883EC30 		subq	$48, %rsp
 12681 0008 48897DE8 		movq	%rdi, -24(%rbp)
 12682 000c 488975E0 		movq	%rsi, -32(%rbp)
 12683 0010 488955D8 		movq	%rdx, -40(%rbp)
 601:/usr/include/c++/5/bits/stl_algobase.h **** 
 12684              		.loc 29 601 0
 12685 0014 C645FF01 		movb	$1, -1(%rbp)
 606:/usr/include/c++/5/bits/stl_algobase.h ****     }
 12686              		.loc 29 606 0
 12687 0018 488B55D8 		movq	-40(%rbp), %rdx
 12688 001c 488B4DE0 		movq	-32(%rbp), %rcx
 12689 0020 488B45E8 		movq	-24(%rbp), %rax
 12690 0024 4889CE   		movq	%rcx, %rsi
 12691 0027 4889C7   		movq	%rax, %rdi
 12692 002a E8000000 		call	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPcEEPT_PKS
 12692      00
 607:/usr/include/c++/5/bits/stl_algobase.h **** 
 12693              		.loc 29 607 0
 12694 002f C9       		leave
 12695              		.cfi_def_cfa 7, 8
 12696 0030 C3       		ret
 12697              		.cfi_endproc
 12698              	.LFE10639:
 12700              		.section	.text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorISt15_Deque_itera
 12701              		.weak	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorISt15_Deque_iteratorIcRcPc
 12703              	_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES6_EE
 12704              	.LFB10640:
  91:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 12705              		.loc 38 91 0
 12706              		.cfi_startproc
 12707 0000 55       		pushq	%rbp
 12708              		.cfi_def_cfa_offset 16
 12709              		.cfi_offset 6, -16
 12710 0001 4889E5   		movq	%rsp, %rbp
 12711              		.cfi_def_cfa_register 6
 12712 0004 4881EC90 		subq	$144, %rsp
 12712      000000
 12713 000b 48897D88 		movq	%rdi, -120(%rbp)
 12714 000f 48897580 		movq	%rsi, -128(%rbp)
 12715 0013 48899578 		movq	%rdx, -136(%rbp)
 12715      FFFFFF
 12716 001a 48898D70 		movq	%rcx, -144(%rbp)
 12716      FFFFFF
  91:/usr/include/c++/5/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 12717              		.loc 38 91 0
 12718 0021 64488B04 		movq	%fs:40, %rax
 12718      25280000 
 12718      00
 12719 002a 488945F8 		movq	%rax, -8(%rbp)
 12720 002e 31C0     		xorl	%eax, %eax
  93:/usr/include/c++/5/bits/stl_uninitialized.h ****     };
 12721              		.loc 38 93 0
 12722 0030 488B9570 		movq	-144(%rbp), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 557


 12722      FFFFFF
 12723 0037 488D45D0 		leaq	-48(%rbp), %rax
 12724 003b 4889D6   		movq	%rdx, %rsi
 12725 003e 4889C7   		movq	%rax, %rdi
 12726 0041 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12726      00
 12727 0046 488B9578 		movq	-136(%rbp), %rdx
 12727      FFFFFF
 12728 004d 488D45B0 		leaq	-80(%rbp), %rax
 12729 0051 4889D6   		movq	%rdx, %rsi
 12730 0054 4889C7   		movq	%rax, %rdi
 12731 0057 E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
 12731      00
 12732 005c 488B5580 		movq	-128(%rbp), %rdx
 12733 0060 488D4590 		leaq	-112(%rbp), %rax
 12734 0064 4889D6   		movq	%rdx, %rsi
 12735 0067 4889C7   		movq	%rax, %rdi
 12736 006a E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
 12736      00
 12737 006f 488B4588 		movq	-120(%rbp), %rax
 12738 0073 488D4DD0 		leaq	-48(%rbp), %rcx
 12739 0077 488D55B0 		leaq	-80(%rbp), %rdx
 12740 007b 488D7590 		leaq	-112(%rbp), %rsi
 12741 007f 4889C7   		movq	%rax, %rdi
 12742 0082 E8000000 		call	_ZSt4copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_
 12742      00
 12743 0087 488B4588 		movq	-120(%rbp), %rax
 12744 008b 488B4DF8 		movq	-8(%rbp), %rcx
 12745 008f 6448330C 		xorq	%fs:40, %rcx
 12745      25280000 
 12745      00
 12746 0098 7405     		je	.L670
 12747 009a E8000000 		call	__stack_chk_fail
 12747      00
 12748              	.L670:
 12749 009f C9       		leave
 12750              		.cfi_def_cfa 7, 8
 12751 00a0 C3       		ret
 12752              		.cfi_endproc
 12753              	.LFE10640:
 12755              		.section	.text._ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_,"axG",@progbits,_ZSt1
 12756              		.weak	_ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_
 12758              	_ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_:
 12759              	.LFB10641:
 293:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 12760              		.loc 29 293 0
 12761              		.cfi_startproc
 12762 0000 55       		pushq	%rbp
 12763              		.cfi_def_cfa_offset 16
 12764              		.cfi_offset 6, -16
 12765 0001 4889E5   		movq	%rsp, %rbp
 12766              		.cfi_def_cfa_register 6
 12767 0004 4883EC10 		subq	$16, %rsp
 12768 0008 48897DF8 		movq	%rdi, -8(%rbp)
 294:/usr/include/c++/5/bits/stl_algobase.h **** 
 12769              		.loc 29 294 0
 12770 000c 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 558


 12771 0010 4889C7   		movq	%rax, %rdi
 12772 0013 E8000000 		call	_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_
 12772      00
 12773 0018 C9       		leave
 12774              		.cfi_def_cfa 7, 8
 12775 0019 C3       		ret
 12776              		.cfi_endproc
 12777              	.LFE10641:
 12779              		.section	.text._ZSt14__copy_move_a2ILb1EPcS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt14__copy_move_a2ILb
 12780              		.weak	_ZSt14__copy_move_a2ILb1EPcS0_ET1_T0_S2_S1_
 12782              	_ZSt14__copy_move_a2ILb1EPcS0_ET1_T0_S2_S1_:
 12783              	.LFB10642:
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 12784              		.loc 29 436 0
 12785              		.cfi_startproc
 12786 0000 55       		pushq	%rbp
 12787              		.cfi_def_cfa_offset 16
 12788              		.cfi_offset 6, -16
 12789 0001 4889E5   		movq	%rsp, %rbp
 12790              		.cfi_def_cfa_register 6
 12791 0004 4154     		pushq	%r12
 12792 0006 53       		pushq	%rbx
 12793 0007 4883EC20 		subq	$32, %rsp
 12794              		.cfi_offset 12, -24
 12795              		.cfi_offset 3, -32
 12796 000b 48897DE8 		movq	%rdi, -24(%rbp)
 12797 000f 488975E0 		movq	%rsi, -32(%rbp)
 12798 0013 488955D8 		movq	%rdx, -40(%rbp)
 438:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 12799              		.loc 29 438 0
 12800 0017 488B45D8 		movq	-40(%rbp), %rax
 12801 001b 4889C7   		movq	%rax, %rdi
 12802 001e E8000000 		call	_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_
 12802      00
 12803 0023 4989C4   		movq	%rax, %r12
 12804 0026 488B45E0 		movq	-32(%rbp), %rax
 12805 002a 4889C7   		movq	%rax, %rdi
 12806 002d E8000000 		call	_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_
 12806      00
 12807 0032 4889C3   		movq	%rax, %rbx
 12808 0035 488B45E8 		movq	-24(%rbp), %rax
 12809 0039 4889C7   		movq	%rax, %rdi
 12810 003c E8000000 		call	_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_
 12810      00
 440:/usr/include/c++/5/bits/stl_algobase.h ****     }
 12811              		.loc 29 440 0
 12812 0041 4C89E2   		movq	%r12, %rdx
 12813 0044 4889DE   		movq	%rbx, %rsi
 12814 0047 4889C7   		movq	%rax, %rdi
 12815 004a E8000000 		call	_ZSt13__copy_move_aILb1EPcS0_ET1_T0_S2_S1_
 12815      00
 441:/usr/include/c++/5/bits/stl_algobase.h **** 
 12816              		.loc 29 441 0
 12817 004f 4883C420 		addq	$32, %rsp
 12818 0053 5B       		popq	%rbx
 12819 0054 415C     		popq	%r12
 12820 0056 5D       		popq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 559


 12821              		.cfi_def_cfa 7, 8
 12822 0057 C3       		ret
 12823              		.cfi_endproc
 12824              	.LFE10642:
 12826              		.section	.text._ZNSt15_Deque_iteratorIcRKcPS0_E11_M_set_nodeEPPc,"axG",@progbits,_ZNSt15_Deque_ite
 12827              		.align 2
 12828              		.weak	_ZNSt15_Deque_iteratorIcRKcPS0_E11_M_set_nodeEPPc
 12830              	_ZNSt15_Deque_iteratorIcRKcPS0_E11_M_set_nodeEPPc:
 12831              	.LFB10643:
 252:/usr/include/c++/5/bits/stl_deque.h ****       {
 12832              		.loc 3 252 0
 12833              		.cfi_startproc
 12834 0000 55       		pushq	%rbp
 12835              		.cfi_def_cfa_offset 16
 12836              		.cfi_offset 6, -16
 12837 0001 4889E5   		movq	%rsp, %rbp
 12838              		.cfi_def_cfa_register 6
 12839 0004 53       		pushq	%rbx
 12840 0005 4883EC18 		subq	$24, %rsp
 12841              		.cfi_offset 3, -24
 12842 0009 48897DE8 		movq	%rdi, -24(%rbp)
 12843 000d 488975E0 		movq	%rsi, -32(%rbp)
 254:/usr/include/c++/5/bits/stl_deque.h **** 	_M_first = *__new_node;
 12844              		.loc 3 254 0
 12845 0011 488B45E8 		movq	-24(%rbp), %rax
 12846 0015 488B55E0 		movq	-32(%rbp), %rdx
 12847 0019 48895018 		movq	%rdx, 24(%rax)
 255:/usr/include/c++/5/bits/stl_deque.h **** 	_M_last = _M_first + difference_type(_S_buffer_size());
 12848              		.loc 3 255 0
 12849 001d 488B45E0 		movq	-32(%rbp), %rax
 12850 0021 488B10   		movq	(%rax), %rdx
 12851 0024 488B45E8 		movq	-24(%rbp), %rax
 12852 0028 48895008 		movq	%rdx, 8(%rax)
 256:/usr/include/c++/5/bits/stl_deque.h ****       }
 12853              		.loc 3 256 0
 12854 002c 488B45E8 		movq	-24(%rbp), %rax
 12855 0030 488B5808 		movq	8(%rax), %rbx
 12856 0034 E8000000 		call	_ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv
 12856      00
 12857 0039 488D1403 		leaq	(%rbx,%rax), %rdx
 12858 003d 488B45E8 		movq	-24(%rbp), %rax
 12859 0041 48895010 		movq	%rdx, 16(%rax)
 257:/usr/include/c++/5/bits/stl_deque.h ****     };
 12860              		.loc 3 257 0
 12861 0045 90       		nop
 12862 0046 4883C418 		addq	$24, %rsp
 12863 004a 5B       		popq	%rbx
 12864 004b 5D       		popq	%rbp
 12865              		.cfi_def_cfa 7, 8
 12866 004c C3       		ret
 12867              		.cfi_endproc
 12868              	.LFE10643:
 12870              		.section	.text._ZNSt10_Iter_baseISt15_Deque_iteratorIcRcPcELb0EE7_S_baseES3_,"axG",@progbits,_ZNSt
 12871              		.weak	_ZNSt10_Iter_baseISt15_Deque_iteratorIcRcPcELb0EE7_S_baseES3_
 12873              	_ZNSt10_Iter_baseISt15_Deque_iteratorIcRcPcELb0EE7_S_baseES3_:
 12874              	.LFB10644:
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
GAS LISTING /tmp/ccX8BQhk.s 			page 560


 12875              		.loc 32 215 0
 12876              		.cfi_startproc
 12877 0000 55       		pushq	%rbp
 12878              		.cfi_def_cfa_offset 16
 12879              		.cfi_offset 6, -16
 12880 0001 4889E5   		movq	%rsp, %rbp
 12881              		.cfi_def_cfa_register 6
 12882 0004 4883EC10 		subq	$16, %rsp
 12883 0008 48897DF8 		movq	%rdi, -8(%rbp)
 12884 000c 488975F0 		movq	%rsi, -16(%rbp)
 216:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 12885              		.loc 32 216 0
 12886 0010 488B55F0 		movq	-16(%rbp), %rdx
 12887 0014 488B45F8 		movq	-8(%rbp), %rax
 12888 0018 4889D6   		movq	%rdx, %rsi
 12889 001b 4889C7   		movq	%rax, %rdi
 12890 001e E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12890      00
 12891 0023 488B45F8 		movq	-8(%rbp), %rax
 12892 0027 C9       		leave
 12893              		.cfi_def_cfa 7, 8
 12894 0028 C3       		ret
 12895              		.cfi_endproc
 12896              	.LFE10644:
 12898              		.section	.text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKcSt15_Deque_i
 12899              		.weak	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKcSt15_Deque_iteratorIc
 12901              	_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKcSt15_Deque_iteratorIcRcPcEEE
 12902              	.LFB10645:
 335:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 12903              		.loc 29 335 0
 12904              		.cfi_startproc
 12905 0000 55       		pushq	%rbp
 12906              		.cfi_def_cfa_offset 16
 12907              		.cfi_offset 6, -16
 12908 0001 4889E5   		movq	%rsp, %rbp
 12909              		.cfi_def_cfa_register 6
 12910 0004 4883EC30 		subq	$48, %rsp
 12911 0008 48897DE8 		movq	%rdi, -24(%rbp)
 12912 000c 488975E0 		movq	%rsi, -32(%rbp)
 12913 0010 488955D8 		movq	%rdx, -40(%rbp)
 12914 0014 48894DD0 		movq	%rcx, -48(%rbp)
 12915              	.LBB98:
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 12916              		.loc 29 338 0
 12917 0018 488B55D8 		movq	-40(%rbp), %rdx
 12918 001c 488B45E0 		movq	-32(%rbp), %rax
 12919 0020 4829C2   		subq	%rax, %rdx
 12920 0023 4889D0   		movq	%rdx, %rax
 12921 0026 488945F8 		movq	%rax, -8(%rbp)
 12922              	.L680:
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 12923              		.loc 29 338 0 is_stmt 0 discriminator 3
 12924 002a 48837DF8 		cmpq	$0, -8(%rbp)
 12924      00
 12925 002f 7E30     		jle	.L679
 340:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 12926              		.loc 29 340 0 is_stmt 1 discriminator 2
GAS LISTING /tmp/ccX8BQhk.s 			page 561


 12927 0031 488B45D0 		movq	-48(%rbp), %rax
 12928 0035 4889C7   		movq	%rax, %rdi
 12929 0038 E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEdeEv
 12929      00
 12930 003d 4889C2   		movq	%rax, %rdx
 12931 0040 488B45E0 		movq	-32(%rbp), %rax
 12932 0044 0FB600   		movzbl	(%rax), %eax
 12933 0047 8802     		movb	%al, (%rdx)
 341:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 12934              		.loc 29 341 0 discriminator 2
 12935 0049 488345E0 		addq	$1, -32(%rbp)
 12935      01
 342:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 12936              		.loc 29 342 0 discriminator 2
 12937 004e 488B45D0 		movq	-48(%rbp), %rax
 12938 0052 4889C7   		movq	%rax, %rdi
 12939 0055 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEppEv
 12939      00
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 12940              		.loc 29 338 0 discriminator 2
 12941 005a 48836DF8 		subq	$1, -8(%rbp)
 12941      01
 12942 005f EBC9     		jmp	.L680
 12943              	.L679:
 12944              	.LBE98:
 344:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 12945              		.loc 29 344 0
 12946 0061 488B55D0 		movq	-48(%rbp), %rdx
 12947 0065 488B45E8 		movq	-24(%rbp), %rax
 12948 0069 4889D6   		movq	%rdx, %rsi
 12949 006c 4889C7   		movq	%rax, %rdi
 12950 006f E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 12950      00
 345:/usr/include/c++/5/bits/stl_algobase.h ****     };
 12951              		.loc 29 345 0
 12952 0074 488B45E8 		movq	-24(%rbp), %rax
 12953 0078 C9       		leave
 12954              		.cfi_def_cfa 7, 8
 12955 0079 C3       		ret
 12956              		.cfi_endproc
 12957              	.LFE10645:
 12959              		.section	.text._ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIcRcPcEEEvT_S6_,"axG",@progb
 12960              		.weak	_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIcRcPcEEEvT_S6_
 12962              	_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIcRcPcEEEvT_S6_:
 12963              	.LFB10646:
 112:/usr/include/c++/5/bits/stl_construct.h ****     };
 12964              		.loc 39 112 0
 12965              		.cfi_startproc
 12966 0000 55       		pushq	%rbp
 12967              		.cfi_def_cfa_offset 16
 12968              		.cfi_offset 6, -16
 12969 0001 4889E5   		movq	%rsp, %rbp
 12970              		.cfi_def_cfa_register 6
 12971 0004 48897DF8 		movq	%rdi, -8(%rbp)
 12972 0008 488975F0 		movq	%rsi, -16(%rbp)
 112:/usr/include/c++/5/bits/stl_construct.h ****     };
 12973              		.loc 39 112 0
GAS LISTING /tmp/ccX8BQhk.s 			page 562


 12974 000c 90       		nop
 12975 000d 5D       		popq	%rbp
 12976              		.cfi_def_cfa 7, 8
 12977 000e C3       		ret
 12978              		.cfi_endproc
 12979              	.LFE10646:
 12981              		.section	.text._ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt23__copy_m
 12982              		.weak	_ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_
 12984              	_ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_:
 12985              	.LFB10647:
 611:/usr/include/c++/5/bits/stl_algobase.h ****     {
 12986              		.loc 29 611 0
 12987              		.cfi_startproc
 12988 0000 55       		pushq	%rbp
 12989              		.cfi_def_cfa_offset 16
 12990              		.cfi_offset 6, -16
 12991 0001 4889E5   		movq	%rsp, %rbp
 12992              		.cfi_def_cfa_register 6
 12993 0004 4154     		pushq	%r12
 12994 0006 53       		pushq	%rbx
 12995 0007 4883EC20 		subq	$32, %rsp
 12996              		.cfi_offset 12, -24
 12997              		.cfi_offset 3, -32
 12998 000b 48897DE8 		movq	%rdi, -24(%rbp)
 12999 000f 488975E0 		movq	%rsi, -32(%rbp)
 13000 0013 488955D8 		movq	%rdx, -40(%rbp)
 614:/usr/include/c++/5/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 13001              		.loc 29 614 0
 13002 0017 488B45D8 		movq	-40(%rbp), %rax
 13003 001b 4889C7   		movq	%rax, %rdi
 13004 001e E8000000 		call	_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_
 13004      00
 13005 0023 4989C4   		movq	%rax, %r12
 13006 0026 488B45E0 		movq	-32(%rbp), %rax
 13007 002a 4889C7   		movq	%rax, %rdi
 13008 002d E8000000 		call	_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_
 13008      00
 13009 0032 4889C3   		movq	%rax, %rbx
 13010 0035 488B45E8 		movq	-24(%rbp), %rax
 13011 0039 4889C7   		movq	%rax, %rdi
 13012 003c E8000000 		call	_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_
 13012      00
 615:/usr/include/c++/5/bits/stl_algobase.h ****     }
 13013              		.loc 29 615 0
 13014 0041 4C89E2   		movq	%r12, %rdx
 13015 0044 4889DE   		movq	%rbx, %rsi
 13016 0047 4889C7   		movq	%rax, %rdi
 13017 004a E8000000 		call	_ZSt22__copy_move_backward_aILb1EPcS0_ET1_T0_S2_S1_
 13017      00
 616:/usr/include/c++/5/bits/stl_algobase.h **** 
 13018              		.loc 29 616 0
 13019 004f 4883C420 		addq	$32, %rsp
 13020 0053 5B       		popq	%rbx
 13021 0054 415C     		popq	%r12
 13022 0056 5D       		popq	%rbp
 13023              		.cfi_def_cfa 7, 8
 13024 0057 C3       		ret
GAS LISTING /tmp/ccX8BQhk.s 			page 563


 13025              		.cfi_endproc
 13026              	.LFE10647:
 13028              		.section	.text._ZN9__gnu_cxx17__is_null_pointerISt15_Deque_iteratorIcRcPcEEEbT_,"axG",@progbits,_Z
 13029              		.weak	_ZN9__gnu_cxx17__is_null_pointerISt15_Deque_iteratorIcRcPcEEEbT_
 13031              	_ZN9__gnu_cxx17__is_null_pointerISt15_Deque_iteratorIcRcPcEEEbT_:
 13032              	.LFB10648:
 13033              		.file 40 "/usr/include/c++/5/ext/type_traits.h"
   1:/usr/include/c++/5/ext/type_traits.h **** // -*- C++ -*-
   2:/usr/include/c++/5/ext/type_traits.h **** 
   3:/usr/include/c++/5/ext/type_traits.h **** // Copyright (C) 2005-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/ext/type_traits.h **** //
   5:/usr/include/c++/5/ext/type_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/ext/type_traits.h **** // software; you can redistribute it and/or modify it under the terms
   7:/usr/include/c++/5/ext/type_traits.h **** // of the GNU General Public License as published by the Free Software
   8:/usr/include/c++/5/ext/type_traits.h **** // Foundation; either version 3, or (at your option) any later
   9:/usr/include/c++/5/ext/type_traits.h **** // version.
  10:/usr/include/c++/5/ext/type_traits.h **** 
  11:/usr/include/c++/5/ext/type_traits.h **** // This library is distributed in the hope that it will be useful, but
  12:/usr/include/c++/5/ext/type_traits.h **** // WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/ext/type_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  14:/usr/include/c++/5/ext/type_traits.h **** // General Public License for more details.
  15:/usr/include/c++/5/ext/type_traits.h **** 
  16:/usr/include/c++/5/ext/type_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/ext/type_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/ext/type_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/ext/type_traits.h **** 
  20:/usr/include/c++/5/ext/type_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/ext/type_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/ext/type_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/ext/type_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/ext/type_traits.h **** 
  25:/usr/include/c++/5/ext/type_traits.h **** /** @file ext/type_traits.h
  26:/usr/include/c++/5/ext/type_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/usr/include/c++/5/ext/type_traits.h ****  */
  28:/usr/include/c++/5/ext/type_traits.h **** 
  29:/usr/include/c++/5/ext/type_traits.h **** #ifndef _EXT_TYPE_TRAITS
  30:/usr/include/c++/5/ext/type_traits.h **** #define _EXT_TYPE_TRAITS 1
  31:/usr/include/c++/5/ext/type_traits.h **** 
  32:/usr/include/c++/5/ext/type_traits.h **** #pragma GCC system_header
  33:/usr/include/c++/5/ext/type_traits.h **** 
  34:/usr/include/c++/5/ext/type_traits.h **** #include <bits/c++config.h>
  35:/usr/include/c++/5/ext/type_traits.h **** #include <bits/cpp_type_traits.h>
  36:/usr/include/c++/5/ext/type_traits.h **** 
  37:/usr/include/c++/5/ext/type_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  38:/usr/include/c++/5/ext/type_traits.h **** {
  39:/usr/include/c++/5/ext/type_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:/usr/include/c++/5/ext/type_traits.h **** 
  41:/usr/include/c++/5/ext/type_traits.h ****   // Define a nested type if some predicate holds.
  42:/usr/include/c++/5/ext/type_traits.h ****   template<bool, typename>
  43:/usr/include/c++/5/ext/type_traits.h ****     struct __enable_if 
  44:/usr/include/c++/5/ext/type_traits.h ****     { };
  45:/usr/include/c++/5/ext/type_traits.h **** 
  46:/usr/include/c++/5/ext/type_traits.h ****   template<typename _Tp>
  47:/usr/include/c++/5/ext/type_traits.h ****     struct __enable_if<true, _Tp>
  48:/usr/include/c++/5/ext/type_traits.h ****     { typedef _Tp __type; };
  49:/usr/include/c++/5/ext/type_traits.h **** 
  50:/usr/include/c++/5/ext/type_traits.h **** 
GAS LISTING /tmp/ccX8BQhk.s 			page 564


  51:/usr/include/c++/5/ext/type_traits.h ****   // Conditional expression for types. If true, first, if false, second.
  52:/usr/include/c++/5/ext/type_traits.h ****   template<bool _Cond, typename _Iftrue, typename _Iffalse>
  53:/usr/include/c++/5/ext/type_traits.h ****     struct __conditional_type
  54:/usr/include/c++/5/ext/type_traits.h ****     { typedef _Iftrue __type; };
  55:/usr/include/c++/5/ext/type_traits.h **** 
  56:/usr/include/c++/5/ext/type_traits.h ****   template<typename _Iftrue, typename _Iffalse>
  57:/usr/include/c++/5/ext/type_traits.h ****     struct __conditional_type<false, _Iftrue, _Iffalse>
  58:/usr/include/c++/5/ext/type_traits.h ****     { typedef _Iffalse __type; };
  59:/usr/include/c++/5/ext/type_traits.h **** 
  60:/usr/include/c++/5/ext/type_traits.h **** 
  61:/usr/include/c++/5/ext/type_traits.h ****   // Given an integral builtin type, return the corresponding unsigned type.
  62:/usr/include/c++/5/ext/type_traits.h ****   template<typename _Tp>
  63:/usr/include/c++/5/ext/type_traits.h ****     struct __add_unsigned
  64:/usr/include/c++/5/ext/type_traits.h ****     { 
  65:/usr/include/c++/5/ext/type_traits.h ****     private:
  66:/usr/include/c++/5/ext/type_traits.h ****       typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
  67:/usr/include/c++/5/ext/type_traits.h ****       
  68:/usr/include/c++/5/ext/type_traits.h ****     public:
  69:/usr/include/c++/5/ext/type_traits.h ****       typedef typename __if_type::__type __type; 
  70:/usr/include/c++/5/ext/type_traits.h ****     };
  71:/usr/include/c++/5/ext/type_traits.h **** 
  72:/usr/include/c++/5/ext/type_traits.h ****   template<>
  73:/usr/include/c++/5/ext/type_traits.h ****     struct __add_unsigned<char>
  74:/usr/include/c++/5/ext/type_traits.h ****     { typedef unsigned char __type; };
  75:/usr/include/c++/5/ext/type_traits.h **** 
  76:/usr/include/c++/5/ext/type_traits.h ****   template<>
  77:/usr/include/c++/5/ext/type_traits.h ****     struct __add_unsigned<signed char>
  78:/usr/include/c++/5/ext/type_traits.h ****     { typedef unsigned char __type; };
  79:/usr/include/c++/5/ext/type_traits.h **** 
  80:/usr/include/c++/5/ext/type_traits.h ****   template<>
  81:/usr/include/c++/5/ext/type_traits.h ****     struct __add_unsigned<short>
  82:/usr/include/c++/5/ext/type_traits.h ****     { typedef unsigned short __type; };
  83:/usr/include/c++/5/ext/type_traits.h **** 
  84:/usr/include/c++/5/ext/type_traits.h ****   template<>
  85:/usr/include/c++/5/ext/type_traits.h ****     struct __add_unsigned<int>
  86:/usr/include/c++/5/ext/type_traits.h ****     { typedef unsigned int __type; };
  87:/usr/include/c++/5/ext/type_traits.h **** 
  88:/usr/include/c++/5/ext/type_traits.h ****   template<>
  89:/usr/include/c++/5/ext/type_traits.h ****     struct __add_unsigned<long>
  90:/usr/include/c++/5/ext/type_traits.h ****     { typedef unsigned long __type; };
  91:/usr/include/c++/5/ext/type_traits.h **** 
  92:/usr/include/c++/5/ext/type_traits.h ****   template<>
  93:/usr/include/c++/5/ext/type_traits.h ****     struct __add_unsigned<long long>
  94:/usr/include/c++/5/ext/type_traits.h ****     { typedef unsigned long long __type; };
  95:/usr/include/c++/5/ext/type_traits.h **** 
  96:/usr/include/c++/5/ext/type_traits.h ****   // Declare but don't define.
  97:/usr/include/c++/5/ext/type_traits.h ****   template<>
  98:/usr/include/c++/5/ext/type_traits.h ****     struct __add_unsigned<bool>;
  99:/usr/include/c++/5/ext/type_traits.h **** 
 100:/usr/include/c++/5/ext/type_traits.h ****   template<>
 101:/usr/include/c++/5/ext/type_traits.h ****     struct __add_unsigned<wchar_t>;
 102:/usr/include/c++/5/ext/type_traits.h **** 
 103:/usr/include/c++/5/ext/type_traits.h **** 
 104:/usr/include/c++/5/ext/type_traits.h ****   // Given an integral builtin type, return the corresponding signed type.
 105:/usr/include/c++/5/ext/type_traits.h ****   template<typename _Tp>
 106:/usr/include/c++/5/ext/type_traits.h ****     struct __remove_unsigned
 107:/usr/include/c++/5/ext/type_traits.h ****     { 
GAS LISTING /tmp/ccX8BQhk.s 			page 565


 108:/usr/include/c++/5/ext/type_traits.h ****     private:
 109:/usr/include/c++/5/ext/type_traits.h ****       typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
 110:/usr/include/c++/5/ext/type_traits.h ****       
 111:/usr/include/c++/5/ext/type_traits.h ****     public:
 112:/usr/include/c++/5/ext/type_traits.h ****       typedef typename __if_type::__type __type; 
 113:/usr/include/c++/5/ext/type_traits.h ****     };
 114:/usr/include/c++/5/ext/type_traits.h **** 
 115:/usr/include/c++/5/ext/type_traits.h ****   template<>
 116:/usr/include/c++/5/ext/type_traits.h ****     struct __remove_unsigned<char>
 117:/usr/include/c++/5/ext/type_traits.h ****     { typedef signed char __type; };
 118:/usr/include/c++/5/ext/type_traits.h **** 
 119:/usr/include/c++/5/ext/type_traits.h ****   template<>
 120:/usr/include/c++/5/ext/type_traits.h ****     struct __remove_unsigned<unsigned char>
 121:/usr/include/c++/5/ext/type_traits.h ****     { typedef signed char __type; };
 122:/usr/include/c++/5/ext/type_traits.h **** 
 123:/usr/include/c++/5/ext/type_traits.h ****   template<>
 124:/usr/include/c++/5/ext/type_traits.h ****     struct __remove_unsigned<unsigned short>
 125:/usr/include/c++/5/ext/type_traits.h ****     { typedef short __type; };
 126:/usr/include/c++/5/ext/type_traits.h **** 
 127:/usr/include/c++/5/ext/type_traits.h ****   template<>
 128:/usr/include/c++/5/ext/type_traits.h ****     struct __remove_unsigned<unsigned int>
 129:/usr/include/c++/5/ext/type_traits.h ****     { typedef int __type; };
 130:/usr/include/c++/5/ext/type_traits.h **** 
 131:/usr/include/c++/5/ext/type_traits.h ****   template<>
 132:/usr/include/c++/5/ext/type_traits.h ****     struct __remove_unsigned<unsigned long>
 133:/usr/include/c++/5/ext/type_traits.h ****     { typedef long __type; };
 134:/usr/include/c++/5/ext/type_traits.h **** 
 135:/usr/include/c++/5/ext/type_traits.h ****   template<>
 136:/usr/include/c++/5/ext/type_traits.h ****     struct __remove_unsigned<unsigned long long>
 137:/usr/include/c++/5/ext/type_traits.h ****     { typedef long long __type; };
 138:/usr/include/c++/5/ext/type_traits.h **** 
 139:/usr/include/c++/5/ext/type_traits.h ****   // Declare but don't define.
 140:/usr/include/c++/5/ext/type_traits.h ****   template<>
 141:/usr/include/c++/5/ext/type_traits.h ****     struct __remove_unsigned<bool>;
 142:/usr/include/c++/5/ext/type_traits.h **** 
 143:/usr/include/c++/5/ext/type_traits.h ****   template<>
 144:/usr/include/c++/5/ext/type_traits.h ****     struct __remove_unsigned<wchar_t>;
 145:/usr/include/c++/5/ext/type_traits.h **** 
 146:/usr/include/c++/5/ext/type_traits.h **** 
 147:/usr/include/c++/5/ext/type_traits.h ****   // For use in string and vstring.
 148:/usr/include/c++/5/ext/type_traits.h ****   template<typename _Type>
 149:/usr/include/c++/5/ext/type_traits.h ****     inline bool
 150:/usr/include/c++/5/ext/type_traits.h ****     __is_null_pointer(_Type* __ptr)
 151:/usr/include/c++/5/ext/type_traits.h ****     { return __ptr == 0; }
 152:/usr/include/c++/5/ext/type_traits.h **** 
 153:/usr/include/c++/5/ext/type_traits.h ****   template<typename _Type>
 154:/usr/include/c++/5/ext/type_traits.h ****     inline bool
 155:/usr/include/c++/5/ext/type_traits.h ****     __is_null_pointer(_Type)
 13034              		.loc 40 155 0
 13035              		.cfi_startproc
 13036 0000 55       		pushq	%rbp
 13037              		.cfi_def_cfa_offset 16
 13038              		.cfi_offset 6, -16
 13039 0001 4889E5   		movq	%rsp, %rbp
 13040              		.cfi_def_cfa_register 6
 13041 0004 48897DF8 		movq	%rdi, -8(%rbp)
 156:/usr/include/c++/5/ext/type_traits.h ****     { return false; }
GAS LISTING /tmp/ccX8BQhk.s 			page 566


 13042              		.loc 40 156 0
 13043 0008 B8000000 		movl	$0, %eax
 13043      00
 13044 000d 5D       		popq	%rbp
 13045              		.cfi_def_cfa 7, 8
 13046 000e C3       		ret
 13047              		.cfi_endproc
 13048              	.LFE10648:
 13050              		.section	.text._ZStneIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_,"axG",@progbits,_ZStneIcRcPcEbRKSt
 13051              		.weak	_ZStneIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_
 13053              	_ZStneIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_:
 13054              	.LFB10649:
 278:/usr/include/c++/5/bits/stl_deque.h **** 	       const _Deque_iterator<_Tp, _Ref, _Ptr>& __y) _GLIBCXX_NOEXCEPT
 13055              		.loc 3 278 0
 13056              		.cfi_startproc
 13057 0000 55       		pushq	%rbp
 13058              		.cfi_def_cfa_offset 16
 13059              		.cfi_offset 6, -16
 13060 0001 4889E5   		movq	%rsp, %rbp
 13061              		.cfi_def_cfa_register 6
 13062 0004 4883EC10 		subq	$16, %rsp
 13063 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13064 000c 488975F0 		movq	%rsi, -16(%rbp)
 280:/usr/include/c++/5/bits/stl_deque.h **** 
 13065              		.loc 3 280 0
 13066 0010 488B55F0 		movq	-16(%rbp), %rdx
 13067 0014 488B45F8 		movq	-8(%rbp), %rax
 13068 0018 4889D6   		movq	%rdx, %rsi
 13069 001b 4889C7   		movq	%rax, %rdi
 13070 001e E8000000 		call	_ZSteqIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_
 13070      00
 13071 0023 83F001   		xorl	$1, %eax
 13072 0026 C9       		leave
 13073              		.cfi_def_cfa 7, 8
 13074 0027 C3       		ret
 13075              		.cfi_endproc
 13076              	.LFE10649:
 13078              		.section	.text._ZSt8distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeE
 13079              		.weak	_ZSt8distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_
 13081              	_ZSt8distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_:
 13082              	.LFB10650:
 114:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     {
 13083              		.loc 28 114 0
 13084              		.cfi_startproc
 13085 0000 55       		pushq	%rbp
 13086              		.cfi_def_cfa_offset 16
 13087              		.cfi_offset 6, -16
 13088 0001 4889E5   		movq	%rsp, %rbp
 13089              		.cfi_def_cfa_register 6
 13090 0004 53       		pushq	%rbx
 13091 0005 4883EC68 		subq	$104, %rsp
 13092              		.cfi_offset 3, -24
 13093 0009 48897D98 		movq	%rdi, -104(%rbp)
 13094 000d 48897590 		movq	%rsi, -112(%rbp)
 114:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     {
 13095              		.loc 28 114 0
 13096 0011 64488B04 		movq	%fs:40, %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 567


 13096      25280000 
 13096      00
 13097 001a 488945E8 		movq	%rax, -24(%rbp)
 13098 001e 31C0     		xorl	%eax, %eax
 118:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
 13099              		.loc 28 118 0
 13100 0020 488B4598 		movq	-104(%rbp), %rax
 13101 0024 4889C7   		movq	%rax, %rdi
 13102 0027 E8000000 		call	_ZSt19__iterator_categoryISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E17iterator_categ
 13102      00
 117:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 			     std::__iterator_category(__first));
 13103              		.loc 28 117 0
 13104 002c 488B5590 		movq	-112(%rbp), %rdx
 13105 0030 488D45C0 		leaq	-64(%rbp), %rax
 13106 0034 4889D6   		movq	%rdx, %rsi
 13107 0037 4889C7   		movq	%rax, %rdi
 13108 003a E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13108      00
 13109 003f 488B5598 		movq	-104(%rbp), %rdx
 13110 0043 488D45A0 		leaq	-96(%rbp), %rax
 13111 0047 4889D6   		movq	%rdx, %rsi
 13112 004a 4889C7   		movq	%rax, %rdi
 13113 004d E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13113      00
 118:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
 13114              		.loc 28 118 0
 13115 0052 488D55C0 		leaq	-64(%rbp), %rdx
 13116 0056 488D45A0 		leaq	-96(%rbp), %rax
 13117 005a 4883EC08 		subq	$8, %rsp
 13118 005e 53       		pushq	%rbx
 13119 005f 4889D6   		movq	%rdx, %rsi
 13120 0062 4889C7   		movq	%rax, %rdi
 13121 0065 E8000000 		call	_ZSt10__distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_S
 13121      00
 13122 006a 4883C410 		addq	$16, %rsp
 119:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
 13123              		.loc 28 119 0
 13124 006e 488B4DE8 		movq	-24(%rbp), %rcx
 13125 0072 6448330C 		xorq	%fs:40, %rcx
 13125      25280000 
 13125      00
 13126 007b 7405     		je	.L691
 13127 007d E8000000 		call	__stack_chk_fail
 13127      00
 13128              	.L691:
 13129 0082 488B5DF8 		movq	-8(%rbp), %rbx
 13130 0086 C9       		leave
 13131              		.cfi_def_cfa 7, 8
 13132 0087 C3       		ret
 13133              		.cfi_endproc
 13134              	.LFE10650:
 13136              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsISt15_Deque_ite
 13137              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsISt15_Deque_iteratorIcRc
 13139              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsISt15_Deque_iteratorIcRcPcEEEvS
 13140              	.LFB10651:
 324:/usr/include/c++/5/bits/basic_string.h ****         {
 13141              		.loc 11 324 0
GAS LISTING /tmp/ccX8BQhk.s 			page 568


 13142              		.cfi_startproc
 13143 0000 55       		pushq	%rbp
 13144              		.cfi_def_cfa_offset 16
 13145              		.cfi_offset 6, -16
 13146 0001 4889E5   		movq	%rsp, %rbp
 13147              		.cfi_def_cfa_register 6
 13148 0004 4883EC20 		subq	$32, %rsp
 13149 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13150 000c 488975F0 		movq	%rsi, -16(%rbp)
 13151 0010 488955E8 		movq	%rdx, -24(%rbp)
 13152              	.L694:
 326:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 13153              		.loc 11 326 0 discriminator 2
 13154 0014 488B55E8 		movq	-24(%rbp), %rdx
 13155 0018 488B45F0 		movq	-16(%rbp), %rax
 13156 001c 4889D6   		movq	%rdx, %rsi
 13157 001f 4889C7   		movq	%rax, %rdi
 13158 0022 E8000000 		call	_ZStneIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_
 13158      00
 13159 0027 84C0     		testb	%al, %al
 13160 0029 7431     		je	.L695
 327:/usr/include/c++/5/bits/basic_string.h **** 	}
 13161              		.loc 11 327 0 discriminator 1
 13162 002b 488B45F0 		movq	-16(%rbp), %rax
 13163 002f 4889C7   		movq	%rax, %rdi
 13164 0032 E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEdeEv
 13164      00
 13165 0037 4889C2   		movq	%rax, %rdx
 13166 003a 488B45F8 		movq	-8(%rbp), %rax
 13167 003e 4889D6   		movq	%rdx, %rsi
 13168 0041 4889C7   		movq	%rax, %rdi
 13169 0044 E8000000 		call	_ZNSt11char_traitsIcE6assignERcRKc
 13169      00
 326:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 13170              		.loc 11 326 0 discriminator 1
 13171 0049 488B45F0 		movq	-16(%rbp), %rax
 13172 004d 4889C7   		movq	%rax, %rdi
 13173 0050 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEppEv
 13173      00
 13174 0055 488345F8 		addq	$1, -8(%rbp)
 13174      01
 13175 005a EBB8     		jmp	.L694
 13176              	.L695:
 328:/usr/include/c++/5/bits/basic_string.h **** 
 13177              		.loc 11 328 0
 13178 005c 90       		nop
 13179 005d C9       		leave
 13180              		.cfi_def_cfa 7, 8
 13181 005e C3       		ret
 13182              		.cfi_endproc
 13183              	.LFE10651:
 13185              		.section	.text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPcEEPT_PKS4_S7_
 13186              		.weak	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPcEEPT_PKS4_S7_S5_
 13188              	_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPcEEPT_PKS4_S7_S5_:
 13189              	.LFB10652:
 373:/usr/include/c++/5/bits/stl_algobase.h ****         {
 13190              		.loc 29 373 0
GAS LISTING /tmp/ccX8BQhk.s 			page 569


 13191              		.cfi_startproc
 13192 0000 55       		pushq	%rbp
 13193              		.cfi_def_cfa_offset 16
 13194              		.cfi_offset 6, -16
 13195 0001 4889E5   		movq	%rsp, %rbp
 13196              		.cfi_def_cfa_register 6
 13197 0004 4883EC30 		subq	$48, %rsp
 13198 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13199 000c 488975E0 		movq	%rsi, -32(%rbp)
 13200 0010 488955D8 		movq	%rdx, -40(%rbp)
 382:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 13201              		.loc 29 382 0
 13202 0014 488B55E0 		movq	-32(%rbp), %rdx
 13203 0018 488B45E8 		movq	-24(%rbp), %rax
 13204 001c 4829C2   		subq	%rax, %rdx
 13205 001f 4889D0   		movq	%rdx, %rax
 13206 0022 48C1F803 		sarq	$3, %rax
 13207 0026 488945F8 		movq	%rax, -8(%rbp)
 383:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 13208              		.loc 29 383 0
 13209 002a 48837DF8 		cmpq	$0, -8(%rbp)
 13209      00
 13210 002f 741F     		je	.L697
 384:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result + _Num;
 13211              		.loc 29 384 0
 13212 0031 488B45F8 		movq	-8(%rbp), %rax
 13213 0035 488D14C5 		leaq	0(,%rax,8), %rdx
 13213      00000000 
 13214 003d 488B4DE8 		movq	-24(%rbp), %rcx
 13215 0041 488B45D8 		movq	-40(%rbp), %rax
 13216 0045 4889CE   		movq	%rcx, %rsi
 13217 0048 4889C7   		movq	%rax, %rdi
 13218 004b E8000000 		call	memmove
 13218      00
 13219              	.L697:
 385:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 13220              		.loc 29 385 0
 13221 0050 488B45F8 		movq	-8(%rbp), %rax
 13222 0054 488D14C5 		leaq	0(,%rax,8), %rdx
 13222      00000000 
 13223 005c 488B45D8 		movq	-40(%rbp), %rax
 13224 0060 4801D0   		addq	%rdx, %rax
 386:/usr/include/c++/5/bits/stl_algobase.h ****     };
 13225              		.loc 29 386 0
 13226 0063 C9       		leave
 13227              		.cfi_def_cfa 7, 8
 13228 0064 C3       		ret
 13229              		.cfi_endproc
 13230              	.LFE10652:
 13232              		.section	.text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bI
 13233              		.weak	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPcEEPT_PK
 13235              	_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPcEEPT_PKS4_S7_S
 13236              	.LFB10653:
 575:/usr/include/c++/5/bits/stl_algobase.h ****         {
 13237              		.loc 29 575 0
 13238              		.cfi_startproc
 13239 0000 55       		pushq	%rbp
GAS LISTING /tmp/ccX8BQhk.s 			page 570


 13240              		.cfi_def_cfa_offset 16
 13241              		.cfi_offset 6, -16
 13242 0001 4889E5   		movq	%rsp, %rbp
 13243              		.cfi_def_cfa_register 6
 13244 0004 4883EC30 		subq	$48, %rsp
 13245 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13246 000c 488975E0 		movq	%rsi, -32(%rbp)
 13247 0010 488955D8 		movq	%rdx, -40(%rbp)
 584:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 13248              		.loc 29 584 0
 13249 0014 488B55E0 		movq	-32(%rbp), %rdx
 13250 0018 488B45E8 		movq	-24(%rbp), %rax
 13251 001c 4829C2   		subq	%rax, %rdx
 13252 001f 4889D0   		movq	%rdx, %rax
 13253 0022 48C1F803 		sarq	$3, %rax
 13254 0026 488945F8 		movq	%rax, -8(%rbp)
 585:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 13255              		.loc 29 585 0
 13256 002a 48837DF8 		cmpq	$0, -8(%rbp)
 13256      00
 13257 002f 7430     		je	.L700
 586:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result - _Num;
 13258              		.loc 29 586 0
 13259 0031 488B45F8 		movq	-8(%rbp), %rax
 13260 0035 488D14C5 		leaq	0(,%rax,8), %rdx
 13260      00000000 
 13261 003d 488B45F8 		movq	-8(%rbp), %rax
 13262 0041 48C1E003 		salq	$3, %rax
 13263 0045 48F7D8   		negq	%rax
 13264 0048 4889C1   		movq	%rax, %rcx
 13265 004b 488B45D8 		movq	-40(%rbp), %rax
 13266 004f 4801C1   		addq	%rax, %rcx
 13267 0052 488B45E8 		movq	-24(%rbp), %rax
 13268 0056 4889C6   		movq	%rax, %rsi
 13269 0059 4889CF   		movq	%rcx, %rdi
 13270 005c E8000000 		call	memmove
 13270      00
 13271              	.L700:
 587:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 13272              		.loc 29 587 0
 13273 0061 488B45F8 		movq	-8(%rbp), %rax
 13274 0065 48C1E003 		salq	$3, %rax
 13275 0069 48F7D8   		negq	%rax
 13276 006c 4889C2   		movq	%rax, %rdx
 13277 006f 488B45D8 		movq	-40(%rbp), %rax
 13278 0073 4801D0   		addq	%rdx, %rax
 588:/usr/include/c++/5/bits/stl_algobase.h ****     };
 13279              		.loc 29 588 0
 13280 0076 C9       		leave
 13281              		.cfi_def_cfa 7, 8
 13282 0077 C3       		ret
 13283              		.cfi_endproc
 13284              	.LFE10653:
 13286              		.section	.text._ZSt4copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_,"axG",@progb
 13287              		.weak	_ZSt4copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_
 13289              	_ZSt4copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_:
 13290              	.LFB10654:
GAS LISTING /tmp/ccX8BQhk.s 			page 571


 462:/usr/include/c++/5/bits/stl_algobase.h ****     {
 13291              		.loc 29 462 0
 13292              		.cfi_startproc
 13293              		.cfi_personality 0x3,__gxx_personality_v0
 13294              		.cfi_lsda 0x3,.LLSDA10654
 13295 0000 55       		pushq	%rbp
 13296              		.cfi_def_cfa_offset 16
 13297              		.cfi_offset 6, -16
 13298 0001 4889E5   		movq	%rsp, %rbp
 13299              		.cfi_def_cfa_register 6
 13300 0004 4881ECD0 		subq	$208, %rsp
 13300      000000
 13301 000b 4889BD48 		movq	%rdi, -184(%rbp)
 13301      FFFFFF
 13302 0012 4889B540 		movq	%rsi, -192(%rbp)
 13302      FFFFFF
 13303 0019 48899538 		movq	%rdx, -200(%rbp)
 13303      FFFFFF
 13304 0020 48898D30 		movq	%rcx, -208(%rbp)
 13304      FFFFFF
 462:/usr/include/c++/5/bits/stl_algobase.h ****     {
 13305              		.loc 29 462 0
 13306 0027 64488B04 		movq	%fs:40, %rax
 13306      25280000 
 13306      00
 13307 0030 488945F8 		movq	%rax, -8(%rbp)
 13308 0034 31C0     		xorl	%eax, %eax
 472:/usr/include/c++/5/bits/stl_algobase.h ****     }
 13309              		.loc 29 472 0
 13310 0036 488B9530 		movq	-208(%rbp), %rdx
 13310      FFFFFF
 13311 003d 488D45D0 		leaq	-48(%rbp), %rax
 13312 0041 4889D6   		movq	%rdx, %rsi
 13313 0044 4889C7   		movq	%rax, %rdi
 13314 0047 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13314      00
 13315 004c 488B9538 		movq	-200(%rbp), %rdx
 13315      FFFFFF
 13316 0053 488D4590 		leaq	-112(%rbp), %rax
 13317 0057 4889D6   		movq	%rdx, %rsi
 13318 005a 4889C7   		movq	%rax, %rdi
 13319 005d E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
 13319      00
 13320 0062 488D45B0 		leaq	-80(%rbp), %rax
 13321 0066 488D5590 		leaq	-112(%rbp), %rdx
 13322 006a 4889D6   		movq	%rdx, %rsi
 13323 006d 4889C7   		movq	%rax, %rdi
 13324              	.LEHB84:
 13325 0070 E8000000 		call	_ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEEENSt11_Miter_baseIT_E13iterat
 13325      00
 13326              	.LEHE84:
 472:/usr/include/c++/5/bits/stl_algobase.h ****     }
 13327              		.loc 29 472 0 is_stmt 0 discriminator 2
 13328 0075 488B9540 		movq	-192(%rbp), %rdx
 13328      FFFFFF
 13329 007c 488D8550 		leaq	-176(%rbp), %rax
 13329      FFFFFF
GAS LISTING /tmp/ccX8BQhk.s 			page 572


 13330 0083 4889D6   		movq	%rdx, %rsi
 13331 0086 4889C7   		movq	%rax, %rdi
 13332 0089 E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
 13332      00
 13333 008e 488D8570 		leaq	-144(%rbp), %rax
 13333      FFFFFF
 13334 0095 488D9550 		leaq	-176(%rbp), %rdx
 13334      FFFFFF
 13335 009c 4889D6   		movq	%rdx, %rsi
 13336 009f 4889C7   		movq	%rax, %rdi
 13337              	.LEHB85:
 13338 00a2 E8000000 		call	_ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEEENSt11_Miter_baseIT_E13iterat
 13338      00
 472:/usr/include/c++/5/bits/stl_algobase.h ****     }
 13339              		.loc 29 472 0 discriminator 4
 13340 00a7 488B8548 		movq	-184(%rbp), %rax
 13340      FFFFFF
 13341 00ae 488D4DD0 		leaq	-48(%rbp), %rcx
 13342 00b2 488D55B0 		leaq	-80(%rbp), %rdx
 13343 00b6 488DB570 		leaq	-144(%rbp), %rsi
 13343      FFFFFF
 13344 00bd 4889C7   		movq	%rax, %rdi
 13345 00c0 E8000000 		call	_ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_
 13345      00
 13346              	.LEHE85:
 472:/usr/include/c++/5/bits/stl_algobase.h ****     }
 13347              		.loc 29 472 0
 13348 00c5 EB0A     		jmp	.L709
 13349              	.L708:
 13350 00c7 EB00     		jmp	.L705
 13351              	.L707:
 13352              	.L705:
 13353 00c9 4889C7   		movq	%rax, %rdi
 13354              	.LEHB86:
 13355 00cc E8000000 		call	_Unwind_Resume
 13355      00
 13356              	.LEHE86:
 13357              	.L709:
 473:/usr/include/c++/5/bits/stl_algobase.h **** 
 13358              		.loc 29 473 0 is_stmt 1
 13359 00d1 488B8548 		movq	-184(%rbp), %rax
 13359      FFFFFF
 13360 00d8 488B4DF8 		movq	-8(%rbp), %rcx
 13361 00dc 6448330C 		xorq	%fs:40, %rcx
 13361      25280000 
 13361      00
 13362 00e5 7405     		je	.L706
 13363 00e7 E8000000 		call	__stack_chk_fail
 13363      00
 13364              	.L706:
 13365 00ec C9       		leave
 13366              		.cfi_def_cfa 7, 8
 13367 00ed C3       		ret
 13368              		.cfi_endproc
 13369              	.LFE10654:
 13370              		.section	.gcc_except_table
 13371              	.LLSDA10654:
GAS LISTING /tmp/ccX8BQhk.s 			page 573


 13372 0258 FF       		.byte	0xff
 13373 0259 FF       		.byte	0xff
 13374 025a 01       		.byte	0x1
 13375 025b 10       		.uleb128 .LLSDACSE10654-.LLSDACSB10654
 13376              	.LLSDACSB10654:
 13377 025c 70       		.uleb128 .LEHB84-.LFB10654
 13378 025d 05       		.uleb128 .LEHE84-.LEHB84
 13379 025e C901     		.uleb128 .L707-.LFB10654
 13380 0260 00       		.uleb128 0
 13381 0261 A201     		.uleb128 .LEHB85-.LFB10654
 13382 0263 23       		.uleb128 .LEHE85-.LEHB85
 13383 0264 C701     		.uleb128 .L708-.LFB10654
 13384 0266 00       		.uleb128 0
 13385 0267 CC01     		.uleb128 .LEHB86-.LFB10654
 13386 0269 05       		.uleb128 .LEHE86-.LEHB86
 13387 026a 00       		.uleb128 0
 13388 026b 00       		.uleb128 0
 13389              	.LLSDACSE10654:
 13390              		.section	.text._ZSt4copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_,"axG",@progb
 13392              		.section	.text._ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_,"axG",@progbits,_ZNSt10_Iter_baseIPcLb0EE7_S_
 13393              		.weak	_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_
 13395              	_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_:
 13396              	.LFB10655:
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
 13397              		.loc 32 215 0
 13398              		.cfi_startproc
 13399 0000 55       		pushq	%rbp
 13400              		.cfi_def_cfa_offset 16
 13401              		.cfi_offset 6, -16
 13402 0001 4889E5   		movq	%rsp, %rbp
 13403              		.cfi_def_cfa_register 6
 13404 0004 48897DF8 		movq	%rdi, -8(%rbp)
 216:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 13405              		.loc 32 216 0
 13406 0008 488B45F8 		movq	-8(%rbp), %rax
 13407 000c 5D       		popq	%rbp
 13408              		.cfi_def_cfa 7, 8
 13409 000d C3       		ret
 13410              		.cfi_endproc
 13411              	.LFE10655:
 13413              		.section	.text._ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_,"axG",@progbits,_ZSt1
 13414              		.weak	_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_
 13416              	_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_:
 13417              	.LFB10656:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 13418              		.loc 29 282 0
 13419              		.cfi_startproc
 13420 0000 55       		pushq	%rbp
 13421              		.cfi_def_cfa_offset 16
 13422              		.cfi_offset 6, -16
 13423 0001 4889E5   		movq	%rsp, %rbp
 13424              		.cfi_def_cfa_register 6
 13425 0004 4883EC10 		subq	$16, %rsp
 13426 0008 48897DF8 		movq	%rdi, -8(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 13427              		.loc 29 283 0
 13428 000c 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 574


 13429 0010 4889C7   		movq	%rax, %rdi
 13430 0013 E8000000 		call	_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_
 13430      00
 13431 0018 C9       		leave
 13432              		.cfi_def_cfa 7, 8
 13433 0019 C3       		ret
 13434              		.cfi_endproc
 13435              	.LFE10656:
 13437              		.section	.text._ZSt13__copy_move_aILb1EPcS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt13__copy_move_aILb1E
 13438              		.weak	_ZSt13__copy_move_aILb1EPcS0_ET1_T0_S2_S1_
 13440              	_ZSt13__copy_move_aILb1EPcS0_ET1_T0_S2_S1_:
 13441              	.LFB10657:
 391:/usr/include/c++/5/bits/stl_algobase.h ****     {
 13442              		.loc 29 391 0
 13443              		.cfi_startproc
 13444 0000 55       		pushq	%rbp
 13445              		.cfi_def_cfa_offset 16
 13446              		.cfi_offset 6, -16
 13447 0001 4889E5   		movq	%rsp, %rbp
 13448              		.cfi_def_cfa_register 6
 13449 0004 4883EC30 		subq	$48, %rsp
 13450 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13451 000c 488975E0 		movq	%rsi, -32(%rbp)
 13452 0010 488955D8 		movq	%rdx, -40(%rbp)
 399:/usr/include/c++/5/bits/stl_algobase.h **** 
 13453              		.loc 29 399 0
 13454 0014 C645FF01 		movb	$1, -1(%rbp)
 402:/usr/include/c++/5/bits/stl_algobase.h ****     }
 13455              		.loc 29 402 0
 13456 0018 488B55D8 		movq	-40(%rbp), %rdx
 13457 001c 488B4DE0 		movq	-32(%rbp), %rcx
 13458 0020 488B45E8 		movq	-24(%rbp), %rax
 13459 0024 4889CE   		movq	%rcx, %rsi
 13460 0027 4889C7   		movq	%rax, %rdi
 13461 002a E8000000 		call	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_
 13461      00
 403:/usr/include/c++/5/bits/stl_algobase.h **** 
 13462              		.loc 29 403 0
 13463 002f C9       		leave
 13464              		.cfi_def_cfa 7, 8
 13465 0030 C3       		ret
 13466              		.cfi_endproc
 13467              	.LFE10657:
 13469              		.section	.text._ZNSt15_Deque_iteratorIcRcPcEppEv,"axG",@progbits,_ZNSt15_Deque_iteratorIcRcPcEppEv
 13470              		.align 2
 13471              		.weak	_ZNSt15_Deque_iteratorIcRcPcEppEv
 13473              	_ZNSt15_Deque_iteratorIcRcPcEppEv:
 13474              	.LFB10658:
 166:/usr/include/c++/5/bits/stl_deque.h ****       {
 13475              		.loc 3 166 0
 13476              		.cfi_startproc
 13477 0000 55       		pushq	%rbp
 13478              		.cfi_def_cfa_offset 16
 13479              		.cfi_offset 6, -16
 13480 0001 4889E5   		movq	%rsp, %rbp
 13481              		.cfi_def_cfa_register 6
 13482 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccX8BQhk.s 			page 575


 13483 0008 48897DF8 		movq	%rdi, -8(%rbp)
 168:/usr/include/c++/5/bits/stl_deque.h **** 	if (_M_cur == _M_last)
 13484              		.loc 3 168 0
 13485 000c 488B45F8 		movq	-8(%rbp), %rax
 13486 0010 488B00   		movq	(%rax), %rax
 13487 0013 488D5001 		leaq	1(%rax), %rdx
 13488 0017 488B45F8 		movq	-8(%rbp), %rax
 13489 001b 488910   		movq	%rdx, (%rax)
 169:/usr/include/c++/5/bits/stl_deque.h **** 	  {
 13490              		.loc 3 169 0
 13491 001e 488B45F8 		movq	-8(%rbp), %rax
 13492 0022 488B10   		movq	(%rax), %rdx
 13493 0025 488B45F8 		movq	-8(%rbp), %rax
 13494 0029 488B4010 		movq	16(%rax), %rax
 13495 002d 4839C2   		cmpq	%rax, %rdx
 13496 0030 752A     		jne	.L717
 171:/usr/include/c++/5/bits/stl_deque.h **** 	    _M_cur = _M_first;
 13497              		.loc 3 171 0
 13498 0032 488B45F8 		movq	-8(%rbp), %rax
 13499 0036 488B4018 		movq	24(%rax), %rax
 13500 003a 488D5008 		leaq	8(%rax), %rdx
 13501 003e 488B45F8 		movq	-8(%rbp), %rax
 13502 0042 4889D6   		movq	%rdx, %rsi
 13503 0045 4889C7   		movq	%rax, %rdi
 13504 0048 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
 13504      00
 172:/usr/include/c++/5/bits/stl_deque.h **** 	  }
 13505              		.loc 3 172 0
 13506 004d 488B45F8 		movq	-8(%rbp), %rax
 13507 0051 488B5008 		movq	8(%rax), %rdx
 13508 0055 488B45F8 		movq	-8(%rbp), %rax
 13509 0059 488910   		movq	%rdx, (%rax)
 13510              	.L717:
 174:/usr/include/c++/5/bits/stl_deque.h ****       }
 13511              		.loc 3 174 0
 13512 005c 488B45F8 		movq	-8(%rbp), %rax
 175:/usr/include/c++/5/bits/stl_deque.h **** 
 13513              		.loc 3 175 0
 13514 0060 C9       		leave
 13515              		.cfi_def_cfa 7, 8
 13516 0061 C3       		ret
 13517              		.cfi_endproc
 13518              	.LFE10658:
 13520              		.section	.text._ZSt22__copy_move_backward_aILb1EPcS0_ET1_T0_S2_S1_,"axG",@progbits,_ZSt22__copy_mo
 13521              		.weak	_ZSt22__copy_move_backward_aILb1EPcS0_ET1_T0_S2_S1_
 13523              	_ZSt22__copy_move_backward_aILb1EPcS0_ET1_T0_S2_S1_:
 13524              	.LFB10659:
 593:/usr/include/c++/5/bits/stl_algobase.h ****     {
 13525              		.loc 29 593 0
 13526              		.cfi_startproc
 13527 0000 55       		pushq	%rbp
 13528              		.cfi_def_cfa_offset 16
 13529              		.cfi_offset 6, -16
 13530 0001 4889E5   		movq	%rsp, %rbp
 13531              		.cfi_def_cfa_register 6
 13532 0004 4883EC30 		subq	$48, %rsp
 13533 0008 48897DE8 		movq	%rdi, -24(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 576


 13534 000c 488975E0 		movq	%rsi, -32(%rbp)
 13535 0010 488955D8 		movq	%rdx, -40(%rbp)
 601:/usr/include/c++/5/bits/stl_algobase.h **** 
 13536              		.loc 29 601 0
 13537 0014 C645FF01 		movb	$1, -1(%rbp)
 606:/usr/include/c++/5/bits/stl_algobase.h ****     }
 13538              		.loc 29 606 0
 13539 0018 488B55D8 		movq	-40(%rbp), %rdx
 13540 001c 488B4DE0 		movq	-32(%rbp), %rcx
 13541 0020 488B45E8 		movq	-24(%rbp), %rax
 13542 0024 4889CE   		movq	%rcx, %rsi
 13543 0027 4889C7   		movq	%rax, %rdi
 13544 002a E8000000 		call	_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS3
 13544      00
 607:/usr/include/c++/5/bits/stl_algobase.h **** 
 13545              		.loc 29 607 0
 13546 002f C9       		leave
 13547              		.cfi_def_cfa 7, 8
 13548 0030 C3       		ret
 13549              		.cfi_endproc
 13550              	.LFE10659:
 13552              		.section	.text._ZSt19__iterator_categoryISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E17iter
 13553              		.weak	_ZSt19__iterator_categoryISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E17iterator_cate
 13555              	_ZSt19__iterator_categoryISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E17iterator_categoryERK
 13556              	.LFB10660:
 204:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     { return typename iterator_traits<_Iter>::iterator_category(); }
 13557              		.loc 32 204 0
 13558              		.cfi_startproc
 13559 0000 55       		pushq	%rbp
 13560              		.cfi_def_cfa_offset 16
 13561              		.cfi_offset 6, -16
 13562 0001 4889E5   		movq	%rsp, %rbp
 13563              		.cfi_def_cfa_register 6
 13564 0004 48897DF8 		movq	%rdi, -8(%rbp)
 205:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 13565              		.loc 32 205 0
 13566 0008 5D       		popq	%rbp
 13567              		.cfi_def_cfa 7, 8
 13568 0009 C3       		ret
 13569              		.cfi_endproc
 13570              	.LFE10660:
 13572              		.section	.text._ZSt10__distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_ty
 13573              		.weak	_ZSt10__distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_
 13575              	_ZSt10__distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26ran
 13576              	.LFB10661:
  90:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 13577              		.loc 28 90 0
 13578              		.cfi_startproc
 13579 0000 55       		pushq	%rbp
 13580              		.cfi_def_cfa_offset 16
 13581              		.cfi_offset 6, -16
 13582 0001 4889E5   		movq	%rsp, %rbp
 13583              		.cfi_def_cfa_register 6
 13584 0004 4883EC10 		subq	$16, %rsp
 13585 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13586 000c 488975F0 		movq	%rsi, -16(%rbp)
  96:/usr/include/c++/5/bits/stl_iterator_base_funcs.h ****     }
GAS LISTING /tmp/ccX8BQhk.s 			page 577


 13587              		.loc 28 96 0
 13588 0010 488B55F8 		movq	-8(%rbp), %rdx
 13589 0014 488B45F0 		movq	-16(%rbp), %rax
 13590 0018 4889D6   		movq	%rdx, %rsi
 13591 001b 4889C7   		movq	%rax, %rdi
 13592 001e E8000000 		call	_ZStmiIcRcPcENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_
 13592      00
  97:/usr/include/c++/5/bits/stl_iterator_base_funcs.h **** 
 13593              		.loc 28 97 0
 13594 0023 C9       		leave
 13595              		.cfi_def_cfa 7, 8
 13596 0024 C3       		ret
 13597              		.cfi_endproc
 13598              	.LFE10661:
 13600              		.section	.text._ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEEENSt11_Miter_baseIT
 13601              		.weak	_ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEEENSt11_Miter_baseIT_E13itera
 13603              	_ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEEENSt11_Miter_baseIT_E13iterator_typ
 13604              	.LFB10662:
 293:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 13605              		.loc 29 293 0
 13606              		.cfi_startproc
 13607 0000 55       		pushq	%rbp
 13608              		.cfi_def_cfa_offset 16
 13609              		.cfi_offset 6, -16
 13610 0001 4889E5   		movq	%rsp, %rbp
 13611              		.cfi_def_cfa_register 6
 13612 0004 4883EC40 		subq	$64, %rsp
 13613 0008 48897DC8 		movq	%rdi, -56(%rbp)
 13614 000c 488975C0 		movq	%rsi, -64(%rbp)
 293:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 13615              		.loc 29 293 0
 13616 0010 64488B04 		movq	%fs:40, %rax
 13616      25280000 
 13616      00
 13617 0019 488945F8 		movq	%rax, -8(%rbp)
 13618 001d 31C0     		xorl	%eax, %eax
 294:/usr/include/c++/5/bits/stl_algobase.h **** 
 13619              		.loc 29 294 0
 13620 001f 488B55C0 		movq	-64(%rbp), %rdx
 13621 0023 488D45D0 		leaq	-48(%rbp), %rax
 13622 0027 4889D6   		movq	%rdx, %rsi
 13623 002a 4889C7   		movq	%rax, %rdi
 13624 002d E8000000 		call	_ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
 13624      00
 13625 0032 488B45C8 		movq	-56(%rbp), %rax
 13626 0036 488D55D0 		leaq	-48(%rbp), %rdx
 13627 003a 4889D6   		movq	%rdx, %rsi
 13628 003d 4889C7   		movq	%rax, %rdi
 13629 0040 E8000000 		call	_ZNSt10_Iter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEELb1EE7_S_baseES5_
 13629      00
 13630 0045 488B45C8 		movq	-56(%rbp), %rax
 13631 0049 488B4DF8 		movq	-8(%rbp), %rcx
 13632 004d 6448330C 		xorq	%fs:40, %rcx
 13632      25280000 
 13632      00
 13633 0056 7405     		je	.L727
 13634 0058 E8000000 		call	__stack_chk_fail
GAS LISTING /tmp/ccX8BQhk.s 			page 578


 13634      00
 13635              	.L727:
 13636 005d C9       		leave
 13637              		.cfi_def_cfa 7, 8
 13638 005e C3       		ret
 13639              		.cfi_endproc
 13640              	.LFE10662:
 13642              		.section	.text._ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_,"axG",@progbits
 13643              		.weak	_ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_
 13645              	_ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_:
 13646              	.LFB10663:
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 13647              		.loc 29 436 0
 13648              		.cfi_startproc
 13649              		.cfi_personality 0x3,__gxx_personality_v0
 13650              		.cfi_lsda 0x3,.LLSDA10663
 13651 0000 55       		pushq	%rbp
 13652              		.cfi_def_cfa_offset 16
 13653              		.cfi_offset 6, -16
 13654 0001 4889E5   		movq	%rsp, %rbp
 13655              		.cfi_def_cfa_register 6
 13656 0004 4881ECF0 		subq	$240, %rsp
 13656      000000
 13657 000b 4889BD28 		movq	%rdi, -216(%rbp)
 13657      FFFFFF
 13658 0012 4889B520 		movq	%rsi, -224(%rbp)
 13658      FFFFFF
 13659 0019 48899518 		movq	%rdx, -232(%rbp)
 13659      FFFFFF
 13660 0020 48898D10 		movq	%rcx, -240(%rbp)
 13660      FFFFFF
 436:/usr/include/c++/5/bits/stl_algobase.h ****     {
 13661              		.loc 29 436 0
 13662 0027 64488B04 		movq	%fs:40, %rax
 13662      25280000 
 13662      00
 13663 0030 488945F8 		movq	%rax, -8(%rbp)
 13664 0034 31C0     		xorl	%eax, %eax
 440:/usr/include/c++/5/bits/stl_algobase.h ****     }
 13665              		.loc 29 440 0
 13666 0036 488B9510 		movq	-240(%rbp), %rdx
 13666      FFFFFF
 13667 003d 488D45B0 		leaq	-80(%rbp), %rax
 13668 0041 4889D6   		movq	%rdx, %rsi
 13669 0044 4889C7   		movq	%rax, %rdi
 13670 0047 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13670      00
 13671 004c 488D45D0 		leaq	-48(%rbp), %rax
 13672 0050 488D55B0 		leaq	-80(%rbp), %rdx
 13673 0054 4889D6   		movq	%rdx, %rsi
 13674 0057 4889C7   		movq	%rax, %rdi
 13675 005a E8000000 		call	_ZSt12__niter_baseISt15_Deque_iteratorIcRcPcEENSt11_Niter_baseIT_E13iterator_typeES5_
 13675      00
 13676 005f 488B9518 		movq	-232(%rbp), %rdx
 13676      FFFFFF
 13677 0066 488D8570 		leaq	-144(%rbp), %rax
 13677      FFFFFF
GAS LISTING /tmp/ccX8BQhk.s 			page 579


 13678 006d 4889D6   		movq	%rdx, %rsi
 13679 0070 4889C7   		movq	%rax, %rdi
 13680 0073 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13680      00
 13681 0078 488D4590 		leaq	-112(%rbp), %rax
 13682 007c 488D9570 		leaq	-144(%rbp), %rdx
 13682      FFFFFF
 13683 0083 4889D6   		movq	%rdx, %rsi
 13684 0086 4889C7   		movq	%rax, %rdi
 13685 0089 E8000000 		call	_ZSt12__niter_baseISt15_Deque_iteratorIcRcPcEENSt11_Niter_baseIT_E13iterator_typeES5_
 13685      00
 13686 008e 488B9520 		movq	-224(%rbp), %rdx
 13686      FFFFFF
 13687 0095 488D8530 		leaq	-208(%rbp), %rax
 13687      FFFFFF
 13688 009c 4889D6   		movq	%rdx, %rsi
 13689 009f 4889C7   		movq	%rax, %rdi
 13690 00a2 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13690      00
 13691 00a7 488D8550 		leaq	-176(%rbp), %rax
 13691      FFFFFF
 13692 00ae 488D9530 		leaq	-208(%rbp), %rdx
 13692      FFFFFF
 13693 00b5 4889D6   		movq	%rdx, %rsi
 13694 00b8 4889C7   		movq	%rax, %rdi
 13695 00bb E8000000 		call	_ZSt12__niter_baseISt15_Deque_iteratorIcRcPcEENSt11_Niter_baseIT_E13iterator_typeES5_
 13695      00
 13696 00c0 488B8528 		movq	-216(%rbp), %rax
 13696      FFFFFF
 13697 00c7 488D4DD0 		leaq	-48(%rbp), %rcx
 13698 00cb 488D5590 		leaq	-112(%rbp), %rdx
 13699 00cf 488DB550 		leaq	-176(%rbp), %rsi
 13699      FFFFFF
 13700 00d6 4889C7   		movq	%rax, %rdi
 13701              	.LEHB87:
 13702 00d9 E8000000 		call	_ZSt13__copy_move_aILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_
 13702      00
 13703              	.LEHE87:
 13704 00de EB08     		jmp	.L733
 13705              	.L732:
 13706 00e0 4889C7   		movq	%rax, %rdi
 13707              	.LEHB88:
 13708 00e3 E8000000 		call	_Unwind_Resume
 13708      00
 13709              	.LEHE88:
 13710              	.L733:
 441:/usr/include/c++/5/bits/stl_algobase.h **** 
 13711              		.loc 29 441 0
 13712 00e8 488B8528 		movq	-216(%rbp), %rax
 13712      FFFFFF
 13713 00ef 488B4DF8 		movq	-8(%rbp), %rcx
 13714 00f3 6448330C 		xorq	%fs:40, %rcx
 13714      25280000 
 13714      00
 13715 00fc 7405     		je	.L731
 13716 00fe E8000000 		call	__stack_chk_fail
 13716      00
GAS LISTING /tmp/ccX8BQhk.s 			page 580


 13717              	.L731:
 13718 0103 C9       		leave
 13719              		.cfi_def_cfa 7, 8
 13720 0104 C3       		ret
 13721              		.cfi_endproc
 13722              	.LFE10663:
 13723              		.section	.gcc_except_table
 13724              	.LLSDA10663:
 13725 026c FF       		.byte	0xff
 13726 026d FF       		.byte	0xff
 13727 026e 01       		.byte	0x1
 13728 026f 0B       		.uleb128 .LLSDACSE10663-.LLSDACSB10663
 13729              	.LLSDACSB10663:
 13730 0270 D901     		.uleb128 .LEHB87-.LFB10663
 13731 0272 05       		.uleb128 .LEHE87-.LEHB87
 13732 0273 E001     		.uleb128 .L732-.LFB10663
 13733 0275 00       		.uleb128 0
 13734 0276 E301     		.uleb128 .LEHB88-.LFB10663
 13735 0278 05       		.uleb128 .LEHE88-.LEHB88
 13736 0279 00       		.uleb128 0
 13737 027a 00       		.uleb128 0
 13738              	.LLSDACSE10663:
 13739              		.section	.text._ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_,"axG",@progbits
 13741              		.section	.text._ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S
 13742              		.weak	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_
 13744              	_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_:
 13745              	.LFB10664:
 373:/usr/include/c++/5/bits/stl_algobase.h ****         {
 13746              		.loc 29 373 0
 13747              		.cfi_startproc
 13748 0000 55       		pushq	%rbp
 13749              		.cfi_def_cfa_offset 16
 13750              		.cfi_offset 6, -16
 13751 0001 4889E5   		movq	%rsp, %rbp
 13752              		.cfi_def_cfa_register 6
 13753 0004 4883EC30 		subq	$48, %rsp
 13754 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13755 000c 488975E0 		movq	%rsi, -32(%rbp)
 13756 0010 488955D8 		movq	%rdx, -40(%rbp)
 382:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 13757              		.loc 29 382 0
 13758 0014 488B55E0 		movq	-32(%rbp), %rdx
 13759 0018 488B45E8 		movq	-24(%rbp), %rax
 13760 001c 4829C2   		subq	%rax, %rdx
 13761 001f 4889D0   		movq	%rdx, %rax
 13762 0022 488945F8 		movq	%rax, -8(%rbp)
 383:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 13763              		.loc 29 383 0
 13764 0026 48837DF8 		cmpq	$0, -8(%rbp)
 13764      00
 13765 002b 7417     		je	.L735
 384:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result + _Num;
 13766              		.loc 29 384 0
 13767 002d 488B55F8 		movq	-8(%rbp), %rdx
 13768 0031 488B4DE8 		movq	-24(%rbp), %rcx
 13769 0035 488B45D8 		movq	-40(%rbp), %rax
 13770 0039 4889CE   		movq	%rcx, %rsi
GAS LISTING /tmp/ccX8BQhk.s 			page 581


 13771 003c 4889C7   		movq	%rax, %rdi
 13772 003f E8000000 		call	memmove
 13772      00
 13773              	.L735:
 385:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 13774              		.loc 29 385 0
 13775 0044 488B55F8 		movq	-8(%rbp), %rdx
 13776 0048 488B45D8 		movq	-40(%rbp), %rax
 13777 004c 4801D0   		addq	%rdx, %rax
 386:/usr/include/c++/5/bits/stl_algobase.h ****     };
 13778              		.loc 29 386 0
 13779 004f C9       		leave
 13780              		.cfi_def_cfa 7, 8
 13781 0050 C3       		ret
 13782              		.cfi_endproc
 13783              	.LFE10664:
 13785              		.section	.text._ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bI
 13786              		.weak	_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS
 13788              	_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS3_S6_S4
 13789              	.LFB10665:
 575:/usr/include/c++/5/bits/stl_algobase.h ****         {
 13790              		.loc 29 575 0
 13791              		.cfi_startproc
 13792 0000 55       		pushq	%rbp
 13793              		.cfi_def_cfa_offset 16
 13794              		.cfi_offset 6, -16
 13795 0001 4889E5   		movq	%rsp, %rbp
 13796              		.cfi_def_cfa_register 6
 13797 0004 4883EC30 		subq	$48, %rsp
 13798 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13799 000c 488975E0 		movq	%rsi, -32(%rbp)
 13800 0010 488955D8 		movq	%rdx, -40(%rbp)
 584:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 13801              		.loc 29 584 0
 13802 0014 488B55E0 		movq	-32(%rbp), %rdx
 13803 0018 488B45E8 		movq	-24(%rbp), %rax
 13804 001c 4829C2   		subq	%rax, %rdx
 13805 001f 4889D0   		movq	%rdx, %rax
 13806 0022 488945F8 		movq	%rax, -8(%rbp)
 585:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 13807              		.loc 29 585 0
 13808 0026 48837DF8 		cmpq	$0, -8(%rbp)
 13808      00
 13809 002b 7424     		je	.L738
 586:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result - _Num;
 13810              		.loc 29 586 0
 13811 002d 488B55F8 		movq	-8(%rbp), %rdx
 13812 0031 488B45F8 		movq	-8(%rbp), %rax
 13813 0035 48F7D8   		negq	%rax
 13814 0038 4889C1   		movq	%rax, %rcx
 13815 003b 488B45D8 		movq	-40(%rbp), %rax
 13816 003f 4801C1   		addq	%rax, %rcx
 13817 0042 488B45E8 		movq	-24(%rbp), %rax
 13818 0046 4889C6   		movq	%rax, %rsi
 13819 0049 4889CF   		movq	%rcx, %rdi
 13820 004c E8000000 		call	memmove
 13820      00
GAS LISTING /tmp/ccX8BQhk.s 			page 582


 13821              	.L738:
 587:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 13822              		.loc 29 587 0
 13823 0051 488B45F8 		movq	-8(%rbp), %rax
 13824 0055 48F7D8   		negq	%rax
 13825 0058 4889C2   		movq	%rax, %rdx
 13826 005b 488B45D8 		movq	-40(%rbp), %rax
 13827 005f 4801D0   		addq	%rdx, %rax
 588:/usr/include/c++/5/bits/stl_algobase.h ****     };
 13828              		.loc 29 588 0
 13829 0062 C9       		leave
 13830              		.cfi_def_cfa 7, 8
 13831 0063 C3       		ret
 13832              		.cfi_endproc
 13833              	.LFE10665:
 13835              		.section	.text._ZNSt10_Iter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEELb1EE7_S_baseES5_,"a
 13836              		.weak	_ZNSt10_Iter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEELb1EE7_S_baseES5_
 13838              	_ZNSt10_Iter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEELb1EE7_S_baseES5_:
 13839              	.LFB10666:
 223:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it.base(); }
 13840              		.loc 32 223 0
 13841              		.cfi_startproc
 13842 0000 55       		pushq	%rbp
 13843              		.cfi_def_cfa_offset 16
 13844              		.cfi_offset 6, -16
 13845 0001 4889E5   		movq	%rsp, %rbp
 13846              		.cfi_def_cfa_register 6
 13847 0004 4883EC20 		subq	$32, %rsp
 13848 0008 48897DE8 		movq	%rdi, -24(%rbp)
 13849 000c 488975E0 		movq	%rsi, -32(%rbp)
 223:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it.base(); }
 13850              		.loc 32 223 0
 13851 0010 64488B04 		movq	%fs:40, %rax
 13851      25280000 
 13851      00
 13852 0019 488945F8 		movq	%rax, -8(%rbp)
 13853 001d 31C0     		xorl	%eax, %eax
 13854              		.loc 32 224 0
 13855 001f 488B45E8 		movq	-24(%rbp), %rax
 13856 0023 488B55E0 		movq	-32(%rbp), %rdx
 13857 0027 4889D6   		movq	%rdx, %rsi
 13858 002a 4889C7   		movq	%rax, %rdi
 13859 002d E8000000 		call	_ZNKSt13move_iteratorISt15_Deque_iteratorIcRcPcEE4baseEv
 13859      00
 13860 0032 488B45E8 		movq	-24(%rbp), %rax
 13861 0036 488B4DF8 		movq	-8(%rbp), %rcx
 13862 003a 6448330C 		xorq	%fs:40, %rcx
 13862      25280000 
 13862      00
 13863 0043 7405     		je	.L742
 13864 0045 E8000000 		call	__stack_chk_fail
 13864      00
 13865              	.L742:
 13866 004a C9       		leave
 13867              		.cfi_def_cfa 7, 8
 13868 004b C3       		ret
 13869              		.cfi_endproc
GAS LISTING /tmp/ccX8BQhk.s 			page 583


 13870              	.LFE10666:
 13872              		.section	.text._ZSt13__copy_move_aILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_,"axG",@progbits,
 13873              		.weak	_ZSt13__copy_move_aILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_
 13875              	_ZSt13__copy_move_aILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_:
 13876              	.LFB10667:
 391:/usr/include/c++/5/bits/stl_algobase.h ****     {
 13877              		.loc 29 391 0
 13878              		.cfi_startproc
 13879 0000 55       		pushq	%rbp
 13880              		.cfi_def_cfa_offset 16
 13881              		.cfi_offset 6, -16
 13882 0001 4889E5   		movq	%rsp, %rbp
 13883              		.cfi_def_cfa_register 6
 13884 0004 4881ECA0 		subq	$160, %rsp
 13884      000000
 13885 000b 4889BD78 		movq	%rdi, -136(%rbp)
 13885      FFFFFF
 13886 0012 4889B570 		movq	%rsi, -144(%rbp)
 13886      FFFFFF
 13887 0019 48899568 		movq	%rdx, -152(%rbp)
 13887      FFFFFF
 13888 0020 48898D60 		movq	%rcx, -160(%rbp)
 13888      FFFFFF
 391:/usr/include/c++/5/bits/stl_algobase.h ****     {
 13889              		.loc 29 391 0
 13890 0027 64488B04 		movq	%fs:40, %rax
 13890      25280000 
 13890      00
 13891 0030 488945F8 		movq	%rax, -8(%rbp)
 13892 0034 31C0     		xorl	%eax, %eax
 399:/usr/include/c++/5/bits/stl_algobase.h **** 
 13893              		.loc 29 399 0
 13894 0036 C6458F00 		movb	$0, -113(%rbp)
 402:/usr/include/c++/5/bits/stl_algobase.h ****     }
 13895              		.loc 29 402 0
 13896 003a 488B9560 		movq	-160(%rbp), %rdx
 13896      FFFFFF
 13897 0041 488D45D0 		leaq	-48(%rbp), %rax
 13898 0045 4889D6   		movq	%rdx, %rsi
 13899 0048 4889C7   		movq	%rax, %rdi
 13900 004b E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13900      00
 13901 0050 488B9568 		movq	-152(%rbp), %rdx
 13901      FFFFFF
 13902 0057 488D45B0 		leaq	-80(%rbp), %rax
 13903 005b 4889D6   		movq	%rdx, %rsi
 13904 005e 4889C7   		movq	%rax, %rdi
 13905 0061 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13905      00
 13906 0066 488B9570 		movq	-144(%rbp), %rdx
 13906      FFFFFF
 13907 006d 488D4590 		leaq	-112(%rbp), %rax
 13908 0071 4889D6   		movq	%rdx, %rsi
 13909 0074 4889C7   		movq	%rax, %rdi
 13910 0077 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13910      00
 13911 007c 488B8578 		movq	-136(%rbp), %rax
GAS LISTING /tmp/ccX8BQhk.s 			page 584


 13911      FFFFFF
 13912 0083 488D4DD0 		leaq	-48(%rbp), %rcx
 13913 0087 488D55B0 		leaq	-80(%rbp), %rdx
 13914 008b 488D7590 		leaq	-112(%rbp), %rsi
 13915 008f 4889C7   		movq	%rax, %rdi
 13916 0092 E8000000 		call	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIcRcPc
 13916      00
 403:/usr/include/c++/5/bits/stl_algobase.h **** 
 13917              		.loc 29 403 0
 13918 0097 488B8578 		movq	-136(%rbp), %rax
 13918      FFFFFF
 13919 009e 488B4DF8 		movq	-8(%rbp), %rcx
 13920 00a2 6448330C 		xorq	%fs:40, %rcx
 13920      25280000 
 13920      00
 13921 00ab 7405     		je	.L745
 13922 00ad E8000000 		call	__stack_chk_fail
 13922      00
 13923              	.L745:
 13924 00b2 C9       		leave
 13925              		.cfi_def_cfa 7, 8
 13926 00b3 C3       		ret
 13927              		.cfi_endproc
 13928              	.LFE10667:
 13930              		.section	.text._ZNKSt13move_iteratorISt15_Deque_iteratorIcRcPcEE4baseEv,"axG",@progbits,_ZNKSt13mo
 13931              		.align 2
 13932              		.weak	_ZNKSt13move_iteratorISt15_Deque_iteratorIcRcPcEE4baseEv
 13934              	_ZNKSt13move_iteratorISt15_Deque_iteratorIcRcPcEE4baseEv:
 13935              	.LFB10668:
 992:/usr/include/c++/5/bits/stl_iterator.h ****       { return _M_current; }
 13936              		.loc 13 992 0
 13937              		.cfi_startproc
 13938 0000 55       		pushq	%rbp
 13939              		.cfi_def_cfa_offset 16
 13940              		.cfi_offset 6, -16
 13941 0001 4889E5   		movq	%rsp, %rbp
 13942              		.cfi_def_cfa_register 6
 13943 0004 4883EC10 		subq	$16, %rsp
 13944 0008 48897DF8 		movq	%rdi, -8(%rbp)
 13945 000c 488975F0 		movq	%rsi, -16(%rbp)
 993:/usr/include/c++/5/bits/stl_iterator.h **** 
 13946              		.loc 13 993 0
 13947 0010 488B55F0 		movq	-16(%rbp), %rdx
 13948 0014 488B45F8 		movq	-8(%rbp), %rax
 13949 0018 4889D6   		movq	%rdx, %rsi
 13950 001b 4889C7   		movq	%rax, %rdi
 13951 001e E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 13951      00
 13952 0023 488B45F8 		movq	-8(%rbp), %rax
 13953 0027 C9       		leave
 13954              		.cfi_def_cfa 7, 8
 13955 0028 C3       		ret
 13956              		.cfi_endproc
 13957              	.LFE10668:
 13959              		.section	.text._ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_,"axG",@progbits,_ZSt4moveIRcEONSt
 13960              		.weak	_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_
 13962              	_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_:
GAS LISTING /tmp/ccX8BQhk.s 			page 585


 13963              	.LFB10670:
  78:/usr/include/c++/5/bits/move.h **** 
  79:/usr/include/c++/5/bits/move.h ****   /**
  80:/usr/include/c++/5/bits/move.h ****    *  @brief  Forward an rvalue.
  81:/usr/include/c++/5/bits/move.h ****    *  @return The parameter cast to the specified type.
  82:/usr/include/c++/5/bits/move.h ****    *
  83:/usr/include/c++/5/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  84:/usr/include/c++/5/bits/move.h ****    */
  85:/usr/include/c++/5/bits/move.h ****   template<typename _Tp>
  86:/usr/include/c++/5/bits/move.h ****     constexpr _Tp&&
  87:/usr/include/c++/5/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:/usr/include/c++/5/bits/move.h ****     {
  89:/usr/include/c++/5/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:/usr/include/c++/5/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:/usr/include/c++/5/bits/move.h ****       return static_cast<_Tp&&>(__t);
  92:/usr/include/c++/5/bits/move.h ****     }
  93:/usr/include/c++/5/bits/move.h **** 
  94:/usr/include/c++/5/bits/move.h ****   /**
  95:/usr/include/c++/5/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  96:/usr/include/c++/5/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  97:/usr/include/c++/5/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:/usr/include/c++/5/bits/move.h ****   */
  99:/usr/include/c++/5/bits/move.h ****   template<typename _Tp>
 100:/usr/include/c++/5/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:/usr/include/c++/5/bits/move.h ****     move(_Tp&& __t) noexcept
 13964              		.loc 35 101 0
 13965              		.cfi_startproc
 13966 0000 55       		pushq	%rbp
 13967              		.cfi_def_cfa_offset 16
 13968              		.cfi_offset 6, -16
 13969 0001 4889E5   		movq	%rsp, %rbp
 13970              		.cfi_def_cfa_register 6
 13971 0004 48897DF8 		movq	%rdi, -8(%rbp)
 102:/usr/include/c++/5/bits/move.h ****     { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 13972              		.loc 35 102 0
 13973 0008 488B45F8 		movq	-8(%rbp), %rax
 13974 000c 5D       		popq	%rbp
 13975              		.cfi_def_cfa 7, 8
 13976 000d C3       		ret
 13977              		.cfi_endproc
 13978              	.LFE10670:
 13980              		.section	.text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iter
 13981              		.weak	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIcRcP
 13983              	_ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIcRcPcES6_EE
 13984              	.LFB10669:
 354:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 13985              		.loc 29 354 0
 13986              		.cfi_startproc
 13987 0000 55       		pushq	%rbp
 13988              		.cfi_def_cfa_offset 16
 13989              		.cfi_offset 6, -16
 13990 0001 4889E5   		movq	%rsp, %rbp
 13991              		.cfi_def_cfa_register 6
 13992 0004 53       		pushq	%rbx
 13993 0005 4883EC38 		subq	$56, %rsp
 13994              		.cfi_offset 3, -24
 13995 0009 48897DD8 		movq	%rdi, -40(%rbp)
GAS LISTING /tmp/ccX8BQhk.s 			page 586


 13996 000d 488975D0 		movq	%rsi, -48(%rbp)
 13997 0011 488955C8 		movq	%rdx, -56(%rbp)
 13998 0015 48894DC0 		movq	%rcx, -64(%rbp)
 13999              	.LBB99:
 357:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 14000              		.loc 29 357 0
 14001 0019 488B55D0 		movq	-48(%rbp), %rdx
 14002 001d 488B45C8 		movq	-56(%rbp), %rax
 14003 0021 4889D6   		movq	%rdx, %rsi
 14004 0024 4889C7   		movq	%rax, %rdi
 14005 0027 E8000000 		call	_ZStmiIcRcPcENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_
 14005      00
 14006 002c 488945E8 		movq	%rax, -24(%rbp)
 14007              	.L752:
 357:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 14008              		.loc 29 357 0 is_stmt 0 discriminator 3
 14009 0030 48837DE8 		cmpq	$0, -24(%rbp)
 14009      00
 14010 0035 7E47     		jle	.L751
 359:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 14011              		.loc 29 359 0 is_stmt 1 discriminator 2
 14012 0037 488B45C0 		movq	-64(%rbp), %rax
 14013 003b 4889C7   		movq	%rax, %rdi
 14014 003e E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEdeEv
 14014      00
 14015 0043 4889C3   		movq	%rax, %rbx
 14016 0046 488B45D0 		movq	-48(%rbp), %rax
 14017 004a 4889C7   		movq	%rax, %rdi
 14018 004d E8000000 		call	_ZNKSt15_Deque_iteratorIcRcPcEdeEv
 14018      00
 14019 0052 4889C7   		movq	%rax, %rdi
 14020 0055 E8000000 		call	_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_
 14020      00
 14021 005a 0FB600   		movzbl	(%rax), %eax
 14022 005d 8803     		movb	%al, (%rbx)
 360:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 14023              		.loc 29 360 0 discriminator 2
 14024 005f 488B45D0 		movq	-48(%rbp), %rax
 14025 0063 4889C7   		movq	%rax, %rdi
 14026 0066 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEppEv
 14026      00
 361:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 14027              		.loc 29 361 0 discriminator 2
 14028 006b 488B45C0 		movq	-64(%rbp), %rax
 14029 006f 4889C7   		movq	%rax, %rdi
 14030 0072 E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEppEv
 14030      00
 357:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 14031              		.loc 29 357 0 discriminator 2
 14032 0077 48836DE8 		subq	$1, -24(%rbp)
 14032      01
 14033 007c EBB2     		jmp	.L752
 14034              	.L751:
 14035              	.LBE99:
 363:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 14036              		.loc 29 363 0
 14037 007e 488B55C0 		movq	-64(%rbp), %rdx
GAS LISTING /tmp/ccX8BQhk.s 			page 587


 14038 0082 488B45D8 		movq	-40(%rbp), %rax
 14039 0086 4889D6   		movq	%rdx, %rsi
 14040 0089 4889C7   		movq	%rax, %rdi
 14041 008c E8000000 		call	_ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
 14041      00
 364:/usr/include/c++/5/bits/stl_algobase.h ****     };
 14042              		.loc 29 364 0
 14043 0091 488B45D8 		movq	-40(%rbp), %rax
 14044 0095 4883C438 		addq	$56, %rsp
 14045 0099 5B       		popq	%rbx
 14046 009a 5D       		popq	%rbp
 14047              		.cfi_def_cfa 7, 8
 14048 009b C3       		ret
 14049              		.cfi_endproc
 14050              	.LFE10669:
 14052              		.weak	_ZTV16global_variables
 14053              		.section	.rodata._ZTV16global_variables,"aG",@progbits,_ZTV16global_variables,comdat
 14054              		.align 8
 14057              	_ZTV16global_variables:
 14058 0000 00000000 		.quad	0
 14058      00000000 
 14059 0008 00000000 		.quad	_ZTI16global_variables
 14059      00000000 
 14060 0010 00000000 		.quad	_ZN16global_variablesD1Ev
 14060      00000000 
 14061 0018 00000000 		.quad	_ZN16global_variablesD0Ev
 14061      00000000 
 14062              		.weak	_ZTVN5boost6system12system_errorE
 14063              		.section	.rodata._ZTVN5boost6system12system_errorE,"aG",@progbits,_ZTVN5boost6system12system_error
 14064              		.align 8
 14067              	_ZTVN5boost6system12system_errorE:
 14068 0000 00000000 		.quad	0
 14068      00000000 
 14069 0008 00000000 		.quad	_ZTIN5boost6system12system_errorE
 14069      00000000 
 14070 0010 00000000 		.quad	_ZN5boost6system12system_errorD1Ev
 14070      00000000 
 14071 0018 00000000 		.quad	_ZN5boost6system12system_errorD0Ev
 14071      00000000 
 14072 0020 00000000 		.quad	_ZNK5boost6system12system_error4whatEv
 14072      00000000 
 14073              		.weak	_ZTIN5boost6system12system_errorE
 14074              		.section	.rodata._ZTIN5boost6system12system_errorE,"aG",@progbits,_ZTIN5boost6system12system_error
 14075              		.align 8
 14078              	_ZTIN5boost6system12system_errorE:
 14079 0000 00000000 		.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
 14079      00000000 
 14080 0008 00000000 		.quad	_ZTSN5boost6system12system_errorE
 14080      00000000 
 14081 0010 00000000 		.quad	_ZTISt13runtime_error
 14081      00000000 
 14082              		.weak	_ZTSN5boost6system12system_errorE
 14083              		.section	.rodata._ZTSN5boost6system12system_errorE,"aG",@progbits,_ZTSN5boost6system12system_error
 14084              		.align 16
 14087              	_ZTSN5boost6system12system_errorE:
 14088 0000 4E35626F 		.string	"N5boost6system12system_errorE"
 14088      6F737436 
GAS LISTING /tmp/ccX8BQhk.s 			page 588


 14088      73797374 
 14088      656D3132 
 14088      73797374 
 14089              		.weak	_ZTI16global_variables
 14090              		.section	.rodata._ZTI16global_variables,"aG",@progbits,_ZTI16global_variables,comdat
 14091              		.align 8
 14094              	_ZTI16global_variables:
 14095 0000 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 14095      00000000 
 14096 0008 00000000 		.quad	_ZTS16global_variables
 14096      00000000 
 14097              		.weak	_ZTS16global_variables
 14098              		.section	.rodata._ZTS16global_variables,"aG",@progbits,_ZTS16global_variables,comdat
 14099              		.align 16
 14102              	_ZTS16global_variables:
 14103 0000 3136676C 		.string	"16global_variables"
 14103      6F62616C 
 14103      5F766172 
 14103      6961626C 
 14103      657300
 14104              		.text
 14106              	_Z41__static_initialization_and_destruction_0ii:
 14107              	.LFB10699:
 14108              		.loc 9 81 0
 14109              		.cfi_startproc
 14110 0799 55       		pushq	%rbp
 14111              		.cfi_def_cfa_offset 16
 14112              		.cfi_offset 6, -16
 14113 079a 4889E5   		movq	%rsp, %rbp
 14114              		.cfi_def_cfa_register 6
 14115 079d 4883EC10 		subq	$16, %rsp
 14116 07a1 897DFC   		movl	%edi, -4(%rbp)
 14117 07a4 8975F8   		movl	%esi, -8(%rbp)
 14118              		.loc 9 81 0
 14119 07a7 837DFC01 		cmpl	$1, -4(%rbp)
 14120 07ab 752D     		jne	.L756
 14121              		.loc 9 81 0 is_stmt 0 discriminator 1
 14122 07ad 817DF8FF 		cmpl	$65535, -8(%rbp)
 14122      FF0000
 14123 07b4 7524     		jne	.L756
 221:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     static const error_category &  errno_ecat     = generic_category();
 14124              		.loc 5 221 0 is_stmt 1
 14125 07b6 E8000000 		call	_ZN5boost6system16generic_categoryEv
 14125      00
 14126 07bb 48890500 		movq	%rax, _ZN5boost6systemL14posix_categoryE(%rip)
 14126      000000
 222:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp ****     static const error_category &  native_ecat    = system_category();
 14127              		.loc 5 222 0
 14128 07c2 E8000000 		call	_ZN5boost6system16generic_categoryEv
 14128      00
 14129 07c7 48890500 		movq	%rax, _ZN5boost6systemL10errno_ecatE(%rip)
 14129      000000
 223:/home/brendan/Boost/boost_1_60_0/boost/system/error_code.hpp **** # endif
 14130              		.loc 5 223 0
 14131 07ce E8000000 		call	_ZN5boost6system15system_categoryEv
 14131      00
 14132 07d3 48890500 		movq	%rax, _ZN5boost6systemL11native_ecatE(%rip)
GAS LISTING /tmp/ccX8BQhk.s 			page 589


 14132      000000
 14133              	.L756:
 14134              		.loc 9 81 0
 14135 07da 90       		nop
 14136 07db C9       		leave
 14137              		.cfi_def_cfa 7, 8
 14138 07dc C3       		ret
 14139              		.cfi_endproc
 14140              	.LFE10699:
 14143              	_GLOBAL__sub_I__ZN16global_variablesC2Ev:
 14144              	.LFB10714:
 14145              		.loc 9 81 0
 14146              		.cfi_startproc
 14147 07dd 55       		pushq	%rbp
 14148              		.cfi_def_cfa_offset 16
 14149              		.cfi_offset 6, -16
 14150 07de 4889E5   		movq	%rsp, %rbp
 14151              		.cfi_def_cfa_register 6
 14152              		.loc 9 81 0
 14153 07e1 BEFFFF00 		movl	$65535, %esi
 14153      00
 14154 07e6 BF010000 		movl	$1, %edi
 14154      00
 14155 07eb E8A9FFFF 		call	_Z41__static_initialization_and_destruction_0ii
 14155      FF
 14156 07f0 5D       		popq	%rbp
 14157              		.cfi_def_cfa 7, 8
 14158 07f1 C3       		ret
 14159              		.cfi_endproc
 14160              	.LFE10714:
 14162              		.section	.init_array,"aw"
 14163              		.align 8
 14164 0000 00000000 		.quad	_GLOBAL__sub_I__ZN16global_variablesC2Ev
 14164      00000000 
 14165              		.section	.rodata
 14166 00aa 00000000 		.align 8
 14166      0000
 14167              	.LC1:
 14168 00b0 BC89D897 		.long	2547550652
 14169 00b4 B2D29C3C 		.long	1016910514
 14170              		.align 8
 14171              	.LC2:
 14172 00b8 182D4454 		.long	1413754136
 14173 00bc FB210940 		.long	1074340347
 14174              		.align 8
 14175              	.LC3:
 14176 00c0 00000000 		.long	0
 14177 00c4 0000F03F 		.long	1072693248
 14178              		.align 8
 14179              	.LC4:
 14180 00c8 00000000 		.long	0
 14181 00cc 00409F40 		.long	1084178432
 14182              		.align 8
 14183              	.LC6:
 14184 00d0 00000000 		.long	0
 14185 00d4 0000E03F 		.long	1071644672
 14186              		.align 8
GAS LISTING /tmp/ccX8BQhk.s 			page 590


 14187              	.LC7:
 14188 00d8 00000000 		.long	0
 14189 00dc 00000040 		.long	1073741824
 14190              		.text
 14191              	.Letext0:
 14192              		.file 41 "/usr/include/c++/5/bits/stringfwd.h"
 14193              		.file 42 "/usr/include/c++/5/type_traits"
 14194              		.file 43 "/usr/include/c++/5/bits/cpp_type_traits.h"
 14195              		.file 44 "/usr/include/c++/5/bits/stl_pair.h"
 14196              		.file 45 "/usr/include/c++/5/cwchar"
 14197              		.file 46 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h"
 14198              		.file 47 "/usr/include/c++/5/cstdint"
 14199              		.file 48 "/usr/include/c++/5/bits/exception_ptr.h"
 14200              		.file 49 "/usr/include/c++/5/clocale"
 14201              		.file 50 "/usr/include/c++/5/cstdlib"
 14202              		.file 51 "/usr/include/c++/5/cstdio"
 14203              		.file 52 "/usr/include/c++/5/initializer_list"
 14204              		.file 53 "/usr/include/c++/5/cstddef"
 14205              		.file 54 "/usr/include/c++/5/bits/locale_classes.h"
 14206              		.file 55 "/usr/include/c++/5/system_error"
 14207              		.file 56 "/usr/include/c++/5/cwctype"
 14208              		.file 57 "/usr/include/c++/5/bits/algorithmfwd.h"
 14209              		.file 58 "/usr/include/c++/5/debug/debug.h"
 14210              		.file 59 "/usr/include/c++/5/bits/uniform_int_dist.h"
 14211              		.file 60 "/usr/include/c++/5/bits/random.h"
 14212              		.file 61 "/usr/include/c++/5/bits/stl_algo.h"
 14213              		.file 62 "/usr/include/c++/5/cstring"
 14214              		.file 63 "/usr/include/c++/5/ctime"
 14215              		.file 64 "/usr/include/c++/5/bits/uses_allocator.h"
 14216              		.file 65 "/usr/include/c++/5/tuple"
 14217              		.file 66 "/usr/include/c++/5/bits/shared_ptr_base.h"
 14218              		.file 67 "/usr/include/c++/5/bits/ptr_traits.h"
 14219              		.file 68 "/usr/include/c++/5/iosfwd"
 14220              		.file 69 "/usr/include/c++/5/bits/predefined_ops.h"
 14221              		.file 70 "/usr/include/c++/5/ext/numeric_traits.h"
 14222              		.file 71 "/usr/include/c++/5/ext/alloc_traits.h"
 14223              		.file 72 "/usr/include/c++/5/ext/concurrence.h"
 14224              		.file 73 "/usr/include/stdio.h"
 14225              		.file 74 "/usr/include/libio.h"
 14226              		.file 75 "<built-in>"
 14227              		.file 76 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 14228              		.file 77 "/usr/include/wchar.h"
 14229              		.file 78 "/usr/include/time.h"
 14230              		.file 79 "/usr/include/stdint.h"
 14231              		.file 80 "/usr/include/locale.h"
 14232              		.file 81 "/usr/include/x86_64-linux-gnu/bits/types.h"
 14233              		.file 82 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
 14234              		.file 83 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h"
 14235              		.file 84 "/usr/include/x86_64-linux-gnu/c++/5/bits/atomic_word.h"
 14236              		.file 85 "/usr/include/stdlib.h"
 14237              		.file 86 "/usr/include/_G_config.h"
 14238              		.file 87 "/usr/include/x86_64-linux-gnu/bits/mathdef.h"
 14239              		.file 88 "/usr/include/wctype.h"
 14240              		.file 89 "/home/brendan/Boost/boost_1_60_0/boost/config/suffix.hpp"
 14241              		.file 90 "/home/brendan/Boost/boost_1_60_0/boost/mpl/aux_/adl_barrier.hpp"
 14242              		.file 91 "/home/brendan/Boost/boost_1_60_0/boost/mpl/aux_/preprocessed/gcc/or.hpp"
 14243              		.file 92 "/home/brendan/Boost/boost_1_60_0/boost/mpl/bool_fwd.hpp"
GAS LISTING /tmp/ccX8BQhk.s 			page 591


 14244              		.file 93 "/home/brendan/Boost/boost_1_60_0/boost/mpl/integral_c_tag.hpp"
 14245              		.file 94 "/home/brendan/Boost/boost_1_60_0/boost/mpl/void_fwd.hpp"
 14246              		.file 95 "/home/brendan/Boost/boost_1_60_0/boost/mpl/aux_/na_fwd.hpp"
 14247              		.file 96 "/home/brendan/Boost/boost_1_60_0/boost/type_traits/integral_constant.hpp"
 14248              		.file 97 "/home/brendan/Boost/boost_1_60_0/boost/mpl/aux_/preprocessed/gcc/placeholders.hpp"
 14249              		.file 98 "/home/brendan/Boost/boost_1_60_0/boost/mpl/if.hpp"
 14250              		.file 99 "/home/brendan/Boost/boost_1_60_0/boost/type_traits/detail/yes_no_type.hpp"
 14251              		.file 100 "/home/brendan/Boost/boost_1_60_0/boost/type_traits/integral_promotion.hpp"
 14252              		.file 101 "/home/brendan/Boost/boost_1_60_0/boost/detail/iterator.hpp"
 14253              		.file 102 "/home/brendan/Boost/boost_1_60_0/boost/detail/indirect_traits.hpp"
 14254              		.file 103 "/home/brendan/Boost/boost_1_60_0/boost/type_traits/detail/has_binary_operator.hpp"
 14255              		.file 104 "/home/brendan/Boost/boost_1_60_0/boost/iterator/iterator_traits.hpp"
 14256              		.file 105 "/home/brendan/Boost/boost_1_60_0/boost/iterator/iterator_categories.hpp"
 14257              		.file 106 "/home/brendan/Boost/boost_1_60_0/boost/iterator/iterator_facade.hpp"
 14258              		.file 107 "/home/brendan/Boost/boost_1_60_0/boost/range/mutable_iterator.hpp"
 14259              		.file 108 "/home/brendan/Boost/boost_1_60_0/boost/range/detail/sfinae.hpp"
 14260              		.file 109 "/home/brendan/Boost/boost_1_60_0/boost/range/const_iterator.hpp"
 14261              		.file 110 "/home/brendan/Boost/boost_1_60_0/boost/concept/detail/backward_compatibility.hpp"
 14262              		.file 111 "/home/brendan/Boost/boost_1_60_0/boost/concept/detail/has_constraints.hpp"
 14263              		.file 112 "/home/brendan/Boost/boost_1_60_0/boost/cstdint.hpp"
 14264              		.file 113 "/home/brendan/Boost/boost_1_60_0/boost/core/enable_if.hpp"
 14265              		.file 114 "/home/brendan/Boost/boost_1_60_0/boost/core/noncopyable.hpp"
 14266              		.file 115 "/home/brendan/Boost/boost_1_60_0/boost/iterator/iterator_adaptor.hpp"
 14267              		.file 116 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/concept.hpp"
 14268              		.file 117 "/home/brendan/Boost/boost_1_60_0/boost/algorithm/string/constants.hpp"
 14269              		.file 118 "/home/brendan/Boost/boost_1_60_0/boost/filesystem/path_traits.hpp"
 14270              		.file 119 "/home/brendan/Boost/boost_1_60_0/boost/exception/exception.hpp"
 14271              		.file 120 "/home/brendan/Boost/boost_1_60_0/boost/core/demangle.hpp"
 14272              		.file 121 "/home/brendan/Boost/boost_1_60_0/boost/io_fwd.hpp"
 14273              		.file 122 "/home/brendan/Boost/boost_1_60_0/boost/type_traits/add_rvalue_reference.hpp"
 14274              		.file 123 "/home/brendan/Boost/boost_1_60_0/boost/type_traits/is_abstract.hpp"
 14275              		.file 124 "/home/brendan/Boost/boost_1_60_0/boost/type_traits/is_array.hpp"
 14276              		.file 125 "/home/brendan/Boost/boost_1_60_0/boost/type_traits/is_function.hpp"
 14277              		.file 126 "/home/brendan/Boost/boost_1_60_0/boost/mpl/bool.hpp"
 14278              		.file 127 "/home/brendan/Boost/boost_1_60_0/boost/mpl/void.hpp"
 14279              		.file 128 "/home/brendan/Boost/boost_1_60_0/boost/mpl/aux_/integral_wrapper.hpp"
 14280              		.file 129 "/home/brendan/Boost/boost_1_60_0/boost/mpl/aux_/preprocessed/gcc/arg.hpp"
 14281              		.file 130 "/usr/include/string.h"
 14282              		.file 131 "include/global_variables.h"
 14283              		.file 132 "/usr/include/c++/5/cxxabi.h"
GAS LISTING /tmp/ccX8BQhk.s 			page 592


DEFINED SYMBOLS
                            *ABS*:0000000000000000 global_variables.cpp
     /tmp/ccX8BQhk.s:7      .rodata:0000000000000000 _ZStL19piecewise_construct
     /tmp/ccX8BQhk.s:12     .text._ZNSt11char_traitsIcE6assignERcRKc:0000000000000000 _ZNSt11char_traitsIcE6assignERcRKc
     /tmp/ccX8BQhk.s:39     .text._ZnwmPv:0000000000000000 _ZnwmPv
     /tmp/ccX8BQhk.s:62     .text._ZSt16__deque_buf_sizem:0000000000000000 _ZSt16__deque_buf_sizem
     /tmp/ccX8BQhk.s:95     .text._ZN5boost12range_detail6lengthEPKc:0000000000000000 _ZN5boost12range_detail6lengthEPKc
     /tmp/ccX8BQhk.s:121    .text._ZN5boost12range_detail11is_char_ptrEPKc:0000000000000000 _ZN5boost12range_detail11is_char_ptrEPKc
     /tmp/ccX8BQhk.s:143    .rodata:0000000000000001 _ZStL13allocator_arg
     /tmp/ccX8BQhk.s:147    .rodata:0000000000000002 _ZStL6ignore
     /tmp/ccX8BQhk.s:150    .bss:0000000000000000 _ZN5boost6systemL14posix_categoryE
     /tmp/ccX8BQhk.s:152    .bss:0000000000000008 _ZN5boost6systemL10errno_ecatE
     /tmp/ccX8BQhk.s:154    .bss:0000000000000010 _ZN5boost6systemL11native_ecatE
     /tmp/ccX8BQhk.s:159    .text._ZNK5boost6system10error_code5valueEv:0000000000000000 _ZNK5boost6system10error_code5valueEv
     /tmp/ccX8BQhk.s:183    .text._ZNK5boost6system10error_code7messageB5cxx11Ev:0000000000000000 _ZNK5boost6system10error_code7messageB5cxx11Ev
     /tmp/ccX8BQhk.s:234    .text._ZN5boost6system12system_errorD2Ev:0000000000000000 _ZN5boost6system12system_errorD2Ev
     /tmp/ccX8BQhk.s:14067  .rodata._ZTVN5boost6system12system_errorE:0000000000000000 _ZTVN5boost6system12system_errorE
     /tmp/ccX8BQhk.s:234    .text._ZN5boost6system12system_errorD2Ev:0000000000000000 _ZN5boost6system12system_errorD1Ev
     /tmp/ccX8BQhk.s:280    .text._ZN5boost6system12system_errorD0Ev:0000000000000000 _ZN5boost6system12system_errorD0Ev
     /tmp/ccX8BQhk.s:311    .text._ZNK5boost6system12system_error4whatEv:0000000000000000 _ZNK5boost6system12system_error4whatEv
     /tmp/ccX8BQhk.s:486    .rodata:0000000000000008 _ZN9__gnu_cxxL21__default_lock_policyE
     /tmp/ccX8BQhk.s:492    .text._ZN5boost10filesystem4pathD2Ev:0000000000000000 _ZN5boost10filesystem4pathD2Ev
     /tmp/ccX8BQhk.s:492    .text._ZN5boost10filesystem4pathD2Ev:0000000000000000 _ZN5boost10filesystem4pathD1Ev
     /tmp/ccX8BQhk.s:523    .text._ZN5boost10filesystem4pathC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZN5boost10filesystem4pathC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccX8BQhk.s:523    .text._ZN5boost10filesystem4pathC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZN5boost10filesystem4pathC1ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccX8BQhk.s:555    .text._ZN5boost10filesystem18create_directoriesERKNS0_4pathE:0000000000000000 _ZN5boost10filesystem18create_directoriesERKNS0_4pathE
     /tmp/ccX8BQhk.s:585    .text:0000000000000000 _ZN16global_variablesC2Ev
     /tmp/ccX8BQhk.s:14057  .rodata._ZTV16global_variables:0000000000000000 _ZTV16global_variables
     /tmp/ccX8BQhk.s:585    .text:0000000000000000 _ZN16global_variablesC1Ev
     /tmp/ccX8BQhk.s:721    .text:0000000000000168 _ZN16global_variablesD2Ev
     /tmp/ccX8BQhk.s:721    .text:0000000000000168 _ZN16global_variablesD1Ev
     /tmp/ccX8BQhk.s:775    .text:00000000000001e0 _ZN16global_variablesD0Ev
     /tmp/ccX8BQhk.s:802    .text._ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_:0000000000000000 _ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
     /tmp/ccX8BQhk.s:836    .text:0000000000000206 _ZN16global_variables10initialiseE15domain_geometry
     /tmp/ccX8BQhk.s:1136   .text:0000000000000438 _ZN16global_variables23create_output_directoryB5cxx11Ev
     /tmp/ccX8BQhk.s:960    .text:000000000000031c _ZN16global_variables17update_coarse_tauEv
     /tmp/ccX8BQhk.s:988    .text:0000000000000346 _ZN16global_variables15update_fine_tauEv
     /tmp/ccX8BQhk.s:1015   .text:0000000000000368 _ZN16global_variables10update_tauE15domain_geometry
     /tmp/ccX8BQhk.s:1063   .text:00000000000003ec _ZN16global_variables17magnify_time_stepEv
     /tmp/ccX8BQhk.s:1090   .text:000000000000040e _ZN16global_variables16reduce_time_stepEv
     /tmp/ccX8BQhk.s:1479   .text._ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_:0000000000000000 _ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_
     /tmp/ccX8BQhk.s:1508   .text._ZN5boost9algorithm11replace_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEA2_cS8_EEvRT_RKT0_RKT1_:0000000000000000 _ZN5boost9algorithm11replace_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEA2_cS8_EEvRT_RKT0_RKT1_
     /tmp/ccX8BQhk.s:1576   .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_:0000000000000000 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
     /tmp/ccX8BQhk.s:1449   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev
     /tmp/ccX8BQhk.s:1449   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev
     /tmp/ccX8BQhk.s:1750   .text._ZN5boost9algorithm15const_formatterIA2_cEENS0_6detail13const_formatFINS_14iterator_rangeINS_20range_const_iteratorIT_vE4typeEEEEERKS7_:0000000000000000 _ZN5boost9algorithm15const_formatterIA2_cEENS0_6detail13const_formatFINS_14iterator_rangeINS_20range_const_iteratorIT_vE4typeEEEEERKS7_
     /tmp/ccX8BQhk.s:1700   .text._ZN5boost9algorithm12first_finderIA2_cEENS0_6detail13first_finderFINS_20range_const_iteratorIT_vE4typeENS0_8is_equalEEERKS6_:0000000000000000 _ZN5boost9algorithm12first_finderIA2_cEENS0_6detail13first_finderFINS_20range_const_iteratorIT_vE4typeENS0_8is_equalEEERKS6_
     /tmp/ccX8BQhk.s:1794   .text._ZN5boost9algorithm15find_format_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_6detail13first_finderFIPKcNS0_8is_equalEEENS8_13const_formatFINS_14iterator_rangeISB_EEEEEEvRT_T0_T1_:0000000000000000 _ZN5boost9algorithm15find_format_allINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_6detail13first_finderFIPKcNS0_8is_equalEEENS8_13const_formatFINS_14iterator_rangeISB_EEEEEEvRT_T0_T1_
     /tmp/ccX8BQhk.s:1666   .text._ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISC_SB_E7__valueES8_E6__typeEEE:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISC_SB_E7__valueES8_E6__typeEEE
     /tmp/ccX8BQhk.s:1883   .text._ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv
     /tmp/ccX8BQhk.s:1666   .text._ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISC_SB_E7__valueES8_E6__typeEEE:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1IPcEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISC_SB_E7__valueES8_E6__typeEEE
     /tmp/ccX8BQhk.s:1978   .text._ZN5boost10as_literalIcLm2EEENS_14iterator_rangeIPKT_EERAT0__S3_:0000000000000000 _ZN5boost10as_literalIcLm2EEENS_14iterator_rangeIPKT_EERAT0__S3_
     /tmp/ccX8BQhk.s:2009   .text._ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC2INS_14iterator_rangeIS4_EEEERKT_S5_:0000000000000000 _ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC1INS_14iterator_rangeIS4_EEEERKT_S5_
     /tmp/ccX8BQhk.s:2055   .text._ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC2ERKS6_:0000000000000000 _ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC1ERKS6_
     /tmp/ccX8BQhk.s:2126   .text._ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_iteratorIT_vE4typeERS9_:0000000000000000 _ZN5boost17range_adl_barrier3endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_iteratorIT_vE4typeERS9_
     /tmp/ccX8BQhk.s:2100   .text._ZN5boost17range_adl_barrier5beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_iteratorIT_vE4typeERS9_:0000000000000000 _ZN5boost17range_adl_barrier5beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_iteratorIT_vE4typeERS9_
     /tmp/ccX8BQhk.s:2153   .text._ZNK5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEclIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEENS_14iterator_rangeIT_EESJ_SJ_:0000000000000000 _ZNK5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEclIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEENS_14iterator_rangeIT_EESJ_SJ_
GAS LISTING /tmp/ccX8BQhk.s 			page 593


     /tmp/ccX8BQhk.s:2343   .text._ZN5boost9algorithm6detail20find_format_all_implINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_13first_finderFIPKcNS0_8is_equalEEENS1_13const_formatFINS_14iterator_rangeISB_EEEENSF_IN9__gnu_cxx17__normal_iteratorIPcS8_EEEEEEvRT_T0_T1_T2_:0000000000000000 _ZN5boost9algorithm6detail20find_format_all_implINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_13first_finderFIPKcNS0_8is_equalEEENS1_13const_formatFINS_14iterator_rangeISB_EEEENSF_IN9__gnu_cxx17__normal_iteratorIPcS8_EEEEEEvRT_T0_T1_T2_
     /tmp/ccX8BQhk.s:1852   .text._ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_
     /tmp/ccX8BQhk.s:1852   .text._ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKS1_
     /tmp/ccX8BQhk.s:1904   .text._ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_17__normal_iteratorIT_T1_EERKNSB_IT0_SD_EE:0000000000000000 _ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_17__normal_iteratorIT_T1_EERKNSB_IT0_SD_EE
     /tmp/ccX8BQhk.s:2458   .text._ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv
     /tmp/ccX8BQhk.s:1941   .text._ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_:0000000000000000 _ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_
     /tmp/ccX8BQhk.s:2479   .text._ZN5boost12range_detail10make_rangeIKcEENS_14iterator_rangeIPT_EES5_b:0000000000000000 _ZN5boost12range_detail10make_rangeIKcEENS_14iterator_rangeIPT_EES5_b
     /tmp/ccX8BQhk.s:2009   .text._ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC2INS_14iterator_rangeIS4_EEEERKT_S5_:0000000000000000 _ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC2INS_14iterator_rangeIS4_EEEERKT_S5_
     /tmp/ccX8BQhk.s:2550   .text._ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS8_:0000000000000000 _ZN5boost17range_adl_barrier3endINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS8_
     /tmp/ccX8BQhk.s:2525   .text._ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS8_:0000000000000000 _ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIPKcEEEENS_14range_iteratorIKT_vE4typeERS8_
     /tmp/ccX8BQhk.s:2576   .text._ZN5boost14iterator_rangeIPKcEC2IS2_EET_S5_:0000000000000000 _ZN5boost14iterator_rangeIPKcEC1IS2_EET_S5_
     /tmp/ccX8BQhk.s:2055   .text._ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC2ERKS6_:0000000000000000 _ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC2ERKS6_
     /tmp/ccX8BQhk.s:2612   .text._ZN5boost12range_detail11range_beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_iteratorIT_vE4typeERS9_:0000000000000000 _ZN5boost12range_detail11range_beginINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_iteratorIT_vE4typeERS9_
     /tmp/ccX8BQhk.s:2637   .text._ZN5boost12range_detail9range_endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_iteratorIT_vE4typeERS9_:0000000000000000 _ZN5boost12range_detail9range_endINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_14range_iteratorIT_vE4typeERS9_
     /tmp/ccX8BQhk.s:2662   .text._ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_:0000000000000000 _ZN9__gnu_cxxneIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_
     /tmp/ccX8BQhk.s:2727   .text._ZN5boost5emptyINS_14iterator_rangeIPKcEEEEbRKT_:0000000000000000 _ZN5boost5emptyINS_14iterator_rangeIPKcEEEEbRKT_
     /tmp/ccX8BQhk.s:2764   .text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ISA_EET_SD_:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC1ISA_EET_SD_
     /tmp/ccX8BQhk.s:2800   .text._ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEE5beginEv:0000000000000000 _ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEE5beginEv
     /tmp/ccX8BQhk.s:2824   .text._ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEE3endEv:0000000000000000 _ZNK5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEE3endEv
     /tmp/ccX8BQhk.s:2848   .text._ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv:0000000000000000 _ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv
     /tmp/ccX8BQhk.s:2871   .text._ZNK5boost9algorithm8is_equalclIccEEbRKT_RKT0_:0000000000000000 _ZNK5boost9algorithm8is_equalclIccEEbRKT_RKT0_
     /tmp/ccX8BQhk.s:2699   .text._ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv
     /tmp/ccX8BQhk.s:2901   .text._ZN5boost9algorithm6detail17check_find_resultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcS8_EEEEEEbRT_RT0_:0000000000000000 _ZN5boost9algorithm6detail17check_find_resultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcS8_EEEEEEbRT_RT0_
     /tmp/ccX8BQhk.s:2946   .text._ZNK5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEclINS3_IN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEERKS6_RKT_:0000000000000000 _ZNK5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEclINS3_IN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEERKS6_RKT_
     /tmp/ccX8BQhk.s:2970   .text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ISB_EERT_PNS_9enable_ifINSB_19is_compatible_rangeISD_EEvE4typeE:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC1ISB_EERT_PNS_9enable_ifINSB_19is_compatible_rangeISD_EEvE4typeE
     /tmp/ccX8BQhk.s:3016   .text._ZN5boost9algorithm6detail21find_format_all_impl2INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_13first_finderFIPKcNS0_8is_equalEEENS1_13const_formatFINS_14iterator_rangeISB_EEEENSF_IN9__gnu_cxx17__normal_iteratorIPcS8_EEEESG_EEvRT_T0_T1_T2_T3_:0000000000000000 _ZN5boost9algorithm6detail21find_format_all_impl2INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_13first_finderFIPKcNS0_8is_equalEEENS1_13const_formatFINS_14iterator_rangeISB_EEEENSF_IN9__gnu_cxx17__normal_iteratorIPcS8_EEEESG_EEvRT_T0_T1_T2_T3_
     /tmp/ccX8BQhk.s:2426   .text._ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm:0000000000000000 _ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm
     /tmp/ccX8BQhk.s:3244   .text._ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm:0000000000000000 _ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm
     /tmp/ccX8BQhk.s:3381   .text._ZN5boost12range_detail11range_beginIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4typeERS8_:0000000000000000 _ZN5boost12range_detail11range_beginIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4typeERS8_
     /tmp/ccX8BQhk.s:3406   .text._ZN5boost12range_detail9range_endIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4typeERS8_:0000000000000000 _ZN5boost12range_detail9range_endIKNS_14iterator_rangeIPKcEEEENS_14range_iteratorIT_vE4typeERS8_
     /tmp/ccX8BQhk.s:2576   .text._ZN5boost14iterator_rangeIPKcEC2IS2_EET_S5_:0000000000000000 _ZN5boost14iterator_rangeIPKcEC2IS2_EET_S5_
     /tmp/ccX8BQhk.s:3432   .text._ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traversal_tagEEC2IS3_EET_S8_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traversal_tagEEC2IS3_EET_S8_
     /tmp/ccX8BQhk.s:2764   .text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ISA_EET_SD_:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ISA_EET_SD_
     /tmp/ccX8BQhk.s:3468   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC2ISB_EET_SG_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC2ISB_EET_SG_
     /tmp/ccX8BQhk.s:3504   .text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2INS0_INS2_IPcSA_EEEEEERT_PNS_9enable_ifINSC_19is_compatible_rangeISH_EEvE4typeE:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC1INS0_INS2_IPcSA_EEEEEERT_PNS_9enable_ifINSC_19is_compatible_rangeISH_EEvE4typeE
     /tmp/ccX8BQhk.s:3551   .text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE5emptyEv:0000000000000000 _ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE5emptyEv
     /tmp/ccX8BQhk.s:2970   .text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ISB_EERT_PNS_9enable_ifINSB_19is_compatible_rangeISD_EEvE4typeE:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ISB_EERT_PNS_9enable_ifINSB_19is_compatible_rangeISD_EEvE4typeE
     /tmp/ccX8BQhk.s:3604   .text._ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7adl_endINS_14iterator_rangeISB_EEEESB_RT_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7adl_endINS_14iterator_rangeISB_EEEESB_RT_
     /tmp/ccX8BQhk.s:3579   .text._ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9adl_beginINS_14iterator_rangeISB_EEEESB_RT_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9adl_beginINS_14iterator_rangeISB_EEEESB_RT_
     /tmp/ccX8BQhk.s:3630   .text._ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_13const_formatFINS_14iterator_rangeIPKcEEEESH_EC2ERKNSE_ISC_EERKSH_RKSI_:0000000000000000 _ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_13const_formatFINS_14iterator_rangeIPKcEEEESH_EC1ERKNSE_ISC_EERKSH_RKSI_
     /tmp/ccX8BQhk.s:3674   .text._ZNSt5dequeIcSaIcEEC2Ev:0000000000000000 _ZNSt5dequeIcSaIcEEC1Ev
     /tmp/ccX8BQhk.s:3778   .text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEcvMSE_SB_Ev:0000000000000000 _ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEcvMSE_SB_Ev
     /tmp/ccX8BQhk.s:3813   .text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE5beginEv:0000000000000000 _ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE5beginEv
     /tmp/ccX8BQhk.s:3836   .text._ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcES4_EEN9__gnu_cxx17__normal_iteratorIPcSA_EEEET1_RT_RT0_SF_SF_SF_:0000000000000000 _ZN5boost9algorithm6detail15process_segmentISt5dequeIcSaIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcES4_EEN9__gnu_cxx17__normal_iteratorIPcSA_EEEET1_RT_RT0_SF_SF_SF_
     /tmp/ccX8BQhk.s:3883   .text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE3endEv:0000000000000000 _ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE3endEv
     /tmp/ccX8BQhk.s:3907   .text._ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_13const_formatFINS_14iterator_rangeIPKcEEEESH_E13format_resultEv:0000000000000000 _ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_13const_formatFINS_14iterator_rangeIPKcEEEESH_E13format_resultEv
     /tmp/ccX8BQhk.s:3930   .text._ZN5boost9algorithm6detail15copy_to_storageISt5dequeIcSaIcEENS_14iterator_rangeIPKcEEEEvRT_RKT0_:0000000000000000 _ZN5boost9algorithm6detail15copy_to_storageISt5dequeIcSaIcEENS_14iterator_rangeIPKcEEEEvRT_RKT0_
     /tmp/ccX8BQhk.s:4000   .text._ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_13const_formatFINS_14iterator_rangeIPKcEEEESH_EaSINSE_ISC_EEEERSJ_T_:0000000000000000 _ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_13const_formatFINS_14iterator_rangeIPKcEEEESH_EaSINSE_ISC_EEEERSJ_T_
     /tmp/ccX8BQhk.s:4055   .text._ZNKSt5dequeIcSaIcEE5emptyEv:0000000000000000 _ZNKSt5dequeIcSaIcEE5emptyEv
     /tmp/ccX8BQhk.s:4083   .text._ZN5boost9algorithm6detail5eraseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENT_8iteratorERS9_SA_SA_:0000000000000000 _ZN5boost9algorithm6detail5eraseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENT_8iteratorERS9_SA_SA_
     /tmp/ccX8BQhk.s:4164   .text._ZNSt5dequeIcSaIcEE3endEv:0000000000000000 _ZNSt5dequeIcSaIcEE3endEv
     /tmp/ccX8BQhk.s:4134   .text._ZNSt5dequeIcSaIcEE5beginEv:0000000000000000 _ZNSt5dequeIcSaIcEE5beginEv
     /tmp/ccX8BQhk.s:4236   .text._ZN5boost9algorithm6detail6insertINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt15_Deque_iteratorIcRcPcEEEvRT_NSD_8iteratorET0_SG_:0000000000000000 _ZN5boost9algorithm6detail6insertINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt15_Deque_iteratorIcRcPcEEEvRT_NSD_8iteratorET0_SG_
     /tmp/ccX8BQhk.s:3704   .text._ZNSt5dequeIcSaIcEED2Ev:0000000000000000 _ZNSt5dequeIcSaIcEED1Ev
     /tmp/ccX8BQhk.s:3272   .text._ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_:0000000000000000 _ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_
     /tmp/ccX8BQhk.s:4292   .text._ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_:0000000000000000 _ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_
     /tmp/ccX8BQhk.s:4313   .text._ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag:0000000000000000 _ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag
GAS LISTING /tmp/ccX8BQhk.s 			page 594


     /tmp/ccX8BQhk.s:3321   .text._ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_:0000000000000000 _ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_
     /tmp/ccX8BQhk.s:4340   .text._ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv
     /tmp/ccX8BQhk.s:3345   .text._ZSt3maxImERKT_S2_S2_:0000000000000000 _ZSt3maxImERKT_S2_S2_
     /tmp/ccX8BQhk.s:4362   .text._ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traversal_tagEEC2IS3_EET_S8_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traversal_tagEEC2IS3_EET_S8_
     /tmp/ccX8BQhk.s:3432   .text._ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traversal_tagEEC2IS3_EET_S8_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traversal_tagEEC1IS3_EET_S8_
     /tmp/ccX8BQhk.s:4434   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC2ISB_EET_SG_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC2ISB_EET_SG_
     /tmp/ccX8BQhk.s:3468   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC2ISB_EET_SG_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC1ISB_EET_SG_
     /tmp/ccX8BQhk.s:3504   .text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2INS0_INS2_IPcSA_EEEEEERT_PNS_9enable_ifINSC_19is_compatible_rangeISH_EEvE4typeE:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2INS0_INS2_IPcSA_EEEEEERT_PNS_9enable_ifINSC_19is_compatible_rangeISH_EEvE4typeE
     /tmp/ccX8BQhk.s:4510   .text._ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7adl_endINS_14iterator_rangeINS3_IPcSB_EEEEEESC_RT_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7adl_endINS_14iterator_rangeINS3_IPcSB_EEEEEESC_RT_
     /tmp/ccX8BQhk.s:4469   .text._ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9adl_beginINS_14iterator_rangeINS3_IPcSB_EEEEEESC_RT_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_implIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9adl_beginINS_14iterator_rangeINS3_IPcSB_EEEEEESC_RT_
     /tmp/ccX8BQhk.s:4398   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC2ISC_EET_SH_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC2ISC_EET_SH_
     /tmp/ccX8BQhk.s:4551   .text._ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_:0000000000000000 _ZN9__gnu_cxxeqIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESE_
     /tmp/ccX8BQhk.s:4587   .text._ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEENS_14range_iteratorIT_vE4typeERSF_:0000000000000000 _ZN5boost17range_adl_barrier5beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEENS_14range_iteratorIT_vE4typeERSF_
     /tmp/ccX8BQhk.s:4612   .text._ZN5boost17range_adl_barrier3endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEENS_14range_iteratorIT_vE4typeERSF_:0000000000000000 _ZN5boost17range_adl_barrier3endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEENS_14range_iteratorIT_vE4typeERSF_
     /tmp/ccX8BQhk.s:3630   .text._ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_13const_formatFINS_14iterator_rangeIPKcEEEESH_EC2ERKNSE_ISC_EERKSH_RKSI_:0000000000000000 _ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_13const_formatFINS_14iterator_rangeIPKcEEEESH_EC2ERKNSE_ISC_EERKSH_RKSI_
     /tmp/ccX8BQhk.s:3674   .text._ZNSt5dequeIcSaIcEEC2Ev:0000000000000000 _ZNSt5dequeIcSaIcEEC2Ev
     /tmp/ccX8BQhk.s:4668   .text._ZNSt11_Deque_baseIcSaIcEEC2Ev:0000000000000000 _ZNSt11_Deque_baseIcSaIcEEC2Ev
     /tmp/ccX8BQhk.s:3704   .text._ZNSt5dequeIcSaIcEED2Ev:0000000000000000 _ZNSt5dequeIcSaIcEED2Ev
     /tmp/ccX8BQhk.s:4799   .text._ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
     /tmp/ccX8BQhk.s:4821   .text._ZNSt5dequeIcSaIcEE15_M_destroy_dataESt15_Deque_iteratorIcRcPcES5_RKS0_:0000000000000000 _ZNSt5dequeIcSaIcEE15_M_destroy_dataESt15_Deque_iteratorIcRcPcES5_RKS0_
     /tmp/ccX8BQhk.s:4743   .text._ZNSt11_Deque_baseIcSaIcEED2Ev:0000000000000000 _ZNSt11_Deque_baseIcSaIcEED2Ev
     /tmp/ccX8BQhk.s:4855   .text._ZN5boost12range_detail9safe_boolIMNS_21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEESD_E19to_unspecified_boolEbSH_:0000000000000000 _ZN5boost12range_detail9safe_boolIMNS_21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEESD_E19to_unspecified_boolEbSH_
     /tmp/ccX8BQhk.s:4889   .text._ZN5boost9algorithm6detail22process_segment_helperILb0EEclISt5dequeIcSaIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcES6_EEN9__gnu_cxx17__normal_iteratorIPcSC_EEEET1_RT_RT0_SH_SH_SH_:0000000000000000 _ZN5boost9algorithm6detail22process_segment_helperILb0EEclISt5dequeIcSaIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcES6_EEN9__gnu_cxx17__normal_iteratorIPcSC_EEEET1_RT_RT0_SH_SH_SH_
     /tmp/ccX8BQhk.s:5006   .text._ZNSt15_Deque_iteratorIcRKcPS0_EC2ERKS_IcRcPcE:0000000000000000 _ZNSt15_Deque_iteratorIcRKcPS0_EC1ERKS_IcRcPcE
     /tmp/ccX8BQhk.s:5049   .text._ZNSt5dequeIcSaIcEE6insertIPKcvEESt15_Deque_iteratorIcRcPcES5_IcRS3_S4_ET_SB_:0000000000000000 _ZNSt5dequeIcSaIcEE6insertIPKcvEESt15_Deque_iteratorIcRcPcES5_IcRS3_S4_ET_SB_
     /tmp/ccX8BQhk.s:5124   .text._ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEaSISA_EERSB_RNS0_IT_EE:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEaSISA_EERSB_RNS0_IT_EE
     /tmp/ccX8BQhk.s:5167   .text._ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE5emptyEv:0000000000000000 _ZNK5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE5emptyEv
     /tmp/ccX8BQhk.s:5195   .text._ZSteqIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_:0000000000000000 _ZSteqIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_
     /tmp/ccX8BQhk.s:4194   .text._ZNSt15_Deque_iteratorIcRcPcEC2ERKS2_:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEC1ERKS2_
     /tmp/ccX8BQhk.s:4194   .text._ZNSt15_Deque_iteratorIcRcPcEC2ERKS2_:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEC2ERKS2_
     /tmp/ccX8BQhk.s:5223   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertISt15_Deque_iteratorIcRcPcEvEEN9__gnu_cxx17__normal_iteratorIS8_S4_EENSB_IPKcS4_EET_SG_:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertISt15_Deque_iteratorIcRcPcEvEEN9__gnu_cxx17__normal_iteratorIS8_S4_EENSB_IPKcS4_EET_SG_
     /tmp/ccX8BQhk.s:5325   .text._ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEEC2IS3_EET_S8_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEEC2IS3_EET_S8_
     /tmp/ccX8BQhk.s:4362   .text._ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traversal_tagEEC2IS3_EET_S8_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traversal_tagEEC1IS3_EET_S8_
     /tmp/ccX8BQhk.s:5364   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC2ISC_EET_SH_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC2ISC_EET_SH_
     /tmp/ccX8BQhk.s:4398   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC2ISC_EET_SH_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC1ISC_EET_SH_
     /tmp/ccX8BQhk.s:5400   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC2ISB_EET_SG_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC2ISB_EET_SG_
     /tmp/ccX8BQhk.s:4434   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC2ISB_EET_SG_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC1ISB_EET_SG_
     /tmp/ccX8BQhk.s:5438   .text._ZN5boost12range_detail11range_beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEENS_14range_iteratorIT_vE4typeERSF_:0000000000000000 _ZN5boost12range_detail11range_beginINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEENS_14range_iteratorIT_vE4typeERSF_
     /tmp/ccX8BQhk.s:5463   .text._ZN5boost12range_detail9range_endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEENS_14range_iteratorIT_vE4typeERSF_:0000000000000000 _ZN5boost12range_detail9range_endINS_14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEENS_14range_iteratorIT_vE4typeERSF_
     /tmp/ccX8BQhk.s:4638   .text._ZNSt11_Deque_baseIcSaIcEE11_Deque_implD2Ev:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE11_Deque_implD2Ev
     /tmp/ccX8BQhk.s:4638   .text._ZNSt11_Deque_baseIcSaIcEE11_Deque_implD2Ev:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE11_Deque_implD1Ev
     /tmp/ccX8BQhk.s:5489   .text._ZNSt11_Deque_baseIcSaIcEE11_Deque_implC2Ev:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE11_Deque_implC1Ev
     /tmp/ccX8BQhk.s:5532   .text._ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEm:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE17_M_initialize_mapEm
     /tmp/ccX8BQhk.s:4668   .text._ZNSt11_Deque_baseIcSaIcEEC2Ev:0000000000000000 _ZNSt11_Deque_baseIcSaIcEEC1Ev
     /tmp/ccX8BQhk.s:5737   .text._ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE16_M_destroy_nodesEPPcS3_
     /tmp/ccX8BQhk.s:5783   .text._ZNSt11_Deque_baseIcSaIcEE17_M_deallocate_mapEPPcm:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE17_M_deallocate_mapEPPcm
     /tmp/ccX8BQhk.s:4743   .text._ZNSt11_Deque_baseIcSaIcEED2Ev:0000000000000000 _ZNSt11_Deque_baseIcSaIcEED1Ev
     /tmp/ccX8BQhk.s:5844   .text._ZN5boost9algorithm6detail17move_from_storageISt5dequeIcSaIcEEN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcES4_EEEEEET0_RT_SF_SF_:0000000000000000 _ZN5boost9algorithm6detail17move_from_storageISt5dequeIcSaIcEEN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcES4_EEEEEET0_RT_SF_SF_
     /tmp/ccX8BQhk.s:5932   .text._ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_:0000000000000000 _ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_
     /tmp/ccX8BQhk.s:5968   .text._ZSt4copyIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_ET0_T_SB_SA_:0000000000000000 _ZSt4copyIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_ET0_T_SB_SA_
     /tmp/ccX8BQhk.s:6011   .text._ZNSt5dequeIcSaIcEE9push_backERKc:0000000000000000 _ZNSt5dequeIcSaIcEE9push_backERKc
     /tmp/ccX8BQhk.s:6068   .text._ZNSt5dequeIcSaIcEE5frontEv:0000000000000000 _ZNSt5dequeIcSaIcEE5frontEv
     /tmp/ccX8BQhk.s:6107   .text._ZNSt5dequeIcSaIcEE9pop_frontEv:0000000000000000 _ZNSt5dequeIcSaIcEE9pop_frontEv
     /tmp/ccX8BQhk.s:5006   .text._ZNSt15_Deque_iteratorIcRKcPS0_EC2ERKS_IcRcPcE:0000000000000000 _ZNSt15_Deque_iteratorIcRKcPS0_EC2ERKS_IcRcPcE
     /tmp/ccX8BQhk.s:6171   .text._ZNKSt5dequeIcSaIcEE6cbeginEv:0000000000000000 _ZNKSt5dequeIcSaIcEE6cbeginEv
     /tmp/ccX8BQhk.s:6200   .text._ZStmiIcRKcPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_:0000000000000000 _ZStmiIcRKcPS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_
     /tmp/ccX8BQhk.s:6261   .text._ZNKSt15_Deque_iteratorIcRKcPS0_E13_M_const_castEv:0000000000000000 _ZNKSt15_Deque_iteratorIcRKcPS0_E13_M_const_castEv
GAS LISTING /tmp/ccX8BQhk.s 			page 595


     /tmp/ccX8BQhk.s:6293   .text._ZNSt5dequeIcSaIcEE18_M_insert_dispatchIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St12__false_type:0000000000000000 _ZNSt5dequeIcSaIcEE18_M_insert_dispatchIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St12__false_type
     /tmp/ccX8BQhk.s:6346   .text._ZNKSt15_Deque_iteratorIcRcPcEplEl:0000000000000000 _ZNKSt15_Deque_iteratorIcRcPcEplEl
     /tmp/ccX8BQhk.s:6397   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE6assignISB_EEvT_SG_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEE6assignISB_EEvT_SG_
     /tmp/ccX8BQhk.s:6429   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceISt15_Deque_iteratorIcRcPcEvEERS4_N9__gnu_cxx17__normal_iteratorIPKcS4_EESF_T_SG_:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceISt15_Deque_iteratorIcRcPcEvEERS4_N9__gnu_cxx17__normal_iteratorIPKcS4_EESF_T_SG_
     /tmp/ccX8BQhk.s:5301   .text._ZN5boost21iterator_range_detail18iterator_range_tagC2Ev:0000000000000000 _ZN5boost21iterator_range_detail18iterator_range_tagC2Ev
     /tmp/ccX8BQhk.s:5301   .text._ZN5boost21iterator_range_detail18iterator_range_tagC2Ev:0000000000000000 _ZN5boost21iterator_range_detail18iterator_range_tagC1Ev
     /tmp/ccX8BQhk.s:5325   .text._ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEEC2IS3_EET_S8_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEEC1IS3_EET_S8_
     /tmp/ccX8BQhk.s:6489   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC2ISC_EET_SH_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC2ISC_EET_SH_
     /tmp/ccX8BQhk.s:5364   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC2ISC_EET_SH_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC1ISC_EET_SH_
     /tmp/ccX8BQhk.s:5400   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC2ISB_EET_SG_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC1ISB_EET_SG_
     /tmp/ccX8BQhk.s:5489   .text._ZNSt11_Deque_baseIcSaIcEE11_Deque_implC2Ev:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE11_Deque_implC2Ev
     /tmp/ccX8BQhk.s:6528   .text._ZNSt15_Deque_iteratorIcRcPcEC2Ev:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEC1Ev
     /tmp/ccX8BQhk.s:6562   .text._ZNSt11_Deque_baseIcSaIcEE15_M_allocate_mapEm:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE15_M_allocate_mapEm
     /tmp/ccX8BQhk.s:6652   .text._ZNSt11_Deque_baseIcSaIcEE15_M_create_nodesEPPcS3_:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE15_M_create_nodesEPPcS3_
     /tmp/ccX8BQhk.s:6758   .text._ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcE11_M_set_nodeEPS1_
     /tmp/ccX8BQhk.s:6802   .text._ZNSt11_Deque_baseIcSaIcEE18_M_deallocate_nodeEPc:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE18_M_deallocate_nodeEPc
     /tmp/ccX8BQhk.s:6835   .text._ZNKSt11_Deque_baseIcSaIcEE20_M_get_map_allocatorEv:0000000000000000 _ZNKSt11_Deque_baseIcSaIcEE20_M_get_map_allocatorEv
     /tmp/ccX8BQhk.s:6897   .text._ZNSt16allocator_traitsISaIPcEE10deallocateERS1_PS0_m:0000000000000000 _ZNSt16allocator_traitsISaIPcEE10deallocateERS1_PS0_m
     /tmp/ccX8BQhk.s:6867   .text._ZNSaIPcED2Ev:0000000000000000 _ZNSaIPcED1Ev
     /tmp/ccX8BQhk.s:6948   .text._ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt11_Miter_baseIT_E13iterator_typeESB_:0000000000000000 _ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt11_Miter_baseIT_E13iterator_typeESB_
     /tmp/ccX8BQhk.s:6972   .text._ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_ET1_T0_SB_SA_:0000000000000000 _ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_ET1_T0_SB_SA_
     /tmp/ccX8BQhk.s:7057   .text._ZNSt16allocator_traitsISaIcEE9constructIcJRKcEEEvRS0_PT_DpOT0_:0000000000000000 _ZNSt16allocator_traitsISaIcEE9constructIcJRKcEEEvRS0_PT_DpOT0_
     /tmp/ccX8BQhk.s:7093   .text._ZNSt5dequeIcSaIcEE16_M_push_back_auxIJRKcEEEvDpOT_:0000000000000000 _ZNSt5dequeIcSaIcEE16_M_push_back_auxIJRKcEEEvDpOT_
     /tmp/ccX8BQhk.s:7164   .text._ZNKSt15_Deque_iteratorIcRcPcEdeEv:0000000000000000 _ZNKSt15_Deque_iteratorIcRcPcEdeEv
     /tmp/ccX8BQhk.s:7186   .text._ZNSt16allocator_traitsISaIcEE7destroyIcEEvRS0_PT_:0000000000000000 _ZNSt16allocator_traitsISaIcEE7destroyIcEEvRS0_PT_
     /tmp/ccX8BQhk.s:7215   .text._ZNSt5dequeIcSaIcEE16_M_pop_front_auxEv:0000000000000000 _ZNSt5dequeIcSaIcEE16_M_pop_front_auxEv
     /tmp/ccX8BQhk.s:7271   .text._ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv:0000000000000000 _ZNSt15_Deque_iteratorIcRKcPS0_E14_S_buffer_sizeEv
     /tmp/ccX8BQhk.s:7293   .text._ZNSt15_Deque_iteratorIcRcPcEC2ES1_PS1_:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEC1ES1_PS1_
     /tmp/ccX8BQhk.s:7342   .text._ZNSt5dequeIcSaIcEE19_M_range_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St20forward_iterator_tag:0000000000000000 _ZNSt5dequeIcSaIcEE19_M_range_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_St20forward_iterator_tag
     /tmp/ccX8BQhk.s:7642   .text._ZNSt15_Deque_iteratorIcRcPcEpLEl:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEpLEl
     /tmp/ccX8BQhk.s:7760   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE19_M_replace_dispatchISt15_Deque_iteratorIcRcPcEEERS4_N9__gnu_cxx17__normal_iteratorIPKcS4_EESF_T_SG_St12__false_type:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE19_M_replace_dispatchISt15_Deque_iteratorIcRcPcEEERS4_N9__gnu_cxx17__normal_iteratorIPKcS4_EESF_T_SG_St12__false_type
     /tmp/ccX8BQhk.s:6489   .text._ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC2ISC_EET_SH_:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC1ISC_EET_SH_
     /tmp/ccX8BQhk.s:6528   .text._ZNSt15_Deque_iteratorIcRcPcEC2Ev:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEC2Ev
     /tmp/ccX8BQhk.s:7916   .text._ZNSt16allocator_traitsISaIPcEE8allocateERS1_m:0000000000000000 _ZNSt16allocator_traitsISaIPcEE8allocateERS1_m
     /tmp/ccX8BQhk.s:7945   .text._ZNSt11_Deque_baseIcSaIcEE16_M_allocate_nodeEv:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE16_M_allocate_nodeEv
     /tmp/ccX8BQhk.s:7974   .text._ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcE14_S_buffer_sizeEv
     /tmp/ccX8BQhk.s:7996   .text._ZNKSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv:0000000000000000 _ZNKSt11_Deque_baseIcSaIcEE19_M_get_Tp_allocatorEv
     /tmp/ccX8BQhk.s:8018   .text._ZNSaIPcEC2IcEERKSaIT_E:0000000000000000 _ZNSaIPcEC1IcEERKSaIT_E
     /tmp/ccX8BQhk.s:6867   .text._ZNSaIPcED2Ev:0000000000000000 _ZNSaIPcED2Ev
     /tmp/ccX8BQhk.s:8049   .text._ZN9__gnu_cxx13new_allocatorIPcED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIPcED2Ev
     /tmp/ccX8BQhk.s:8073   .text._ZN9__gnu_cxx13new_allocatorIPcE10deallocateEPS1_m:0000000000000000 _ZN9__gnu_cxx13new_allocatorIPcE10deallocateEPS1_m
     /tmp/ccX8BQhk.s:6927   .text._ZNSt5dequeIcSaIcEE14_S_buffer_sizeEv:0000000000000000 _ZNSt5dequeIcSaIcEE14_S_buffer_sizeEv
     /tmp/ccX8BQhk.s:8100   .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEELb0EE7_S_baseES9_:0000000000000000 _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEELb0EE7_S_baseES9_
     /tmp/ccX8BQhk.s:8121   .text._ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt11_Niter_baseIT_E13iterator_typeESB_:0000000000000000 _ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt11_Niter_baseIT_E13iterator_typeESB_
     /tmp/ccX8BQhk.s:8145   .text._ZSt13__copy_move_aILb0EPcS0_ET1_T0_S2_S1_:0000000000000000 _ZSt13__copy_move_aILb0EPcS0_ET1_T0_S2_S1_
     /tmp/ccX8BQhk.s:7035   .text._ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE:0000000000000000 _ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE
     /tmp/ccX8BQhk.s:8178   .text._ZN9__gnu_cxx13new_allocatorIcE9constructIcJRKcEEEvPT_DpOT0_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIcE9constructIcJRKcEEEvPT_DpOT0_
     /tmp/ccX8BQhk.s:7057   .text._ZNSt16allocator_traitsISaIcEE9constructIcJRKcEEEvRS0_PT_DpOT0_:0000000000000000 _ZNSt16allocator_traitsISaIcEE9constructIcIRKcEEEvRS0_PT_DpOT0_
     /tmp/ccX8BQhk.s:8221   .text._ZNSt5dequeIcSaIcEE22_M_reserve_map_at_backEm:0000000000000000 _ZNSt5dequeIcSaIcEE22_M_reserve_map_at_backEm
     /tmp/ccX8BQhk.s:7093   .text._ZNSt5dequeIcSaIcEE16_M_push_back_auxIJRKcEEEvDpOT_:0000000000000000 _ZNSt5dequeIcSaIcEE16_M_push_back_auxIIRKcEEEvDpOT_
     /tmp/ccX8BQhk.s:8274   .text._ZN9__gnu_cxx13new_allocatorIcE7destroyIcEEvPT_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIcE7destroyIcEEvPT_
     /tmp/ccX8BQhk.s:7293   .text._ZNSt15_Deque_iteratorIcRcPcEC2ES1_PS1_:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEC2ES1_PS1_
     /tmp/ccX8BQhk.s:8297   .text._ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEm:0000000000000000 _ZNSt5dequeIcSaIcEE28_M_reserve_elements_at_frontEm
     /tmp/ccX8BQhk.s:8360   .text._ZSt22__uninitialized_copy_aIPKcSt15_Deque_iteratorIcRcPcEcET0_T_S7_S6_RSaIT1_E:0000000000000000 _ZSt22__uninitialized_copy_aIPKcSt15_Deque_iteratorIcRcPcEcET0_T_S7_S6_RSaIT1_E
     /tmp/ccX8BQhk.s:8408   .text._ZNSt5dequeIcSaIcEE27_M_reserve_elements_at_backEm:0000000000000000 _ZNSt5dequeIcSaIcEE27_M_reserve_elements_at_backEm
     /tmp/ccX8BQhk.s:8473   .text._ZNSt5dequeIcSaIcEE13_M_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_m:0000000000000000 _ZNSt5dequeIcSaIcEE13_M_insert_auxIPKcEEvSt15_Deque_iteratorIcRcPcET_S9_m
     /tmp/ccX8BQhk.s:9083   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt15_Deque_iteratorIcRcPcEvEET_SA_RKS3_:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ISt15_Deque_iteratorIcRcPcEvEET_SA_RKS3_
GAS LISTING /tmp/ccX8BQhk.s 			page 596


     /tmp/ccX8BQhk.s:9194   .text._ZN9__gnu_cxx13new_allocatorIPcE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorIPcE8allocateEmPKv
     /tmp/ccX8BQhk.s:9233   .text._ZNSt16allocator_traitsISaIcEE8allocateERS0_m:0000000000000000 _ZNSt16allocator_traitsISaIcEE8allocateERS0_m
     /tmp/ccX8BQhk.s:8018   .text._ZNSaIPcEC2IcEERKSaIT_E:0000000000000000 _ZNSaIPcEC2IcEERKSaIT_E
     /tmp/ccX8BQhk.s:9262   .text._ZN9__gnu_cxx13new_allocatorIPcEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIPcEC2Ev
     /tmp/ccX8BQhk.s:8049   .text._ZN9__gnu_cxx13new_allocatorIPcED2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIPcED1Ev
     /tmp/ccX8BQhk.s:9285   .text._ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEELb1EE7_S_baseES9_:0000000000000000 _ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEELb1EE7_S_baseES9_
     /tmp/ccX8BQhk.s:9310   .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_:0000000000000000 _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_
     /tmp/ccX8BQhk.s:8178   .text._ZN9__gnu_cxx13new_allocatorIcE9constructIcJRKcEEEvPT_DpOT0_:0000000000000000 _ZN9__gnu_cxx13new_allocatorIcE9constructIcIRKcEEEvPT_DpOT0_
     /tmp/ccX8BQhk.s:9355   .text._ZNSt5dequeIcSaIcEE17_M_reallocate_mapEmb:0000000000000000 _ZNSt5dequeIcSaIcEE17_M_reallocate_mapEmb
     /tmp/ccX8BQhk.s:9565   .text._ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEm:0000000000000000 _ZNSt5dequeIcSaIcEE24_M_new_elements_at_frontEm
     /tmp/ccX8BQhk.s:9739   .text._ZNKSt15_Deque_iteratorIcRcPcEmiEl:0000000000000000 _ZNKSt15_Deque_iteratorIcRcPcEmiEl
     /tmp/ccX8BQhk.s:9789   .text._ZSt18uninitialized_copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_:0000000000000000 _ZSt18uninitialized_copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
     /tmp/ccX8BQhk.s:9842   .text._ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEm:0000000000000000 _ZNSt5dequeIcSaIcEE23_M_new_elements_at_backEm
     /tmp/ccX8BQhk.s:10013  .text._ZStmiIcRcPcENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_:0000000000000000 _ZStmiIcRcPcENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_
     /tmp/ccX8BQhk.s:10074  .text._ZNKSt5dequeIcSaIcEE4sizeEv:0000000000000000 _ZNKSt5dequeIcSaIcEE4sizeEv
     /tmp/ccX8BQhk.s:10102  .text._ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_:0000000000000000 _ZSt22__uninitialized_move_aISt15_Deque_iteratorIcRcPcES3_SaIcEET0_T_S6_S5_RT1_
     /tmp/ccX8BQhk.s:10211  .text._ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_:0000000000000000 _ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_
     /tmp/ccX8BQhk.s:10274  .text._ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_:0000000000000000 _ZSt4copyIPKcSt15_Deque_iteratorIcRcPcEET0_T_S7_S6_
     /tmp/ccX8BQhk.s:10332  .text._ZSt7advanceIPKclEvRT_T0_:0000000000000000 _ZSt7advanceIPKclEvRT_T0_
     /tmp/ccX8BQhk.s:10382  .text._ZSt25__uninitialized_move_copyISt15_Deque_iteratorIcRcPcEPKcS3_SaIcEET1_T_S8_T0_S9_S7_RT2_:0000000000000000 _ZSt25__uninitialized_move_copyISt15_Deque_iteratorIcRcPcEPKcS3_SaIcEET1_T_S8_T0_S9_S7_RT2_
     /tmp/ccX8BQhk.s:10538  .text._ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_:0000000000000000 _ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES4_S4_S4_
     /tmp/ccX8BQhk.s:10601  .text._ZSt25__uninitialized_copy_moveIPKcSt15_Deque_iteratorIcRcPcES5_SaIcEET1_T_S8_T0_S9_S7_RT2_:0000000000000000 _ZSt25__uninitialized_copy_moveIPKcSt15_Deque_iteratorIcRcPcES5_SaIcEET1_T_S8_T0_S9_S7_RT2_
     /tmp/ccX8BQhk.s:9083   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt15_Deque_iteratorIcRcPcEvEET_SA_RKS3_:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt15_Deque_iteratorIcRcPcEvEET_SA_RKS3_
     /tmp/ccX8BQhk.s:10758  .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcPcEEEvT_SA_:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcPcEEEvT_SA_
     /tmp/ccX8BQhk.s:10815  .text._ZNK9__gnu_cxx13new_allocatorIPcE8max_sizeEv:0000000000000000 _ZNK9__gnu_cxx13new_allocatorIPcE8max_sizeEv
     /tmp/ccX8BQhk.s:10837  .text._ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv:0000000000000000 _ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv
     /tmp/ccX8BQhk.s:9262   .text._ZN9__gnu_cxx13new_allocatorIPcEC2Ev:0000000000000000 _ZN9__gnu_cxx13new_allocatorIPcEC1Ev
     /tmp/ccX8BQhk.s:10875  .text._ZSt4copyIPPcS1_ET0_T_S3_S2_:0000000000000000 _ZSt4copyIPPcS1_ET0_T_S3_S2_
     /tmp/ccX8BQhk.s:10917  .text._ZSt13copy_backwardIPPcS1_ET0_T_S3_S2_:0000000000000000 _ZSt13copy_backwardIPPcS1_ET0_T_S3_S2_
     /tmp/ccX8BQhk.s:10960  .text._ZNKSt5dequeIcSaIcEE8max_sizeEv:0000000000000000 _ZNKSt5dequeIcSaIcEE8max_sizeEv
     /tmp/ccX8BQhk.s:10987  .text._ZNSt5dequeIcSaIcEE23_M_reserve_map_at_frontEm:0000000000000000 _ZNSt5dequeIcSaIcEE23_M_reserve_map_at_frontEm
     /tmp/ccX8BQhk.s:11033  .text._ZNSt15_Deque_iteratorIcRcPcEmIEl:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEmIEl
     /tmp/ccX8BQhk.s:11062  .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKcSt15_Deque_iteratorIcRcPcEEET0_T_S9_S8_:0000000000000000 _ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKcSt15_Deque_iteratorIcRcPcEEET0_T_S9_S8_
     /tmp/ccX8BQhk.s:11107  .text._ZSt18make_move_iteratorISt15_Deque_iteratorIcRcPcEESt13move_iteratorIT_ES5_:0000000000000000 _ZSt18make_move_iteratorISt15_Deque_iteratorIcRcPcEESt13move_iteratorIT_ES5_
     /tmp/ccX8BQhk.s:11182  .text._ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_cET0_T_S7_S6_RSaIT1_E:0000000000000000 _ZSt22__uninitialized_copy_aISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_cET0_T_S7_S6_RSaIT1_E
     /tmp/ccX8BQhk.s:11238  .text._ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_:0000000000000000 _ZSt4moveIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_
     /tmp/ccX8BQhk.s:11348  .text._ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_:0000000000000000 _ZSt12__miter_baseIPKcENSt11_Miter_baseIT_E13iterator_typeES3_
     /tmp/ccX8BQhk.s:11372  .text._ZSt14__copy_move_a2ILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_:0000000000000000 _ZSt14__copy_move_a2ILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_
     /tmp/ccX8BQhk.s:11435  .text._ZSt9__advanceIPKclEvRT_T0_St26random_access_iterator_tag:0000000000000000 _ZSt9__advanceIPKclEvRT_T0_St26random_access_iterator_tag
     /tmp/ccX8BQhk.s:11464  .text._ZSt8_DestroyISt15_Deque_iteratorIcRcPcEcEvT_S4_RSaIT0_E:0000000000000000 _ZSt8_DestroyISt15_Deque_iteratorIcRcPcEcEvT_S4_RSaIT0_E
     /tmp/ccX8BQhk.s:11514  .text._ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_:0000000000000000 _ZSt13move_backwardIcESt15_Deque_iteratorIT_RS1_PS1_ES0_IS1_RKS1_PS5_ES8_S4_
     /tmp/ccX8BQhk.s:11665  .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxISt15_Deque_iteratorIcRcPcEEEvT_SA_St12__false_type:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxISt15_Deque_iteratorIcRcPcEEEvT_SA_St12__false_type
     /tmp/ccX8BQhk.s:11721  .text._ZSt12__miter_baseIPPcENSt11_Miter_baseIT_E13iterator_typeES3_:0000000000000000 _ZSt12__miter_baseIPPcENSt11_Miter_baseIT_E13iterator_typeES3_
     /tmp/ccX8BQhk.s:11745  .text._ZSt14__copy_move_a2ILb0EPPcS1_ET1_T0_S3_S2_:0000000000000000 _ZSt14__copy_move_a2ILb0EPPcS1_ET1_T0_S3_S2_
     /tmp/ccX8BQhk.s:11792  .text._ZSt23__copy_move_backward_a2ILb0EPPcS1_ET1_T0_S3_S2_:0000000000000000 _ZSt23__copy_move_backward_a2ILb0EPPcS1_ET1_T0_S3_S2_
     /tmp/ccX8BQhk.s:11840  .text._ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ES3_:0000000000000000 _ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ES3_
     /tmp/ccX8BQhk.s:11150  .text._ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ERKS4_:0000000000000000 _ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ERKS4_
     /tmp/ccX8BQhk.s:11150  .text._ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ERKS4_:0000000000000000 _ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC1ERKS4_
     /tmp/ccX8BQhk.s:11872  .text._ZSt18uninitialized_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_:0000000000000000 _ZSt18uninitialized_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_
     /tmp/ccX8BQhk.s:11930  .text._ZSt3minIlERKT_S2_S2_:0000000000000000 _ZSt3minIlERKT_S2_S2_
     /tmp/ccX8BQhk.s:11965  .text._ZSt4moveIPcS0_ET0_T_S2_S1_:0000000000000000 _ZSt4moveIPcS0_ET0_T_S2_S1_
     /tmp/ccX8BQhk.s:12008  .text._ZNSt15_Deque_iteratorIcRKcPS0_EpLEl:0000000000000000 _ZNSt15_Deque_iteratorIcRKcPS0_EpLEl
     /tmp/ccX8BQhk.s:12125  .text._ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_:0000000000000000 _ZNSt10_Iter_baseIPKcLb0EE7_S_baseES1_
     /tmp/ccX8BQhk.s:12170  .text._ZSt12__niter_baseISt15_Deque_iteratorIcRcPcEENSt11_Niter_baseIT_E13iterator_typeES5_:0000000000000000 _ZSt12__niter_baseISt15_Deque_iteratorIcRcPcEENSt11_Niter_baseIT_E13iterator_typeES5_
     /tmp/ccX8BQhk.s:12146  .text._ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_:0000000000000000 _ZSt12__niter_baseIPKcENSt11_Niter_baseIT_E13iterator_typeES3_
     /tmp/ccX8BQhk.s:12212  .text._ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_:0000000000000000 _ZSt13__copy_move_aILb0EPKcSt15_Deque_iteratorIcRcPcEET1_T0_S7_S6_
     /tmp/ccX8BQhk.s:12260  .text._ZSt8_DestroyISt15_Deque_iteratorIcRcPcEEvT_S4_:0000000000000000 _ZSt8_DestroyISt15_Deque_iteratorIcRcPcEEvT_S4_
GAS LISTING /tmp/ccX8BQhk.s 			page 597


     /tmp/ccX8BQhk.s:12309  .text._ZSt13move_backwardIPcS0_ET0_T_S2_S1_:0000000000000000 _ZSt13move_backwardIPcS0_ET0_T_S2_S1_
     /tmp/ccX8BQhk.s:12352  .text._ZNSt15_Deque_iteratorIcRKcPS0_EmIEl:0000000000000000 _ZNSt15_Deque_iteratorIcRKcPS0_EmIEl
     /tmp/ccX8BQhk.s:12386  .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcPcEEEvT_SA_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructISt15_Deque_iteratorIcRcPcEEEvT_SA_St20forward_iterator_tag
     /tmp/ccX8BQhk.s:12594  .text._ZNSt10_Iter_baseIPPcLb0EE7_S_baseES1_:0000000000000000 _ZNSt10_Iter_baseIPPcLb0EE7_S_baseES1_
     /tmp/ccX8BQhk.s:12615  .text._ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_:0000000000000000 _ZSt12__niter_baseIPPcENSt11_Niter_baseIT_E13iterator_typeES3_
     /tmp/ccX8BQhk.s:12639  .text._ZSt13__copy_move_aILb0EPPcS1_ET1_T0_S3_S2_:0000000000000000 _ZSt13__copy_move_aILb0EPPcS1_ET1_T0_S3_S2_
     /tmp/ccX8BQhk.s:12671  .text._ZSt22__copy_move_backward_aILb0EPPcS1_ET1_T0_S3_S2_:0000000000000000 _ZSt22__copy_move_backward_aILb0EPPcS1_ET1_T0_S3_S2_
     /tmp/ccX8BQhk.s:11840  .text._ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ES3_:0000000000000000 _ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC2ES3_
     /tmp/ccX8BQhk.s:12703  .text._ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES6_EET0_T_S9_S8_:0000000000000000 _ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES6_EET0_T_S9_S8_
     /tmp/ccX8BQhk.s:12758  .text._ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_:0000000000000000 _ZSt12__miter_baseIPcENSt11_Miter_baseIT_E13iterator_typeES2_
     /tmp/ccX8BQhk.s:12782  .text._ZSt14__copy_move_a2ILb1EPcS0_ET1_T0_S2_S1_:0000000000000000 _ZSt14__copy_move_a2ILb1EPcS0_ET1_T0_S2_S1_
     /tmp/ccX8BQhk.s:12830  .text._ZNSt15_Deque_iteratorIcRKcPS0_E11_M_set_nodeEPPc:0000000000000000 _ZNSt15_Deque_iteratorIcRKcPS0_E11_M_set_nodeEPPc
     /tmp/ccX8BQhk.s:12873  .text._ZNSt10_Iter_baseISt15_Deque_iteratorIcRcPcELb0EE7_S_baseES3_:0000000000000000 _ZNSt10_Iter_baseISt15_Deque_iteratorIcRcPcELb0EE7_S_baseES3_
     /tmp/ccX8BQhk.s:12901  .text._ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKcSt15_Deque_iteratorIcRcPcEEET0_T_SA_S9_:0000000000000000 _ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mIPKcSt15_Deque_iteratorIcRcPcEEET0_T_SA_S9_
     /tmp/ccX8BQhk.s:12962  .text._ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIcRcPcEEEvT_S6_:0000000000000000 _ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIcRcPcEEEvT_S6_
     /tmp/ccX8BQhk.s:12984  .text._ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_:0000000000000000 _ZSt23__copy_move_backward_a2ILb1EPcS0_ET1_T0_S2_S1_
     /tmp/ccX8BQhk.s:13031  .text._ZN9__gnu_cxx17__is_null_pointerISt15_Deque_iteratorIcRcPcEEEbT_:0000000000000000 _ZN9__gnu_cxx17__is_null_pointerISt15_Deque_iteratorIcRcPcEEEbT_
     /tmp/ccX8BQhk.s:13053  .text._ZStneIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_:0000000000000000 _ZStneIcRcPcEbRKSt15_Deque_iteratorIT_T0_T1_ES8_
     /tmp/ccX8BQhk.s:13081  .text._ZSt8distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_:0000000000000000 _ZSt8distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_
     /tmp/ccX8BQhk.s:13139  .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsISt15_Deque_iteratorIcRcPcEEEvS8_T_SA_:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsISt15_Deque_iteratorIcRcPcEEEvS8_T_SA_
     /tmp/ccX8BQhk.s:13188  .text._ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPcEEPT_PKS4_S7_S5_:0000000000000000 _ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPcEEPT_PKS4_S7_S5_
     /tmp/ccX8BQhk.s:13235  .text._ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPcEEPT_PKS4_S7_S5_:0000000000000000 _ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPcEEPT_PKS4_S7_S5_
     /tmp/ccX8BQhk.s:13289  .text._ZSt4copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_:0000000000000000 _ZSt4copyISt13move_iteratorISt15_Deque_iteratorIcRcPcEES4_ET0_T_S7_S6_
     /tmp/ccX8BQhk.s:13395  .text._ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_:0000000000000000 _ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_
     /tmp/ccX8BQhk.s:13416  .text._ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_:0000000000000000 _ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_
     /tmp/ccX8BQhk.s:13440  .text._ZSt13__copy_move_aILb1EPcS0_ET1_T0_S2_S1_:0000000000000000 _ZSt13__copy_move_aILb1EPcS0_ET1_T0_S2_S1_
     /tmp/ccX8BQhk.s:13473  .text._ZNSt15_Deque_iteratorIcRcPcEppEv:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEppEv
     /tmp/ccX8BQhk.s:13523  .text._ZSt22__copy_move_backward_aILb1EPcS0_ET1_T0_S2_S1_:0000000000000000 _ZSt22__copy_move_backward_aILb1EPcS0_ET1_T0_S2_S1_
     /tmp/ccX8BQhk.s:13555  .text._ZSt19__iterator_categoryISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E17iterator_categoryERKS5_:0000000000000000 _ZSt19__iterator_categoryISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E17iterator_categoryERKS5_
     /tmp/ccX8BQhk.s:13575  .text._ZSt10__distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag:0000000000000000 _ZSt10__distanceISt15_Deque_iteratorIcRcPcEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag
     /tmp/ccX8BQhk.s:13603  .text._ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEEENSt11_Miter_baseIT_E13iterator_typeES7_:0000000000000000 _ZSt12__miter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEEENSt11_Miter_baseIT_E13iterator_typeES7_
     /tmp/ccX8BQhk.s:13645  .text._ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_:0000000000000000 _ZSt14__copy_move_a2ILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_
     /tmp/ccX8BQhk.s:13744  .text._ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_:0000000000000000 _ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_
     /tmp/ccX8BQhk.s:13788  .text._ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS3_S6_S4_:0000000000000000 _ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIcEEPT_PKS3_S6_S4_
     /tmp/ccX8BQhk.s:13838  .text._ZNSt10_Iter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEELb1EE7_S_baseES5_:0000000000000000 _ZNSt10_Iter_baseISt13move_iteratorISt15_Deque_iteratorIcRcPcEELb1EE7_S_baseES5_
     /tmp/ccX8BQhk.s:13875  .text._ZSt13__copy_move_aILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_:0000000000000000 _ZSt13__copy_move_aILb1ESt15_Deque_iteratorIcRcPcES3_ET1_T0_S5_S4_
     /tmp/ccX8BQhk.s:13934  .text._ZNKSt13move_iteratorISt15_Deque_iteratorIcRcPcEE4baseEv:0000000000000000 _ZNKSt13move_iteratorISt15_Deque_iteratorIcRcPcEE4baseEv
     /tmp/ccX8BQhk.s:13983  .text._ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIcRcPcES6_EET0_T_S8_S7_:0000000000000000 _ZNSt11__copy_moveILb1ELb0ESt26random_access_iterator_tagE8__copy_mISt15_Deque_iteratorIcRcPcES6_EET0_T_S8_S7_
     /tmp/ccX8BQhk.s:13962  .text._ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_:0000000000000000 _ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_
     /tmp/ccX8BQhk.s:14094  .rodata._ZTI16global_variables:0000000000000000 _ZTI16global_variables
     /tmp/ccX8BQhk.s:14078  .rodata._ZTIN5boost6system12system_errorE:0000000000000000 _ZTIN5boost6system12system_errorE
     /tmp/ccX8BQhk.s:14087  .rodata._ZTSN5boost6system12system_errorE:0000000000000000 _ZTSN5boost6system12system_errorE
     /tmp/ccX8BQhk.s:14102  .rodata._ZTS16global_variables:0000000000000000 _ZTS16global_variables
     /tmp/ccX8BQhk.s:14106  .text:0000000000000799 _Z41__static_initialization_and_destruction_0ii
     /tmp/ccX8BQhk.s:14143  .text:00000000000007dd _GLOBAL__sub_I__ZN16global_variablesC2Ev
                           .group:0000000000000000 _ZN5boost6system12system_errorD5Ev
                           .group:0000000000000000 _ZN5boost10filesystem4pathD5Ev
                           .group:0000000000000000 _ZN5boost10filesystem4pathC5ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
                           .group:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD5Ev
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC5IPcEERKNS0_IT_NS_11__enable_ifIXsrSt10__are_sameISC_SB_E7__valueES8_E6__typeEEE
                           .group:0000000000000000 _ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC5ERKS1_
                           .group:0000000000000000 _ZN5boost9algorithm6detail13first_finderFIPKcNS0_8is_equalEEC5INS_14iterator_rangeIS4_EEEERKT_S5_
                           .group:0000000000000000 _ZN5boost9algorithm6detail13const_formatFINS_14iterator_rangeIPKcEEEC5ERKS6_
                           .group:0000000000000000 _ZN5boost14iterator_rangeIPKcEC5IS2_EET_S5_
                           .group:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC5ISA_EET_SD_
                           .group:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC5ISB_EERT_PNS_9enable_ifINSB_19is_compatible_rangeISD_EEvE4typeE
                           .group:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27random_access_traversal_tagEEC5IS3_EET_S8_
GAS LISTING /tmp/ccX8BQhk.s 			page 598


                           .group:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC5ISB_EET_SG_
                           .group:0000000000000000 _ZN5boost14iterator_rangeIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC5INS0_INS2_IPcSA_EEEEEERT_PNS_9enable_ifINSC_19is_compatible_rangeISH_EEvE4typeE
                           .group:0000000000000000 _ZN5boost9algorithm6detail17find_format_storeIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_13const_formatFINS_14iterator_rangeIPKcEEEESH_EC5ERKNSE_ISC_EERKSH_RKSI_
                           .group:0000000000000000 _ZNSt5dequeIcSaIcEEC5Ev
                           .group:0000000000000000 _ZNSt5dequeIcSaIcEED5Ev
                           .group:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEC5ERKS2_
                           .group:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27bidirectional_traversal_tagEEC5IS3_EET_S8_
                           .group:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27random_access_traversal_tagEEC5ISC_EET_SH_
                           .group:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC5ISB_EET_SG_
                           .group:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE11_Deque_implD5Ev
                           .group:0000000000000000 _ZNSt11_Deque_baseIcSaIcEEC5Ev
                           .group:0000000000000000 _ZNSt11_Deque_baseIcSaIcEED5Ev
                           .group:0000000000000000 _ZNSt15_Deque_iteratorIcRKcPS0_EC5ERKS_IcRcPcE
                           .group:0000000000000000 _ZN5boost21iterator_range_detail18iterator_range_tagC5Ev
                           .group:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIPKcNS_9iterators27incrementable_traversal_tagEEC5IS3_EET_S8_
                           .group:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27bidirectional_traversal_tagEEC5ISC_EET_SH_
                           .group:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC5ISB_EET_SG_
                           .group:0000000000000000 _ZNSt11_Deque_baseIcSaIcEE11_Deque_implC5Ev
                           .group:0000000000000000 _ZN5boost21iterator_range_detail19iterator_range_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_9iterators27incrementable_traversal_tagEEC5ISC_EET_SH_
                           .group:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEC5Ev
                           .group:0000000000000000 _ZNSaIPcED5Ev
                           .group:0000000000000000 _ZNSt15_Deque_iteratorIcRcPcEC5ES1_PS1_
                           .group:0000000000000000 _ZNSaIPcEC5IcEERKSaIT_E
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIPcED5Ev
                           .group:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC5ISt15_Deque_iteratorIcRcPcEvEET_SA_RKS3_
                           .group:0000000000000000 _ZN9__gnu_cxx13new_allocatorIPcEC5Ev
                           .group:0000000000000000 _ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC5ERKS4_
                           .group:0000000000000000 _ZNSt13move_iteratorISt15_Deque_iteratorIcRcPcEEC5ES3_

UNDEFINED SYMBOLS
strlen
__stack_chk_fail
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZNSt13runtime_errorD2Ev
_ZdlPv
__gxx_personality_v0
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv
_ZNKSt13runtime_error4whatEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
__cxa_begin_catch
__cxa_end_catch
_Unwind_Resume
__cxa_call_unexpected
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
_ZN5boost10filesystem6detail18create_directoriesERKNS0_4pathEPNS_6system10error_codeE
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSaIcEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_
_ZNSaIcED1Ev
sqrt
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
ceil
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_
GAS LISTING /tmp/ccX8BQhk.s 			page 599


_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNSolsEd
_ZNKSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEE3strEv
_ZNSt7__cxx1119basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev
_ZNSaIcED2Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv
_ZNSaIcEC2Ev
__cxa_rethrow
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_
_ZSt17__throw_bad_allocv
_Znwm
memmove
_ZSt20__throw_length_errorPKc
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTISt13runtime_error
_ZTVN10__cxxabiv117__class_type_infoE
_ZN5boost6system16generic_categoryEv
_ZN5boost6system15system_categoryEv
