GAS LISTING /tmp/ccbg3Dll.s 			page 1


   1              		.file	"Solution.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata
   7              	_ZStL19piecewise_construct:
   8 0000 00       		.zero	1
   9              		.section	.text._ZN4Mesh9get_num_yEv,"axG",@progbits,_ZN4Mesh9get_num_yEv,comdat
  10              		.align 2
  11              		.weak	_ZN4Mesh9get_num_yEv
  13              	_ZN4Mesh9get_num_yEv:
  14              	.LFB875:
  15              		.file 1 "include/Mesh.h"
   1:include/Mesh.h **** #ifndef Mesh_H
   2:include/Mesh.h **** #define Mesh_H
   3:include/Mesh.h **** 
   4:include/Mesh.h **** #include "domain_geometry.h"
   5:include/Mesh.h **** #include "global_variables.h"
   6:include/Mesh.h **** class Mesh
   7:include/Mesh.h **** {
   8:include/Mesh.h ****     public:
   9:include/Mesh.h ****         Mesh(domain_geometry domain, global_variables globals);
  10:include/Mesh.h ****         virtual ~Mesh();
  11:include/Mesh.h ****         double get_node_x(int node_num);
  12:include/Mesh.h ****         int get_num_x() { return num_x_cells; };
  13:include/Mesh.h ****         int get_num_y () { return num_y_cells; };
  16              		.loc 1 13 0
  17              		.cfi_startproc
  18 0000 55       		pushq	%rbp
  19              		.cfi_def_cfa_offset 16
  20              		.cfi_offset 6, -16
  21 0001 4889E5   		movq	%rsp, %rbp
  22              		.cfi_def_cfa_register 6
  23 0004 48897DF8 		movq	%rdi, -8(%rbp)
  24              		.loc 1 13 0
  25 0008 488B45F8 		movq	-8(%rbp), %rax
  26 000c 8B400C   		movl	12(%rax), %eax
  27 000f 5D       		popq	%rbp
  28              		.cfi_def_cfa 7, 8
  29 0010 C3       		ret
  30              		.cfi_endproc
  31              	.LFE875:
  33              		.section	.text._ZN4Mesh15get_total_cellsEv,"axG",@progbits,_ZN4Mesh15get_total_cellsEv,comdat
  34              		.align 2
  35              		.weak	_ZN4Mesh15get_total_cellsEv
  37              	_ZN4Mesh15get_total_cellsEv:
  38              	.LFB876:
  14:include/Mesh.h ****         int get_total_cells () { return total_cells; };
  39              		.loc 1 14 0
  40              		.cfi_startproc
  41 0000 55       		pushq	%rbp
  42              		.cfi_def_cfa_offset 16
  43              		.cfi_offset 6, -16
  44 0001 4889E5   		movq	%rsp, %rbp
  45              		.cfi_def_cfa_register 6
  46 0004 48897DF8 		movq	%rdi, -8(%rbp)
  47              		.loc 1 14 0
  48 0008 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 2


  49 000c 8B4010   		movl	16(%rax), %eax
  50 000f 5D       		popq	%rbp
  51              		.cfi_def_cfa 7, 8
  52 0010 C3       		ret
  53              		.cfi_endproc
  54              	.LFE876:
  56              		.section	.text._ZN4Mesh5get_YEv,"axG",@progbits,_ZN4Mesh5get_YEv,comdat
  57              		.align 2
  58              		.weak	_ZN4Mesh5get_YEv
  60              	_ZN4Mesh5get_YEv:
  61              	.LFB880:
  15:include/Mesh.h ****         double get_dx() { return dx;};
  16:include/Mesh.h ****         double get_dy() { return dy;};
  17:include/Mesh.h ****         double get_X() { return X;};
  18:include/Mesh.h ****         double get_Y() { return Y;};
  62              		.loc 1 18 0
  63              		.cfi_startproc
  64 0000 55       		pushq	%rbp
  65              		.cfi_def_cfa_offset 16
  66              		.cfi_offset 6, -16
  67 0001 4889E5   		movq	%rsp, %rbp
  68              		.cfi_def_cfa_register 6
  69 0004 48897DF8 		movq	%rdi, -8(%rbp)
  70              		.loc 1 18 0
  71 0008 488B45F8 		movq	-8(%rbp), %rax
  72 000c F20F1040 		movsd	32(%rax), %xmm0
  72      20
  73 0011 5D       		popq	%rbp
  74              		.cfi_def_cfa 7, 8
  75 0012 C3       		ret
  76              		.cfi_endproc
  77              	.LFE880:
  79              		.section	.text._ZN4Mesh14get_centroid_xEi,"axG",@progbits,_ZN4Mesh14get_centroid_xEi,comdat
  80              		.align 2
  81              		.weak	_ZN4Mesh14get_centroid_xEi
  83              	_ZN4Mesh14get_centroid_xEi:
  84              	.LFB881:
  19:include/Mesh.h ****         double get_centroid_x( int i) {return centroid_x[i];};
  85              		.loc 1 19 0
  86              		.cfi_startproc
  87 0000 55       		pushq	%rbp
  88              		.cfi_def_cfa_offset 16
  89              		.cfi_offset 6, -16
  90 0001 4889E5   		movq	%rsp, %rbp
  91              		.cfi_def_cfa_register 6
  92 0004 48897DF8 		movq	%rdi, -8(%rbp)
  93 0008 8975F4   		movl	%esi, -12(%rbp)
  94              		.loc 1 19 0
  95 000b 488B45F8 		movq	-8(%rbp), %rax
  96 000f 488B4040 		movq	64(%rax), %rax
  97 0013 8B55F4   		movl	-12(%rbp), %edx
  98 0016 4863D2   		movslq	%edx, %rdx
  99 0019 48C1E203 		salq	$3, %rdx
 100 001d 4801D0   		addq	%rdx, %rax
 101 0020 F20F1000 		movsd	(%rax), %xmm0
 102 0024 5D       		popq	%rbp
 103              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccbg3Dll.s 			page 3


 104 0025 C3       		ret
 105              		.cfi_endproc
 106              	.LFE881:
 108              		.section	.text._ZN4Mesh14get_centroid_yEi,"axG",@progbits,_ZN4Mesh14get_centroid_yEi,comdat
 109              		.align 2
 110              		.weak	_ZN4Mesh14get_centroid_yEi
 112              	_ZN4Mesh14get_centroid_yEi:
 113              	.LFB882:
  20:include/Mesh.h ****         double get_centroid_y( int i) {return centroid_y[i];};
 114              		.loc 1 20 0
 115              		.cfi_startproc
 116 0000 55       		pushq	%rbp
 117              		.cfi_def_cfa_offset 16
 118              		.cfi_offset 6, -16
 119 0001 4889E5   		movq	%rsp, %rbp
 120              		.cfi_def_cfa_register 6
 121 0004 48897DF8 		movq	%rdi, -8(%rbp)
 122 0008 8975F4   		movl	%esi, -12(%rbp)
 123              		.loc 1 20 0
 124 000b 488B45F8 		movq	-8(%rbp), %rax
 125 000f 488B4048 		movq	72(%rax), %rax
 126 0013 8B55F4   		movl	-12(%rbp), %edx
 127 0016 4863D2   		movslq	%edx, %rdx
 128 0019 48C1E203 		salq	$3, %rdx
 129 001d 4801D0   		addq	%rdx, %rax
 130 0020 F20F1000 		movsd	(%rax), %xmm0
 131 0024 5D       		popq	%rbp
 132              		.cfi_def_cfa 7, 8
 133 0025 C3       		ret
 134              		.cfi_endproc
 135              	.LFE882:
 137              		.section	.text._ZN4Mesh14get_centroid_zEi,"axG",@progbits,_ZN4Mesh14get_centroid_zEi,comdat
 138              		.align 2
 139              		.weak	_ZN4Mesh14get_centroid_zEi
 141              	_ZN4Mesh14get_centroid_zEi:
 142              	.LFB883:
  21:include/Mesh.h ****         double get_centroid_z( int i) {return centroid_z[i];};
 143              		.loc 1 21 0
 144              		.cfi_startproc
 145 0000 55       		pushq	%rbp
 146              		.cfi_def_cfa_offset 16
 147              		.cfi_offset 6, -16
 148 0001 4889E5   		movq	%rsp, %rbp
 149              		.cfi_def_cfa_register 6
 150 0004 48897DF8 		movq	%rdi, -8(%rbp)
 151 0008 8975F4   		movl	%esi, -12(%rbp)
 152              		.loc 1 21 0
 153 000b 488B45F8 		movq	-8(%rbp), %rax
 154 000f 488B4050 		movq	80(%rax), %rax
 155 0013 8B55F4   		movl	-12(%rbp), %edx
 156 0016 4863D2   		movslq	%edx, %rdx
 157 0019 48C1E203 		salq	$3, %rdx
 158 001d 4801D0   		addq	%rdx, %rax
 159 0020 F20F1000 		movsd	(%rax), %xmm0
 160 0024 5D       		popq	%rbp
 161              		.cfi_def_cfa 7, 8
 162 0025 C3       		ret
GAS LISTING /tmp/ccbg3Dll.s 			page 4


 163              		.cfi_endproc
 164              	.LFE883:
 166              		.section	.text._ZN10vector_varD2Ev,"axG",@progbits,_ZN10vector_varD5Ev,comdat
 167              		.align 2
 168              		.weak	_ZN10vector_varD2Ev
 170              	_ZN10vector_varD2Ev:
 171              	.LFB919:
 172              		.file 2 "include/vector_var.h"
   1:include/vector_var.h **** #ifndef VECTOR_VAR_H
   2:include/vector_var.h **** #define VECTOR_VAR_H
   3:include/vector_var.h **** 
   4:include/vector_var.h **** 
   5:include/vector_var.h **** class vector_var
   6:include/vector_var.h **** {
   7:include/vector_var.h ****     public:
   8:include/vector_var.h ****         vector_var();
   9:include/vector_var.h ****         vector_var(double _x, double _y, double _z);
  10:include/vector_var.h ****         virtual ~vector_var(){};
 173              		.loc 2 10 0
 174              		.cfi_startproc
 175 0000 55       		pushq	%rbp
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 6, -16
 178 0001 4889E5   		movq	%rsp, %rbp
 179              		.cfi_def_cfa_register 6
 180 0004 4883EC10 		subq	$16, %rsp
 181 0008 48897DF8 		movq	%rdi, -8(%rbp)
 182              	.LBB2:
 183              		.loc 2 10 0
 184 000c BA000000 		movl	$_ZTV10vector_var+16, %edx
 184      00
 185 0011 488B45F8 		movq	-8(%rbp), %rax
 186 0015 488910   		movq	%rdx, (%rax)
 187              	.LBE2:
 188 0018 B8000000 		movl	$0, %eax
 188      00
 189 001d 85C0     		testl	%eax, %eax
 190 001f 740C     		je	.L13
 191              		.loc 2 10 0 is_stmt 0 discriminator 2
 192 0021 488B45F8 		movq	-8(%rbp), %rax
 193 0025 4889C7   		movq	%rax, %rdi
 194 0028 E8000000 		call	_ZdlPv
 194      00
 195              	.L13:
 196              		.loc 2 10 0
 197 002d C9       		leave
 198              		.cfi_def_cfa 7, 8
 199 002e C3       		ret
 200              		.cfi_endproc
 201              	.LFE919:
 203              		.weak	_ZN10vector_varD1Ev
 204              		.set	_ZN10vector_varD1Ev,_ZN10vector_varD2Ev
 205              		.section	.text._ZN10vector_varD0Ev,"axG",@progbits,_ZN10vector_varD5Ev,comdat
 206              		.align 2
 207              		.weak	_ZN10vector_varD0Ev
 209              	_ZN10vector_varD0Ev:
 210              	.LFB921:
GAS LISTING /tmp/ccbg3Dll.s 			page 5


 211              		.loc 2 10 0 is_stmt 1
 212              		.cfi_startproc
 213 0000 55       		pushq	%rbp
 214              		.cfi_def_cfa_offset 16
 215              		.cfi_offset 6, -16
 216 0001 4889E5   		movq	%rsp, %rbp
 217              		.cfi_def_cfa_register 6
 218 0004 4883EC10 		subq	$16, %rsp
 219 0008 48897DF8 		movq	%rdi, -8(%rbp)
 220              		.loc 2 10 0
 221 000c 488B45F8 		movq	-8(%rbp), %rax
 222 0010 4889C7   		movq	%rax, %rdi
 223 0013 E8000000 		call	_ZN10vector_varD1Ev
 223      00
 224 0018 488B45F8 		movq	-8(%rbp), %rax
 225 001c 4889C7   		movq	%rax, %rdi
 226 001f E8000000 		call	_ZdlPv
 226      00
 227 0024 C9       		leave
 228              		.cfi_def_cfa 7, 8
 229 0025 C3       		ret
 230              		.cfi_endproc
 231              	.LFE921:
 233              		.section	.text._ZN19Boundary_Conditions6get_bcEi,"axG",@progbits,_ZN19Boundary_Conditions6get_bcEi
 234              		.align 2
 235              		.weak	_ZN19Boundary_Conditions6get_bcEi
 237              	_ZN19Boundary_Conditions6get_bcEi:
 238              	.LFB922:
 239              		.file 3 "include/Boundary_Conditions.h"
   1:include/Boundary_Conditions.h **** #include "quad_bcs.h"
   2:include/Boundary_Conditions.h **** #include "quad_bcs_plus.h"
   3:include/Boundary_Conditions.h **** 
   4:include/Boundary_Conditions.h **** #ifndef BOUNDARY_CONDITIONS_H
   5:include/Boundary_Conditions.h **** #define BOUNDARY_CONDITIONS_H
   6:include/Boundary_Conditions.h **** 
   7:include/Boundary_Conditions.h **** 
   8:include/Boundary_Conditions.h **** class Boundary_Conditions
   9:include/Boundary_Conditions.h **** {
  10:include/Boundary_Conditions.h ****     public:
  11:include/Boundary_Conditions.h ****         Boundary_Conditions(int num_x, int num_y);
  12:include/Boundary_Conditions.h ****         virtual ~Boundary_Conditions();
  13:include/Boundary_Conditions.h ****         void assign_boundary_conditions(int num_x, int num_y, quad_bcs);
  14:include/Boundary_Conditions.h ****         void assign_boundary_conditions(int num_x, int num_y, quad_bcs_plus _bc);
  15:include/Boundary_Conditions.h ****         bool get_bc( int i) {return bc[i];};
 240              		.loc 3 15 0
 241              		.cfi_startproc
 242 0000 55       		pushq	%rbp
 243              		.cfi_def_cfa_offset 16
 244              		.cfi_offset 6, -16
 245 0001 4889E5   		movq	%rsp, %rbp
 246              		.cfi_def_cfa_register 6
 247 0004 48897DF8 		movq	%rdi, -8(%rbp)
 248 0008 8975F4   		movl	%esi, -12(%rbp)
 249              		.loc 3 15 0
 250 000b 488B45F8 		movq	-8(%rbp), %rax
 251 000f 488B5008 		movq	8(%rax), %rdx
 252 0013 8B45F4   		movl	-12(%rbp), %eax
GAS LISTING /tmp/ccbg3Dll.s 			page 6


 253 0016 4898     		cltq
 254 0018 4801D0   		addq	%rdx, %rax
 255 001b 0FB600   		movzbl	(%rax), %eax
 256 001e 5D       		popq	%rbp
 257              		.cfi_def_cfa 7, 8
 258 001f C3       		ret
 259              		.cfi_endproc
 260              	.LFE922:
 262              		.section	.text._ZN19Boundary_Conditions7get_rhoEi,"axG",@progbits,_ZN19Boundary_Conditions7get_rho
 263              		.align 2
 264              		.weak	_ZN19Boundary_Conditions7get_rhoEi
 266              	_ZN19Boundary_Conditions7get_rhoEi:
 267              	.LFB924:
  16:include/Boundary_Conditions.h ****         bool get_bc_include( int i) {return bc_include[i];};
  17:include/Boundary_Conditions.h **** 
  18:include/Boundary_Conditions.h **** 
  19:include/Boundary_Conditions.h ****         double get_rho( int i) {return rho[i];};
 268              		.loc 3 19 0
 269              		.cfi_startproc
 270 0000 55       		pushq	%rbp
 271              		.cfi_def_cfa_offset 16
 272              		.cfi_offset 6, -16
 273 0001 4889E5   		movq	%rsp, %rbp
 274              		.cfi_def_cfa_register 6
 275 0004 48897DF8 		movq	%rdi, -8(%rbp)
 276 0008 8975F4   		movl	%esi, -12(%rbp)
 277              		.loc 3 19 0
 278 000b 488B45F8 		movq	-8(%rbp), %rax
 279 000f 488B4018 		movq	24(%rax), %rax
 280 0013 8B55F4   		movl	-12(%rbp), %edx
 281 0016 4863D2   		movslq	%edx, %rdx
 282 0019 48C1E203 		salq	$3, %rdx
 283 001d 4801D0   		addq	%rdx, %rax
 284 0020 F20F1000 		movsd	(%rax), %xmm0
 285 0024 5D       		popq	%rbp
 286              		.cfi_def_cfa 7, 8
 287 0025 C3       		ret
 288              		.cfi_endproc
 289              	.LFE924:
 291              		.section	.text._ZN19Boundary_Conditions5get_uEi,"axG",@progbits,_ZN19Boundary_Conditions5get_uEi,c
 292              		.align 2
 293              		.weak	_ZN19Boundary_Conditions5get_uEi
 295              	_ZN19Boundary_Conditions5get_uEi:
 296              	.LFB925:
  20:include/Boundary_Conditions.h ****         double get_u( int i) {return u[i];};
 297              		.loc 3 20 0
 298              		.cfi_startproc
 299 0000 55       		pushq	%rbp
 300              		.cfi_def_cfa_offset 16
 301              		.cfi_offset 6, -16
 302 0001 4889E5   		movq	%rsp, %rbp
 303              		.cfi_def_cfa_register 6
 304 0004 48897DF8 		movq	%rdi, -8(%rbp)
 305 0008 8975F4   		movl	%esi, -12(%rbp)
 306              		.loc 3 20 0
 307 000b 488B45F8 		movq	-8(%rbp), %rax
 308 000f 488B4020 		movq	32(%rax), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 7


 309 0013 8B55F4   		movl	-12(%rbp), %edx
 310 0016 4863D2   		movslq	%edx, %rdx
 311 0019 48C1E203 		salq	$3, %rdx
 312 001d 4801D0   		addq	%rdx, %rax
 313 0020 F20F1000 		movsd	(%rax), %xmm0
 314 0024 5D       		popq	%rbp
 315              		.cfi_def_cfa 7, 8
 316 0025 C3       		ret
 317              		.cfi_endproc
 318              	.LFE925:
 320              		.section	.text._ZN19Boundary_Conditions5get_vEi,"axG",@progbits,_ZN19Boundary_Conditions5get_vEi,c
 321              		.align 2
 322              		.weak	_ZN19Boundary_Conditions5get_vEi
 324              	_ZN19Boundary_Conditions5get_vEi:
 325              	.LFB926:
  21:include/Boundary_Conditions.h ****         double get_v ( int i) {return v [i];};
 326              		.loc 3 21 0
 327              		.cfi_startproc
 328 0000 55       		pushq	%rbp
 329              		.cfi_def_cfa_offset 16
 330              		.cfi_offset 6, -16
 331 0001 4889E5   		movq	%rsp, %rbp
 332              		.cfi_def_cfa_register 6
 333 0004 48897DF8 		movq	%rdi, -8(%rbp)
 334 0008 8975F4   		movl	%esi, -12(%rbp)
 335              		.loc 3 21 0
 336 000b 488B45F8 		movq	-8(%rbp), %rax
 337 000f 488B4028 		movq	40(%rax), %rax
 338 0013 8B55F4   		movl	-12(%rbp), %edx
 339 0016 4863D2   		movslq	%edx, %rdx
 340 0019 48C1E203 		salq	$3, %rdx
 341 001d 4801D0   		addq	%rdx, %rax
 342 0020 F20F1000 		movsd	(%rax), %xmm0
 343 0024 5D       		popq	%rbp
 344              		.cfi_def_cfa 7, 8
 345 0025 C3       		ret
 346              		.cfi_endproc
 347              	.LFE926:
 349              		.section	.text._ZN19Boundary_Conditions12get_rho_typeEi,"axG",@progbits,_ZN19Boundary_Conditions12
 350              		.align 2
 351              		.weak	_ZN19Boundary_Conditions12get_rho_typeEi
 353              	_ZN19Boundary_Conditions12get_rho_typeEi:
 354              	.LFB927:
  22:include/Boundary_Conditions.h **** 
  23:include/Boundary_Conditions.h ****         int get_rho_type( int i) {return type_rho[i];};
 355              		.loc 3 23 0
 356              		.cfi_startproc
 357 0000 55       		pushq	%rbp
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 6, -16
 360 0001 4889E5   		movq	%rsp, %rbp
 361              		.cfi_def_cfa_register 6
 362 0004 48897DF8 		movq	%rdi, -8(%rbp)
 363 0008 8975F4   		movl	%esi, -12(%rbp)
 364              		.loc 3 23 0
 365 000b 488B45F8 		movq	-8(%rbp), %rax
 366 000f 488B4030 		movq	48(%rax), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 8


 367 0013 8B55F4   		movl	-12(%rbp), %edx
 368 0016 4863D2   		movslq	%edx, %rdx
 369 0019 48C1E202 		salq	$2, %rdx
 370 001d 4801D0   		addq	%rdx, %rax
 371 0020 8B00     		movl	(%rax), %eax
 372 0022 5D       		popq	%rbp
 373              		.cfi_def_cfa 7, 8
 374 0023 C3       		ret
 375              		.cfi_endproc
 376              	.LFE927:
 378              		.section	.text._ZN19Boundary_Conditions12get_vel_typeEi,"axG",@progbits,_ZN19Boundary_Conditions12
 379              		.align 2
 380              		.weak	_ZN19Boundary_Conditions12get_vel_typeEi
 382              	_ZN19Boundary_Conditions12get_vel_typeEi:
 383              	.LFB928:
  24:include/Boundary_Conditions.h **** 
  25:include/Boundary_Conditions.h ****         int get_vel_type( int i) {return type_vel[i];};
 384              		.loc 3 25 0
 385              		.cfi_startproc
 386 0000 55       		pushq	%rbp
 387              		.cfi_def_cfa_offset 16
 388              		.cfi_offset 6, -16
 389 0001 4889E5   		movq	%rsp, %rbp
 390              		.cfi_def_cfa_register 6
 391 0004 48897DF8 		movq	%rdi, -8(%rbp)
 392 0008 8975F4   		movl	%esi, -12(%rbp)
 393              		.loc 3 25 0
 394 000b 488B45F8 		movq	-8(%rbp), %rax
 395 000f 488B4038 		movq	56(%rax), %rax
 396 0013 8B55F4   		movl	-12(%rbp), %edx
 397 0016 4863D2   		movslq	%edx, %rdx
 398 0019 48C1E202 		salq	$2, %rdx
 399 001d 4801D0   		addq	%rdx, %rax
 400 0020 8B00     		movl	(%rax), %eax
 401 0022 5D       		popq	%rbp
 402              		.cfi_def_cfa 7, 8
 403 0023 C3       		ret
 404              		.cfi_endproc
 405              	.LFE928:
 407              		.section	.text._ZN19Boundary_Conditions17get_periodic_nodeEi,"axG",@progbits,_ZN19Boundary_Conditi
 408              		.align 2
 409              		.weak	_ZN19Boundary_Conditions17get_periodic_nodeEi
 411              	_ZN19Boundary_Conditions17get_periodic_nodeEi:
 412              	.LFB929:
  26:include/Boundary_Conditions.h **** 
  27:include/Boundary_Conditions.h ****         int get_periodic_node( int i) {return periodic_node[i];};
 413              		.loc 3 27 0
 414              		.cfi_startproc
 415 0000 55       		pushq	%rbp
 416              		.cfi_def_cfa_offset 16
 417              		.cfi_offset 6, -16
 418 0001 4889E5   		movq	%rsp, %rbp
 419              		.cfi_def_cfa_register 6
 420 0004 48897DF8 		movq	%rdi, -8(%rbp)
 421 0008 8975F4   		movl	%esi, -12(%rbp)
 422              		.loc 3 27 0
 423 000b 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 9


 424 000f 488B4040 		movq	64(%rax), %rax
 425 0013 8B55F4   		movl	-12(%rbp), %edx
 426 0016 4863D2   		movslq	%edx, %rdx
 427 0019 48C1E202 		salq	$2, %rdx
 428 001d 4801D0   		addq	%rdx, %rax
 429 0020 8B00     		movl	(%rax), %eax
 430 0022 5D       		popq	%rbp
 431              		.cfi_def_cfa 7, 8
 432 0023 C3       		ret
 433              		.cfi_endproc
 434              	.LFE929:
 436              		.section	.text._ZN19Boundary_Conditions13get_neighbourEi,"axG",@progbits,_ZN19Boundary_Conditions1
 437              		.align 2
 438              		.weak	_ZN19Boundary_Conditions13get_neighbourEi
 440              	_ZN19Boundary_Conditions13get_neighbourEi:
 441              	.LFB930:
  28:include/Boundary_Conditions.h ****         int get_neighbour(int i){return neighbour[i];};
 442              		.loc 3 28 0
 443              		.cfi_startproc
 444 0000 55       		pushq	%rbp
 445              		.cfi_def_cfa_offset 16
 446              		.cfi_offset 6, -16
 447 0001 4889E5   		movq	%rsp, %rbp
 448              		.cfi_def_cfa_register 6
 449 0004 48897DF8 		movq	%rdi, -8(%rbp)
 450 0008 8975F4   		movl	%esi, -12(%rbp)
 451              		.loc 3 28 0
 452 000b 488B45F8 		movq	-8(%rbp), %rax
 453 000f 488B4048 		movq	72(%rax), %rax
 454 0013 8B55F4   		movl	-12(%rbp), %edx
 455 0016 4863D2   		movslq	%edx, %rdx
 456 0019 48C1E202 		salq	$2, %rdx
 457 001d 4801D0   		addq	%rdx, %rax
 458 0020 8B00     		movl	(%rax), %eax
 459 0022 5D       		popq	%rbp
 460              		.cfi_def_cfa 7, 8
 461 0023 C3       		ret
 462              		.cfi_endproc
 463              	.LFE930:
 465              		.section	.text._ZN8Solution7get_rhoEi,"axG",@progbits,_ZN8Solution7get_rhoEi,comdat
 466              		.align 2
 467              		.weak	_ZN8Solution7get_rhoEi
 469              	_ZN8Solution7get_rhoEi:
 470              	.LFB931:
 471              		.file 4 "include/Solution.h"
   1:include/Solution.h **** #include "Mesh.h"
   2:include/Solution.h **** #include "vector_var.h"
   3:include/Solution.h **** #include <string>
   4:include/Solution.h **** #include "global_variables.h"
   5:include/Solution.h **** #include "domain_geometry.h"
   6:include/Solution.h **** #include <Boundary_Conditions.h>
   7:include/Solution.h **** #include "initial_conditions.h"
   8:include/Solution.h **** #ifndef SOLUTION_H
   9:include/Solution.h **** #define SOLUTION_H
  10:include/Solution.h **** 
  11:include/Solution.h **** 
  12:include/Solution.h **** class Solution
GAS LISTING /tmp/ccbg3Dll.s 			page 10


  13:include/Solution.h **** {
  14:include/Solution.h ****     public:
  15:include/Solution.h ****         Solution(int _total_nodes);
  16:include/Solution.h ****         Solution();
  17:include/Solution.h ****         virtual ~Solution();
  18:include/Solution.h ****         double get_rho( int i) {return rho[i];};
 472              		.loc 4 18 0
 473              		.cfi_startproc
 474 0000 55       		pushq	%rbp
 475              		.cfi_def_cfa_offset 16
 476              		.cfi_offset 6, -16
 477 0001 4889E5   		movq	%rsp, %rbp
 478              		.cfi_def_cfa_register 6
 479 0004 48897DF8 		movq	%rdi, -8(%rbp)
 480 0008 8975F4   		movl	%esi, -12(%rbp)
 481              		.loc 4 18 0
 482 000b 488B45F8 		movq	-8(%rbp), %rax
 483 000f 488B4008 		movq	8(%rax), %rax
 484 0013 8B55F4   		movl	-12(%rbp), %edx
 485 0016 4863D2   		movslq	%edx, %rdx
 486 0019 48C1E203 		salq	$3, %rdx
 487 001d 4801D0   		addq	%rdx, %rax
 488 0020 F20F1000 		movsd	(%rax), %xmm0
 489 0024 5D       		popq	%rbp
 490              		.cfi_def_cfa 7, 8
 491 0025 C3       		ret
 492              		.cfi_endproc
 493              	.LFE931:
 495              		.section	.text._ZN8Solution5get_uEi,"axG",@progbits,_ZN8Solution5get_uEi,comdat
 496              		.align 2
 497              		.weak	_ZN8Solution5get_uEi
 499              	_ZN8Solution5get_uEi:
 500              	.LFB932:
  19:include/Solution.h ****         double get_u( int i) {return u[i];};
 501              		.loc 4 19 0
 502              		.cfi_startproc
 503 0000 55       		pushq	%rbp
 504              		.cfi_def_cfa_offset 16
 505              		.cfi_offset 6, -16
 506 0001 4889E5   		movq	%rsp, %rbp
 507              		.cfi_def_cfa_register 6
 508 0004 48897DF8 		movq	%rdi, -8(%rbp)
 509 0008 8975F4   		movl	%esi, -12(%rbp)
 510              		.loc 4 19 0
 511 000b 488B45F8 		movq	-8(%rbp), %rax
 512 000f 488B4010 		movq	16(%rax), %rax
 513 0013 8B55F4   		movl	-12(%rbp), %edx
 514 0016 4863D2   		movslq	%edx, %rdx
 515 0019 48C1E203 		salq	$3, %rdx
 516 001d 4801D0   		addq	%rdx, %rax
 517 0020 F20F1000 		movsd	(%rax), %xmm0
 518 0024 5D       		popq	%rbp
 519              		.cfi_def_cfa 7, 8
 520 0025 C3       		ret
 521              		.cfi_endproc
 522              	.LFE932:
 524              		.section	.text._ZN8Solution5get_vEi,"axG",@progbits,_ZN8Solution5get_vEi,comdat
GAS LISTING /tmp/ccbg3Dll.s 			page 11


 525              		.align 2
 526              		.weak	_ZN8Solution5get_vEi
 528              	_ZN8Solution5get_vEi:
 529              	.LFB933:
  20:include/Solution.h ****         double get_v( int i) {return v[i];};
 530              		.loc 4 20 0
 531              		.cfi_startproc
 532 0000 55       		pushq	%rbp
 533              		.cfi_def_cfa_offset 16
 534              		.cfi_offset 6, -16
 535 0001 4889E5   		movq	%rsp, %rbp
 536              		.cfi_def_cfa_register 6
 537 0004 48897DF8 		movq	%rdi, -8(%rbp)
 538 0008 8975F4   		movl	%esi, -12(%rbp)
 539              		.loc 4 20 0
 540 000b 488B45F8 		movq	-8(%rbp), %rax
 541 000f 488B4018 		movq	24(%rax), %rax
 542 0013 8B55F4   		movl	-12(%rbp), %edx
 543 0016 4863D2   		movslq	%edx, %rdx
 544 0019 48C1E203 		salq	$3, %rdx
 545 001d 4801D0   		addq	%rdx, %rax
 546 0020 F20F1000 		movsd	(%rax), %xmm0
 547 0024 5D       		popq	%rbp
 548              		.cfi_def_cfa 7, 8
 549 0025 C3       		ret
 550              		.cfi_endproc
 551              	.LFE933:
 553              		.section	.text._ZN8Solution5get_wEi,"axG",@progbits,_ZN8Solution5get_wEi,comdat
 554              		.align 2
 555              		.weak	_ZN8Solution5get_wEi
 557              	_ZN8Solution5get_wEi:
 558              	.LFB934:
  21:include/Solution.h ****         double get_w( int i) {return w[i];};
 559              		.loc 4 21 0
 560              		.cfi_startproc
 561 0000 55       		pushq	%rbp
 562              		.cfi_def_cfa_offset 16
 563              		.cfi_offset 6, -16
 564 0001 4889E5   		movq	%rsp, %rbp
 565              		.cfi_def_cfa_register 6
 566 0004 48897DF8 		movq	%rdi, -8(%rbp)
 567 0008 8975F4   		movl	%esi, -12(%rbp)
 568              		.loc 4 21 0
 569 000b 488B45F8 		movq	-8(%rbp), %rax
 570 000f 488B4020 		movq	32(%rax), %rax
 571 0013 8B55F4   		movl	-12(%rbp), %edx
 572 0016 4863D2   		movslq	%edx, %rdx
 573 0019 48C1E203 		salq	$3, %rdx
 574 001d 4801D0   		addq	%rdx, %rax
 575 0020 F20F1000 		movsd	(%rax), %xmm0
 576 0024 5D       		popq	%rbp
 577              		.cfi_def_cfa 7, 8
 578 0025 C3       		ret
 579              		.cfi_endproc
 580              	.LFE934:
 582              		.section	.text._ZN8Solution15get_average_rhoEv,"axG",@progbits,_ZN8Solution15get_average_rhoEv,com
 583              		.align 2
GAS LISTING /tmp/ccbg3Dll.s 			page 12


 584              		.weak	_ZN8Solution15get_average_rhoEv
 586              	_ZN8Solution15get_average_rhoEv:
 587              	.LFB935:
  22:include/Solution.h ****         double get_average_rho (){return average_rho;};
 588              		.loc 4 22 0
 589              		.cfi_startproc
 590 0000 55       		pushq	%rbp
 591              		.cfi_def_cfa_offset 16
 592              		.cfi_offset 6, -16
 593 0001 4889E5   		movq	%rsp, %rbp
 594              		.cfi_def_cfa_register 6
 595 0004 48897DF8 		movq	%rdi, -8(%rbp)
 596              		.loc 4 22 0
 597 0008 488B45F8 		movq	-8(%rbp), %rax
 598 000c F20F1040 		movsd	64(%rax), %xmm0
 598      40
 599 0011 5D       		popq	%rbp
 600              		.cfi_def_cfa 7, 8
 601 0012 C3       		ret
 602              		.cfi_endproc
 603              	.LFE935:
 605              		.section	.text._ZN8Solution15set_average_rhoEd,"axG",@progbits,_ZN8Solution15set_average_rhoEd,com
 606              		.align 2
 607              		.weak	_ZN8Solution15set_average_rhoEd
 609              	_ZN8Solution15set_average_rhoEd:
 610              	.LFB938:
  23:include/Solution.h ****         double get_u_exact( int i) {return u_exact[i];};
  24:include/Solution.h ****         double get_u_error( int i) {return error[i];};
  25:include/Solution.h ****         void set_average_rho(double arg) { average_rho = arg;};
 611              		.loc 4 25 0
 612              		.cfi_startproc
 613 0000 55       		pushq	%rbp
 614              		.cfi_def_cfa_offset 16
 615              		.cfi_offset 6, -16
 616 0001 4889E5   		movq	%rsp, %rbp
 617              		.cfi_def_cfa_register 6
 618 0004 48897DF8 		movq	%rdi, -8(%rbp)
 619 0008 F20F1145 		movsd	%xmm0, -16(%rbp)
 619      F0
 620              		.loc 4 25 0
 621 000d 488B45F8 		movq	-8(%rbp), %rax
 622 0011 F20F1045 		movsd	-16(%rbp), %xmm0
 622      F0
 623 0016 F20F1140 		movsd	%xmm0, 64(%rax)
 623      40
 624 001b 90       		nop
 625 001c 5D       		popq	%rbp
 626              		.cfi_def_cfa 7, 8
 627 001d C3       		ret
 628              		.cfi_endproc
 629              	.LFE938:
 631              		.section	.text._ZN8Solution7add_rhoEid,"axG",@progbits,_ZN8Solution7add_rhoEid,comdat
 632              		.align 2
 633              		.weak	_ZN8Solution7add_rhoEid
 635              	_ZN8Solution7add_rhoEid:
 636              	.LFB943:
  26:include/Solution.h ****         void set_rho( int i,double arg) {rho[i] =arg;};
GAS LISTING /tmp/ccbg3Dll.s 			page 13


  27:include/Solution.h ****         void set_u( int i,double arg) {u[i] =arg;};
  28:include/Solution.h ****         void set_v( int i,double arg) {v[i] =arg;};
  29:include/Solution.h ****         void set_w( int i,double arg) {w[i] =arg;};
  30:include/Solution.h ****         void assign_pressure_gradient( vector_var _gradient, vector_var gradient_origin,
  31:include/Solution.h ****             vector_var origin_magnitude,Mesh &Mesh);
  32:include/Solution.h ****         void assign_velocity_gradient( vector_var _gradient, vector_var gradient_origin,
  33:include/Solution.h ****             vector_var origin_magnitude,Mesh &Mesh);
  34:include/Solution.h ****         void update ( double rho, double u, double v, double w , int i);
  35:include/Solution.h **** 
  36:include/Solution.h ****         void output (std::string output_location, global_variables &globals,
  37:include/Solution.h ****         domain_geometry &geometry) ;
  38:include/Solution.h ****         void clone( Solution &soln_a);
  39:include/Solution.h ****         void post_process(double pre_condition_gamma, Mesh &mesh, global_variables &globals,
  40:include/Solution.h ****                           initial_conditions &initials);
  41:include/Solution.h ****         void add_rho(int i, double arg) { rho[i] = rho[i] + arg;};
 637              		.loc 4 41 0
 638              		.cfi_startproc
 639 0000 55       		pushq	%rbp
 640              		.cfi_def_cfa_offset 16
 641              		.cfi_offset 6, -16
 642 0001 4889E5   		movq	%rsp, %rbp
 643              		.cfi_def_cfa_register 6
 644 0004 48897DF8 		movq	%rdi, -8(%rbp)
 645 0008 8975F4   		movl	%esi, -12(%rbp)
 646 000b F20F1145 		movsd	%xmm0, -24(%rbp)
 646      E8
 647              		.loc 4 41 0
 648 0010 488B45F8 		movq	-8(%rbp), %rax
 649 0014 488B4008 		movq	8(%rax), %rax
 650 0018 8B55F4   		movl	-12(%rbp), %edx
 651 001b 4863D2   		movslq	%edx, %rdx
 652 001e 48C1E203 		salq	$3, %rdx
 653 0022 4801C2   		addq	%rax, %rdx
 654 0025 488B45F8 		movq	-8(%rbp), %rax
 655 0029 488B4008 		movq	8(%rax), %rax
 656 002d 8B4DF4   		movl	-12(%rbp), %ecx
 657 0030 4863C9   		movslq	%ecx, %rcx
 658 0033 48C1E103 		salq	$3, %rcx
 659 0037 4801C8   		addq	%rcx, %rax
 660 003a F20F1000 		movsd	(%rax), %xmm0
 661 003e F20F5845 		addsd	-24(%rbp), %xmm0
 661      E8
 662 0043 F20F1102 		movsd	%xmm0, (%rdx)
 663 0047 90       		nop
 664 0048 5D       		popq	%rbp
 665              		.cfi_def_cfa 7, 8
 666 0049 C3       		ret
 667              		.cfi_endproc
 668              	.LFE943:
 670              		.section	.text._ZN8Solution5add_uEid,"axG",@progbits,_ZN8Solution5add_uEid,comdat
 671              		.align 2
 672              		.weak	_ZN8Solution5add_uEid
 674              	_ZN8Solution5add_uEid:
 675              	.LFB944:
  42:include/Solution.h ****         void add_u(int i, double arg) { u[i] = u[i] + arg;}
 676              		.loc 4 42 0
 677              		.cfi_startproc
GAS LISTING /tmp/ccbg3Dll.s 			page 14


 678 0000 55       		pushq	%rbp
 679              		.cfi_def_cfa_offset 16
 680              		.cfi_offset 6, -16
 681 0001 4889E5   		movq	%rsp, %rbp
 682              		.cfi_def_cfa_register 6
 683 0004 48897DF8 		movq	%rdi, -8(%rbp)
 684 0008 8975F4   		movl	%esi, -12(%rbp)
 685 000b F20F1145 		movsd	%xmm0, -24(%rbp)
 685      E8
 686              		.loc 4 42 0
 687 0010 488B45F8 		movq	-8(%rbp), %rax
 688 0014 488B4010 		movq	16(%rax), %rax
 689 0018 8B55F4   		movl	-12(%rbp), %edx
 690 001b 4863D2   		movslq	%edx, %rdx
 691 001e 48C1E203 		salq	$3, %rdx
 692 0022 4801C2   		addq	%rax, %rdx
 693 0025 488B45F8 		movq	-8(%rbp), %rax
 694 0029 488B4010 		movq	16(%rax), %rax
 695 002d 8B4DF4   		movl	-12(%rbp), %ecx
 696 0030 4863C9   		movslq	%ecx, %rcx
 697 0033 48C1E103 		salq	$3, %rcx
 698 0037 4801C8   		addq	%rcx, %rax
 699 003a F20F1000 		movsd	(%rax), %xmm0
 700 003e F20F5845 		addsd	-24(%rbp), %xmm0
 700      E8
 701 0043 F20F1102 		movsd	%xmm0, (%rdx)
 702 0047 90       		nop
 703 0048 5D       		popq	%rbp
 704              		.cfi_def_cfa 7, 8
 705 0049 C3       		ret
 706              		.cfi_endproc
 707              	.LFE944:
 709              		.section	.text._ZN8Solution5add_vEid,"axG",@progbits,_ZN8Solution5add_vEid,comdat
 710              		.align 2
 711              		.weak	_ZN8Solution5add_vEid
 713              	_ZN8Solution5add_vEid:
 714              	.LFB945:
  43:include/Solution.h ****         void add_v (int i , double arg) {v[i] = v[i] + arg;}
 715              		.loc 4 43 0
 716              		.cfi_startproc
 717 0000 55       		pushq	%rbp
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 6, -16
 720 0001 4889E5   		movq	%rsp, %rbp
 721              		.cfi_def_cfa_register 6
 722 0004 48897DF8 		movq	%rdi, -8(%rbp)
 723 0008 8975F4   		movl	%esi, -12(%rbp)
 724 000b F20F1145 		movsd	%xmm0, -24(%rbp)
 724      E8
 725              		.loc 4 43 0
 726 0010 488B45F8 		movq	-8(%rbp), %rax
 727 0014 488B4018 		movq	24(%rax), %rax
 728 0018 8B55F4   		movl	-12(%rbp), %edx
 729 001b 4863D2   		movslq	%edx, %rdx
 730 001e 48C1E203 		salq	$3, %rdx
 731 0022 4801C2   		addq	%rax, %rdx
 732 0025 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 15


 733 0029 488B4018 		movq	24(%rax), %rax
 734 002d 8B4DF4   		movl	-12(%rbp), %ecx
 735 0030 4863C9   		movslq	%ecx, %rcx
 736 0033 48C1E103 		salq	$3, %rcx
 737 0037 4801C8   		addq	%rcx, %rax
 738 003a F20F1000 		movsd	(%rax), %xmm0
 739 003e F20F5845 		addsd	-24(%rbp), %xmm0
 739      E8
 740 0043 F20F1102 		movsd	%xmm0, (%rdx)
 741 0047 90       		nop
 742 0048 5D       		popq	%rbp
 743              		.cfi_def_cfa 7, 8
 744 0049 C3       		ret
 745              		.cfi_endproc
 746              	.LFE945:
 748              		.section	.text._ZN8Solution5add_wEid,"axG",@progbits,_ZN8Solution5add_wEid,comdat
 749              		.align 2
 750              		.weak	_ZN8Solution5add_wEid
 752              	_ZN8Solution5add_wEid:
 753              	.LFB946:
  44:include/Solution.h ****         void add_w (int i, double arg) {w[i] = w[i] + arg;}
 754              		.loc 4 44 0
 755              		.cfi_startproc
 756 0000 55       		pushq	%rbp
 757              		.cfi_def_cfa_offset 16
 758              		.cfi_offset 6, -16
 759 0001 4889E5   		movq	%rsp, %rbp
 760              		.cfi_def_cfa_register 6
 761 0004 48897DF8 		movq	%rdi, -8(%rbp)
 762 0008 8975F4   		movl	%esi, -12(%rbp)
 763 000b F20F1145 		movsd	%xmm0, -24(%rbp)
 763      E8
 764              		.loc 4 44 0
 765 0010 488B45F8 		movq	-8(%rbp), %rax
 766 0014 488B4020 		movq	32(%rax), %rax
 767 0018 8B55F4   		movl	-12(%rbp), %edx
 768 001b 4863D2   		movslq	%edx, %rdx
 769 001e 48C1E203 		salq	$3, %rdx
 770 0022 4801C2   		addq	%rax, %rdx
 771 0025 488B45F8 		movq	-8(%rbp), %rax
 772 0029 488B4020 		movq	32(%rax), %rax
 773 002d 8B4DF4   		movl	-12(%rbp), %ecx
 774 0030 4863C9   		movslq	%ecx, %rcx
 775 0033 48C1E103 		salq	$3, %rcx
 776 0037 4801C8   		addq	%rcx, %rax
 777 003a F20F1000 		movsd	(%rax), %xmm0
 778 003e F20F5845 		addsd	-24(%rbp), %xmm0
 778      E8
 779 0043 F20F1102 		movsd	%xmm0, (%rdx)
 780 0047 90       		nop
 781 0048 5D       		popq	%rbp
 782              		.cfi_def_cfa 7, 8
 783 0049 C3       		ret
 784              		.cfi_endproc
 785              	.LFE946:
 787              		.section	.text._ZNSt14numeric_limitsIdE7epsilonEv,"axG",@progbits,_ZNSt14numeric_limitsIdE7epsilon
 788              		.weak	_ZNSt14numeric_limitsIdE7epsilonEv
GAS LISTING /tmp/ccbg3Dll.s 			page 16


 790              	_ZNSt14numeric_limitsIdE7epsilonEv:
 791              	.LFB1375:
 792              		.file 5 "/usr/include/c++/5/limits"
   1:/usr/include/c++/5/limits **** // The template and inlines for the numeric_limits classes. -*- C++ -*-
   2:/usr/include/c++/5/limits **** 
   3:/usr/include/c++/5/limits **** // Copyright (C) 1999-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/limits **** //
   5:/usr/include/c++/5/limits **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/limits **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/limits **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/limits **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/limits **** // any later version.
  10:/usr/include/c++/5/limits **** 
  11:/usr/include/c++/5/limits **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/limits **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/limits **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/limits **** // GNU General Public License for more details.
  15:/usr/include/c++/5/limits **** 
  16:/usr/include/c++/5/limits **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/limits **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/limits **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/limits **** 
  20:/usr/include/c++/5/limits **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/limits **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/limits **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/limits **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/limits **** 
  25:/usr/include/c++/5/limits **** /** @file include/limits
  26:/usr/include/c++/5/limits ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/5/limits ****  */
  28:/usr/include/c++/5/limits **** 
  29:/usr/include/c++/5/limits **** // Note: this is not a conforming implementation.
  30:/usr/include/c++/5/limits **** // Written by Gabriel Dos Reis <gdr@codesourcery.com>
  31:/usr/include/c++/5/limits **** 
  32:/usr/include/c++/5/limits **** //
  33:/usr/include/c++/5/limits **** // ISO 14882:1998
  34:/usr/include/c++/5/limits **** // 18.2.1
  35:/usr/include/c++/5/limits **** //
  36:/usr/include/c++/5/limits **** 
  37:/usr/include/c++/5/limits **** #ifndef _GLIBCXX_NUMERIC_LIMITS
  38:/usr/include/c++/5/limits **** #define _GLIBCXX_NUMERIC_LIMITS 1
  39:/usr/include/c++/5/limits **** 
  40:/usr/include/c++/5/limits **** #pragma GCC system_header
  41:/usr/include/c++/5/limits **** 
  42:/usr/include/c++/5/limits **** #include <bits/c++config.h>
  43:/usr/include/c++/5/limits **** 
  44:/usr/include/c++/5/limits **** //
  45:/usr/include/c++/5/limits **** // The numeric_limits<> traits document implementation-defined aspects
  46:/usr/include/c++/5/limits **** // of fundamental arithmetic data types (integers and floating points).
  47:/usr/include/c++/5/limits **** // From Standard C++ point of view, there are 14 such types:
  48:/usr/include/c++/5/limits **** //   * integers
  49:/usr/include/c++/5/limits **** //         bool							(1)
  50:/usr/include/c++/5/limits **** //         char, signed char, unsigned char, wchar_t            (4)
  51:/usr/include/c++/5/limits **** //         short, unsigned short				(2)
  52:/usr/include/c++/5/limits **** //         int, unsigned					(2)
  53:/usr/include/c++/5/limits **** //         long, unsigned long					(2)
  54:/usr/include/c++/5/limits **** //
GAS LISTING /tmp/ccbg3Dll.s 			page 17


  55:/usr/include/c++/5/limits **** //   * floating points
  56:/usr/include/c++/5/limits **** //         float						(1)
  57:/usr/include/c++/5/limits **** //         double						(1)
  58:/usr/include/c++/5/limits **** //         long double						(1)
  59:/usr/include/c++/5/limits **** //
  60:/usr/include/c++/5/limits **** // GNU C++ understands (where supported by the host C-library)
  61:/usr/include/c++/5/limits **** //   * integer
  62:/usr/include/c++/5/limits **** //         long long, unsigned long long			(2)
  63:/usr/include/c++/5/limits **** //
  64:/usr/include/c++/5/limits **** // which brings us to 16 fundamental arithmetic data types in GNU C++.
  65:/usr/include/c++/5/limits **** //
  66:/usr/include/c++/5/limits **** //
  67:/usr/include/c++/5/limits **** // Since a numeric_limits<> is a bit tricky to get right, we rely on
  68:/usr/include/c++/5/limits **** // an interface composed of macros which should be defined in config/os
  69:/usr/include/c++/5/limits **** // or config/cpu when they differ from the generic (read arbitrary)
  70:/usr/include/c++/5/limits **** // definitions given here.
  71:/usr/include/c++/5/limits **** //
  72:/usr/include/c++/5/limits **** 
  73:/usr/include/c++/5/limits **** // These values can be overridden in the target configuration file.
  74:/usr/include/c++/5/limits **** // The default values are appropriate for many 32-bit targets.
  75:/usr/include/c++/5/limits **** 
  76:/usr/include/c++/5/limits **** // GCC only intrinsically supports modulo integral types.  The only remaining
  77:/usr/include/c++/5/limits **** // integral exceptional values is division by zero.  Only targets that do not
  78:/usr/include/c++/5/limits **** // signal division by zero in some "hard to ignore" way should use false.
  79:/usr/include/c++/5/limits **** #ifndef __glibcxx_integral_traps
  80:/usr/include/c++/5/limits **** # define __glibcxx_integral_traps true
  81:/usr/include/c++/5/limits **** #endif
  82:/usr/include/c++/5/limits **** 
  83:/usr/include/c++/5/limits **** // float
  84:/usr/include/c++/5/limits **** //
  85:/usr/include/c++/5/limits **** 
  86:/usr/include/c++/5/limits **** // Default values.  Should be overridden in configuration files if necessary.
  87:/usr/include/c++/5/limits **** 
  88:/usr/include/c++/5/limits **** #ifndef __glibcxx_float_has_denorm_loss
  89:/usr/include/c++/5/limits **** #  define __glibcxx_float_has_denorm_loss false
  90:/usr/include/c++/5/limits **** #endif
  91:/usr/include/c++/5/limits **** #ifndef __glibcxx_float_traps
  92:/usr/include/c++/5/limits **** #  define __glibcxx_float_traps false
  93:/usr/include/c++/5/limits **** #endif
  94:/usr/include/c++/5/limits **** #ifndef __glibcxx_float_tinyness_before
  95:/usr/include/c++/5/limits **** #  define __glibcxx_float_tinyness_before false
  96:/usr/include/c++/5/limits **** #endif
  97:/usr/include/c++/5/limits **** 
  98:/usr/include/c++/5/limits **** // double
  99:/usr/include/c++/5/limits **** 
 100:/usr/include/c++/5/limits **** // Default values.  Should be overridden in configuration files if necessary.
 101:/usr/include/c++/5/limits **** 
 102:/usr/include/c++/5/limits **** #ifndef __glibcxx_double_has_denorm_loss
 103:/usr/include/c++/5/limits **** #  define __glibcxx_double_has_denorm_loss false
 104:/usr/include/c++/5/limits **** #endif
 105:/usr/include/c++/5/limits **** #ifndef __glibcxx_double_traps
 106:/usr/include/c++/5/limits **** #  define __glibcxx_double_traps false
 107:/usr/include/c++/5/limits **** #endif
 108:/usr/include/c++/5/limits **** #ifndef __glibcxx_double_tinyness_before
 109:/usr/include/c++/5/limits **** #  define __glibcxx_double_tinyness_before false
 110:/usr/include/c++/5/limits **** #endif
 111:/usr/include/c++/5/limits **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 18


 112:/usr/include/c++/5/limits **** // long double
 113:/usr/include/c++/5/limits **** 
 114:/usr/include/c++/5/limits **** // Default values.  Should be overridden in configuration files if necessary.
 115:/usr/include/c++/5/limits **** 
 116:/usr/include/c++/5/limits **** #ifndef __glibcxx_long_double_has_denorm_loss
 117:/usr/include/c++/5/limits **** #  define __glibcxx_long_double_has_denorm_loss false
 118:/usr/include/c++/5/limits **** #endif
 119:/usr/include/c++/5/limits **** #ifndef __glibcxx_long_double_traps
 120:/usr/include/c++/5/limits **** #  define __glibcxx_long_double_traps false
 121:/usr/include/c++/5/limits **** #endif
 122:/usr/include/c++/5/limits **** #ifndef __glibcxx_long_double_tinyness_before
 123:/usr/include/c++/5/limits **** #  define __glibcxx_long_double_tinyness_before false
 124:/usr/include/c++/5/limits **** #endif
 125:/usr/include/c++/5/limits **** 
 126:/usr/include/c++/5/limits **** // You should not need to define any macros below this point.
 127:/usr/include/c++/5/limits **** 
 128:/usr/include/c++/5/limits **** #define __glibcxx_signed_b(T,B)	((T)(-1) < 0)
 129:/usr/include/c++/5/limits **** 
 130:/usr/include/c++/5/limits **** #define __glibcxx_min_b(T,B)					\
 131:/usr/include/c++/5/limits ****   (__glibcxx_signed_b (T,B) ? -__glibcxx_max_b (T,B) - 1 : (T)0)
 132:/usr/include/c++/5/limits **** 
 133:/usr/include/c++/5/limits **** #define __glibcxx_max_b(T,B)						\
 134:/usr/include/c++/5/limits ****   (__glibcxx_signed_b (T,B) ?						\
 135:/usr/include/c++/5/limits ****    (((((T)1 << (__glibcxx_digits_b (T,B) - 1)) - 1) << 1) + 1) : ~(T)0)
 136:/usr/include/c++/5/limits **** 
 137:/usr/include/c++/5/limits **** #define __glibcxx_digits_b(T,B)				\
 138:/usr/include/c++/5/limits ****   (B - __glibcxx_signed_b (T,B))
 139:/usr/include/c++/5/limits **** 
 140:/usr/include/c++/5/limits **** // The fraction 643/2136 approximates log10(2) to 7 significant digits.
 141:/usr/include/c++/5/limits **** #define __glibcxx_digits10_b(T,B)		\
 142:/usr/include/c++/5/limits ****   (__glibcxx_digits_b (T,B) * 643L / 2136)
 143:/usr/include/c++/5/limits **** 
 144:/usr/include/c++/5/limits **** #define __glibcxx_signed(T) \
 145:/usr/include/c++/5/limits ****   __glibcxx_signed_b (T, sizeof(T) * __CHAR_BIT__)
 146:/usr/include/c++/5/limits **** #define __glibcxx_min(T) \
 147:/usr/include/c++/5/limits ****   __glibcxx_min_b (T, sizeof(T) * __CHAR_BIT__)
 148:/usr/include/c++/5/limits **** #define __glibcxx_max(T) \
 149:/usr/include/c++/5/limits ****   __glibcxx_max_b (T, sizeof(T) * __CHAR_BIT__)
 150:/usr/include/c++/5/limits **** #define __glibcxx_digits(T) \
 151:/usr/include/c++/5/limits ****   __glibcxx_digits_b (T, sizeof(T) * __CHAR_BIT__)
 152:/usr/include/c++/5/limits **** #define __glibcxx_digits10(T) \
 153:/usr/include/c++/5/limits ****   __glibcxx_digits10_b (T, sizeof(T) * __CHAR_BIT__)
 154:/usr/include/c++/5/limits **** 
 155:/usr/include/c++/5/limits **** #define __glibcxx_max_digits10(T) \
 156:/usr/include/c++/5/limits ****   (2 + (T) * 643L / 2136)
 157:/usr/include/c++/5/limits **** 
 158:/usr/include/c++/5/limits **** namespace std _GLIBCXX_VISIBILITY(default)
 159:/usr/include/c++/5/limits **** {
 160:/usr/include/c++/5/limits **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 161:/usr/include/c++/5/limits **** 
 162:/usr/include/c++/5/limits ****   /**
 163:/usr/include/c++/5/limits ****    *  @brief Describes the rounding style for floating-point types.
 164:/usr/include/c++/5/limits ****    *
 165:/usr/include/c++/5/limits ****    *  This is used in the std::numeric_limits class.
 166:/usr/include/c++/5/limits ****   */
 167:/usr/include/c++/5/limits ****   enum float_round_style
 168:/usr/include/c++/5/limits ****   {
GAS LISTING /tmp/ccbg3Dll.s 			page 19


 169:/usr/include/c++/5/limits ****     round_indeterminate       = -1,    /// Intermediate.
 170:/usr/include/c++/5/limits ****     round_toward_zero         = 0,     /// To zero.
 171:/usr/include/c++/5/limits ****     round_to_nearest          = 1,     /// To the nearest representable value.
 172:/usr/include/c++/5/limits ****     round_toward_infinity     = 2,     /// To infinity.
 173:/usr/include/c++/5/limits ****     round_toward_neg_infinity = 3      /// To negative infinity.
 174:/usr/include/c++/5/limits ****   };
 175:/usr/include/c++/5/limits **** 
 176:/usr/include/c++/5/limits ****   /**
 177:/usr/include/c++/5/limits ****    *  @brief Describes the denormalization for floating-point types.
 178:/usr/include/c++/5/limits ****    *
 179:/usr/include/c++/5/limits ****    *  These values represent the presence or absence of a variable number
 180:/usr/include/c++/5/limits ****    *  of exponent bits.  This type is used in the std::numeric_limits class.
 181:/usr/include/c++/5/limits ****   */
 182:/usr/include/c++/5/limits ****   enum float_denorm_style
 183:/usr/include/c++/5/limits ****   {
 184:/usr/include/c++/5/limits ****     /// Indeterminate at compile time whether denormalized values are allowed.
 185:/usr/include/c++/5/limits ****     denorm_indeterminate = -1,
 186:/usr/include/c++/5/limits ****     /// The type does not allow denormalized values.
 187:/usr/include/c++/5/limits ****     denorm_absent        = 0,
 188:/usr/include/c++/5/limits ****     /// The type allows denormalized values.
 189:/usr/include/c++/5/limits ****     denorm_present       = 1
 190:/usr/include/c++/5/limits ****   };
 191:/usr/include/c++/5/limits **** 
 192:/usr/include/c++/5/limits ****   /**
 193:/usr/include/c++/5/limits ****    *  @brief Part of std::numeric_limits.
 194:/usr/include/c++/5/limits ****    *
 195:/usr/include/c++/5/limits ****    *  The @c static @c const members are usable as integral constant
 196:/usr/include/c++/5/limits ****    *  expressions.
 197:/usr/include/c++/5/limits ****    *
 198:/usr/include/c++/5/limits ****    *  @note This is a separate class for purposes of efficiency; you
 199:/usr/include/c++/5/limits ****    *        should only access these members as part of an instantiation
 200:/usr/include/c++/5/limits ****    *        of the std::numeric_limits class.
 201:/usr/include/c++/5/limits ****   */
 202:/usr/include/c++/5/limits ****   struct __numeric_limits_base
 203:/usr/include/c++/5/limits ****   {
 204:/usr/include/c++/5/limits ****     /** This will be true for all fundamental types (which have
 205:/usr/include/c++/5/limits **** 	specializations), and false for everything else.  */
 206:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool is_specialized = false;
 207:/usr/include/c++/5/limits **** 
 208:/usr/include/c++/5/limits ****     /** The number of @c radix digits that be represented without change:  for
 209:/usr/include/c++/5/limits **** 	integer types, the number of non-sign bits in the mantissa; for
 210:/usr/include/c++/5/limits **** 	floating types, the number of @c radix digits in the mantissa.  */
 211:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR int digits = 0;
 212:/usr/include/c++/5/limits **** 
 213:/usr/include/c++/5/limits ****     /** The number of base 10 digits that can be represented without change. */
 214:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR int digits10 = 0;
 215:/usr/include/c++/5/limits **** 
 216:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 217:/usr/include/c++/5/limits ****     /** The number of base 10 digits required to ensure that values which
 218:/usr/include/c++/5/limits **** 	differ are always differentiated.  */
 219:/usr/include/c++/5/limits ****     static constexpr int max_digits10 = 0;
 220:/usr/include/c++/5/limits **** #endif
 221:/usr/include/c++/5/limits **** 
 222:/usr/include/c++/5/limits ****     /** True if the type is signed.  */
 223:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool is_signed = false;
 224:/usr/include/c++/5/limits **** 
 225:/usr/include/c++/5/limits ****     /** True if the type is integer.  */
GAS LISTING /tmp/ccbg3Dll.s 			page 20


 226:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool is_integer = false;
 227:/usr/include/c++/5/limits **** 
 228:/usr/include/c++/5/limits ****     /** True if the type uses an exact representation. All integer types are
 229:/usr/include/c++/5/limits **** 	exact, but not all exact types are integer.  For example, rational and
 230:/usr/include/c++/5/limits **** 	fixed-exponent representations are exact but not integer. */
 231:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool is_exact = false;
 232:/usr/include/c++/5/limits **** 
 233:/usr/include/c++/5/limits ****     /** For integer types, specifies the base of the representation.  For
 234:/usr/include/c++/5/limits **** 	floating types, specifies the base of the exponent representation.  */
 235:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR int radix = 0;
 236:/usr/include/c++/5/limits **** 
 237:/usr/include/c++/5/limits ****     /** The minimum negative integer such that @c radix raised to the power of
 238:/usr/include/c++/5/limits **** 	(one less than that integer) is a normalized floating point number.  */
 239:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
 240:/usr/include/c++/5/limits **** 
 241:/usr/include/c++/5/limits ****     /** The minimum negative integer such that 10 raised to that power is in
 242:/usr/include/c++/5/limits **** 	the range of normalized floating point numbers.  */
 243:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
 244:/usr/include/c++/5/limits **** 
 245:/usr/include/c++/5/limits ****     /** The maximum positive integer such that @c radix raised to the power of
 246:/usr/include/c++/5/limits **** 	(one less than that integer) is a representable finite floating point
 247:/usr/include/c++/5/limits **** 	number.  */
 248:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
 249:/usr/include/c++/5/limits **** 
 250:/usr/include/c++/5/limits ****     /** The maximum positive integer such that 10 raised to that power is in
 251:/usr/include/c++/5/limits **** 	the range of representable finite floating point numbers.  */
 252:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
 253:/usr/include/c++/5/limits **** 
 254:/usr/include/c++/5/limits ****     /** True if the type has a representation for positive infinity.  */
 255:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
 256:/usr/include/c++/5/limits **** 
 257:/usr/include/c++/5/limits ****     /** True if the type has a representation for a quiet (non-signaling)
 258:/usr/include/c++/5/limits **** 	Not a Number.  */
 259:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
 260:/usr/include/c++/5/limits **** 
 261:/usr/include/c++/5/limits ****     /** True if the type has a representation for a signaling
 262:/usr/include/c++/5/limits **** 	Not a Number.  */
 263:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
 264:/usr/include/c++/5/limits **** 
 265:/usr/include/c++/5/limits ****     /** See std::float_denorm_style for more information.  */
 266:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm = denorm_absent;
 267:/usr/include/c++/5/limits **** 
 268:/usr/include/c++/5/limits ****     /** True if loss of accuracy is detected as a denormalization loss,
 269:/usr/include/c++/5/limits **** 	rather than as an inexact result. */
 270:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
 271:/usr/include/c++/5/limits **** 
 272:/usr/include/c++/5/limits ****     /** True if-and-only-if the type adheres to the IEC 559 standard, also
 273:/usr/include/c++/5/limits **** 	known as IEEE 754.  (Only makes sense for floating point types.)  */
 274:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
 275:/usr/include/c++/5/limits **** 
 276:/usr/include/c++/5/limits ****     /** True if the set of values representable by the type is
 277:/usr/include/c++/5/limits **** 	finite.  All built-in types are bounded, this member would be
 278:/usr/include/c++/5/limits **** 	false for arbitrary precision types. */
 279:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool is_bounded = false;
 280:/usr/include/c++/5/limits **** 
 281:/usr/include/c++/5/limits ****     /** True if the type is @e modulo. A type is modulo if, for any
 282:/usr/include/c++/5/limits **** 	operation involving +, -, or * on values of that type whose
GAS LISTING /tmp/ccbg3Dll.s 			page 21


 283:/usr/include/c++/5/limits **** 	result would fall outside the range [min(),max()], the value
 284:/usr/include/c++/5/limits **** 	returned differs from the true value by an integer multiple of
 285:/usr/include/c++/5/limits **** 	max() - min() + 1. On most machines, this is false for floating
 286:/usr/include/c++/5/limits **** 	types, true for unsigned integers, and true for signed integers.
 287:/usr/include/c++/5/limits **** 	See PR22200 about signed integers.  */
 288:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;
 289:/usr/include/c++/5/limits **** 
 290:/usr/include/c++/5/limits ****     /** True if trapping is implemented for this type.  */
 291:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool traps = false;
 292:/usr/include/c++/5/limits **** 
 293:/usr/include/c++/5/limits ****     /** True if tininess is detected before rounding.  (see IEC 559)  */
 294:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
 295:/usr/include/c++/5/limits **** 
 296:/usr/include/c++/5/limits ****     /** See std::float_round_style for more information.  This is only
 297:/usr/include/c++/5/limits **** 	meaningful for floating types; integer types will all be
 298:/usr/include/c++/5/limits **** 	round_toward_zero.  */
 299:/usr/include/c++/5/limits ****     static _GLIBCXX_USE_CONSTEXPR float_round_style round_style = 
 300:/usr/include/c++/5/limits **** 						    round_toward_zero;
 301:/usr/include/c++/5/limits ****   };
 302:/usr/include/c++/5/limits **** 
 303:/usr/include/c++/5/limits ****   /**
 304:/usr/include/c++/5/limits ****    *  @brief Properties of fundamental types.
 305:/usr/include/c++/5/limits ****    *
 306:/usr/include/c++/5/limits ****    *  This class allows a program to obtain information about the
 307:/usr/include/c++/5/limits ****    *  representation of a fundamental type on a given platform.  For
 308:/usr/include/c++/5/limits ****    *  non-fundamental types, the functions will return 0 and the data
 309:/usr/include/c++/5/limits ****    *  members will all be @c false.
 310:/usr/include/c++/5/limits ****    *
 311:/usr/include/c++/5/limits ****    *  _GLIBCXX_RESOLVE_LIB_DEFECTS:  DRs 201 and 184 (hi Gaby!) are
 312:/usr/include/c++/5/limits ****    *  noted, but not incorporated in this documented (yet).
 313:/usr/include/c++/5/limits ****   */
 314:/usr/include/c++/5/limits ****   template<typename _Tp>
 315:/usr/include/c++/5/limits ****     struct numeric_limits : public __numeric_limits_base
 316:/usr/include/c++/5/limits ****     {
 317:/usr/include/c++/5/limits ****       /** The minimum finite value, or for floating types with
 318:/usr/include/c++/5/limits **** 	  denormalization, the minimum positive normalized value.  */
 319:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR _Tp
 320:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }
 321:/usr/include/c++/5/limits **** 
 322:/usr/include/c++/5/limits ****       /** The maximum finite value.  */
 323:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR _Tp
 324:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }
 325:/usr/include/c++/5/limits **** 
 326:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 327:/usr/include/c++/5/limits ****       /** A finite value x such that there is no other finite value y
 328:/usr/include/c++/5/limits ****        *  where y < x.  */
 329:/usr/include/c++/5/limits ****       static constexpr _Tp
 330:/usr/include/c++/5/limits ****       lowest() noexcept { return _Tp(); }
 331:/usr/include/c++/5/limits **** #endif
 332:/usr/include/c++/5/limits **** 
 333:/usr/include/c++/5/limits ****       /** The @e machine @e epsilon:  the difference between 1 and the least
 334:/usr/include/c++/5/limits **** 	  value greater than 1 that is representable.  */
 335:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR _Tp
 336:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }
 337:/usr/include/c++/5/limits **** 
 338:/usr/include/c++/5/limits ****       /** The maximum rounding error measurement (see LIA-1).  */
 339:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR _Tp
GAS LISTING /tmp/ccbg3Dll.s 			page 22


 340:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }
 341:/usr/include/c++/5/limits **** 
 342:/usr/include/c++/5/limits ****       /** The representation of positive infinity, if @c has_infinity.  */
 343:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR _Tp
 344:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }
 345:/usr/include/c++/5/limits **** 
 346:/usr/include/c++/5/limits ****       /** The representation of a quiet Not a Number,
 347:/usr/include/c++/5/limits **** 	  if @c has_quiet_NaN. */
 348:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR _Tp
 349:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }
 350:/usr/include/c++/5/limits **** 
 351:/usr/include/c++/5/limits ****       /** The representation of a signaling Not a Number, if
 352:/usr/include/c++/5/limits **** 	  @c has_signaling_NaN. */
 353:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR _Tp
 354:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }
 355:/usr/include/c++/5/limits **** 
 356:/usr/include/c++/5/limits ****       /** The minimum positive denormalized value.  For types where
 357:/usr/include/c++/5/limits **** 	  @c has_denorm is false, this is the minimum positive normalized
 358:/usr/include/c++/5/limits **** 	  value.  */
 359:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR _Tp
 360:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT { return _Tp(); }
 361:/usr/include/c++/5/limits ****     };
 362:/usr/include/c++/5/limits **** 
 363:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 364:/usr/include/c++/5/limits ****   template<typename _Tp>
 365:/usr/include/c++/5/limits ****     struct numeric_limits<const _Tp>
 366:/usr/include/c++/5/limits ****     : public numeric_limits<_Tp> { };
 367:/usr/include/c++/5/limits **** 
 368:/usr/include/c++/5/limits ****   template<typename _Tp>
 369:/usr/include/c++/5/limits ****     struct numeric_limits<volatile _Tp>
 370:/usr/include/c++/5/limits ****     : public numeric_limits<_Tp> { };
 371:/usr/include/c++/5/limits **** 
 372:/usr/include/c++/5/limits ****   template<typename _Tp>
 373:/usr/include/c++/5/limits ****     struct numeric_limits<const volatile _Tp>
 374:/usr/include/c++/5/limits ****     : public numeric_limits<_Tp> { };
 375:/usr/include/c++/5/limits **** #endif
 376:/usr/include/c++/5/limits **** 
 377:/usr/include/c++/5/limits ****   // Now there follow 16 explicit specializations.  Yes, 16.  Make sure
 378:/usr/include/c++/5/limits ****   // you get the count right. (18 in c++0x mode)
 379:/usr/include/c++/5/limits **** 
 380:/usr/include/c++/5/limits ****   /// numeric_limits<bool> specialization.
 381:/usr/include/c++/5/limits ****   template<>
 382:/usr/include/c++/5/limits ****     struct numeric_limits<bool>
 383:/usr/include/c++/5/limits ****     {
 384:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
 385:/usr/include/c++/5/limits **** 
 386:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR bool 
 387:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return false; }
 388:/usr/include/c++/5/limits **** 
 389:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR bool 
 390:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return true; }
 391:/usr/include/c++/5/limits **** 
 392:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 393:/usr/include/c++/5/limits ****       static constexpr bool
 394:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
 395:/usr/include/c++/5/limits **** #endif
 396:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits = 1;
GAS LISTING /tmp/ccbg3Dll.s 			page 23


 397:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 = 0;
 398:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 399:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
 400:/usr/include/c++/5/limits **** #endif
 401:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = false;
 402:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
 403:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
 404:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
 405:/usr/include/c++/5/limits **** 
 406:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR bool 
 407:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return false; }
 408:/usr/include/c++/5/limits **** 
 409:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR bool 
 410:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return false; }
 411:/usr/include/c++/5/limits **** 
 412:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
 413:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
 414:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
 415:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
 416:/usr/include/c++/5/limits **** 
 417:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
 418:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
 419:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
 420:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
 421:/usr/include/c++/5/limits ****        = denorm_absent;
 422:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
 423:/usr/include/c++/5/limits **** 
 424:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR bool 
 425:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return false; }
 426:/usr/include/c++/5/limits **** 
 427:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR bool 
 428:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return false; }
 429:/usr/include/c++/5/limits **** 
 430:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR bool 
 431:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return false; }
 432:/usr/include/c++/5/limits **** 
 433:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR bool 
 434:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT { return false; }
 435:/usr/include/c++/5/limits **** 
 436:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
 437:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
 438:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;
 439:/usr/include/c++/5/limits **** 
 440:/usr/include/c++/5/limits ****       // It is not clear what it means for a boolean type to trap.
 441:/usr/include/c++/5/limits ****       // This is a DR on the LWG issue list.  Here, I use integer
 442:/usr/include/c++/5/limits ****       // promotion semantics.
 443:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
 444:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
 445:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
 446:/usr/include/c++/5/limits ****        = round_toward_zero;
 447:/usr/include/c++/5/limits ****     };
 448:/usr/include/c++/5/limits **** 
 449:/usr/include/c++/5/limits ****   /// numeric_limits<char> specialization.
 450:/usr/include/c++/5/limits ****   template<>
 451:/usr/include/c++/5/limits ****     struct numeric_limits<char>
 452:/usr/include/c++/5/limits ****     {
 453:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
GAS LISTING /tmp/ccbg3Dll.s 			page 24


 454:/usr/include/c++/5/limits **** 
 455:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR char 
 456:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_min(char); }
 457:/usr/include/c++/5/limits **** 
 458:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR char 
 459:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_max(char); }
 460:/usr/include/c++/5/limits **** 
 461:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 462:/usr/include/c++/5/limits ****       static constexpr char 
 463:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
 464:/usr/include/c++/5/limits **** #endif
 465:/usr/include/c++/5/limits **** 
 466:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits = __glibcxx_digits (char);
 467:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 = __glibcxx_digits10 (char);
 468:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 469:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
 470:/usr/include/c++/5/limits **** #endif
 471:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = __glibcxx_signed (char);
 472:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
 473:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
 474:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
 475:/usr/include/c++/5/limits **** 
 476:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR char 
 477:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
 478:/usr/include/c++/5/limits **** 
 479:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR char 
 480:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
 481:/usr/include/c++/5/limits **** 
 482:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
 483:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
 484:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
 485:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
 486:/usr/include/c++/5/limits **** 
 487:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
 488:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
 489:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
 490:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
 491:/usr/include/c++/5/limits ****        = denorm_absent;
 492:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
 493:/usr/include/c++/5/limits **** 
 494:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR 
 495:/usr/include/c++/5/limits ****       char infinity() _GLIBCXX_USE_NOEXCEPT { return char(); }
 496:/usr/include/c++/5/limits **** 
 497:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR char 
 498:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return char(); }
 499:/usr/include/c++/5/limits **** 
 500:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR char 
 501:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return char(); }
 502:/usr/include/c++/5/limits **** 
 503:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR char 
 504:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT { return static_cast<char>(0); }
 505:/usr/include/c++/5/limits **** 
 506:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
 507:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
 508:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = !is_signed;
 509:/usr/include/c++/5/limits **** 
 510:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
GAS LISTING /tmp/ccbg3Dll.s 			page 25


 511:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
 512:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
 513:/usr/include/c++/5/limits ****        = round_toward_zero;
 514:/usr/include/c++/5/limits ****     };
 515:/usr/include/c++/5/limits **** 
 516:/usr/include/c++/5/limits ****   /// numeric_limits<signed char> specialization.
 517:/usr/include/c++/5/limits ****   template<>
 518:/usr/include/c++/5/limits ****     struct numeric_limits<signed char>
 519:/usr/include/c++/5/limits ****     {
 520:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
 521:/usr/include/c++/5/limits **** 
 522:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR signed char 
 523:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return -__SCHAR_MAX__ - 1; }
 524:/usr/include/c++/5/limits **** 
 525:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR signed char 
 526:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __SCHAR_MAX__; }
 527:/usr/include/c++/5/limits **** 
 528:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 529:/usr/include/c++/5/limits ****       static constexpr signed char 
 530:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
 531:/usr/include/c++/5/limits **** #endif
 532:/usr/include/c++/5/limits **** 
 533:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits = __glibcxx_digits (signed char);
 534:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 
 535:/usr/include/c++/5/limits ****        = __glibcxx_digits10 (signed char);
 536:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 537:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
 538:/usr/include/c++/5/limits **** #endif
 539:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = true;
 540:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
 541:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
 542:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
 543:/usr/include/c++/5/limits **** 
 544:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR signed char 
 545:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
 546:/usr/include/c++/5/limits **** 
 547:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR signed char 
 548:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
 549:/usr/include/c++/5/limits **** 
 550:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
 551:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
 552:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
 553:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
 554:/usr/include/c++/5/limits **** 
 555:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
 556:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
 557:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
 558:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
 559:/usr/include/c++/5/limits ****        = denorm_absent;
 560:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
 561:/usr/include/c++/5/limits **** 
 562:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR signed char 
 563:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return static_cast<signed char>(0); }
 564:/usr/include/c++/5/limits **** 
 565:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR signed char 
 566:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<signed char>(0); }
 567:/usr/include/c++/5/limits **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 26


 568:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR signed char 
 569:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT
 570:/usr/include/c++/5/limits ****       { return static_cast<signed char>(0); }
 571:/usr/include/c++/5/limits **** 
 572:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR signed char 
 573:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT
 574:/usr/include/c++/5/limits ****       { return static_cast<signed char>(0); }
 575:/usr/include/c++/5/limits **** 
 576:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
 577:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
 578:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;
 579:/usr/include/c++/5/limits **** 
 580:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
 581:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
 582:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
 583:/usr/include/c++/5/limits ****        = round_toward_zero;
 584:/usr/include/c++/5/limits ****     };
 585:/usr/include/c++/5/limits **** 
 586:/usr/include/c++/5/limits ****   /// numeric_limits<unsigned char> specialization.
 587:/usr/include/c++/5/limits ****   template<>
 588:/usr/include/c++/5/limits ****     struct numeric_limits<unsigned char>
 589:/usr/include/c++/5/limits ****     {
 590:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
 591:/usr/include/c++/5/limits **** 
 592:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned char 
 593:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return 0; }
 594:/usr/include/c++/5/limits **** 
 595:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned char 
 596:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __SCHAR_MAX__ * 2U + 1; }
 597:/usr/include/c++/5/limits **** 
 598:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 599:/usr/include/c++/5/limits ****       static constexpr unsigned char 
 600:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
 601:/usr/include/c++/5/limits **** #endif
 602:/usr/include/c++/5/limits **** 
 603:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits 
 604:/usr/include/c++/5/limits ****        = __glibcxx_digits (unsigned char);
 605:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 
 606:/usr/include/c++/5/limits ****        = __glibcxx_digits10 (unsigned char);
 607:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 608:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
 609:/usr/include/c++/5/limits **** #endif
 610:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = false;
 611:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
 612:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
 613:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
 614:/usr/include/c++/5/limits **** 
 615:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned char 
 616:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
 617:/usr/include/c++/5/limits **** 
 618:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned char 
 619:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
 620:/usr/include/c++/5/limits **** 
 621:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
 622:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
 623:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
 624:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
GAS LISTING /tmp/ccbg3Dll.s 			page 27


 625:/usr/include/c++/5/limits **** 
 626:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
 627:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
 628:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
 629:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
 630:/usr/include/c++/5/limits ****        = denorm_absent;
 631:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
 632:/usr/include/c++/5/limits **** 
 633:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned char 
 634:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT
 635:/usr/include/c++/5/limits ****       { return static_cast<unsigned char>(0); }
 636:/usr/include/c++/5/limits **** 
 637:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned char 
 638:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT
 639:/usr/include/c++/5/limits ****       { return static_cast<unsigned char>(0); }
 640:/usr/include/c++/5/limits **** 
 641:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned char 
 642:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT
 643:/usr/include/c++/5/limits ****       { return static_cast<unsigned char>(0); }
 644:/usr/include/c++/5/limits **** 
 645:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned char 
 646:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT
 647:/usr/include/c++/5/limits ****       { return static_cast<unsigned char>(0); }
 648:/usr/include/c++/5/limits **** 
 649:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
 650:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
 651:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;
 652:/usr/include/c++/5/limits **** 
 653:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
 654:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
 655:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
 656:/usr/include/c++/5/limits ****        = round_toward_zero;
 657:/usr/include/c++/5/limits ****     };
 658:/usr/include/c++/5/limits **** 
 659:/usr/include/c++/5/limits ****   /// numeric_limits<wchar_t> specialization.
 660:/usr/include/c++/5/limits ****   template<>
 661:/usr/include/c++/5/limits ****     struct numeric_limits<wchar_t>
 662:/usr/include/c++/5/limits ****     {
 663:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
 664:/usr/include/c++/5/limits **** 
 665:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR wchar_t 
 666:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_min (wchar_t); }
 667:/usr/include/c++/5/limits **** 
 668:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR wchar_t 
 669:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_max (wchar_t); }
 670:/usr/include/c++/5/limits **** 
 671:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 672:/usr/include/c++/5/limits ****       static constexpr wchar_t
 673:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
 674:/usr/include/c++/5/limits **** #endif
 675:/usr/include/c++/5/limits **** 
 676:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits = __glibcxx_digits (wchar_t);
 677:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 
 678:/usr/include/c++/5/limits ****        = __glibcxx_digits10 (wchar_t);
 679:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 680:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
 681:/usr/include/c++/5/limits **** #endif
GAS LISTING /tmp/ccbg3Dll.s 			page 28


 682:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = __glibcxx_signed (wchar_t);
 683:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
 684:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
 685:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
 686:/usr/include/c++/5/limits **** 
 687:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR wchar_t 
 688:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
 689:/usr/include/c++/5/limits **** 
 690:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR wchar_t 
 691:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
 692:/usr/include/c++/5/limits **** 
 693:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
 694:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
 695:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
 696:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
 697:/usr/include/c++/5/limits **** 
 698:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
 699:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
 700:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
 701:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
 702:/usr/include/c++/5/limits ****        = denorm_absent;
 703:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
 704:/usr/include/c++/5/limits **** 
 705:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR wchar_t 
 706:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return wchar_t(); }
 707:/usr/include/c++/5/limits **** 
 708:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR wchar_t 
 709:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return wchar_t(); }
 710:/usr/include/c++/5/limits **** 
 711:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR wchar_t 
 712:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return wchar_t(); }
 713:/usr/include/c++/5/limits **** 
 714:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR wchar_t 
 715:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT { return wchar_t(); }
 716:/usr/include/c++/5/limits **** 
 717:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
 718:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
 719:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = !is_signed;
 720:/usr/include/c++/5/limits **** 
 721:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
 722:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
 723:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
 724:/usr/include/c++/5/limits ****        = round_toward_zero;
 725:/usr/include/c++/5/limits ****     };
 726:/usr/include/c++/5/limits **** 
 727:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 728:/usr/include/c++/5/limits ****   /// numeric_limits<char16_t> specialization.
 729:/usr/include/c++/5/limits ****   template<>
 730:/usr/include/c++/5/limits ****     struct numeric_limits<char16_t>
 731:/usr/include/c++/5/limits ****     {
 732:/usr/include/c++/5/limits ****       static constexpr bool is_specialized = true;
 733:/usr/include/c++/5/limits **** 
 734:/usr/include/c++/5/limits ****       static constexpr char16_t 
 735:/usr/include/c++/5/limits ****       min() noexcept { return __glibcxx_min (char16_t); }
 736:/usr/include/c++/5/limits **** 
 737:/usr/include/c++/5/limits ****       static constexpr char16_t 
 738:/usr/include/c++/5/limits ****       max() noexcept { return __glibcxx_max (char16_t); }
GAS LISTING /tmp/ccbg3Dll.s 			page 29


 739:/usr/include/c++/5/limits **** 
 740:/usr/include/c++/5/limits ****       static constexpr char16_t 
 741:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
 742:/usr/include/c++/5/limits **** 
 743:/usr/include/c++/5/limits ****       static constexpr int digits = __glibcxx_digits (char16_t);
 744:/usr/include/c++/5/limits ****       static constexpr int digits10 = __glibcxx_digits10 (char16_t);
 745:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
 746:/usr/include/c++/5/limits ****       static constexpr bool is_signed = __glibcxx_signed (char16_t);
 747:/usr/include/c++/5/limits ****       static constexpr bool is_integer = true;
 748:/usr/include/c++/5/limits ****       static constexpr bool is_exact = true;
 749:/usr/include/c++/5/limits ****       static constexpr int radix = 2;
 750:/usr/include/c++/5/limits **** 
 751:/usr/include/c++/5/limits ****       static constexpr char16_t 
 752:/usr/include/c++/5/limits ****       epsilon() noexcept { return 0; }
 753:/usr/include/c++/5/limits **** 
 754:/usr/include/c++/5/limits ****       static constexpr char16_t 
 755:/usr/include/c++/5/limits ****       round_error() noexcept { return 0; }
 756:/usr/include/c++/5/limits **** 
 757:/usr/include/c++/5/limits ****       static constexpr int min_exponent = 0;
 758:/usr/include/c++/5/limits ****       static constexpr int min_exponent10 = 0;
 759:/usr/include/c++/5/limits ****       static constexpr int max_exponent = 0;
 760:/usr/include/c++/5/limits ****       static constexpr int max_exponent10 = 0;
 761:/usr/include/c++/5/limits **** 
 762:/usr/include/c++/5/limits ****       static constexpr bool has_infinity = false;
 763:/usr/include/c++/5/limits ****       static constexpr bool has_quiet_NaN = false;
 764:/usr/include/c++/5/limits ****       static constexpr bool has_signaling_NaN = false;
 765:/usr/include/c++/5/limits ****       static constexpr float_denorm_style has_denorm = denorm_absent;
 766:/usr/include/c++/5/limits ****       static constexpr bool has_denorm_loss = false;
 767:/usr/include/c++/5/limits **** 
 768:/usr/include/c++/5/limits ****       static constexpr char16_t 
 769:/usr/include/c++/5/limits ****       infinity() noexcept { return char16_t(); }
 770:/usr/include/c++/5/limits **** 
 771:/usr/include/c++/5/limits ****       static constexpr char16_t 
 772:/usr/include/c++/5/limits ****       quiet_NaN() noexcept { return char16_t(); }
 773:/usr/include/c++/5/limits **** 
 774:/usr/include/c++/5/limits ****       static constexpr char16_t 
 775:/usr/include/c++/5/limits ****       signaling_NaN() noexcept { return char16_t(); }
 776:/usr/include/c++/5/limits **** 
 777:/usr/include/c++/5/limits ****       static constexpr char16_t 
 778:/usr/include/c++/5/limits ****       denorm_min() noexcept { return char16_t(); }
 779:/usr/include/c++/5/limits **** 
 780:/usr/include/c++/5/limits ****       static constexpr bool is_iec559 = false;
 781:/usr/include/c++/5/limits ****       static constexpr bool is_bounded = true;
 782:/usr/include/c++/5/limits ****       static constexpr bool is_modulo = !is_signed;
 783:/usr/include/c++/5/limits **** 
 784:/usr/include/c++/5/limits ****       static constexpr bool traps = __glibcxx_integral_traps;
 785:/usr/include/c++/5/limits ****       static constexpr bool tinyness_before = false;
 786:/usr/include/c++/5/limits ****       static constexpr float_round_style round_style = round_toward_zero;
 787:/usr/include/c++/5/limits ****     };
 788:/usr/include/c++/5/limits **** 
 789:/usr/include/c++/5/limits ****   /// numeric_limits<char32_t> specialization.
 790:/usr/include/c++/5/limits ****   template<>
 791:/usr/include/c++/5/limits ****     struct numeric_limits<char32_t>
 792:/usr/include/c++/5/limits ****     {
 793:/usr/include/c++/5/limits ****       static constexpr bool is_specialized = true;
 794:/usr/include/c++/5/limits **** 
 795:/usr/include/c++/5/limits ****       static constexpr char32_t 
GAS LISTING /tmp/ccbg3Dll.s 			page 30


 796:/usr/include/c++/5/limits ****       min() noexcept { return __glibcxx_min (char32_t); }
 797:/usr/include/c++/5/limits **** 
 798:/usr/include/c++/5/limits ****       static constexpr char32_t 
 799:/usr/include/c++/5/limits ****       max() noexcept { return __glibcxx_max (char32_t); }
 800:/usr/include/c++/5/limits **** 
 801:/usr/include/c++/5/limits ****       static constexpr char32_t 
 802:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
 803:/usr/include/c++/5/limits **** 
 804:/usr/include/c++/5/limits ****       static constexpr int digits = __glibcxx_digits (char32_t);
 805:/usr/include/c++/5/limits ****       static constexpr int digits10 = __glibcxx_digits10 (char32_t);
 806:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
 807:/usr/include/c++/5/limits ****       static constexpr bool is_signed = __glibcxx_signed (char32_t);
 808:/usr/include/c++/5/limits ****       static constexpr bool is_integer = true;
 809:/usr/include/c++/5/limits ****       static constexpr bool is_exact = true;
 810:/usr/include/c++/5/limits ****       static constexpr int radix = 2;
 811:/usr/include/c++/5/limits **** 
 812:/usr/include/c++/5/limits ****       static constexpr char32_t 
 813:/usr/include/c++/5/limits ****       epsilon() noexcept { return 0; }
 814:/usr/include/c++/5/limits **** 
 815:/usr/include/c++/5/limits ****       static constexpr char32_t 
 816:/usr/include/c++/5/limits ****       round_error() noexcept { return 0; }
 817:/usr/include/c++/5/limits **** 
 818:/usr/include/c++/5/limits ****       static constexpr int min_exponent = 0;
 819:/usr/include/c++/5/limits ****       static constexpr int min_exponent10 = 0;
 820:/usr/include/c++/5/limits ****       static constexpr int max_exponent = 0;
 821:/usr/include/c++/5/limits ****       static constexpr int max_exponent10 = 0;
 822:/usr/include/c++/5/limits **** 
 823:/usr/include/c++/5/limits ****       static constexpr bool has_infinity = false;
 824:/usr/include/c++/5/limits ****       static constexpr bool has_quiet_NaN = false;
 825:/usr/include/c++/5/limits ****       static constexpr bool has_signaling_NaN = false;
 826:/usr/include/c++/5/limits ****       static constexpr float_denorm_style has_denorm = denorm_absent;
 827:/usr/include/c++/5/limits ****       static constexpr bool has_denorm_loss = false;
 828:/usr/include/c++/5/limits **** 
 829:/usr/include/c++/5/limits ****       static constexpr char32_t 
 830:/usr/include/c++/5/limits ****       infinity() noexcept { return char32_t(); }
 831:/usr/include/c++/5/limits **** 
 832:/usr/include/c++/5/limits ****       static constexpr char32_t 
 833:/usr/include/c++/5/limits ****       quiet_NaN() noexcept { return char32_t(); }
 834:/usr/include/c++/5/limits **** 
 835:/usr/include/c++/5/limits ****       static constexpr char32_t 
 836:/usr/include/c++/5/limits ****       signaling_NaN() noexcept { return char32_t(); }
 837:/usr/include/c++/5/limits **** 
 838:/usr/include/c++/5/limits ****       static constexpr char32_t 
 839:/usr/include/c++/5/limits ****       denorm_min() noexcept { return char32_t(); }
 840:/usr/include/c++/5/limits **** 
 841:/usr/include/c++/5/limits ****       static constexpr bool is_iec559 = false;
 842:/usr/include/c++/5/limits ****       static constexpr bool is_bounded = true;
 843:/usr/include/c++/5/limits ****       static constexpr bool is_modulo = !is_signed;
 844:/usr/include/c++/5/limits **** 
 845:/usr/include/c++/5/limits ****       static constexpr bool traps = __glibcxx_integral_traps;
 846:/usr/include/c++/5/limits ****       static constexpr bool tinyness_before = false;
 847:/usr/include/c++/5/limits ****       static constexpr float_round_style round_style = round_toward_zero;
 848:/usr/include/c++/5/limits ****     };
 849:/usr/include/c++/5/limits **** #endif
 850:/usr/include/c++/5/limits **** 
 851:/usr/include/c++/5/limits ****   /// numeric_limits<short> specialization.
 852:/usr/include/c++/5/limits ****   template<>
GAS LISTING /tmp/ccbg3Dll.s 			page 31


 853:/usr/include/c++/5/limits ****     struct numeric_limits<short>
 854:/usr/include/c++/5/limits ****     {
 855:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
 856:/usr/include/c++/5/limits **** 
 857:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR short 
 858:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return -__SHRT_MAX__ - 1; }
 859:/usr/include/c++/5/limits **** 
 860:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR short 
 861:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __SHRT_MAX__; }
 862:/usr/include/c++/5/limits **** 
 863:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 864:/usr/include/c++/5/limits ****       static constexpr short 
 865:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
 866:/usr/include/c++/5/limits **** #endif
 867:/usr/include/c++/5/limits **** 
 868:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits = __glibcxx_digits (short);
 869:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 = __glibcxx_digits10 (short);
 870:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 871:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
 872:/usr/include/c++/5/limits **** #endif
 873:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = true;
 874:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
 875:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
 876:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
 877:/usr/include/c++/5/limits **** 
 878:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR short 
 879:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
 880:/usr/include/c++/5/limits **** 
 881:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR short 
 882:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
 883:/usr/include/c++/5/limits **** 
 884:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
 885:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
 886:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
 887:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
 888:/usr/include/c++/5/limits **** 
 889:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
 890:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
 891:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
 892:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
 893:/usr/include/c++/5/limits ****        = denorm_absent;
 894:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
 895:/usr/include/c++/5/limits **** 
 896:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR short 
 897:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return short(); }
 898:/usr/include/c++/5/limits **** 
 899:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR short 
 900:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return short(); }
 901:/usr/include/c++/5/limits **** 
 902:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR short 
 903:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return short(); }
 904:/usr/include/c++/5/limits **** 
 905:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR short 
 906:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT { return short(); }
 907:/usr/include/c++/5/limits **** 
 908:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
 909:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
GAS LISTING /tmp/ccbg3Dll.s 			page 32


 910:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;
 911:/usr/include/c++/5/limits **** 
 912:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
 913:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
 914:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
 915:/usr/include/c++/5/limits ****        = round_toward_zero;
 916:/usr/include/c++/5/limits ****     };
 917:/usr/include/c++/5/limits **** 
 918:/usr/include/c++/5/limits ****   /// numeric_limits<unsigned short> specialization.
 919:/usr/include/c++/5/limits ****   template<>
 920:/usr/include/c++/5/limits ****     struct numeric_limits<unsigned short>
 921:/usr/include/c++/5/limits ****     {
 922:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
 923:/usr/include/c++/5/limits **** 
 924:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned short 
 925:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return 0; }
 926:/usr/include/c++/5/limits **** 
 927:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned short 
 928:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __SHRT_MAX__ * 2U + 1; }
 929:/usr/include/c++/5/limits **** 
 930:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 931:/usr/include/c++/5/limits ****       static constexpr unsigned short 
 932:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
 933:/usr/include/c++/5/limits **** #endif
 934:/usr/include/c++/5/limits **** 
 935:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits 
 936:/usr/include/c++/5/limits ****        = __glibcxx_digits (unsigned short);
 937:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 
 938:/usr/include/c++/5/limits ****        = __glibcxx_digits10 (unsigned short);
 939:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
 940:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
 941:/usr/include/c++/5/limits **** #endif
 942:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = false;
 943:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
 944:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
 945:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
 946:/usr/include/c++/5/limits **** 
 947:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned short 
 948:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
 949:/usr/include/c++/5/limits **** 
 950:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned short 
 951:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
 952:/usr/include/c++/5/limits **** 
 953:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
 954:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
 955:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
 956:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
 957:/usr/include/c++/5/limits **** 
 958:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
 959:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
 960:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
 961:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
 962:/usr/include/c++/5/limits ****        = denorm_absent;
 963:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
 964:/usr/include/c++/5/limits **** 
 965:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned short 
 966:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT
GAS LISTING /tmp/ccbg3Dll.s 			page 33


 967:/usr/include/c++/5/limits ****       { return static_cast<unsigned short>(0); }
 968:/usr/include/c++/5/limits **** 
 969:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned short 
 970:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT
 971:/usr/include/c++/5/limits ****       { return static_cast<unsigned short>(0); }
 972:/usr/include/c++/5/limits **** 
 973:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned short 
 974:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT
 975:/usr/include/c++/5/limits ****       { return static_cast<unsigned short>(0); }
 976:/usr/include/c++/5/limits **** 
 977:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned short 
 978:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT
 979:/usr/include/c++/5/limits ****       { return static_cast<unsigned short>(0); }
 980:/usr/include/c++/5/limits **** 
 981:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
 982:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
 983:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;
 984:/usr/include/c++/5/limits **** 
 985:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
 986:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
 987:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
 988:/usr/include/c++/5/limits ****        = round_toward_zero;
 989:/usr/include/c++/5/limits ****     };
 990:/usr/include/c++/5/limits **** 
 991:/usr/include/c++/5/limits ****   /// numeric_limits<int> specialization.
 992:/usr/include/c++/5/limits ****   template<>
 993:/usr/include/c++/5/limits ****     struct numeric_limits<int>
 994:/usr/include/c++/5/limits ****     {
 995:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
 996:/usr/include/c++/5/limits **** 
 997:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR int 
 998:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return -__INT_MAX__ - 1; }
 999:/usr/include/c++/5/limits **** 
1000:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR int 
1001:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __INT_MAX__; }
1002:/usr/include/c++/5/limits **** 
1003:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1004:/usr/include/c++/5/limits ****       static constexpr int 
1005:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
1006:/usr/include/c++/5/limits **** #endif
1007:/usr/include/c++/5/limits **** 
1008:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits = __glibcxx_digits (int);
1009:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 = __glibcxx_digits10 (int);
1010:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1011:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
1012:/usr/include/c++/5/limits **** #endif
1013:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = true;
1014:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
1015:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
1016:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
1017:/usr/include/c++/5/limits **** 
1018:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR int 
1019:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
1020:/usr/include/c++/5/limits **** 
1021:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR int 
1022:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
1023:/usr/include/c++/5/limits **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 34


1024:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
1025:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
1026:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
1027:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
1028:/usr/include/c++/5/limits **** 
1029:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
1030:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
1031:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
1032:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
1033:/usr/include/c++/5/limits ****        = denorm_absent;
1034:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
1035:/usr/include/c++/5/limits **** 
1036:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR int 
1037:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return static_cast<int>(0); }
1038:/usr/include/c++/5/limits **** 
1039:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR int 
1040:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<int>(0); }
1041:/usr/include/c++/5/limits **** 
1042:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR int 
1043:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<int>(0); }
1044:/usr/include/c++/5/limits **** 
1045:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR int 
1046:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT { return static_cast<int>(0); }
1047:/usr/include/c++/5/limits **** 
1048:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
1049:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
1050:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;
1051:/usr/include/c++/5/limits **** 
1052:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
1053:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
1054:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
1055:/usr/include/c++/5/limits ****        = round_toward_zero;
1056:/usr/include/c++/5/limits ****     };
1057:/usr/include/c++/5/limits **** 
1058:/usr/include/c++/5/limits ****   /// numeric_limits<unsigned int> specialization.
1059:/usr/include/c++/5/limits ****   template<>
1060:/usr/include/c++/5/limits ****     struct numeric_limits<unsigned int>
1061:/usr/include/c++/5/limits ****     {
1062:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
1063:/usr/include/c++/5/limits **** 
1064:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned int 
1065:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return 0; }
1066:/usr/include/c++/5/limits **** 
1067:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned int 
1068:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __INT_MAX__ * 2U + 1; }
1069:/usr/include/c++/5/limits **** 
1070:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1071:/usr/include/c++/5/limits ****       static constexpr unsigned int 
1072:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
1073:/usr/include/c++/5/limits **** #endif
1074:/usr/include/c++/5/limits **** 
1075:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits 
1076:/usr/include/c++/5/limits ****        = __glibcxx_digits (unsigned int);
1077:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 
1078:/usr/include/c++/5/limits ****        = __glibcxx_digits10 (unsigned int);
1079:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1080:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
GAS LISTING /tmp/ccbg3Dll.s 			page 35


1081:/usr/include/c++/5/limits **** #endif
1082:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = false;
1083:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
1084:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
1085:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
1086:/usr/include/c++/5/limits **** 
1087:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned int 
1088:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
1089:/usr/include/c++/5/limits **** 
1090:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned int 
1091:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
1092:/usr/include/c++/5/limits **** 
1093:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
1094:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
1095:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
1096:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
1097:/usr/include/c++/5/limits **** 
1098:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
1099:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
1100:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
1101:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
1102:/usr/include/c++/5/limits ****        = denorm_absent;
1103:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
1104:/usr/include/c++/5/limits **** 
1105:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned int 
1106:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return static_cast<unsigned int>(0); }
1107:/usr/include/c++/5/limits **** 
1108:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned int 
1109:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT
1110:/usr/include/c++/5/limits ****       { return static_cast<unsigned int>(0); }
1111:/usr/include/c++/5/limits **** 
1112:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned int 
1113:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT
1114:/usr/include/c++/5/limits ****       { return static_cast<unsigned int>(0); }
1115:/usr/include/c++/5/limits **** 
1116:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned int 
1117:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT
1118:/usr/include/c++/5/limits ****       { return static_cast<unsigned int>(0); }
1119:/usr/include/c++/5/limits **** 
1120:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
1121:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
1122:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;
1123:/usr/include/c++/5/limits **** 
1124:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
1125:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
1126:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
1127:/usr/include/c++/5/limits ****        = round_toward_zero;
1128:/usr/include/c++/5/limits ****     };
1129:/usr/include/c++/5/limits **** 
1130:/usr/include/c++/5/limits ****   /// numeric_limits<long> specialization.
1131:/usr/include/c++/5/limits ****   template<>
1132:/usr/include/c++/5/limits ****     struct numeric_limits<long>
1133:/usr/include/c++/5/limits ****     {
1134:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
1135:/usr/include/c++/5/limits **** 
1136:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long
1137:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return -__LONG_MAX__ - 1; }
GAS LISTING /tmp/ccbg3Dll.s 			page 36


1138:/usr/include/c++/5/limits **** 
1139:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long 
1140:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __LONG_MAX__; }
1141:/usr/include/c++/5/limits **** 
1142:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1143:/usr/include/c++/5/limits ****       static constexpr long 
1144:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
1145:/usr/include/c++/5/limits **** #endif
1146:/usr/include/c++/5/limits **** 
1147:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits = __glibcxx_digits (long);
1148:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 = __glibcxx_digits10 (long);
1149:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1150:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
1151:/usr/include/c++/5/limits **** #endif
1152:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = true;
1153:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
1154:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
1155:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
1156:/usr/include/c++/5/limits **** 
1157:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long 
1158:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
1159:/usr/include/c++/5/limits **** 
1160:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long 
1161:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
1162:/usr/include/c++/5/limits **** 
1163:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
1164:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
1165:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
1166:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
1167:/usr/include/c++/5/limits **** 
1168:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
1169:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
1170:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
1171:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
1172:/usr/include/c++/5/limits ****        = denorm_absent;
1173:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
1174:/usr/include/c++/5/limits **** 
1175:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long 
1176:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return static_cast<long>(0); }
1177:/usr/include/c++/5/limits **** 
1178:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long 
1179:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<long>(0); }
1180:/usr/include/c++/5/limits **** 
1181:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long 
1182:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<long>(0); }
1183:/usr/include/c++/5/limits **** 
1184:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long 
1185:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT { return static_cast<long>(0); }
1186:/usr/include/c++/5/limits **** 
1187:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
1188:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
1189:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;
1190:/usr/include/c++/5/limits **** 
1191:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
1192:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
1193:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
1194:/usr/include/c++/5/limits ****        = round_toward_zero;
GAS LISTING /tmp/ccbg3Dll.s 			page 37


1195:/usr/include/c++/5/limits ****     };
1196:/usr/include/c++/5/limits **** 
1197:/usr/include/c++/5/limits ****   /// numeric_limits<unsigned long> specialization.
1198:/usr/include/c++/5/limits ****   template<>
1199:/usr/include/c++/5/limits ****     struct numeric_limits<unsigned long>
1200:/usr/include/c++/5/limits ****     {
1201:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
1202:/usr/include/c++/5/limits **** 
1203:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long 
1204:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return 0; }
1205:/usr/include/c++/5/limits **** 
1206:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long 
1207:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __LONG_MAX__ * 2UL + 1; }
1208:/usr/include/c++/5/limits **** 
1209:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1210:/usr/include/c++/5/limits ****       static constexpr unsigned long 
1211:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
1212:/usr/include/c++/5/limits **** #endif
1213:/usr/include/c++/5/limits **** 
1214:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits 
1215:/usr/include/c++/5/limits ****        = __glibcxx_digits (unsigned long);
1216:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 
1217:/usr/include/c++/5/limits ****        = __glibcxx_digits10 (unsigned long);
1218:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1219:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
1220:/usr/include/c++/5/limits **** #endif
1221:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = false;
1222:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
1223:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
1224:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
1225:/usr/include/c++/5/limits **** 
1226:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long 
1227:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
1228:/usr/include/c++/5/limits **** 
1229:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long 
1230:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
1231:/usr/include/c++/5/limits **** 
1232:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
1233:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
1234:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
1235:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
1236:/usr/include/c++/5/limits **** 
1237:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
1238:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
1239:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
1240:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
1241:/usr/include/c++/5/limits ****        = denorm_absent;
1242:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
1243:/usr/include/c++/5/limits **** 
1244:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long 
1245:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT
1246:/usr/include/c++/5/limits ****       { return static_cast<unsigned long>(0); }
1247:/usr/include/c++/5/limits **** 
1248:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long 
1249:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT
1250:/usr/include/c++/5/limits ****       { return static_cast<unsigned long>(0); }
1251:/usr/include/c++/5/limits **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 38


1252:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long 
1253:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT
1254:/usr/include/c++/5/limits ****       { return static_cast<unsigned long>(0); }
1255:/usr/include/c++/5/limits **** 
1256:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long 
1257:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT
1258:/usr/include/c++/5/limits ****       { return static_cast<unsigned long>(0); }
1259:/usr/include/c++/5/limits **** 
1260:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
1261:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
1262:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;
1263:/usr/include/c++/5/limits **** 
1264:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
1265:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
1266:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
1267:/usr/include/c++/5/limits ****        = round_toward_zero;
1268:/usr/include/c++/5/limits ****     };
1269:/usr/include/c++/5/limits **** 
1270:/usr/include/c++/5/limits ****   /// numeric_limits<long long> specialization.
1271:/usr/include/c++/5/limits ****   template<>
1272:/usr/include/c++/5/limits ****     struct numeric_limits<long long>
1273:/usr/include/c++/5/limits ****     {
1274:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
1275:/usr/include/c++/5/limits **** 
1276:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long long 
1277:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return -__LONG_LONG_MAX__ - 1; }
1278:/usr/include/c++/5/limits **** 
1279:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long long 
1280:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __LONG_LONG_MAX__; }
1281:/usr/include/c++/5/limits **** 
1282:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1283:/usr/include/c++/5/limits ****       static constexpr long long 
1284:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
1285:/usr/include/c++/5/limits **** #endif
1286:/usr/include/c++/5/limits **** 
1287:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits 
1288:/usr/include/c++/5/limits ****        = __glibcxx_digits (long long);
1289:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 
1290:/usr/include/c++/5/limits ****        = __glibcxx_digits10 (long long);
1291:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1292:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
1293:/usr/include/c++/5/limits **** #endif
1294:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = true;
1295:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
1296:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
1297:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
1298:/usr/include/c++/5/limits **** 
1299:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long long 
1300:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
1301:/usr/include/c++/5/limits **** 
1302:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long long 
1303:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
1304:/usr/include/c++/5/limits **** 
1305:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
1306:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
1307:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
1308:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
GAS LISTING /tmp/ccbg3Dll.s 			page 39


1309:/usr/include/c++/5/limits **** 
1310:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
1311:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
1312:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
1313:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
1314:/usr/include/c++/5/limits ****        = denorm_absent;
1315:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
1316:/usr/include/c++/5/limits **** 
1317:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long long 
1318:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return static_cast<long long>(0); }
1319:/usr/include/c++/5/limits **** 
1320:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long long 
1321:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return static_cast<long long>(0); }
1322:/usr/include/c++/5/limits **** 
1323:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long long 
1324:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT
1325:/usr/include/c++/5/limits ****       { return static_cast<long long>(0); }
1326:/usr/include/c++/5/limits **** 
1327:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR long long 
1328:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT { return static_cast<long long>(0); }
1329:/usr/include/c++/5/limits **** 
1330:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
1331:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
1332:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;
1333:/usr/include/c++/5/limits **** 
1334:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
1335:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
1336:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
1337:/usr/include/c++/5/limits ****        = round_toward_zero;
1338:/usr/include/c++/5/limits ****     };
1339:/usr/include/c++/5/limits **** 
1340:/usr/include/c++/5/limits ****   /// numeric_limits<unsigned long long> specialization.
1341:/usr/include/c++/5/limits ****   template<>
1342:/usr/include/c++/5/limits ****     struct numeric_limits<unsigned long long>
1343:/usr/include/c++/5/limits ****     {
1344:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
1345:/usr/include/c++/5/limits **** 
1346:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long long 
1347:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return 0; }
1348:/usr/include/c++/5/limits **** 
1349:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long long 
1350:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __LONG_LONG_MAX__ * 2ULL + 1; }
1351:/usr/include/c++/5/limits **** 
1352:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1353:/usr/include/c++/5/limits ****       static constexpr unsigned long long 
1354:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }
1355:/usr/include/c++/5/limits **** #endif
1356:/usr/include/c++/5/limits **** 
1357:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits 
1358:/usr/include/c++/5/limits ****        = __glibcxx_digits (unsigned long long);
1359:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 
1360:/usr/include/c++/5/limits ****        = __glibcxx_digits10 (unsigned long long);
1361:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1362:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
1363:/usr/include/c++/5/limits **** #endif
1364:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = false;
1365:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true;
GAS LISTING /tmp/ccbg3Dll.s 			page 40


1366:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true;
1367:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2;
1368:/usr/include/c++/5/limits **** 
1369:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long long 
1370:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; }
1371:/usr/include/c++/5/limits **** 
1372:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long long 
1373:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; }
1374:/usr/include/c++/5/limits **** 
1375:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0;
1376:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0;
1377:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0;
1378:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0;
1379:/usr/include/c++/5/limits **** 
1380:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false;
1381:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false;
1382:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false;
1383:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 
1384:/usr/include/c++/5/limits ****        = denorm_absent;
1385:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false;
1386:/usr/include/c++/5/limits **** 
1387:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long long 
1388:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT
1389:/usr/include/c++/5/limits ****       { return static_cast<unsigned long long>(0); }
1390:/usr/include/c++/5/limits **** 
1391:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long long 
1392:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT
1393:/usr/include/c++/5/limits ****       { return static_cast<unsigned long long>(0); }
1394:/usr/include/c++/5/limits **** 
1395:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long long 
1396:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT
1397:/usr/include/c++/5/limits ****       { return static_cast<unsigned long long>(0); }
1398:/usr/include/c++/5/limits **** 
1399:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned long long 
1400:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT
1401:/usr/include/c++/5/limits ****       { return static_cast<unsigned long long>(0); }
1402:/usr/include/c++/5/limits **** 
1403:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false;
1404:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
1405:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true;
1406:/usr/include/c++/5/limits **** 
1407:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps;
1408:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false;
1409:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
1410:/usr/include/c++/5/limits ****        = round_toward_zero;
1411:/usr/include/c++/5/limits ****     };
1412:/usr/include/c++/5/limits **** 
1413:/usr/include/c++/5/limits **** #if !defined(__STRICT_ANSI__)
1414:/usr/include/c++/5/limits **** 
1415:/usr/include/c++/5/limits **** #define __INT_N(TYPE, BITSIZE, EXT, UEXT)			\
1416:/usr/include/c++/5/limits ****   template<> 									\
1417:/usr/include/c++/5/limits ****     struct numeric_limits<TYPE> 						\
1418:/usr/include/c++/5/limits ****     { 										\
1419:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true; 		\
1420:/usr/include/c++/5/limits ****  										\
1421:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR TYPE 						\
1422:/usr/include/c++/5/limits **** 	min() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_min_b (TYPE, BITSIZE); } \
GAS LISTING /tmp/ccbg3Dll.s 			page 41


1423:/usr/include/c++/5/limits ****  										\
1424:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR TYPE 						\
1425:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __glibcxx_max_b (TYPE, BITSIZE); } 	\
1426:/usr/include/c++/5/limits ****  										\
1427:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits 					\
1428:/usr/include/c++/5/limits ****        = BITSIZE - 1; 								\
1429:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 				\
1430:/usr/include/c++/5/limits ****        = (BITSIZE - 1) * 643L / 2136; 						\
1431:/usr/include/c++/5/limits ****       										\
1432:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = true; 			\
1433:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true; 			\
1434:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true; 			\
1435:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2; 				\
1436:/usr/include/c++/5/limits ****  										\
1437:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR TYPE 						\
1438:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; } 				\
1439:/usr/include/c++/5/limits ****  										\
1440:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR TYPE 						\
1441:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; } 			\
1442:/usr/include/c++/5/limits ****  										\
1443:/usr/include/c++/5/limits ****       EXT									\
1444:/usr/include/c++/5/limits ****  										\
1445:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0; 			\
1446:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0; 			\
1447:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0; 			\
1448:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0; 			\
1449:/usr/include/c++/5/limits ****  										\
1450:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false; 			\
1451:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false; 		\
1452:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false; 		\
1453:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 		\
1454:/usr/include/c++/5/limits ****        = denorm_absent; 							\
1455:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false; 		\
1456:/usr/include/c++/5/limits ****  										\
1457:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR TYPE 						\
1458:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT 						\
1459:/usr/include/c++/5/limits ****       { return static_cast<TYPE>(0); } 						\
1460:/usr/include/c++/5/limits ****  										\
1461:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR TYPE 						\
1462:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT 					\
1463:/usr/include/c++/5/limits ****       { return static_cast<TYPE>(0); } 						\
1464:/usr/include/c++/5/limits ****        										\
1465:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR TYPE 						\
1466:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT 					\
1467:/usr/include/c++/5/limits ****       { return static_cast<TYPE>(0); } 						\
1468:/usr/include/c++/5/limits ****        										\
1469:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR TYPE 						\
1470:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT 					\
1471:/usr/include/c++/5/limits ****       { return static_cast<TYPE>(0); } 						\
1472:/usr/include/c++/5/limits ****  										\
1473:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false; 			\
1474:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true; 			\
1475:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false; 			\
1476:/usr/include/c++/5/limits ****  										\
1477:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps 					\
1478:/usr/include/c++/5/limits ****        = __glibcxx_integral_traps; 						\
1479:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false; 		\
GAS LISTING /tmp/ccbg3Dll.s 			page 42


1480:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 		\
1481:/usr/include/c++/5/limits ****        = round_toward_zero; 							\
1482:/usr/include/c++/5/limits ****     }; 										\
1483:/usr/include/c++/5/limits ****  										\
1484:/usr/include/c++/5/limits ****   template<> 									\
1485:/usr/include/c++/5/limits ****     struct numeric_limits<unsigned TYPE> 					\
1486:/usr/include/c++/5/limits ****     { 										\
1487:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true; 		\
1488:/usr/include/c++/5/limits ****  										\
1489:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned TYPE 					\
1490:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return 0; } 				\
1491:/usr/include/c++/5/limits ****  										\
1492:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned TYPE 					\
1493:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT						\
1494:/usr/include/c++/5/limits ****       { return  __glibcxx_max_b (unsigned TYPE, BITSIZE); }			\
1495:/usr/include/c++/5/limits ****  										\
1496:/usr/include/c++/5/limits ****       UEXT									\
1497:/usr/include/c++/5/limits ****  										\
1498:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits 					\
1499:/usr/include/c++/5/limits ****        = BITSIZE; 								\
1500:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 				\
1501:/usr/include/c++/5/limits ****        = BITSIZE * 643L / 2136; 						\
1502:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = false; 			\
1503:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = true; 			\
1504:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = true; 			\
1505:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = 2; 				\
1506:/usr/include/c++/5/limits ****  										\
1507:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned TYPE 					\
1508:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return 0; } 				\
1509:/usr/include/c++/5/limits ****  										\
1510:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned TYPE 					\
1511:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0; } 			\
1512:/usr/include/c++/5/limits ****  										\
1513:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = 0; 			\
1514:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = 0; 			\
1515:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = 0; 			\
1516:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = 0; 			\
1517:/usr/include/c++/5/limits ****  										\
1518:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = false; 			\
1519:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = false; 		\
1520:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = false; 		\
1521:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm 		\
1522:/usr/include/c++/5/limits ****        = denorm_absent; 							\
1523:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss = false; 		\
1524:/usr/include/c++/5/limits ****  										\
1525:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned TYPE 					\
1526:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT 						\
1527:/usr/include/c++/5/limits ****       { return static_cast<unsigned TYPE>(0); } 				\
1528:/usr/include/c++/5/limits ****  										\
1529:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned TYPE 					\
1530:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT 					\
1531:/usr/include/c++/5/limits ****       { return static_cast<unsigned TYPE>(0); } 				\
1532:/usr/include/c++/5/limits ****  										\
1533:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned TYPE 					\
1534:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT 					\
1535:/usr/include/c++/5/limits ****       { return static_cast<unsigned TYPE>(0); } 				\
1536:/usr/include/c++/5/limits ****  										\
GAS LISTING /tmp/ccbg3Dll.s 			page 43


1537:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR unsigned TYPE 					\
1538:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT 					\
1539:/usr/include/c++/5/limits ****       { return static_cast<unsigned TYPE>(0); } 				\
1540:/usr/include/c++/5/limits ****  										\
1541:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559 = false; 			\
1542:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true; 			\
1543:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = true; 			\
1544:/usr/include/c++/5/limits ****  										\
1545:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_integral_traps; 	\
1546:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before = false; 		\
1547:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 		\
1548:/usr/include/c++/5/limits ****        = round_toward_zero; 							\
1549:/usr/include/c++/5/limits ****     };
1550:/usr/include/c++/5/limits **** 
1551:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1552:/usr/include/c++/5/limits **** 
1553:/usr/include/c++/5/limits **** #define __INT_N_201103(TYPE)							\
1554:/usr/include/c++/5/limits ****       static constexpr TYPE 							\
1555:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }					\
1556:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
1557:/usr/include/c++/5/limits **** 
1558:/usr/include/c++/5/limits **** #define __INT_N_U201103(TYPE)							\
1559:/usr/include/c++/5/limits ****       static constexpr unsigned TYPE 						\
1560:/usr/include/c++/5/limits ****       lowest() noexcept { return min(); }					\
1561:/usr/include/c++/5/limits ****       static constexpr int max_digits10 = 0;
1562:/usr/include/c++/5/limits **** 
1563:/usr/include/c++/5/limits **** #else
1564:/usr/include/c++/5/limits **** #define __INT_N_201103(TYPE)
1565:/usr/include/c++/5/limits **** #define __INT_N_U201103(TYPE)
1566:/usr/include/c++/5/limits **** #endif
1567:/usr/include/c++/5/limits **** 
1568:/usr/include/c++/5/limits **** #ifdef __GLIBCXX_TYPE_INT_N_0
1569:/usr/include/c++/5/limits ****   __INT_N(__GLIBCXX_TYPE_INT_N_0, __GLIBCXX_BITSIZE_INT_N_0,
1570:/usr/include/c++/5/limits **** 	  __INT_N_201103 (__GLIBCXX_TYPE_INT_N_0), __INT_N_U201103 (__GLIBCXX_TYPE_INT_N_0))
1571:/usr/include/c++/5/limits **** #endif
1572:/usr/include/c++/5/limits **** #ifdef __GLIBCXX_TYPE_INT_N_1
1573:/usr/include/c++/5/limits ****   __INT_N (__GLIBCXX_TYPE_INT_N_1, __GLIBCXX_BITSIZE_INT_N_1,
1574:/usr/include/c++/5/limits **** 	  __INT_N_201103 (__GLIBCXX_TYPE_INT_N_1), __INT_N_U201103 (__GLIBCXX_TYPE_INT_N_1))
1575:/usr/include/c++/5/limits **** #endif
1576:/usr/include/c++/5/limits **** #ifdef __GLIBCXX_TYPE_INT_N_2
1577:/usr/include/c++/5/limits ****   __INT_N (__GLIBCXX_TYPE_INT_N_2, __GLIBCXX_BITSIZE_INT_N_2,
1578:/usr/include/c++/5/limits **** 	  __INT_N_201103 (__GLIBCXX_TYPE_INT_N_2), __INT_N_U201103 (__GLIBCXX_TYPE_INT_N_2))
1579:/usr/include/c++/5/limits **** #endif
1580:/usr/include/c++/5/limits **** #ifdef __GLIBCXX_TYPE_INT_N_3
1581:/usr/include/c++/5/limits ****   __INT_N (__GLIBCXX_TYPE_INT_N_3, __GLIBCXX_BITSIZE_INT_N_3,
1582:/usr/include/c++/5/limits **** 	  __INT_N_201103 (__GLIBCXX_TYPE_INT_N_3), __INT_N_U201103 (__GLIBCXX_TYPE_INT_N_3))
1583:/usr/include/c++/5/limits **** #endif
1584:/usr/include/c++/5/limits **** 
1585:/usr/include/c++/5/limits **** #undef __INT_N
1586:/usr/include/c++/5/limits **** #undef __INT_N_201103
1587:/usr/include/c++/5/limits **** #undef __INT_N_U201103
1588:/usr/include/c++/5/limits **** 
1589:/usr/include/c++/5/limits **** #endif
1590:/usr/include/c++/5/limits **** 
1591:/usr/include/c++/5/limits ****   /// numeric_limits<float> specialization.
1592:/usr/include/c++/5/limits ****   template<>
1593:/usr/include/c++/5/limits ****     struct numeric_limits<float>
GAS LISTING /tmp/ccbg3Dll.s 			page 44


1594:/usr/include/c++/5/limits ****     {
1595:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
1596:/usr/include/c++/5/limits **** 
1597:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR float 
1598:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return __FLT_MIN__; }
1599:/usr/include/c++/5/limits **** 
1600:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR float 
1601:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __FLT_MAX__; }
1602:/usr/include/c++/5/limits **** 
1603:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1604:/usr/include/c++/5/limits ****       static constexpr float 
1605:/usr/include/c++/5/limits ****       lowest() noexcept { return -__FLT_MAX__; }
1606:/usr/include/c++/5/limits **** #endif
1607:/usr/include/c++/5/limits **** 
1608:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits = __FLT_MANT_DIG__;
1609:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 = __FLT_DIG__;
1610:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1611:/usr/include/c++/5/limits ****       static constexpr int max_digits10
1612:/usr/include/c++/5/limits **** 	 = __glibcxx_max_digits10 (__FLT_MANT_DIG__);
1613:/usr/include/c++/5/limits **** #endif
1614:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = true;
1615:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = false;
1616:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = false;
1617:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = __FLT_RADIX__;
1618:/usr/include/c++/5/limits **** 
1619:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR float 
1620:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return __FLT_EPSILON__; }
1621:/usr/include/c++/5/limits **** 
1622:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR float 
1623:/usr/include/c++/5/limits ****       round_error() _GLIBCXX_USE_NOEXCEPT { return 0.5F; }
1624:/usr/include/c++/5/limits **** 
1625:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent = __FLT_MIN_EXP__;
1626:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int min_exponent10 = __FLT_MIN_10_EXP__;
1627:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent = __FLT_MAX_EXP__;
1628:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int max_exponent10 = __FLT_MAX_10_EXP__;
1629:/usr/include/c++/5/limits **** 
1630:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_infinity = __FLT_HAS_INFINITY__;
1631:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_quiet_NaN = __FLT_HAS_QUIET_NAN__;
1632:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_signaling_NaN = has_quiet_NaN;
1633:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_denorm_style has_denorm
1634:/usr/include/c++/5/limits **** 	= bool(__FLT_HAS_DENORM__) ? denorm_present : denorm_absent;
1635:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool has_denorm_loss 
1636:/usr/include/c++/5/limits ****        = __glibcxx_float_has_denorm_loss;
1637:/usr/include/c++/5/limits **** 
1638:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR float 
1639:/usr/include/c++/5/limits ****       infinity() _GLIBCXX_USE_NOEXCEPT { return __builtin_huge_valf(); }
1640:/usr/include/c++/5/limits **** 
1641:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR float 
1642:/usr/include/c++/5/limits ****       quiet_NaN() _GLIBCXX_USE_NOEXCEPT { return __builtin_nanf(""); }
1643:/usr/include/c++/5/limits **** 
1644:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR float 
1645:/usr/include/c++/5/limits ****       signaling_NaN() _GLIBCXX_USE_NOEXCEPT { return __builtin_nansf(""); }
1646:/usr/include/c++/5/limits **** 
1647:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR float 
1648:/usr/include/c++/5/limits ****       denorm_min() _GLIBCXX_USE_NOEXCEPT { return __FLT_DENORM_MIN__; }
1649:/usr/include/c++/5/limits **** 
1650:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_iec559
GAS LISTING /tmp/ccbg3Dll.s 			page 45


1651:/usr/include/c++/5/limits **** 	= has_infinity && has_quiet_NaN && has_denorm == denorm_present;
1652:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_bounded = true;
1653:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_modulo = false;
1654:/usr/include/c++/5/limits **** 
1655:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool traps = __glibcxx_float_traps;
1656:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool tinyness_before 
1657:/usr/include/c++/5/limits ****        = __glibcxx_float_tinyness_before;
1658:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR float_round_style round_style 
1659:/usr/include/c++/5/limits ****        = round_to_nearest;
1660:/usr/include/c++/5/limits ****     };
1661:/usr/include/c++/5/limits **** 
1662:/usr/include/c++/5/limits **** #undef __glibcxx_float_has_denorm_loss
1663:/usr/include/c++/5/limits **** #undef __glibcxx_float_traps
1664:/usr/include/c++/5/limits **** #undef __glibcxx_float_tinyness_before
1665:/usr/include/c++/5/limits **** 
1666:/usr/include/c++/5/limits ****   /// numeric_limits<double> specialization.
1667:/usr/include/c++/5/limits ****   template<>
1668:/usr/include/c++/5/limits ****     struct numeric_limits<double>
1669:/usr/include/c++/5/limits ****     {
1670:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_specialized = true;
1671:/usr/include/c++/5/limits **** 
1672:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR double 
1673:/usr/include/c++/5/limits ****       min() _GLIBCXX_USE_NOEXCEPT { return __DBL_MIN__; }
1674:/usr/include/c++/5/limits **** 
1675:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR double 
1676:/usr/include/c++/5/limits ****       max() _GLIBCXX_USE_NOEXCEPT { return __DBL_MAX__; }
1677:/usr/include/c++/5/limits **** 
1678:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1679:/usr/include/c++/5/limits ****       static constexpr double 
1680:/usr/include/c++/5/limits ****       lowest() noexcept { return -__DBL_MAX__; }
1681:/usr/include/c++/5/limits **** #endif
1682:/usr/include/c++/5/limits **** 
1683:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits = __DBL_MANT_DIG__;
1684:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int digits10 = __DBL_DIG__;
1685:/usr/include/c++/5/limits **** #if __cplusplus >= 201103L
1686:/usr/include/c++/5/limits ****       static constexpr int max_digits10
1687:/usr/include/c++/5/limits **** 	 = __glibcxx_max_digits10 (__DBL_MANT_DIG__);
1688:/usr/include/c++/5/limits **** #endif
1689:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_signed = true;
1690:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_integer = false;
1691:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR bool is_exact = false;
1692:/usr/include/c++/5/limits ****       static _GLIBCXX_USE_CONSTEXPR int radix = __FLT_RADIX__;
1693:/usr/include/c++/5/limits **** 
1694:/usr/include/c++/5/limits ****       static _GLIBCXX_CONSTEXPR double 
1695:/usr/include/c++/5/limits ****       epsilon() _GLIBCXX_USE_NOEXCEPT { return __DBL_EPSILON__; }
 793              		.loc 5 1695 0
 794              		.cfi_startproc
 795 0000 55       		pushq	%rbp
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 6, -16
 798 0001 4889E5   		movq	%rsp, %rbp
 799              		.cfi_def_cfa_register 6
 800              		.loc 5 1695 0
 801 0004 F20F1005 		movsd	.LC0(%rip), %xmm0
 801      00000000 
 802 000c 5D       		popq	%rbp
 803              		.cfi_def_cfa 7, 8
GAS LISTING /tmp/ccbg3Dll.s 			page 46


 804 000d C3       		ret
 805              		.cfi_endproc
 806              	.LFE1375:
 808              		.local	_ZStL8__ioinit
 809              		.comm	_ZStL8__ioinit,1,1
 810              		.text
 811              		.align 2
 812              		.globl	_ZN8SolutionC2Ev
 814              	_ZN8SolutionC2Ev:
 815              	.LFB6822:
 816              		.file 6 "/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp"
   1:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** #include <stdlib.h>
   2:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** #include "Solution.h"
   3:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** #include <algorithm>
   4:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** #include <fstream>
   5:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** #include <iostream>
   6:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
   7:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** #include <math.h>
   8:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
   9:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  10:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** using namespace std;
  11:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  12:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** Solution::Solution(){
 817              		.loc 6 12 0
 818              		.cfi_startproc
 819 0000 55       		pushq	%rbp
 820              		.cfi_def_cfa_offset 16
 821              		.cfi_offset 6, -16
 822 0001 4889E5   		movq	%rsp, %rbp
 823              		.cfi_def_cfa_register 6
 824 0004 48897DF8 		movq	%rdi, -8(%rbp)
 825              	.LBB3:
 826              		.loc 6 12 0
 827 0008 BA000000 		movl	$_ZTV8Solution+16, %edx
 827      00
 828 000d 488B45F8 		movq	-8(%rbp), %rax
 829 0011 488910   		movq	%rdx, (%rax)
 830              	.LBE3:
  13:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  14:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 831              		.loc 6 14 0
 832 0014 90       		nop
 833 0015 5D       		popq	%rbp
 834              		.cfi_def_cfa 7, 8
 835 0016 C3       		ret
 836              		.cfi_endproc
 837              	.LFE6822:
 839              		.globl	_ZN8SolutionC1Ev
 840              		.set	_ZN8SolutionC1Ev,_ZN8SolutionC2Ev
 841 0017 90       		.align 2
 842              		.globl	_ZN8SolutionC2Ei
 844              	_ZN8SolutionC2Ei:
 845              	.LFB6825:
  15:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** Solution::Solution(int _total_nodes)
 846              		.loc 6 15 0
 847              		.cfi_startproc
 848 0018 55       		pushq	%rbp
GAS LISTING /tmp/ccbg3Dll.s 			page 47


 849              		.cfi_def_cfa_offset 16
 850              		.cfi_offset 6, -16
 851 0019 4889E5   		movq	%rsp, %rbp
 852              		.cfi_def_cfa_register 6
 853 001c 4883EC10 		subq	$16, %rsp
 854 0020 48897DF8 		movq	%rdi, -8(%rbp)
 855 0024 8975F4   		movl	%esi, -12(%rbp)
 856              	.LBB4:
 857              		.loc 6 15 0
 858 0027 BA000000 		movl	$_ZTV8Solution+16, %edx
 858      00
 859 002c 488B45F8 		movq	-8(%rbp), %rax
 860 0030 488910   		movq	%rdx, (%rax)
  16:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** {
  17:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     //ctor
  18:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     total_nodes = _total_nodes;
 861              		.loc 6 18 0
 862 0033 488B45F8 		movq	-8(%rbp), %rax
 863 0037 8B55F4   		movl	-12(%rbp), %edx
 864 003a 895038   		movl	%edx, 56(%rax)
  19:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****      //rho = (double*) malloc (sizeof(double)*(total_nodes));
  20:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****      rho = new double [total_nodes +1];
 865              		.loc 6 20 0
 866 003d 488B45F8 		movq	-8(%rbp), %rax
 867 0041 8B4038   		movl	56(%rax), %eax
 868 0044 83C001   		addl	$1, %eax
 869 0047 4898     		cltq
 870 0049 48BA0000 		movabsq	$1143914305352105984, %rdx
 870      00000000 
 870      E00F
 871 0053 4839D0   		cmpq	%rdx, %rax
 872 0056 7726     		ja	.L51
 873              		.loc 6 20 0 is_stmt 0 discriminator 1
 874 0058 48C1E003 		salq	$3, %rax
 875 005c 4889C7   		movq	%rax, %rdi
 876 005f E8000000 		call	_Znam
 876      00
 877 0064 4889C2   		movq	%rax, %rdx
 878 0067 488B45F8 		movq	-8(%rbp), %rax
 879 006b 48895008 		movq	%rdx, 8(%rax)
  21:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if (rho==NULL) exit (1);
 880              		.loc 6 21 0 is_stmt 1 discriminator 1
 881 006f 488B45F8 		movq	-8(%rbp), %rax
 882 0073 488B4008 		movq	8(%rax), %rax
 883 0077 4885C0   		testq	%rax, %rax
 884 007a 7511     		jne	.L53
 885 007c EB05     		jmp	.L69
 886              	.L51:
  20:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if (rho==NULL) exit (1);
 887              		.loc 6 20 0 discriminator 2
 888 007e E8000000 		call	__cxa_throw_bad_array_new_length
 888      00
 889              	.L69:
 890              		.loc 6 21 0 discriminator 1
 891 0083 BF010000 		movl	$1, %edi
 891      00
 892 0088 E8000000 		call	exit
GAS LISTING /tmp/ccbg3Dll.s 			page 48


 892      00
 893              	.L53:
  22:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****      u = new double [total_nodes+1];
 894              		.loc 6 22 0
 895 008d 488B45F8 		movq	-8(%rbp), %rax
 896 0091 8B4038   		movl	56(%rax), %eax
 897 0094 83C001   		addl	$1, %eax
 898 0097 4898     		cltq
 899 0099 48BA0000 		movabsq	$1143914305352105984, %rdx
 899      00000000 
 899      E00F
 900 00a3 4839D0   		cmpq	%rdx, %rax
 901 00a6 7726     		ja	.L54
 902              		.loc 6 22 0 is_stmt 0 discriminator 1
 903 00a8 48C1E003 		salq	$3, %rax
 904 00ac 4889C7   		movq	%rax, %rdi
 905 00af E8000000 		call	_Znam
 905      00
 906 00b4 4889C2   		movq	%rax, %rdx
 907 00b7 488B45F8 		movq	-8(%rbp), %rax
 908 00bb 48895010 		movq	%rdx, 16(%rax)
  23:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if (u==NULL) exit (1);
 909              		.loc 6 23 0 is_stmt 1 discriminator 1
 910 00bf 488B45F8 		movq	-8(%rbp), %rax
 911 00c3 488B4010 		movq	16(%rax), %rax
 912 00c7 4885C0   		testq	%rax, %rax
 913 00ca 7511     		jne	.L56
 914 00cc EB05     		jmp	.L70
 915              	.L54:
  22:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****      u = new double [total_nodes+1];
 916              		.loc 6 22 0 discriminator 2
 917 00ce E8000000 		call	__cxa_throw_bad_array_new_length
 917      00
 918              	.L70:
 919              		.loc 6 23 0 discriminator 1
 920 00d3 BF010000 		movl	$1, %edi
 920      00
 921 00d8 E8000000 		call	exit
 921      00
 922              	.L56:
  24:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****      v = new double [total_nodes +1];
 923              		.loc 6 24 0
 924 00dd 488B45F8 		movq	-8(%rbp), %rax
 925 00e1 8B4038   		movl	56(%rax), %eax
 926 00e4 83C001   		addl	$1, %eax
 927 00e7 4898     		cltq
 928 00e9 48BA0000 		movabsq	$1143914305352105984, %rdx
 928      00000000 
 928      E00F
 929 00f3 4839D0   		cmpq	%rdx, %rax
 930 00f6 7726     		ja	.L57
 931              		.loc 6 24 0 is_stmt 0 discriminator 1
 932 00f8 48C1E003 		salq	$3, %rax
 933 00fc 4889C7   		movq	%rax, %rdi
 934 00ff E8000000 		call	_Znam
 934      00
 935 0104 4889C2   		movq	%rax, %rdx
GAS LISTING /tmp/ccbg3Dll.s 			page 49


 936 0107 488B45F8 		movq	-8(%rbp), %rax
 937 010b 48895018 		movq	%rdx, 24(%rax)
  25:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if (v==NULL) exit (1);
 938              		.loc 6 25 0 is_stmt 1 discriminator 1
 939 010f 488B45F8 		movq	-8(%rbp), %rax
 940 0113 488B4018 		movq	24(%rax), %rax
 941 0117 4885C0   		testq	%rax, %rax
 942 011a 7511     		jne	.L59
 943 011c EB05     		jmp	.L71
 944              	.L57:
  24:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****      v = new double [total_nodes +1];
 945              		.loc 6 24 0 discriminator 2
 946 011e E8000000 		call	__cxa_throw_bad_array_new_length
 946      00
 947              	.L71:
 948              		.loc 6 25 0 discriminator 1
 949 0123 BF010000 		movl	$1, %edi
 949      00
 950 0128 E8000000 		call	exit
 950      00
 951              	.L59:
  26:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****      w = new double [total_nodes +1];
 952              		.loc 6 26 0
 953 012d 488B45F8 		movq	-8(%rbp), %rax
 954 0131 8B4038   		movl	56(%rax), %eax
 955 0134 83C001   		addl	$1, %eax
 956 0137 4898     		cltq
 957 0139 48BA0000 		movabsq	$1143914305352105984, %rdx
 957      00000000 
 957      E00F
 958 0143 4839D0   		cmpq	%rdx, %rax
 959 0146 7726     		ja	.L60
 960              		.loc 6 26 0 is_stmt 0 discriminator 1
 961 0148 48C1E003 		salq	$3, %rax
 962 014c 4889C7   		movq	%rax, %rdi
 963 014f E8000000 		call	_Znam
 963      00
 964 0154 4889C2   		movq	%rax, %rdx
 965 0157 488B45F8 		movq	-8(%rbp), %rax
 966 015b 48895020 		movq	%rdx, 32(%rax)
  27:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if (w==NULL) exit (1);
 967              		.loc 6 27 0 is_stmt 1 discriminator 1
 968 015f 488B45F8 		movq	-8(%rbp), %rax
 969 0163 488B4020 		movq	32(%rax), %rax
 970 0167 4885C0   		testq	%rax, %rax
 971 016a 7511     		jne	.L62
 972 016c EB05     		jmp	.L72
 973              	.L60:
  26:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****      w = new double [total_nodes +1];
 974              		.loc 6 26 0 discriminator 2
 975 016e E8000000 		call	__cxa_throw_bad_array_new_length
 975      00
 976              	.L72:
 977              		.loc 6 27 0 discriminator 1
 978 0173 BF010000 		movl	$1, %edi
 978      00
 979 0178 E8000000 		call	exit
GAS LISTING /tmp/ccbg3Dll.s 			page 50


 979      00
 980              	.L62:
  28:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         error = new double [total_nodes +1];
 981              		.loc 6 28 0
 982 017d 488B45F8 		movq	-8(%rbp), %rax
 983 0181 8B4038   		movl	56(%rax), %eax
 984 0184 83C001   		addl	$1, %eax
 985 0187 4898     		cltq
 986 0189 48BA0000 		movabsq	$1143914305352105984, %rdx
 986      00000000 
 986      E00F
 987 0193 4839D0   		cmpq	%rdx, %rax
 988 0196 7726     		ja	.L63
 989              		.loc 6 28 0 is_stmt 0 discriminator 1
 990 0198 48C1E003 		salq	$3, %rax
 991 019c 4889C7   		movq	%rax, %rdi
 992 019f E8000000 		call	_Znam
 992      00
 993 01a4 4889C2   		movq	%rax, %rdx
 994 01a7 488B45F8 		movq	-8(%rbp), %rax
 995 01ab 48895028 		movq	%rdx, 40(%rax)
  29:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if (w==NULL) exit (1);
 996              		.loc 6 29 0 is_stmt 1 discriminator 1
 997 01af 488B45F8 		movq	-8(%rbp), %rax
 998 01b3 488B4020 		movq	32(%rax), %rax
 999 01b7 4885C0   		testq	%rax, %rax
 1000 01ba 7511     		jne	.L65
 1001 01bc EB05     		jmp	.L73
 1002              	.L63:
  28:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         error = new double [total_nodes +1];
 1003              		.loc 6 28 0 discriminator 2
 1004 01be E8000000 		call	__cxa_throw_bad_array_new_length
 1004      00
 1005              	.L73:
 1006              		.loc 6 29 0 discriminator 1
 1007 01c3 BF010000 		movl	$1, %edi
 1007      00
 1008 01c8 E8000000 		call	exit
 1008      00
 1009              	.L65:
  30:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         u_exact = new double [total_nodes +1];
 1010              		.loc 6 30 0
 1011 01cd 488B45F8 		movq	-8(%rbp), %rax
 1012 01d1 8B4038   		movl	56(%rax), %eax
 1013 01d4 83C001   		addl	$1, %eax
 1014 01d7 4898     		cltq
 1015 01d9 48BA0000 		movabsq	$1143914305352105984, %rdx
 1015      00000000 
 1015      E00F
 1016 01e3 4839D0   		cmpq	%rdx, %rax
 1017 01e6 7726     		ja	.L66
 1018              		.loc 6 30 0 is_stmt 0 discriminator 1
 1019 01e8 48C1E003 		salq	$3, %rax
 1020 01ec 4889C7   		movq	%rax, %rdi
 1021 01ef E8000000 		call	_Znam
 1021      00
 1022 01f4 4889C2   		movq	%rax, %rdx
GAS LISTING /tmp/ccbg3Dll.s 			page 51


 1023 01f7 488B45F8 		movq	-8(%rbp), %rax
 1024 01fb 48895030 		movq	%rdx, 48(%rax)
  31:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if (w==NULL) exit (1);
 1025              		.loc 6 31 0 is_stmt 1 discriminator 1
 1026 01ff 488B45F8 		movq	-8(%rbp), %rax
 1027 0203 488B4020 		movq	32(%rax), %rax
 1028 0207 4885C0   		testq	%rax, %rax
 1029 020a 7511     		jne	.L68
 1030 020c EB05     		jmp	.L74
 1031              	.L66:
  30:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         u_exact = new double [total_nodes +1];
 1032              		.loc 6 30 0 discriminator 2
 1033 020e E8000000 		call	__cxa_throw_bad_array_new_length
 1033      00
 1034              	.L74:
 1035              		.loc 6 31 0 discriminator 1
 1036 0213 BF010000 		movl	$1, %edi
 1036      00
 1037 0218 E8000000 		call	exit
 1037      00
 1038              	.L68:
  32:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     Initialise();
 1039              		.loc 6 32 0
 1040 021d 488B45F8 		movq	-8(%rbp), %rax
 1041 0221 4889C7   		movq	%rax, %rdi
 1042 0224 E8000000 		call	_ZN8Solution10InitialiseEv
 1042      00
 1043              	.LBE4:
  33:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  34:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 1044              		.loc 6 34 0
 1045 0229 90       		nop
 1046 022a C9       		leave
 1047              		.cfi_def_cfa 7, 8
 1048 022b C3       		ret
 1049              		.cfi_endproc
 1050              	.LFE6825:
 1052              		.globl	_ZN8SolutionC1Ei
 1053              		.set	_ZN8SolutionC1Ei,_ZN8SolutionC2Ei
 1054              		.align 2
 1055              		.globl	_ZN8SolutionD2Ev
 1057              	_ZN8SolutionD2Ev:
 1058              	.LFB6828:
  35:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  36:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** Solution::~Solution()
 1059              		.loc 6 36 0
 1060              		.cfi_startproc
 1061 022c 55       		pushq	%rbp
 1062              		.cfi_def_cfa_offset 16
 1063              		.cfi_offset 6, -16
 1064 022d 4889E5   		movq	%rsp, %rbp
 1065              		.cfi_def_cfa_register 6
 1066 0230 4883EC10 		subq	$16, %rsp
 1067 0234 48897DF8 		movq	%rdi, -8(%rbp)
 1068              	.LBB5:
 1069              		.loc 6 36 0
 1070 0238 BA000000 		movl	$_ZTV8Solution+16, %edx
GAS LISTING /tmp/ccbg3Dll.s 			page 52


 1070      00
 1071 023d 488B45F8 		movq	-8(%rbp), %rax
 1072 0241 488910   		movq	%rdx, (%rax)
  37:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** {
  38:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     //dtor
  39:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     delete [] rho;
 1073              		.loc 6 39 0
 1074 0244 488B45F8 		movq	-8(%rbp), %rax
 1075 0248 488B4008 		movq	8(%rax), %rax
 1076 024c 4885C0   		testq	%rax, %rax
 1077 024f 7410     		je	.L76
 1078              		.loc 6 39 0 is_stmt 0 discriminator 1
 1079 0251 488B45F8 		movq	-8(%rbp), %rax
 1080 0255 488B4008 		movq	8(%rax), %rax
 1081 0259 4889C7   		movq	%rax, %rdi
 1082 025c E8000000 		call	_ZdaPv
 1082      00
 1083              	.L76:
  40:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     rho = NULL;
 1084              		.loc 6 40 0 is_stmt 1
 1085 0261 488B45F8 		movq	-8(%rbp), %rax
 1086 0265 48C74008 		movq	$0, 8(%rax)
 1086      00000000 
  41:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     delete [] u;
 1087              		.loc 6 41 0
 1088 026d 488B45F8 		movq	-8(%rbp), %rax
 1089 0271 488B4010 		movq	16(%rax), %rax
 1090 0275 4885C0   		testq	%rax, %rax
 1091 0278 7410     		je	.L77
 1092              		.loc 6 41 0 is_stmt 0 discriminator 1
 1093 027a 488B45F8 		movq	-8(%rbp), %rax
 1094 027e 488B4010 		movq	16(%rax), %rax
 1095 0282 4889C7   		movq	%rax, %rdi
 1096 0285 E8000000 		call	_ZdaPv
 1096      00
 1097              	.L77:
  42:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     u = NULL;
 1098              		.loc 6 42 0 is_stmt 1
 1099 028a 488B45F8 		movq	-8(%rbp), %rax
 1100 028e 48C74010 		movq	$0, 16(%rax)
 1100      00000000 
  43:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     delete [] v;
 1101              		.loc 6 43 0
 1102 0296 488B45F8 		movq	-8(%rbp), %rax
 1103 029a 488B4018 		movq	24(%rax), %rax
 1104 029e 4885C0   		testq	%rax, %rax
 1105 02a1 7410     		je	.L78
 1106              		.loc 6 43 0 is_stmt 0 discriminator 1
 1107 02a3 488B45F8 		movq	-8(%rbp), %rax
 1108 02a7 488B4018 		movq	24(%rax), %rax
 1109 02ab 4889C7   		movq	%rax, %rdi
 1110 02ae E8000000 		call	_ZdaPv
 1110      00
 1111              	.L78:
  44:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     v= NULL;
 1112              		.loc 6 44 0 is_stmt 1
 1113 02b3 488B45F8 		movq	-8(%rbp), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 53


 1114 02b7 48C74018 		movq	$0, 24(%rax)
 1114      00000000 
  45:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     delete [] w;
 1115              		.loc 6 45 0
 1116 02bf 488B45F8 		movq	-8(%rbp), %rax
 1117 02c3 488B4020 		movq	32(%rax), %rax
 1118 02c7 4885C0   		testq	%rax, %rax
 1119 02ca 7410     		je	.L79
 1120              		.loc 6 45 0 is_stmt 0 discriminator 1
 1121 02cc 488B45F8 		movq	-8(%rbp), %rax
 1122 02d0 488B4020 		movq	32(%rax), %rax
 1123 02d4 4889C7   		movq	%rax, %rdi
 1124 02d7 E8000000 		call	_ZdaPv
 1124      00
 1125              	.L79:
  46:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     w= NULL;
 1126              		.loc 6 46 0 is_stmt 1
 1127 02dc 488B45F8 		movq	-8(%rbp), %rax
 1128 02e0 48C74020 		movq	$0, 32(%rax)
 1128      00000000 
  47:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     delete [] error;
 1129              		.loc 6 47 0
 1130 02e8 488B45F8 		movq	-8(%rbp), %rax
 1131 02ec 488B4028 		movq	40(%rax), %rax
 1132 02f0 4885C0   		testq	%rax, %rax
 1133 02f3 7410     		je	.L80
 1134              		.loc 6 47 0 is_stmt 0 discriminator 1
 1135 02f5 488B45F8 		movq	-8(%rbp), %rax
 1136 02f9 488B4028 		movq	40(%rax), %rax
 1137 02fd 4889C7   		movq	%rax, %rdi
 1138 0300 E8000000 		call	_ZdaPv
 1138      00
 1139              	.L80:
  48:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     error= NULL;
 1140              		.loc 6 48 0 is_stmt 1
 1141 0305 488B45F8 		movq	-8(%rbp), %rax
 1142 0309 48C74028 		movq	$0, 40(%rax)
 1142      00000000 
  49:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     delete [] u_exact;
 1143              		.loc 6 49 0
 1144 0311 488B45F8 		movq	-8(%rbp), %rax
 1145 0315 488B4030 		movq	48(%rax), %rax
 1146 0319 4885C0   		testq	%rax, %rax
 1147 031c 7410     		je	.L81
 1148              		.loc 6 49 0 is_stmt 0 discriminator 1
 1149 031e 488B45F8 		movq	-8(%rbp), %rax
 1150 0322 488B4030 		movq	48(%rax), %rax
 1151 0326 4889C7   		movq	%rax, %rdi
 1152 0329 E8000000 		call	_ZdaPv
 1152      00
 1153              	.L81:
  50:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     u_exact= NULL;
 1154              		.loc 6 50 0 is_stmt 1
 1155 032e 488B45F8 		movq	-8(%rbp), %rax
 1156 0332 48C74030 		movq	$0, 48(%rax)
 1156      00000000 
 1157              	.LBE5:
GAS LISTING /tmp/ccbg3Dll.s 			page 54


  51:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  52:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 1158              		.loc 6 52 0
 1159 033a B8000000 		movl	$0, %eax
 1159      00
 1160 033f 85C0     		testl	%eax, %eax
 1161 0341 740C     		je	.L75
 1162              		.loc 6 52 0 is_stmt 0 discriminator 1
 1163 0343 488B45F8 		movq	-8(%rbp), %rax
 1164 0347 4889C7   		movq	%rax, %rdi
 1165 034a E8000000 		call	_ZdlPv
 1165      00
 1166              	.L75:
 1167              		.loc 6 52 0
 1168 034f C9       		leave
 1169              		.cfi_def_cfa 7, 8
 1170 0350 C3       		ret
 1171              		.cfi_endproc
 1172              	.LFE6828:
 1174              		.globl	_ZN8SolutionD1Ev
 1175              		.set	_ZN8SolutionD1Ev,_ZN8SolutionD2Ev
 1176 0351 90       		.align 2
 1177              		.globl	_ZN8SolutionD0Ev
 1179              	_ZN8SolutionD0Ev:
 1180              	.LFB6830:
  36:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** {
 1181              		.loc 6 36 0 is_stmt 1
 1182              		.cfi_startproc
 1183 0352 55       		pushq	%rbp
 1184              		.cfi_def_cfa_offset 16
 1185              		.cfi_offset 6, -16
 1186 0353 4889E5   		movq	%rsp, %rbp
 1187              		.cfi_def_cfa_register 6
 1188 0356 4883EC10 		subq	$16, %rsp
 1189 035a 48897DF8 		movq	%rdi, -8(%rbp)
 1190              		.loc 6 52 0
 1191 035e 488B45F8 		movq	-8(%rbp), %rax
 1192 0362 4889C7   		movq	%rax, %rdi
 1193 0365 E8000000 		call	_ZN8SolutionD1Ev
 1193      00
 1194 036a 488B45F8 		movq	-8(%rbp), %rax
 1195 036e 4889C7   		movq	%rax, %rdi
 1196 0371 E8000000 		call	_ZdlPv
 1196      00
 1197 0376 C9       		leave
 1198              		.cfi_def_cfa 7, 8
 1199 0377 C3       		ret
 1200              		.cfi_endproc
 1201              	.LFE6830:
 1203              		.align 2
 1204              		.globl	_ZN8Solution10InitialiseEv
 1206              	_ZN8Solution10InitialiseEv:
 1207              	.LFB6831:
  53:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  54:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::Initialise() {
 1208              		.loc 6 54 0
 1209              		.cfi_startproc
GAS LISTING /tmp/ccbg3Dll.s 			page 55


 1210 0378 55       		pushq	%rbp
 1211              		.cfi_def_cfa_offset 16
 1212              		.cfi_offset 6, -16
 1213 0379 4889E5   		movq	%rsp, %rbp
 1214              		.cfi_def_cfa_register 6
 1215 037c 4883EC20 		subq	$32, %rsp
 1216 0380 48897DE8 		movq	%rdi, -24(%rbp)
 1217              		.loc 6 54 0
 1218 0384 64488B04 		movq	%fs:40, %rax
 1218      25280000 
 1218      00
 1219 038d 488945F8 		movq	%rax, -8(%rbp)
 1220 0391 31C0     		xorl	%eax, %eax
  55:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  56:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::fill_n(rho, total_nodes , 0.00);
 1221              		.loc 6 56 0
 1222 0393 660FEFC0 		pxor	%xmm0, %xmm0
 1223 0397 F20F1145 		movsd	%xmm0, -16(%rbp)
 1223      F0
 1224 039c 488B45E8 		movq	-24(%rbp), %rax
 1225 03a0 8B4838   		movl	56(%rax), %ecx
 1226 03a3 488B45E8 		movq	-24(%rbp), %rax
 1227 03a7 488B4008 		movq	8(%rax), %rax
 1228 03ab 488D55F0 		leaq	-16(%rbp), %rdx
 1229 03af 89CE     		movl	%ecx, %esi
 1230 03b1 4889C7   		movq	%rax, %rdi
 1231 03b4 E8000000 		call	_ZSt6fill_nIPdidET_S1_T0_RKT1_
 1231      00
  57:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::fill_n(u, total_nodes, 0.0);
 1232              		.loc 6 57 0
 1233 03b9 660FEFC0 		pxor	%xmm0, %xmm0
 1234 03bd F20F1145 		movsd	%xmm0, -16(%rbp)
 1234      F0
 1235 03c2 488B45E8 		movq	-24(%rbp), %rax
 1236 03c6 8B4838   		movl	56(%rax), %ecx
 1237 03c9 488B45E8 		movq	-24(%rbp), %rax
 1238 03cd 488B4010 		movq	16(%rax), %rax
 1239 03d1 488D55F0 		leaq	-16(%rbp), %rdx
 1240 03d5 89CE     		movl	%ecx, %esi
 1241 03d7 4889C7   		movq	%rax, %rdi
 1242 03da E8000000 		call	_ZSt6fill_nIPdidET_S1_T0_RKT1_
 1242      00
  58:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::fill_n(v, total_nodes , 0.0);
 1243              		.loc 6 58 0
 1244 03df 660FEFC0 		pxor	%xmm0, %xmm0
 1245 03e3 F20F1145 		movsd	%xmm0, -16(%rbp)
 1245      F0
 1246 03e8 488B45E8 		movq	-24(%rbp), %rax
 1247 03ec 8B4838   		movl	56(%rax), %ecx
 1248 03ef 488B45E8 		movq	-24(%rbp), %rax
 1249 03f3 488B4018 		movq	24(%rax), %rax
 1250 03f7 488D55F0 		leaq	-16(%rbp), %rdx
 1251 03fb 89CE     		movl	%ecx, %esi
 1252 03fd 4889C7   		movq	%rax, %rdi
 1253 0400 E8000000 		call	_ZSt6fill_nIPdidET_S1_T0_RKT1_
 1253      00
  59:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::fill_n(w, total_nodes , 0.0);
GAS LISTING /tmp/ccbg3Dll.s 			page 56


 1254              		.loc 6 59 0
 1255 0405 660FEFC0 		pxor	%xmm0, %xmm0
 1256 0409 F20F1145 		movsd	%xmm0, -16(%rbp)
 1256      F0
 1257 040e 488B45E8 		movq	-24(%rbp), %rax
 1258 0412 8B4838   		movl	56(%rax), %ecx
 1259 0415 488B45E8 		movq	-24(%rbp), %rax
 1260 0419 488B4020 		movq	32(%rax), %rax
 1261 041d 488D55F0 		leaq	-16(%rbp), %rdx
 1262 0421 89CE     		movl	%ecx, %esi
 1263 0423 4889C7   		movq	%rax, %rdi
 1264 0426 E8000000 		call	_ZSt6fill_nIPdidET_S1_T0_RKT1_
 1264      00
  60:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  61:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     average_rho = 0.0; //default value
 1265              		.loc 6 61 0
 1266 042b 488B45E8 		movq	-24(%rbp), %rax
 1267 042f 660FEFC0 		pxor	%xmm0, %xmm0
 1268 0433 F20F1140 		movsd	%xmm0, 64(%rax)
 1268      40
  62:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  63:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 1269              		.loc 6 63 0
 1270 0438 90       		nop
 1271 0439 488B45F8 		movq	-8(%rbp), %rax
 1272 043d 64483304 		xorq	%fs:40, %rax
 1272      25280000 
 1272      00
 1273 0446 7405     		je	.L85
 1274 0448 E8000000 		call	__stack_chk_fail
 1274      00
 1275              	.L85:
 1276 044d C9       		leave
 1277              		.cfi_def_cfa 7, 8
 1278 044e C3       		ret
 1279              		.cfi_endproc
 1280              	.LFE6831:
 1282              		.section	.text._ZN10vector_varC2ERKS_,"axG",@progbits,_ZN10vector_varC5ERKS_,comdat
 1283              		.align 2
 1284              		.weak	_ZN10vector_varC2ERKS_
 1286              	_ZN10vector_varC2ERKS_:
 1287              	.LFB6834:
   5:include/vector_var.h **** {
 1288              		.loc 2 5 0
 1289              		.cfi_startproc
 1290 0000 55       		pushq	%rbp
 1291              		.cfi_def_cfa_offset 16
 1292              		.cfi_offset 6, -16
 1293 0001 4889E5   		movq	%rsp, %rbp
 1294              		.cfi_def_cfa_register 6
 1295 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1296 0008 488975F0 		movq	%rsi, -16(%rbp)
 1297              	.LBB6:
   5:include/vector_var.h **** {
 1298              		.loc 2 5 0
 1299 000c BA000000 		movl	$_ZTV10vector_var+16, %edx
 1299      00
GAS LISTING /tmp/ccbg3Dll.s 			page 57


 1300 0011 488B45F8 		movq	-8(%rbp), %rax
 1301 0015 488910   		movq	%rdx, (%rax)
 1302 0018 488B45F0 		movq	-16(%rbp), %rax
 1303 001c F20F1040 		movsd	8(%rax), %xmm0
 1303      08
 1304 0021 488B45F8 		movq	-8(%rbp), %rax
 1305 0025 F20F1140 		movsd	%xmm0, 8(%rax)
 1305      08
 1306 002a 488B45F0 		movq	-16(%rbp), %rax
 1307 002e F20F1040 		movsd	16(%rax), %xmm0
 1307      10
 1308 0033 488B45F8 		movq	-8(%rbp), %rax
 1309 0037 F20F1140 		movsd	%xmm0, 16(%rax)
 1309      10
 1310 003c 488B45F0 		movq	-16(%rbp), %rax
 1311 0040 F20F1040 		movsd	24(%rax), %xmm0
 1311      18
 1312 0045 488B45F8 		movq	-8(%rbp), %rax
 1313 0049 F20F1140 		movsd	%xmm0, 24(%rax)
 1313      18
 1314              	.LBE6:
 1315 004e 90       		nop
 1316 004f 5D       		popq	%rbp
 1317              		.cfi_def_cfa 7, 8
 1318 0050 C3       		ret
 1319              		.cfi_endproc
 1320              	.LFE6834:
 1322              		.weak	_ZN10vector_varC1ERKS_
 1323              		.set	_ZN10vector_varC1ERKS_,_ZN10vector_varC2ERKS_
 1324              		.section	.text._ZN10vector_varaSERKS_,"axG",@progbits,_ZN10vector_varaSERKS_,comdat
 1325              		.align 2
 1326              		.weak	_ZN10vector_varaSERKS_
 1328              	_ZN10vector_varaSERKS_:
 1329              	.LFB6836:
   5:include/vector_var.h **** {
 1330              		.loc 2 5 0
 1331              		.cfi_startproc
 1332 0000 55       		pushq	%rbp
 1333              		.cfi_def_cfa_offset 16
 1334              		.cfi_offset 6, -16
 1335 0001 4889E5   		movq	%rsp, %rbp
 1336              		.cfi_def_cfa_register 6
 1337 0004 48897DF8 		movq	%rdi, -8(%rbp)
 1338 0008 488975F0 		movq	%rsi, -16(%rbp)
   5:include/vector_var.h **** {
 1339              		.loc 2 5 0
 1340 000c 488B45F0 		movq	-16(%rbp), %rax
 1341 0010 F20F1040 		movsd	8(%rax), %xmm0
 1341      08
 1342 0015 488B45F8 		movq	-8(%rbp), %rax
 1343 0019 F20F1140 		movsd	%xmm0, 8(%rax)
 1343      08
 1344 001e 488B45F0 		movq	-16(%rbp), %rax
 1345 0022 F20F1040 		movsd	16(%rax), %xmm0
 1345      10
 1346 0027 488B45F8 		movq	-8(%rbp), %rax
 1347 002b F20F1140 		movsd	%xmm0, 16(%rax)
GAS LISTING /tmp/ccbg3Dll.s 			page 58


 1347      10
 1348 0030 488B45F0 		movq	-16(%rbp), %rax
 1349 0034 F20F1040 		movsd	24(%rax), %xmm0
 1349      18
 1350 0039 488B45F8 		movq	-8(%rbp), %rax
 1351 003d F20F1140 		movsd	%xmm0, 24(%rax)
 1351      18
 1352 0042 488B45F8 		movq	-8(%rbp), %rax
 1353 0046 5D       		popq	%rbp
 1354              		.cfi_def_cfa 7, 8
 1355 0047 C3       		ret
 1356              		.cfi_endproc
 1357              	.LFE6836:
 1359              		.text
 1360 044f 90       		.align 2
 1361              		.globl	_ZN8Solution24assign_pressure_gradientE10vector_varS0_S0_R4Mesh
 1363              	_ZN8Solution24assign_pressure_gradientE10vector_varS0_S0_R4Mesh:
 1364              	.LFB6832:
  64:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  65:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::assign_pressure_gradient( vector_var _gradient, vector_var gradient_origin,
  66:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     vector_var origin_magnitude, Mesh &Mesh){
 1365              		.loc 6 66 0
 1366              		.cfi_startproc
 1367              		.cfi_personality 0x3,__gxx_personality_v0
 1368              		.cfi_lsda 0x3,.LLSDA6832
 1369 0450 55       		pushq	%rbp
 1370              		.cfi_def_cfa_offset 16
 1371              		.cfi_offset 6, -16
 1372 0451 4889E5   		movq	%rsp, %rbp
 1373              		.cfi_def_cfa_register 6
 1374 0454 53       		pushq	%rbx
 1375 0455 4881EC18 		subq	$280, %rsp
 1375      010000
 1376              		.cfi_offset 3, -24
 1377 045c 4889BD08 		movq	%rdi, -248(%rbp)
 1377      FFFFFF
 1378 0463 4889B500 		movq	%rsi, -256(%rbp)
 1378      FFFFFF
 1379 046a 488995F8 		movq	%rdx, -264(%rbp)
 1379      FEFFFF
 1380 0471 48898DF0 		movq	%rcx, -272(%rbp)
 1380      FEFFFF
 1381 0478 4C8985E8 		movq	%r8, -280(%rbp)
 1381      FEFFFF
 1382              		.loc 6 66 0
 1383 047f 64488B04 		movq	%fs:40, %rax
 1383      25280000 
 1383      00
 1384 0488 488945E8 		movq	%rax, -24(%rbp)
 1385 048c 31C0     		xorl	%eax, %eax
  67:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  68:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    vector_var displacement;
 1386              		.loc 6 68 0
 1387 048e 488D8520 		leaq	-224(%rbp), %rax
 1387      FFFFFF
 1388 0495 4889C7   		movq	%rax, %rdi
 1389              	.LEHB0:
GAS LISTING /tmp/ccbg3Dll.s 			page 59


 1390 0498 E8000000 		call	_ZN10vector_varC1Ev
 1390      00
 1391              	.LEHE0:
  69:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    vector_var rho_temp;
 1392              		.loc 6 69 0
 1393 049d 488D8540 		leaq	-192(%rbp), %rax
 1393      FFFFFF
 1394 04a4 4889C7   		movq	%rax, %rdi
 1395              	.LEHB1:
 1396 04a7 E8000000 		call	_ZN10vector_varC1Ev
 1396      00
 1397              	.LEHE1:
 1398              	.LBB7:
  70:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  71:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    for( int t =0 ; t< Mesh.get_total_cells(); t++){
 1399              		.loc 6 71 0
 1400 04ac C7851CFF 		movl	$0, -228(%rbp)
 1400      FFFF0000 
 1400      0000
 1401              	.L91:
 1402              		.loc 6 71 0 is_stmt 0 discriminator 2
 1403 04b6 488B85E8 		movq	-280(%rbp), %rax
 1403      FEFFFF
 1404 04bd 4889C7   		movq	%rax, %rdi
 1405 04c0 E8000000 		call	_ZN4Mesh15get_total_cellsEv
 1405      00
 1406 04c5 3B851CFF 		cmpl	-228(%rbp), %eax
 1406      FFFF
 1407 04cb 0F9FC0   		setg	%al
 1408 04ce 84C0     		testb	%al, %al
 1409 04d0 0F849701 		je	.L90
 1409      0000
  72:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  73:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  74:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             displacement.x = Mesh.get_centroid_x(t)-gradient_origin.x;
 1410              		.loc 6 74 0 is_stmt 1
 1411 04d6 8B951CFF 		movl	-228(%rbp), %edx
 1411      FFFF
 1412 04dc 488B85E8 		movq	-280(%rbp), %rax
 1412      FEFFFF
 1413 04e3 89D6     		movl	%edx, %esi
 1414 04e5 4889C7   		movq	%rax, %rdi
 1415 04e8 E8000000 		call	_ZN4Mesh14get_centroid_xEi
 1415      00
 1416 04ed 660F28C8 		movapd	%xmm0, %xmm1
 1417 04f1 488B85F8 		movq	-264(%rbp), %rax
 1417      FEFFFF
 1418 04f8 F20F1040 		movsd	8(%rax), %xmm0
 1418      08
 1419 04fd F20F5CC8 		subsd	%xmm0, %xmm1
 1420 0501 660F28C1 		movapd	%xmm1, %xmm0
 1421 0505 F20F1185 		movsd	%xmm0, -216(%rbp)
 1421      28FFFFFF 
  75:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             displacement.y = Mesh.get_centroid_y(t)- gradient_origin.y;
 1422              		.loc 6 75 0
 1423 050d 8B951CFF 		movl	-228(%rbp), %edx
 1423      FFFF
GAS LISTING /tmp/ccbg3Dll.s 			page 60


 1424 0513 488B85E8 		movq	-280(%rbp), %rax
 1424      FEFFFF
 1425 051a 89D6     		movl	%edx, %esi
 1426 051c 4889C7   		movq	%rax, %rdi
 1427 051f E8000000 		call	_ZN4Mesh14get_centroid_yEi
 1427      00
 1428 0524 660F28C8 		movapd	%xmm0, %xmm1
 1429 0528 488B85F8 		movq	-264(%rbp), %rax
 1429      FEFFFF
 1430 052f F20F1040 		movsd	16(%rax), %xmm0
 1430      10
 1431 0534 F20F5CC8 		subsd	%xmm0, %xmm1
 1432 0538 660F28C1 		movapd	%xmm1, %xmm0
 1433 053c F20F1185 		movsd	%xmm0, -208(%rbp)
 1433      30FFFFFF 
  76:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             displacement.z = Mesh.get_centroid_z(t) - gradient_origin.z;
 1434              		.loc 6 76 0
 1435 0544 8B951CFF 		movl	-228(%rbp), %edx
 1435      FFFF
 1436 054a 488B85E8 		movq	-280(%rbp), %rax
 1436      FEFFFF
 1437 0551 89D6     		movl	%edx, %esi
 1438 0553 4889C7   		movq	%rax, %rdi
 1439 0556 E8000000 		call	_ZN4Mesh14get_centroid_zEi
 1439      00
 1440 055b 660F28C8 		movapd	%xmm0, %xmm1
 1441 055f 488B85F8 		movq	-264(%rbp), %rax
 1441      FEFFFF
 1442 0566 F20F1040 		movsd	24(%rax), %xmm0
 1442      18
 1443 056b F20F5CC8 		subsd	%xmm0, %xmm1
 1444 056f 660F28C1 		movapd	%xmm1, %xmm0
 1445 0573 F20F1185 		movsd	%xmm0, -200(%rbp)
 1445      38FFFFFF 
  77:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  78:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho_temp = rho_temp.line_magnitude(origin_magnitude,_gradient,displacement);
 1446              		.loc 6 78 0
 1447 057b 488D9520 		leaq	-224(%rbp), %rdx
 1447      FFFFFF
 1448 0582 488D45A0 		leaq	-96(%rbp), %rax
 1449 0586 4889D6   		movq	%rdx, %rsi
 1450 0589 4889C7   		movq	%rax, %rdi
 1451 058c E8000000 		call	_ZN10vector_varC1ERKS_
 1451      00
 1452 0591 488B9500 		movq	-256(%rbp), %rdx
 1452      FFFFFF
 1453 0598 488D4580 		leaq	-128(%rbp), %rax
 1454 059c 4889D6   		movq	%rdx, %rsi
 1455 059f 4889C7   		movq	%rax, %rdi
 1456 05a2 E8000000 		call	_ZN10vector_varC1ERKS_
 1456      00
 1457 05a7 488B95F0 		movq	-272(%rbp), %rdx
 1457      FEFFFF
 1458 05ae 488D8560 		leaq	-160(%rbp), %rax
 1458      FFFFFF
 1459 05b5 4889D6   		movq	%rdx, %rsi
 1460 05b8 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccbg3Dll.s 			page 61


 1461 05bb E8000000 		call	_ZN10vector_varC1ERKS_
 1461      00
 1462 05c0 488D45C0 		leaq	-64(%rbp), %rax
 1463 05c4 488D7DA0 		leaq	-96(%rbp), %rdi
 1464 05c8 488D4D80 		leaq	-128(%rbp), %rcx
 1465 05cc 488D9560 		leaq	-160(%rbp), %rdx
 1465      FFFFFF
 1466 05d3 488DB540 		leaq	-192(%rbp), %rsi
 1466      FFFFFF
 1467 05da 4989F8   		movq	%rdi, %r8
 1468 05dd 4889C7   		movq	%rax, %rdi
 1469              	.LEHB2:
 1470 05e0 E8000000 		call	_ZN10vector_var14line_magnitudeES_S_S_
 1470      00
 1471              	.LEHE2:
 1472              		.loc 6 78 0 is_stmt 0 discriminator 2
 1473 05e5 488D55C0 		leaq	-64(%rbp), %rdx
 1474 05e9 488D8540 		leaq	-192(%rbp), %rax
 1474      FFFFFF
 1475 05f0 4889D6   		movq	%rdx, %rsi
 1476 05f3 4889C7   		movq	%rax, %rdi
 1477 05f6 E8000000 		call	_ZN10vector_varaSERKS_
 1477      00
 1478 05fb 488D45C0 		leaq	-64(%rbp), %rax
 1479 05ff 4889C7   		movq	%rax, %rdi
 1480 0602 E8000000 		call	_ZN10vector_varD1Ev
 1480      00
 1481 0607 488D8560 		leaq	-160(%rbp), %rax
 1481      FFFFFF
 1482 060e 4889C7   		movq	%rax, %rdi
 1483 0611 E8000000 		call	_ZN10vector_varD1Ev
 1483      00
 1484 0616 488D4580 		leaq	-128(%rbp), %rax
 1485 061a 4889C7   		movq	%rax, %rdi
 1486 061d E8000000 		call	_ZN10vector_varD1Ev
 1486      00
 1487 0622 488D45A0 		leaq	-96(%rbp), %rax
 1488 0626 4889C7   		movq	%rax, %rdi
 1489 0629 E8000000 		call	_ZN10vector_varD1Ev
 1489      00
  79:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho[t] = rho_temp.Magnitude();
 1490              		.loc 6 79 0 is_stmt 1 discriminator 2
 1491 062e 488B8508 		movq	-248(%rbp), %rax
 1491      FFFFFF
 1492 0635 488B4008 		movq	8(%rax), %rax
 1493 0639 8B951CFF 		movl	-228(%rbp), %edx
 1493      FFFF
 1494 063f 4863D2   		movslq	%edx, %rdx
 1495 0642 48C1E203 		salq	$3, %rdx
 1496 0646 488D1C10 		leaq	(%rax,%rdx), %rbx
 1497 064a 488D8540 		leaq	-192(%rbp), %rax
 1497      FFFFFF
 1498 0651 4889C7   		movq	%rax, %rdi
 1499              	.LEHB3:
 1500 0654 E8000000 		call	_ZN10vector_var9MagnitudeEv
 1500      00
 1501              	.LEHE3:
GAS LISTING /tmp/ccbg3Dll.s 			page 62


 1502 0659 66480F7E 		movq	%xmm0, %rax
 1502      C0
 1503 065e 488903   		movq	%rax, (%rbx)
  71:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 1504              		.loc 6 71 0 discriminator 2
 1505 0661 83851CFF 		addl	$1, -228(%rbp)
 1505      FFFF01
 1506 0668 E949FEFF 		jmp	.L91
 1506      FF
 1507              	.L90:
 1508              	.LBE7:
  80:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  81:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         }
  82:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     displacement.add(rho_temp) ;
 1509              		.loc 6 82 0
 1510 066d 488D9540 		leaq	-192(%rbp), %rdx
 1510      FFFFFF
 1511 0674 488D45C0 		leaq	-64(%rbp), %rax
 1512 0678 4889D6   		movq	%rdx, %rsi
 1513 067b 4889C7   		movq	%rax, %rdi
 1514 067e E8000000 		call	_ZN10vector_varC1ERKS_
 1514      00
 1515 0683 488D55C0 		leaq	-64(%rbp), %rdx
 1516 0687 488D8520 		leaq	-224(%rbp), %rax
 1516      FFFFFF
 1517 068e 4889D6   		movq	%rdx, %rsi
 1518 0691 4889C7   		movq	%rax, %rdi
 1519              	.LEHB4:
 1520 0694 E8000000 		call	_ZN10vector_var3addES_
 1520      00
 1521              	.LEHE4:
 1522              		.loc 6 82 0 is_stmt 0 discriminator 2
 1523 0699 488D45C0 		leaq	-64(%rbp), %rax
 1524 069d 4889C7   		movq	%rax, %rdi
 1525 06a0 E8000000 		call	_ZN10vector_varD1Ev
 1525      00
  69:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 1526              		.loc 6 69 0 is_stmt 1 discriminator 2
 1527 06a5 488D8540 		leaq	-192(%rbp), %rax
 1527      FFFFFF
 1528 06ac 4889C7   		movq	%rax, %rdi
 1529 06af E8000000 		call	_ZN10vector_varD1Ev
 1529      00
  68:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    vector_var rho_temp;
 1530              		.loc 6 68 0 discriminator 2
 1531 06b4 488D8520 		leaq	-224(%rbp), %rax
 1531      FFFFFF
 1532 06bb 4889C7   		movq	%rax, %rdi
 1533 06be E8000000 		call	_ZN10vector_varD1Ev
 1533      00
  83:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  84:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    }
 1534              		.loc 6 84 0 discriminator 2
 1535 06c3 90       		nop
 1536 06c4 488B45E8 		movq	-24(%rbp), %rax
 1537 06c8 64483304 		xorq	%fs:40, %rax
 1537      25280000 
GAS LISTING /tmp/ccbg3Dll.s 			page 63


 1537      00
 1538 06d1 7475     		je	.L96
 1539 06d3 EB6E     		jmp	.L101
 1540              	.L98:
 1541 06d5 4889C3   		movq	%rax, %rbx
 1542              	.LBB8:
  78:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho[t] = rho_temp.Magnitude();
 1543              		.loc 6 78 0
 1544 06d8 488D8560 		leaq	-160(%rbp), %rax
 1544      FFFFFF
 1545 06df 4889C7   		movq	%rax, %rdi
 1546 06e2 E8000000 		call	_ZN10vector_varD1Ev
 1546      00
 1547 06e7 488D4580 		leaq	-128(%rbp), %rax
 1548 06eb 4889C7   		movq	%rax, %rdi
 1549 06ee E8000000 		call	_ZN10vector_varD1Ev
 1549      00
 1550 06f3 488D45A0 		leaq	-96(%rbp), %rax
 1551 06f7 4889C7   		movq	%rax, %rdi
 1552 06fa E8000000 		call	_ZN10vector_varD1Ev
 1552      00
 1553 06ff EB14     		jmp	.L93
 1554              	.L100:
 1555 0701 4889C3   		movq	%rax, %rbx
 1556              	.LBE8:
  82:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 1557              		.loc 6 82 0
 1558 0704 488D45C0 		leaq	-64(%rbp), %rax
 1559 0708 4889C7   		movq	%rax, %rdi
 1560 070b E8000000 		call	_ZN10vector_varD1Ev
 1560      00
 1561 0710 EB03     		jmp	.L93
 1562              	.L99:
 1563 0712 4889C3   		movq	%rax, %rbx
 1564              	.L93:
  69:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 1565              		.loc 6 69 0
 1566 0715 488D8540 		leaq	-192(%rbp), %rax
 1566      FFFFFF
 1567 071c 4889C7   		movq	%rax, %rdi
 1568 071f E8000000 		call	_ZN10vector_varD1Ev
 1568      00
 1569 0724 EB03     		jmp	.L95
 1570              	.L97:
 1571 0726 4889C3   		movq	%rax, %rbx
 1572              	.L95:
  68:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    vector_var rho_temp;
 1573              		.loc 6 68 0
 1574 0729 488D8520 		leaq	-224(%rbp), %rax
 1574      FFFFFF
 1575 0730 4889C7   		movq	%rax, %rdi
 1576 0733 E8000000 		call	_ZN10vector_varD1Ev
 1576      00
 1577 0738 4889D8   		movq	%rbx, %rax
 1578 073b 4889C7   		movq	%rax, %rdi
 1579              	.LEHB5:
 1580 073e E8000000 		call	_Unwind_Resume
GAS LISTING /tmp/ccbg3Dll.s 			page 64


 1580      00
 1581              	.LEHE5:
 1582              	.L101:
 1583              		.loc 6 84 0
 1584 0743 E8000000 		call	__stack_chk_fail
 1584      00
 1585              	.L96:
 1586 0748 4881C418 		addq	$280, %rsp
 1586      010000
 1587 074f 5B       		popq	%rbx
 1588 0750 5D       		popq	%rbp
 1589              		.cfi_def_cfa 7, 8
 1590 0751 C3       		ret
 1591              		.cfi_endproc
 1592              	.LFE6832:
 1593              		.globl	__gxx_personality_v0
 1594              		.section	.gcc_except_table,"a",@progbits
 1595              	.LLSDA6832:
 1596 0000 FF       		.byte	0xff
 1597 0001 FF       		.byte	0xff
 1598 0002 01       		.byte	0x1
 1599 0003 20       		.uleb128 .LLSDACSE6832-.LLSDACSB6832
 1600              	.LLSDACSB6832:
 1601 0004 48       		.uleb128 .LEHB0-.LFB6832
 1602 0005 05       		.uleb128 .LEHE0-.LEHB0
 1603 0006 00       		.uleb128 0
 1604 0007 00       		.uleb128 0
 1605 0008 57       		.uleb128 .LEHB1-.LFB6832
 1606 0009 05       		.uleb128 .LEHE1-.LEHB1
 1607 000a D605     		.uleb128 .L97-.LFB6832
 1608 000c 00       		.uleb128 0
 1609 000d 9003     		.uleb128 .LEHB2-.LFB6832
 1610 000f 05       		.uleb128 .LEHE2-.LEHB2
 1611 0010 8505     		.uleb128 .L98-.LFB6832
 1612 0012 00       		.uleb128 0
 1613 0013 8404     		.uleb128 .LEHB3-.LFB6832
 1614 0015 05       		.uleb128 .LEHE3-.LEHB3
 1615 0016 C205     		.uleb128 .L99-.LFB6832
 1616 0018 00       		.uleb128 0
 1617 0019 C404     		.uleb128 .LEHB4-.LFB6832
 1618 001b 05       		.uleb128 .LEHE4-.LEHB4
 1619 001c B105     		.uleb128 .L100-.LFB6832
 1620 001e 00       		.uleb128 0
 1621 001f EE05     		.uleb128 .LEHB5-.LFB6832
 1622 0021 05       		.uleb128 .LEHE5-.LEHB5
 1623 0022 00       		.uleb128 0
 1624 0023 00       		.uleb128 0
 1625              	.LLSDACSE6832:
 1626              		.text
 1628              		.align 2
 1629              		.globl	_ZN8Solution24assign_velocity_gradientE10vector_varS0_S0_R4Mesh
 1631              	_ZN8Solution24assign_velocity_gradientE10vector_varS0_S0_R4Mesh:
 1632              	.LFB6837:
  85:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  86:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::assign_velocity_gradient( vector_var _gradient, vector_var gradient_origin,
  87:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     vector_var origin_magnitude, Mesh &Mesh){
 1633              		.loc 6 87 0
GAS LISTING /tmp/ccbg3Dll.s 			page 65


 1634              		.cfi_startproc
 1635              		.cfi_personality 0x3,__gxx_personality_v0
 1636              		.cfi_lsda 0x3,.LLSDA6837
 1637 0752 55       		pushq	%rbp
 1638              		.cfi_def_cfa_offset 16
 1639              		.cfi_offset 6, -16
 1640 0753 4889E5   		movq	%rsp, %rbp
 1641              		.cfi_def_cfa_register 6
 1642 0756 53       		pushq	%rbx
 1643 0757 4881EC18 		subq	$280, %rsp
 1643      010000
 1644              		.cfi_offset 3, -24
 1645 075e 4889BD08 		movq	%rdi, -248(%rbp)
 1645      FFFFFF
 1646 0765 4889B500 		movq	%rsi, -256(%rbp)
 1646      FFFFFF
 1647 076c 488995F8 		movq	%rdx, -264(%rbp)
 1647      FEFFFF
 1648 0773 48898DF0 		movq	%rcx, -272(%rbp)
 1648      FEFFFF
 1649 077a 4C8985E8 		movq	%r8, -280(%rbp)
 1649      FEFFFF
 1650              		.loc 6 87 0
 1651 0781 64488B04 		movq	%fs:40, %rax
 1651      25280000 
 1651      00
 1652 078a 488945E8 		movq	%rax, -24(%rbp)
 1653 078e 31C0     		xorl	%eax, %eax
  88:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  89:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    vector_var displacement;
 1654              		.loc 6 89 0
 1655 0790 488D8520 		leaq	-224(%rbp), %rax
 1655      FFFFFF
 1656 0797 4889C7   		movq	%rax, %rdi
 1657              	.LEHB6:
 1658 079a E8000000 		call	_ZN10vector_varC1Ev
 1658      00
 1659              	.LEHE6:
  90:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    vector_var vel_temp;
 1660              		.loc 6 90 0
 1661 079f 488D8540 		leaq	-192(%rbp), %rax
 1661      FFFFFF
 1662 07a6 4889C7   		movq	%rax, %rdi
 1663              	.LEHB7:
 1664 07a9 E8000000 		call	_ZN10vector_varC1Ev
 1664      00
 1665              	.LEHE7:
 1666              	.LBB9:
  91:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  92:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    for( int t =0 ; t< Mesh.get_total_cells(); t++){
 1667              		.loc 6 92 0
 1668 07ae C7851CFF 		movl	$0, -228(%rbp)
 1668      FFFF0000 
 1668      0000
 1669              	.L104:
 1670              		.loc 6 92 0 is_stmt 0 discriminator 2
 1671 07b8 488B85E8 		movq	-280(%rbp), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 66


 1671      FEFFFF
 1672 07bf 4889C7   		movq	%rax, %rdi
 1673 07c2 E8000000 		call	_ZN4Mesh15get_total_cellsEv
 1673      00
 1674 07c7 3B851CFF 		cmpl	-228(%rbp), %eax
 1674      FFFF
 1675 07cd 0F9FC0   		setg	%al
 1676 07d0 84C0     		testb	%al, %al
 1677 07d2 0F84A301 		je	.L103
 1677      0000
  93:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  94:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  95:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             displacement.x = Mesh.get_centroid_x(t)-gradient_origin.x;
 1678              		.loc 6 95 0 is_stmt 1
 1679 07d8 8B951CFF 		movl	-228(%rbp), %edx
 1679      FFFF
 1680 07de 488B85E8 		movq	-280(%rbp), %rax
 1680      FEFFFF
 1681 07e5 89D6     		movl	%edx, %esi
 1682 07e7 4889C7   		movq	%rax, %rdi
 1683 07ea E8000000 		call	_ZN4Mesh14get_centroid_xEi
 1683      00
 1684 07ef 660F28C8 		movapd	%xmm0, %xmm1
 1685 07f3 488B85F8 		movq	-264(%rbp), %rax
 1685      FEFFFF
 1686 07fa F20F1040 		movsd	8(%rax), %xmm0
 1686      08
 1687 07ff F20F5CC8 		subsd	%xmm0, %xmm1
 1688 0803 660F28C1 		movapd	%xmm1, %xmm0
 1689 0807 F20F1185 		movsd	%xmm0, -216(%rbp)
 1689      28FFFFFF 
  96:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             displacement.y = Mesh.get_centroid_y(t)- gradient_origin.y;
 1690              		.loc 6 96 0
 1691 080f 8B951CFF 		movl	-228(%rbp), %edx
 1691      FFFF
 1692 0815 488B85E8 		movq	-280(%rbp), %rax
 1692      FEFFFF
 1693 081c 89D6     		movl	%edx, %esi
 1694 081e 4889C7   		movq	%rax, %rdi
 1695 0821 E8000000 		call	_ZN4Mesh14get_centroid_yEi
 1695      00
 1696 0826 660F28C8 		movapd	%xmm0, %xmm1
 1697 082a 488B85F8 		movq	-264(%rbp), %rax
 1697      FEFFFF
 1698 0831 F20F1040 		movsd	16(%rax), %xmm0
 1698      10
 1699 0836 F20F5CC8 		subsd	%xmm0, %xmm1
 1700 083a 660F28C1 		movapd	%xmm1, %xmm0
 1701 083e F20F1185 		movsd	%xmm0, -208(%rbp)
 1701      30FFFFFF 
  97:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             displacement.z = Mesh.get_centroid_z(t) - gradient_origin.z;
 1702              		.loc 6 97 0
 1703 0846 8B951CFF 		movl	-228(%rbp), %edx
 1703      FFFF
 1704 084c 488B85E8 		movq	-280(%rbp), %rax
 1704      FEFFFF
 1705 0853 89D6     		movl	%edx, %esi
GAS LISTING /tmp/ccbg3Dll.s 			page 67


 1706 0855 4889C7   		movq	%rax, %rdi
 1707 0858 E8000000 		call	_ZN4Mesh14get_centroid_zEi
 1707      00
 1708 085d 660F28C8 		movapd	%xmm0, %xmm1
 1709 0861 488B85F8 		movq	-264(%rbp), %rax
 1709      FEFFFF
 1710 0868 F20F1040 		movsd	24(%rax), %xmm0
 1710      18
 1711 086d F20F5CC8 		subsd	%xmm0, %xmm1
 1712 0871 660F28C1 		movapd	%xmm1, %xmm0
 1713 0875 F20F1185 		movsd	%xmm0, -200(%rbp)
 1713      38FFFFFF 
  98:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
  99:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             vel_temp = vel_temp.line_magnitude(origin_magnitude,_gradient,displacement);
 1714              		.loc 6 99 0
 1715 087d 488D9520 		leaq	-224(%rbp), %rdx
 1715      FFFFFF
 1716 0884 488D45A0 		leaq	-96(%rbp), %rax
 1717 0888 4889D6   		movq	%rdx, %rsi
 1718 088b 4889C7   		movq	%rax, %rdi
 1719 088e E8000000 		call	_ZN10vector_varC1ERKS_
 1719      00
 1720 0893 488B9500 		movq	-256(%rbp), %rdx
 1720      FFFFFF
 1721 089a 488D4580 		leaq	-128(%rbp), %rax
 1722 089e 4889D6   		movq	%rdx, %rsi
 1723 08a1 4889C7   		movq	%rax, %rdi
 1724 08a4 E8000000 		call	_ZN10vector_varC1ERKS_
 1724      00
 1725 08a9 488B95F0 		movq	-272(%rbp), %rdx
 1725      FEFFFF
 1726 08b0 488D8560 		leaq	-160(%rbp), %rax
 1726      FFFFFF
 1727 08b7 4889D6   		movq	%rdx, %rsi
 1728 08ba 4889C7   		movq	%rax, %rdi
 1729 08bd E8000000 		call	_ZN10vector_varC1ERKS_
 1729      00
 1730 08c2 488D45C0 		leaq	-64(%rbp), %rax
 1731 08c6 488D7DA0 		leaq	-96(%rbp), %rdi
 1732 08ca 488D4D80 		leaq	-128(%rbp), %rcx
 1733 08ce 488D9560 		leaq	-160(%rbp), %rdx
 1733      FFFFFF
 1734 08d5 488DB540 		leaq	-192(%rbp), %rsi
 1734      FFFFFF
 1735 08dc 4989F8   		movq	%rdi, %r8
 1736 08df 4889C7   		movq	%rax, %rdi
 1737              	.LEHB8:
 1738 08e2 E8000000 		call	_ZN10vector_var14line_magnitudeES_S_S_
 1738      00
 1739              	.LEHE8:
 1740              		.loc 6 99 0 is_stmt 0 discriminator 2
 1741 08e7 488D55C0 		leaq	-64(%rbp), %rdx
 1742 08eb 488D8540 		leaq	-192(%rbp), %rax
 1742      FFFFFF
 1743 08f2 4889D6   		movq	%rdx, %rsi
 1744 08f5 4889C7   		movq	%rax, %rdi
 1745 08f8 E8000000 		call	_ZN10vector_varaSERKS_
GAS LISTING /tmp/ccbg3Dll.s 			page 68


 1745      00
 1746 08fd 488D45C0 		leaq	-64(%rbp), %rax
 1747 0901 4889C7   		movq	%rax, %rdi
 1748 0904 E8000000 		call	_ZN10vector_varD1Ev
 1748      00
 1749 0909 488D8560 		leaq	-160(%rbp), %rax
 1749      FFFFFF
 1750 0910 4889C7   		movq	%rax, %rdi
 1751 0913 E8000000 		call	_ZN10vector_varD1Ev
 1751      00
 1752 0918 488D4580 		leaq	-128(%rbp), %rax
 1753 091c 4889C7   		movq	%rax, %rdi
 1754 091f E8000000 		call	_ZN10vector_varD1Ev
 1754      00
 1755 0924 488D45A0 		leaq	-96(%rbp), %rax
 1756 0928 4889C7   		movq	%rax, %rdi
 1757 092b E8000000 		call	_ZN10vector_varD1Ev
 1757      00
 100:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             u[t] = vel_temp.x + vel_temp.y +vel_temp.z;
 1758              		.loc 6 100 0 is_stmt 1 discriminator 2
 1759 0930 488B8508 		movq	-248(%rbp), %rax
 1759      FFFFFF
 1760 0937 488B4010 		movq	16(%rax), %rax
 1761 093b 8B951CFF 		movl	-228(%rbp), %edx
 1761      FFFF
 1762 0941 4863D2   		movslq	%edx, %rdx
 1763 0944 48C1E203 		salq	$3, %rdx
 1764 0948 4801D0   		addq	%rdx, %rax
 1765 094b F20F108D 		movsd	-184(%rbp), %xmm1
 1765      48FFFFFF 
 1766 0953 F20F1085 		movsd	-176(%rbp), %xmm0
 1766      50FFFFFF 
 1767 095b F20F58C1 		addsd	%xmm1, %xmm0
 1768 095f F20F108D 		movsd	-168(%rbp), %xmm1
 1768      58FFFFFF 
 1769 0967 F20F58C1 		addsd	%xmm1, %xmm0
 1770 096b F20F1100 		movsd	%xmm0, (%rax)
  92:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 1771              		.loc 6 92 0 discriminator 2
 1772 096f 83851CFF 		addl	$1, -228(%rbp)
 1772      FFFF01
 1773 0976 E93DFEFF 		jmp	.L104
 1773      FF
 1774              	.L103:
 1775              	.LBE9:
 101:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 102:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         }
 103:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     displacement.add(vel_temp) ;
 1776              		.loc 6 103 0
 1777 097b 488D9540 		leaq	-192(%rbp), %rdx
 1777      FFFFFF
 1778 0982 488D45C0 		leaq	-64(%rbp), %rax
 1779 0986 4889D6   		movq	%rdx, %rsi
 1780 0989 4889C7   		movq	%rax, %rdi
 1781 098c E8000000 		call	_ZN10vector_varC1ERKS_
 1781      00
 1782 0991 488D55C0 		leaq	-64(%rbp), %rdx
GAS LISTING /tmp/ccbg3Dll.s 			page 69


 1783 0995 488D8520 		leaq	-224(%rbp), %rax
 1783      FFFFFF
 1784 099c 4889D6   		movq	%rdx, %rsi
 1785 099f 4889C7   		movq	%rax, %rdi
 1786              	.LEHB9:
 1787 09a2 E8000000 		call	_ZN10vector_var3addES_
 1787      00
 1788              	.LEHE9:
 1789              		.loc 6 103 0 is_stmt 0 discriminator 2
 1790 09a7 488D45C0 		leaq	-64(%rbp), %rax
 1791 09ab 4889C7   		movq	%rax, %rdi
 1792 09ae E8000000 		call	_ZN10vector_varD1Ev
 1792      00
  90:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 1793              		.loc 6 90 0 is_stmt 1 discriminator 2
 1794 09b3 488D8540 		leaq	-192(%rbp), %rax
 1794      FFFFFF
 1795 09ba 4889C7   		movq	%rax, %rdi
 1796 09bd E8000000 		call	_ZN10vector_varD1Ev
 1796      00
  89:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    vector_var vel_temp;
 1797              		.loc 6 89 0 discriminator 2
 1798 09c2 488D8520 		leaq	-224(%rbp), %rax
 1798      FFFFFF
 1799 09c9 4889C7   		movq	%rax, %rdi
 1800 09cc E8000000 		call	_ZN10vector_varD1Ev
 1800      00
 104:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 105:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    }
 1801              		.loc 6 105 0 discriminator 2
 1802 09d1 90       		nop
 1803 09d2 488B45E8 		movq	-24(%rbp), %rax
 1804 09d6 64483304 		xorq	%fs:40, %rax
 1804      25280000 
 1804      00
 1805 09df 7470     		je	.L109
 1806 09e1 EB69     		jmp	.L113
 1807              	.L111:
 1808 09e3 4889C3   		movq	%rax, %rbx
 1809              	.LBB10:
  99:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             u[t] = vel_temp.x + vel_temp.y +vel_temp.z;
 1810              		.loc 6 99 0
 1811 09e6 488D8560 		leaq	-160(%rbp), %rax
 1811      FFFFFF
 1812 09ed 4889C7   		movq	%rax, %rdi
 1813 09f0 E8000000 		call	_ZN10vector_varD1Ev
 1813      00
 1814 09f5 488D4580 		leaq	-128(%rbp), %rax
 1815 09f9 4889C7   		movq	%rax, %rdi
 1816 09fc E8000000 		call	_ZN10vector_varD1Ev
 1816      00
 1817 0a01 488D45A0 		leaq	-96(%rbp), %rax
 1818 0a05 4889C7   		movq	%rax, %rdi
 1819 0a08 E8000000 		call	_ZN10vector_varD1Ev
 1819      00
 1820 0a0d EB0F     		jmp	.L106
 1821              	.L112:
GAS LISTING /tmp/ccbg3Dll.s 			page 70


 1822 0a0f 4889C3   		movq	%rax, %rbx
 1823              	.LBE10:
 103:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 1824              		.loc 6 103 0
 1825 0a12 488D45C0 		leaq	-64(%rbp), %rax
 1826 0a16 4889C7   		movq	%rax, %rdi
 1827 0a19 E8000000 		call	_ZN10vector_varD1Ev
 1827      00
 1828              	.L106:
  90:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 1829              		.loc 6 90 0
 1830 0a1e 488D8540 		leaq	-192(%rbp), %rax
 1830      FFFFFF
 1831 0a25 4889C7   		movq	%rax, %rdi
 1832 0a28 E8000000 		call	_ZN10vector_varD1Ev
 1832      00
 1833 0a2d EB03     		jmp	.L108
 1834              	.L110:
 1835 0a2f 4889C3   		movq	%rax, %rbx
 1836              	.L108:
  89:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****    vector_var vel_temp;
 1837              		.loc 6 89 0
 1838 0a32 488D8520 		leaq	-224(%rbp), %rax
 1838      FFFFFF
 1839 0a39 4889C7   		movq	%rax, %rdi
 1840 0a3c E8000000 		call	_ZN10vector_varD1Ev
 1840      00
 1841 0a41 4889D8   		movq	%rbx, %rax
 1842 0a44 4889C7   		movq	%rax, %rdi
 1843              	.LEHB10:
 1844 0a47 E8000000 		call	_Unwind_Resume
 1844      00
 1845              	.LEHE10:
 1846              	.L113:
 1847              		.loc 6 105 0
 1848 0a4c E8000000 		call	__stack_chk_fail
 1848      00
 1849              	.L109:
 1850 0a51 4881C418 		addq	$280, %rsp
 1850      010000
 1851 0a58 5B       		popq	%rbx
 1852 0a59 5D       		popq	%rbp
 1853              		.cfi_def_cfa 7, 8
 1854 0a5a C3       		ret
 1855              		.cfi_endproc
 1856              	.LFE6837:
 1857              		.section	.gcc_except_table
 1858              	.LLSDA6837:
 1859 0024 FF       		.byte	0xff
 1860 0025 FF       		.byte	0xff
 1861 0026 01       		.byte	0x1
 1862 0027 1A       		.uleb128 .LLSDACSE6837-.LLSDACSB6837
 1863              	.LLSDACSB6837:
 1864 0028 48       		.uleb128 .LEHB6-.LFB6837
 1865 0029 05       		.uleb128 .LEHE6-.LEHB6
 1866 002a 00       		.uleb128 0
 1867 002b 00       		.uleb128 0
GAS LISTING /tmp/ccbg3Dll.s 			page 71


 1868 002c 57       		.uleb128 .LEHB7-.LFB6837
 1869 002d 05       		.uleb128 .LEHE7-.LEHB7
 1870 002e DD05     		.uleb128 .L110-.LFB6837
 1871 0030 00       		.uleb128 0
 1872 0031 9003     		.uleb128 .LEHB8-.LFB6837
 1873 0033 05       		.uleb128 .LEHE8-.LEHB8
 1874 0034 9105     		.uleb128 .L111-.LFB6837
 1875 0036 00       		.uleb128 0
 1876 0037 D004     		.uleb128 .LEHB9-.LFB6837
 1877 0039 05       		.uleb128 .LEHE9-.LEHB9
 1878 003a BD05     		.uleb128 .L112-.LFB6837
 1879 003c 00       		.uleb128 0
 1880 003d F505     		.uleb128 .LEHB10-.LFB6837
 1881 003f 05       		.uleb128 .LEHE10-.LEHB10
 1882 0040 00       		.uleb128 0
 1883 0041 00       		.uleb128 0
 1884              	.LLSDACSE6837:
 1885              		.text
 1887 0a5b 90       		.align 2
 1888              		.globl	_ZN8Solution6updateEddddi
 1890              	_ZN8Solution6updateEddddi:
 1891              	.LFB6838:
 106:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 107:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::update ( double _rho, double _u, double _v, double _w , int i){
 1892              		.loc 6 107 0
 1893              		.cfi_startproc
 1894 0a5c 55       		pushq	%rbp
 1895              		.cfi_def_cfa_offset 16
 1896              		.cfi_offset 6, -16
 1897 0a5d 4889E5   		movq	%rsp, %rbp
 1898              		.cfi_def_cfa_register 6
 1899 0a60 48897DF8 		movq	%rdi, -8(%rbp)
 1900 0a64 F20F1145 		movsd	%xmm0, -16(%rbp)
 1900      F0
 1901 0a69 F20F114D 		movsd	%xmm1, -24(%rbp)
 1901      E8
 1902 0a6e F20F1155 		movsd	%xmm2, -32(%rbp)
 1902      E0
 1903 0a73 F20F115D 		movsd	%xmm3, -40(%rbp)
 1903      D8
 1904 0a78 8975D4   		movl	%esi, -44(%rbp)
 108:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 109:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     rho[i] =_rho;
 1905              		.loc 6 109 0
 1906 0a7b 488B45F8 		movq	-8(%rbp), %rax
 1907 0a7f 488B4008 		movq	8(%rax), %rax
 1908 0a83 8B55D4   		movl	-44(%rbp), %edx
 1909 0a86 4863D2   		movslq	%edx, %rdx
 1910 0a89 48C1E203 		salq	$3, %rdx
 1911 0a8d 4801D0   		addq	%rdx, %rax
 1912 0a90 F20F1045 		movsd	-16(%rbp), %xmm0
 1912      F0
 1913 0a95 F20F1100 		movsd	%xmm0, (%rax)
 110:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     u[i] = _u;
 1914              		.loc 6 110 0
 1915 0a99 488B45F8 		movq	-8(%rbp), %rax
 1916 0a9d 488B4010 		movq	16(%rax), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 72


 1917 0aa1 8B55D4   		movl	-44(%rbp), %edx
 1918 0aa4 4863D2   		movslq	%edx, %rdx
 1919 0aa7 48C1E203 		salq	$3, %rdx
 1920 0aab 4801D0   		addq	%rdx, %rax
 1921 0aae F20F1045 		movsd	-24(%rbp), %xmm0
 1921      E8
 1922 0ab3 F20F1100 		movsd	%xmm0, (%rax)
 111:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     v[i] = _v;
 1923              		.loc 6 111 0
 1924 0ab7 488B45F8 		movq	-8(%rbp), %rax
 1925 0abb 488B4018 		movq	24(%rax), %rax
 1926 0abf 8B55D4   		movl	-44(%rbp), %edx
 1927 0ac2 4863D2   		movslq	%edx, %rdx
 1928 0ac5 48C1E203 		salq	$3, %rdx
 1929 0ac9 4801D0   		addq	%rdx, %rax
 1930 0acc F20F1045 		movsd	-32(%rbp), %xmm0
 1930      E0
 1931 0ad1 F20F1100 		movsd	%xmm0, (%rax)
 112:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     w[i] = _w;
 1932              		.loc 6 112 0
 1933 0ad5 488B45F8 		movq	-8(%rbp), %rax
 1934 0ad9 488B4020 		movq	32(%rax), %rax
 1935 0add 8B55D4   		movl	-44(%rbp), %edx
 1936 0ae0 4863D2   		movslq	%edx, %rdx
 1937 0ae3 48C1E203 		salq	$3, %rdx
 1938 0ae7 4801D0   		addq	%rdx, %rax
 1939 0aea F20F1045 		movsd	-40(%rbp), %xmm0
 1939      D8
 1940 0aef F20F1100 		movsd	%xmm0, (%rax)
 113:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 1941              		.loc 6 113 0
 1942 0af3 90       		nop
 1943 0af4 5D       		popq	%rbp
 1944              		.cfi_def_cfa 7, 8
 1945 0af5 C3       		ret
 1946              		.cfi_endproc
 1947              	.LFE6838:
 1949              		.section	.rodata
 1950              	.LC2:
 1951 0001 2F72686F 		.string	"/rho.txt"
 1951      2E747874 
 1951      00
 1952              	.LC3:
 1953 000a 2F752E74 		.string	"/u.txt"
 1953      787400
 1954              	.LC4:
 1955 0011 2F762E74 		.string	"/v.txt"
 1955      787400
 1956              	.LC5:
 1957 0018 202C00   		.string	" ,"
 1958              		.text
 1959              		.align 2
 1960              		.globl	_ZN8Solution6outputENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER16global_variables
 1962              	_ZN8Solution6outputENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER16global_variablesR15domai
 1963              	.LFB6839:
 114:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 115:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::output (std::string output_location, global_variables &globals,
GAS LISTING /tmp/ccbg3Dll.s 			page 73


 116:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         domain_geometry &geometry){
 1964              		.loc 6 116 0
 1965              		.cfi_startproc
 1966              		.cfi_personality 0x3,__gxx_personality_v0
 1967              		.cfi_lsda 0x3,.LLSDA6839
 1968 0af6 55       		pushq	%rbp
 1969              		.cfi_def_cfa_offset 16
 1970              		.cfi_offset 6, -16
 1971 0af7 4889E5   		movq	%rsp, %rbp
 1972              		.cfi_def_cfa_register 6
 1973 0afa 53       		pushq	%rbx
 1974 0afb 4881EC18 		subq	$1816, %rsp
 1974      070000
 1975              		.cfi_offset 3, -24
 1976 0b02 4889BD08 		movq	%rdi, -1784(%rbp)
 1976      F9FFFF
 1977 0b09 4889B500 		movq	%rsi, -1792(%rbp)
 1977      F9FFFF
 1978 0b10 488995F8 		movq	%rdx, -1800(%rbp)
 1978      F8FFFF
 1979 0b17 48898DF0 		movq	%rcx, -1808(%rbp)
 1979      F8FFFF
 1980              		.loc 6 116 0
 1981 0b1e 64488B04 		movq	%fs:40, %rax
 1981      25280000 
 1981      00
 1982 0b27 488945E8 		movq	%rax, -24(%rbp)
 1983 0b2b 31C0     		xorl	%eax, %eax
 117:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 118:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::ofstream rho_txt,u_txt,v_txt ;
 1984              		.loc 6 118 0
 1985 0b2d 488D85E0 		leaq	-1568(%rbp), %rax
 1985      F9FFFF
 1986 0b34 4889C7   		movq	%rax, %rdi
 1987              	.LEHB11:
 1988 0b37 E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev
 1988      00
 1989              	.LEHE11:
 1990 0b3c 488D85E0 		leaq	-1056(%rbp), %rax
 1990      FBFFFF
 1991 0b43 4889C7   		movq	%rax, %rdi
 1992              	.LEHB12:
 1993 0b46 E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev
 1993      00
 1994              	.LEHE12:
 1995              		.loc 6 118 0 is_stmt 0 discriminator 3
 1996 0b4b 488D85E0 		leaq	-544(%rbp), %rax
 1996      FDFFFF
 1997 0b52 4889C7   		movq	%rax, %rdi
 1998              	.LEHB13:
 1999 0b55 E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev
 1999      00
 2000              	.LEHE13:
 119:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::string rho_file, u_file, v_file;
 2001              		.loc 6 119 0 is_stmt 1
 2002 0b5a 488D8520 		leaq	-1760(%rbp), %rax
 2002      F9FFFF
GAS LISTING /tmp/ccbg3Dll.s 			page 74


 2003 0b61 4889C7   		movq	%rax, %rdi
 2004 0b64 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
 2004      00
 2005 0b69 488D8540 		leaq	-1728(%rbp), %rax
 2005      F9FFFF
 2006 0b70 4889C7   		movq	%rax, %rdi
 2007 0b73 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
 2007      00
 2008 0b78 488D8560 		leaq	-1696(%rbp), %rax
 2008      F9FFFF
 2009 0b7f 4889C7   		movq	%rax, %rdi
 2010 0b82 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
 2010      00
 120:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     rho_file = output_location + "/rho.txt";
 2011              		.loc 6 120 0
 2012 0b87 488D8580 		leaq	-1664(%rbp), %rax
 2012      F9FFFF
 2013 0b8e 488B8D00 		movq	-1792(%rbp), %rcx
 2013      F9FFFF
 2014 0b95 BA000000 		movl	$.LC2, %edx
 2014      00
 2015 0b9a 4889CE   		movq	%rcx, %rsi
 2016 0b9d 4889C7   		movq	%rax, %rdi
 2017              	.LEHB14:
 2018 0ba0 E8000000 		call	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
 2018      00
 2019              	.LEHE14:
 2020              		.loc 6 120 0 is_stmt 0 discriminator 1
 2021 0ba5 488D9580 		leaq	-1664(%rbp), %rdx
 2021      F9FFFF
 2022 0bac 488D8520 		leaq	-1760(%rbp), %rax
 2022      F9FFFF
 2023 0bb3 4889D6   		movq	%rdx, %rsi
 2024 0bb6 4889C7   		movq	%rax, %rdi
 2025              	.LEHB15:
 2026 0bb9 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
 2026      00
 2027              	.LEHE15:
 2028              		.loc 6 120 0 discriminator 3
 2029 0bbe 488D8580 		leaq	-1664(%rbp), %rax
 2029      F9FFFF
 2030 0bc5 4889C7   		movq	%rax, %rdi
 2031 0bc8 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2031      00
 121:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     u_file = output_location + "/u.txt";
 2032              		.loc 6 121 0 is_stmt 1 discriminator 3
 2033 0bcd 488D85A0 		leaq	-1632(%rbp), %rax
 2033      F9FFFF
 2034 0bd4 488B8D00 		movq	-1792(%rbp), %rcx
 2034      F9FFFF
 2035 0bdb BA000000 		movl	$.LC3, %edx
 2035      00
 2036 0be0 4889CE   		movq	%rcx, %rsi
 2037 0be3 4889C7   		movq	%rax, %rdi
 2038              	.LEHB16:
 2039 0be6 E8000000 		call	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
 2039      00
GAS LISTING /tmp/ccbg3Dll.s 			page 75


 2040              	.LEHE16:
 2041              		.loc 6 121 0 is_stmt 0 discriminator 1
 2042 0beb 488D95A0 		leaq	-1632(%rbp), %rdx
 2042      F9FFFF
 2043 0bf2 488D8540 		leaq	-1728(%rbp), %rax
 2043      F9FFFF
 2044 0bf9 4889D6   		movq	%rdx, %rsi
 2045 0bfc 4889C7   		movq	%rax, %rdi
 2046              	.LEHB17:
 2047 0bff E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
 2047      00
 2048              	.LEHE17:
 2049              		.loc 6 121 0 discriminator 3
 2050 0c04 488D85A0 		leaq	-1632(%rbp), %rax
 2050      F9FFFF
 2051 0c0b 4889C7   		movq	%rax, %rdi
 2052 0c0e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2052      00
 122:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     v_file = output_location + "/v.txt";
 2053              		.loc 6 122 0 is_stmt 1 discriminator 3
 2054 0c13 488D85C0 		leaq	-1600(%rbp), %rax
 2054      F9FFFF
 2055 0c1a 488B8D00 		movq	-1792(%rbp), %rcx
 2055      F9FFFF
 2056 0c21 BA000000 		movl	$.LC4, %edx
 2056      00
 2057 0c26 4889CE   		movq	%rcx, %rsi
 2058 0c29 4889C7   		movq	%rax, %rdi
 2059              	.LEHB18:
 2060 0c2c E8000000 		call	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
 2060      00
 2061              	.LEHE18:
 2062              		.loc 6 122 0 is_stmt 0 discriminator 1
 2063 0c31 488D95C0 		leaq	-1600(%rbp), %rdx
 2063      F9FFFF
 2064 0c38 488D8560 		leaq	-1696(%rbp), %rax
 2064      F9FFFF
 2065 0c3f 4889D6   		movq	%rdx, %rsi
 2066 0c42 4889C7   		movq	%rax, %rdi
 2067              	.LEHB19:
 2068 0c45 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
 2068      00
 2069              	.LEHE19:
 2070              		.loc 6 122 0 discriminator 3
 2071 0c4a 488D85C0 		leaq	-1600(%rbp), %rax
 2071      F9FFFF
 2072 0c51 4889C7   		movq	%rax, %rdi
 2073 0c54 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2073      00
 123:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 124:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     rho_txt.open(rho_file.c_str(), ios::out);
 2074              		.loc 6 124 0 is_stmt 1 discriminator 3
 2075 0c59 488D8520 		leaq	-1760(%rbp), %rax
 2075      F9FFFF
 2076 0c60 4889C7   		movq	%rax, %rdi
 2077 0c63 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 2077      00
GAS LISTING /tmp/ccbg3Dll.s 			page 76


 2078 0c68 4889C1   		movq	%rax, %rcx
 2079 0c6b 488D85E0 		leaq	-1568(%rbp), %rax
 2079      F9FFFF
 2080 0c72 BA100000 		movl	$16, %edx
 2080      00
 2081 0c77 4889CE   		movq	%rcx, %rsi
 2082 0c7a 4889C7   		movq	%rax, %rdi
 2083              	.LEHB20:
 2084 0c7d E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
 2084      00
 125:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     u_txt.open(u_file.c_str(), ios::out);
 2085              		.loc 6 125 0
 2086 0c82 488D8540 		leaq	-1728(%rbp), %rax
 2086      F9FFFF
 2087 0c89 4889C7   		movq	%rax, %rdi
 2088 0c8c E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 2088      00
 2089 0c91 4889C1   		movq	%rax, %rcx
 2090 0c94 488D85E0 		leaq	-1056(%rbp), %rax
 2090      FBFFFF
 2091 0c9b BA100000 		movl	$16, %edx
 2091      00
 2092 0ca0 4889CE   		movq	%rcx, %rsi
 2093 0ca3 4889C7   		movq	%rax, %rdi
 2094 0ca6 E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
 2094      00
 126:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     v_txt.open(v_file.c_str(), ios::out);
 2095              		.loc 6 126 0
 2096 0cab 488D8560 		leaq	-1696(%rbp), %rax
 2096      F9FFFF
 2097 0cb2 4889C7   		movq	%rax, %rdi
 2098 0cb5 E8000000 		call	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
 2098      00
 2099 0cba 4889C1   		movq	%rax, %rcx
 2100 0cbd 488D85E0 		leaq	-544(%rbp), %rax
 2100      FDFFFF
 2101 0cc4 BA100000 		movl	$16, %edx
 2101      00
 2102 0cc9 4889CE   		movq	%rcx, %rsi
 2103 0ccc 4889C7   		movq	%rax, %rdi
 2104 0ccf E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
 2104      00
 127:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     double factor = globals.mach_number * geometry.cs;
 2105              		.loc 6 127 0
 2106 0cd4 488B85F8 		movq	-1800(%rbp), %rax
 2106      F8FFFF
 2107 0cdb F20F1048 		movsd	80(%rax), %xmm1
 2107      50
 2108 0ce0 488B85F0 		movq	-1808(%rbp), %rax
 2108      F8FFFF
 2109 0ce7 F20F1040 		movsd	48(%rax), %xmm0
 2109      30
 2110 0cec F20F59C1 		mulsd	%xmm1, %xmm0
 2111 0cf0 F20F1185 		movsd	%xmm0, -1768(%rbp)
 2111      18F9FFFF 
 2112              	.LBB11:
 128:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 77


 129:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     for( int i = 0; i < total_nodes; i++){
 2113              		.loc 6 129 0
 2114 0cf8 C78514F9 		movl	$0, -1772(%rbp)
 2114      FFFF0000 
 2114      0000
 2115              	.L117:
 2116              		.loc 6 129 0 is_stmt 0 discriminator 1
 2117 0d02 488B8508 		movq	-1784(%rbp), %rax
 2117      F9FFFF
 2118 0d09 8B4038   		movl	56(%rax), %eax
 2119 0d0c 3B8514F9 		cmpl	-1772(%rbp), %eax
 2119      FFFF
 2120 0d12 0F8E3E01 		jle	.L116
 2120      0000
 130:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 131:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         rho_txt << i << " ,"  << rho[i] << endl;
 2121              		.loc 6 131 0 is_stmt 1
 2122 0d18 488B8508 		movq	-1784(%rbp), %rax
 2122      F9FFFF
 2123 0d1f 488B4008 		movq	8(%rax), %rax
 2124 0d23 8B9514F9 		movl	-1772(%rbp), %edx
 2124      FFFF
 2125 0d29 4863D2   		movslq	%edx, %rdx
 2126 0d2c 48C1E203 		salq	$3, %rdx
 2127 0d30 4801D0   		addq	%rdx, %rax
 2128 0d33 488B18   		movq	(%rax), %rbx
 2129 0d36 8B9514F9 		movl	-1772(%rbp), %edx
 2129      FFFF
 2130 0d3c 488D85E0 		leaq	-1568(%rbp), %rax
 2130      F9FFFF
 2131 0d43 89D6     		movl	%edx, %esi
 2132 0d45 4889C7   		movq	%rax, %rdi
 2133 0d48 E8000000 		call	_ZNSolsEi
 2133      00
 2134 0d4d BE000000 		movl	$.LC5, %esi
 2134      00
 2135 0d52 4889C7   		movq	%rax, %rdi
 2136 0d55 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2136      00
 2137              		.loc 6 131 0 is_stmt 0 discriminator 1
 2138 0d5a 48899DE8 		movq	%rbx, -1816(%rbp)
 2138      F8FFFF
 2139 0d61 F20F1085 		movsd	-1816(%rbp), %xmm0
 2139      E8F8FFFF 
 2140 0d69 4889C7   		movq	%rax, %rdi
 2141 0d6c E8000000 		call	_ZNSolsEd
 2141      00
 2142              		.loc 6 131 0 discriminator 2
 2143 0d71 BE000000 		movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
 2143      00
 2144 0d76 4889C7   		movq	%rax, %rdi
 2145 0d79 E8000000 		call	_ZNSolsEPFRSoS_E
 2145      00
 132:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         u_txt << i << " ,"  << u[i] << endl;
 2146              		.loc 6 132 0 is_stmt 1
 2147 0d7e 488B8508 		movq	-1784(%rbp), %rax
 2147      F9FFFF
GAS LISTING /tmp/ccbg3Dll.s 			page 78


 2148 0d85 488B4010 		movq	16(%rax), %rax
 2149 0d89 8B9514F9 		movl	-1772(%rbp), %edx
 2149      FFFF
 2150 0d8f 4863D2   		movslq	%edx, %rdx
 2151 0d92 48C1E203 		salq	$3, %rdx
 2152 0d96 4801D0   		addq	%rdx, %rax
 2153 0d99 488B18   		movq	(%rax), %rbx
 2154 0d9c 8B9514F9 		movl	-1772(%rbp), %edx
 2154      FFFF
 2155 0da2 488D85E0 		leaq	-1056(%rbp), %rax
 2155      FBFFFF
 2156 0da9 89D6     		movl	%edx, %esi
 2157 0dab 4889C7   		movq	%rax, %rdi
 2158 0dae E8000000 		call	_ZNSolsEi
 2158      00
 2159 0db3 BE000000 		movl	$.LC5, %esi
 2159      00
 2160 0db8 4889C7   		movq	%rax, %rdi
 2161 0dbb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 2161      00
 2162              		.loc 6 132 0 is_stmt 0 discriminator 1
 2163 0dc0 48899DE8 		movq	%rbx, -1816(%rbp)
 2163      F8FFFF
 2164 0dc7 F20F1085 		movsd	-1816(%rbp), %xmm0
 2164      E8F8FFFF 
 2165 0dcf 4889C7   		movq	%rax, %rdi
 2166 0dd2 E8000000 		call	_ZNSolsEd
 2166      00
 2167              		.loc 6 132 0 discriminator 2
 2168 0dd7 BE000000 		movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
 2168      00
 2169 0ddc 4889C7   		movq	%rax, %rdi
 2170 0ddf E8000000 		call	_ZNSolsEPFRSoS_E
 2170      00
 133:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         v_txt << i << " ,"  << v[i] << endl;
 2171              		.loc 6 133 0 is_stmt 1
 2172 0de4 488B8508 		movq	-1784(%rbp), %rax
 2172      F9FFFF
 2173 0deb 488B4018 		movq	24(%rax), %rax
 2174 0def 8B9514F9 		movl	-1772(%rbp), %edx
 2174      FFFF
 2175 0df5 4863D2   		movslq	%edx, %rdx
 2176 0df8 48C1E203 		salq	$3, %rdx
 2177 0dfc 4801D0   		addq	%rdx, %rax
 2178 0dff 488B18   		movq	(%rax), %rbx
 2179 0e02 8B9514F9 		movl	-1772(%rbp), %edx
 2179      FFFF
 2180 0e08 488D85E0 		leaq	-544(%rbp), %rax
 2180      FDFFFF
 2181 0e0f 89D6     		movl	%edx, %esi
 2182 0e11 4889C7   		movq	%rax, %rdi
 2183 0e14 E8000000 		call	_ZNSolsEi
 2183      00
 2184 0e19 BE000000 		movl	$.LC5, %esi
 2184      00
 2185 0e1e 4889C7   		movq	%rax, %rdi
 2186 0e21 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
GAS LISTING /tmp/ccbg3Dll.s 			page 79


 2186      00
 2187              		.loc 6 133 0 is_stmt 0 discriminator 1
 2188 0e26 48899DE8 		movq	%rbx, -1816(%rbp)
 2188      F8FFFF
 2189 0e2d F20F1085 		movsd	-1816(%rbp), %xmm0
 2189      E8F8FFFF 
 2190 0e35 4889C7   		movq	%rax, %rdi
 2191 0e38 E8000000 		call	_ZNSolsEd
 2191      00
 2192              		.loc 6 133 0 discriminator 2
 2193 0e3d BE000000 		movl	$_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_, %esi
 2193      00
 2194 0e42 4889C7   		movq	%rax, %rdi
 2195 0e45 E8000000 		call	_ZNSolsEPFRSoS_E
 2195      00
 129:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 2196              		.loc 6 129 0 is_stmt 1 discriminator 2
 2197 0e4a 838514F9 		addl	$1, -1772(%rbp)
 2197      FFFF01
 2198 0e51 E9ACFEFF 		jmp	.L117
 2198      FF
 2199              	.L116:
 2200              	.LBE11:
 134:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 135:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 136:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     }
 137:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 138:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     rho_txt.close();
 2201              		.loc 6 138 0
 2202 0e56 488D85E0 		leaq	-1568(%rbp), %rax
 2202      F9FFFF
 2203 0e5d 4889C7   		movq	%rax, %rdi
 2204 0e60 E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
 2204      00
 139:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     u_txt.close();
 2205              		.loc 6 139 0
 2206 0e65 488D85E0 		leaq	-1056(%rbp), %rax
 2206      FBFFFF
 2207 0e6c 4889C7   		movq	%rax, %rdi
 2208 0e6f E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
 2208      00
 140:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     v_txt.close();
 2209              		.loc 6 140 0
 2210 0e74 488D85E0 		leaq	-544(%rbp), %rax
 2210      FDFFFF
 2211 0e7b 4889C7   		movq	%rax, %rdi
 2212 0e7e E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
 2212      00
 2213              	.LEHE20:
 119:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     rho_file = output_location + "/rho.txt";
 2214              		.loc 6 119 0
 2215 0e83 488D8560 		leaq	-1696(%rbp), %rax
 2215      F9FFFF
 2216 0e8a 4889C7   		movq	%rax, %rdi
 2217 0e8d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2217      00
 2218 0e92 488D8540 		leaq	-1728(%rbp), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 80


 2218      F9FFFF
 2219 0e99 4889C7   		movq	%rax, %rdi
 2220 0e9c E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2220      00
 2221 0ea1 488D8520 		leaq	-1760(%rbp), %rax
 2221      F9FFFF
 2222 0ea8 4889C7   		movq	%rax, %rdi
 2223 0eab E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2223      00
 118:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::string rho_file, u_file, v_file;
 2224              		.loc 6 118 0
 2225 0eb0 488D85E0 		leaq	-544(%rbp), %rax
 2225      FDFFFF
 2226 0eb7 4889C7   		movq	%rax, %rdi
 2227 0eba E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
 2227      00
 2228 0ebf 488D85E0 		leaq	-1056(%rbp), %rax
 2228      FBFFFF
 2229 0ec6 4889C7   		movq	%rax, %rdi
 2230 0ec9 E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
 2230      00
 2231 0ece 488D85E0 		leaq	-1568(%rbp), %rax
 2231      F9FFFF
 2232 0ed5 4889C7   		movq	%rax, %rdi
 2233 0ed8 E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
 2233      00
 141:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 142:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 2234              		.loc 6 142 0
 2235 0edd 90       		nop
 2236 0ede 488B45E8 		movq	-24(%rbp), %rax
 2237 0ee2 64483304 		xorq	%fs:40, %rax
 2237      25280000 
 2237      00
 2238 0eeb 0F84B800 		je	.L124
 2238      0000
 2239 0ef1 E9AE0000 		jmp	.L131
 2239      00
 2240              	.L128:
 2241 0ef6 4889C3   		movq	%rax, %rbx
 120:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     u_file = output_location + "/u.txt";
 2242              		.loc 6 120 0
 2243 0ef9 488D8580 		leaq	-1664(%rbp), %rax
 2243      F9FFFF
 2244 0f00 4889C7   		movq	%rax, %rdi
 2245 0f03 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2245      00
 2246 0f08 EB2B     		jmp	.L119
 2247              	.L129:
 2248 0f0a 4889C3   		movq	%rax, %rbx
 121:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     v_file = output_location + "/v.txt";
 2249              		.loc 6 121 0
 2250 0f0d 488D85A0 		leaq	-1632(%rbp), %rax
 2250      F9FFFF
 2251 0f14 4889C7   		movq	%rax, %rdi
 2252 0f17 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2252      00
GAS LISTING /tmp/ccbg3Dll.s 			page 81


 2253 0f1c EB17     		jmp	.L119
 2254              	.L130:
 2255 0f1e 4889C3   		movq	%rax, %rbx
 122:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 2256              		.loc 6 122 0
 2257 0f21 488D85C0 		leaq	-1600(%rbp), %rax
 2257      F9FFFF
 2258 0f28 4889C7   		movq	%rax, %rdi
 2259 0f2b E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2259      00
 2260 0f30 EB03     		jmp	.L119
 2261              	.L127:
 2262 0f32 4889C3   		movq	%rax, %rbx
 2263              	.L119:
 119:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     rho_file = output_location + "/rho.txt";
 2264              		.loc 6 119 0
 2265 0f35 488D8560 		leaq	-1696(%rbp), %rax
 2265      F9FFFF
 2266 0f3c 4889C7   		movq	%rax, %rdi
 2267 0f3f E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2267      00
 2268 0f44 488D8540 		leaq	-1728(%rbp), %rax
 2268      F9FFFF
 2269 0f4b 4889C7   		movq	%rax, %rdi
 2270 0f4e E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2270      00
 2271 0f53 488D8520 		leaq	-1760(%rbp), %rax
 2271      F9FFFF
 2272 0f5a 4889C7   		movq	%rax, %rdi
 2273 0f5d E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 2273      00
 118:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::string rho_file, u_file, v_file;
 2274              		.loc 6 118 0
 2275 0f62 488D85E0 		leaq	-544(%rbp), %rax
 2275      FDFFFF
 2276 0f69 4889C7   		movq	%rax, %rdi
 2277 0f6c E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
 2277      00
 2278 0f71 EB03     		jmp	.L122
 2279              	.L126:
 2280 0f73 4889C3   		movq	%rax, %rbx
 2281              	.L122:
 118:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::string rho_file, u_file, v_file;
 2282              		.loc 6 118 0 is_stmt 0 discriminator 4
 2283 0f76 488D85E0 		leaq	-1056(%rbp), %rax
 2283      FBFFFF
 2284 0f7d 4889C7   		movq	%rax, %rdi
 2285 0f80 E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
 2285      00
 2286 0f85 EB03     		jmp	.L123
 2287              	.L125:
 2288 0f87 4889C3   		movq	%rax, %rbx
 2289              	.L123:
 118:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     std::string rho_file, u_file, v_file;
 2290              		.loc 6 118 0 discriminator 2
 2291 0f8a 488D85E0 		leaq	-1568(%rbp), %rax
 2291      F9FFFF
GAS LISTING /tmp/ccbg3Dll.s 			page 82


 2292 0f91 4889C7   		movq	%rax, %rdi
 2293 0f94 E8000000 		call	_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
 2293      00
 2294 0f99 4889D8   		movq	%rbx, %rax
 2295 0f9c 4889C7   		movq	%rax, %rdi
 2296              	.LEHB21:
 2297 0f9f E8000000 		call	_Unwind_Resume
 2297      00
 2298              	.LEHE21:
 2299              	.L131:
 2300              		.loc 6 142 0 is_stmt 1
 2301 0fa4 E8000000 		call	__stack_chk_fail
 2301      00
 2302              	.L124:
 2303 0fa9 4881C418 		addq	$1816, %rsp
 2303      070000
 2304 0fb0 5B       		popq	%rbx
 2305 0fb1 5D       		popq	%rbp
 2306              		.cfi_def_cfa 7, 8
 2307 0fb2 C3       		ret
 2308              		.cfi_endproc
 2309              	.LFE6839:
 2310              		.section	.gcc_except_table
 2311              	.LLSDA6839:
 2312 0042 FF       		.byte	0xff
 2313 0043 FF       		.byte	0xff
 2314 0044 01       		.byte	0x1
 2315 0045 3E       		.uleb128 .LLSDACSE6839-.LLSDACSB6839
 2316              	.LLSDACSB6839:
 2317 0046 41       		.uleb128 .LEHB11-.LFB6839
 2318 0047 05       		.uleb128 .LEHE11-.LEHB11
 2319 0048 00       		.uleb128 0
 2320 0049 00       		.uleb128 0
 2321 004a 50       		.uleb128 .LEHB12-.LFB6839
 2322 004b 05       		.uleb128 .LEHE12-.LEHB12
 2323 004c 9109     		.uleb128 .L125-.LFB6839
 2324 004e 00       		.uleb128 0
 2325 004f 5F       		.uleb128 .LEHB13-.LFB6839
 2326 0050 05       		.uleb128 .LEHE13-.LEHB13
 2327 0051 FD08     		.uleb128 .L126-.LFB6839
 2328 0053 00       		.uleb128 0
 2329 0054 AA01     		.uleb128 .LEHB14-.LFB6839
 2330 0056 05       		.uleb128 .LEHE14-.LEHB14
 2331 0057 BC08     		.uleb128 .L127-.LFB6839
 2332 0059 00       		.uleb128 0
 2333 005a C301     		.uleb128 .LEHB15-.LFB6839
 2334 005c 05       		.uleb128 .LEHE15-.LEHB15
 2335 005d 8008     		.uleb128 .L128-.LFB6839
 2336 005f 00       		.uleb128 0
 2337 0060 F001     		.uleb128 .LEHB16-.LFB6839
 2338 0062 05       		.uleb128 .LEHE16-.LEHB16
 2339 0063 BC08     		.uleb128 .L127-.LFB6839
 2340 0065 00       		.uleb128 0
 2341 0066 8902     		.uleb128 .LEHB17-.LFB6839
 2342 0068 05       		.uleb128 .LEHE17-.LEHB17
 2343 0069 9408     		.uleb128 .L129-.LFB6839
 2344 006b 00       		.uleb128 0
GAS LISTING /tmp/ccbg3Dll.s 			page 83


 2345 006c B602     		.uleb128 .LEHB18-.LFB6839
 2346 006e 05       		.uleb128 .LEHE18-.LEHB18
 2347 006f BC08     		.uleb128 .L127-.LFB6839
 2348 0071 00       		.uleb128 0
 2349 0072 CF02     		.uleb128 .LEHB19-.LFB6839
 2350 0074 05       		.uleb128 .LEHE19-.LEHB19
 2351 0075 A808     		.uleb128 .L130-.LFB6839
 2352 0077 00       		.uleb128 0
 2353 0078 8703     		.uleb128 .LEHB20-.LFB6839
 2354 007a 8604     		.uleb128 .LEHE20-.LEHB20
 2355 007c BC08     		.uleb128 .L127-.LFB6839
 2356 007e 00       		.uleb128 0
 2357 007f A909     		.uleb128 .LEHB21-.LFB6839
 2358 0081 05       		.uleb128 .LEHE21-.LEHB21
 2359 0082 00       		.uleb128 0
 2360 0083 00       		.uleb128 0
 2361              	.LLSDACSE6839:
 2362              		.text
 2364 0fb3 90       		.align 2
 2365              		.globl	_ZN8Solution5cloneERS_
 2367              	_ZN8Solution5cloneERS_:
 2368              	.LFB6840:
 143:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 144:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::clone( Solution &soln_a){
 2369              		.loc 6 144 0
 2370              		.cfi_startproc
 2371 0fb4 55       		pushq	%rbp
 2372              		.cfi_def_cfa_offset 16
 2373              		.cfi_offset 6, -16
 2374 0fb5 4889E5   		movq	%rsp, %rbp
 2375              		.cfi_def_cfa_register 6
 2376 0fb8 53       		pushq	%rbx
 2377 0fb9 4883EC28 		subq	$40, %rsp
 2378              		.cfi_offset 3, -24
 2379 0fbd 48897DD8 		movq	%rdi, -40(%rbp)
 2380 0fc1 488975D0 		movq	%rsi, -48(%rbp)
 2381              	.LBB12:
 145:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 146:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         for (int i =0; i< total_nodes; i++){
 2382              		.loc 6 146 0
 2383 0fc5 C745EC00 		movl	$0, -20(%rbp)
 2383      000000
 2384              	.L134:
 2385              		.loc 6 146 0 is_stmt 0 discriminator 3
 2386 0fcc 488B45D8 		movq	-40(%rbp), %rax
 2387 0fd0 8B4038   		movl	56(%rax), %eax
 2388 0fd3 3B45EC   		cmpl	-20(%rbp), %eax
 2389 0fd6 0F8EC500 		jle	.L133
 2389      0000
 147:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho[i] = soln_a.get_rho(i);
 2390              		.loc 6 147 0 is_stmt 1 discriminator 2
 2391 0fdc 488B45D8 		movq	-40(%rbp), %rax
 2392 0fe0 488B4008 		movq	8(%rax), %rax
 2393 0fe4 8B55EC   		movl	-20(%rbp), %edx
 2394 0fe7 4863D2   		movslq	%edx, %rdx
 2395 0fea 48C1E203 		salq	$3, %rdx
 2396 0fee 488D1C10 		leaq	(%rax,%rdx), %rbx
GAS LISTING /tmp/ccbg3Dll.s 			page 84


 2397 0ff2 8B55EC   		movl	-20(%rbp), %edx
 2398 0ff5 488B45D0 		movq	-48(%rbp), %rax
 2399 0ff9 89D6     		movl	%edx, %esi
 2400 0ffb 4889C7   		movq	%rax, %rdi
 2401 0ffe E8000000 		call	_ZN8Solution7get_rhoEi
 2401      00
 2402 1003 66480F7E 		movq	%xmm0, %rax
 2402      C0
 2403 1008 488903   		movq	%rax, (%rbx)
 148:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             u[i] = soln_a.get_u(i);
 2404              		.loc 6 148 0 discriminator 2
 2405 100b 488B45D8 		movq	-40(%rbp), %rax
 2406 100f 488B4010 		movq	16(%rax), %rax
 2407 1013 8B55EC   		movl	-20(%rbp), %edx
 2408 1016 4863D2   		movslq	%edx, %rdx
 2409 1019 48C1E203 		salq	$3, %rdx
 2410 101d 488D1C10 		leaq	(%rax,%rdx), %rbx
 2411 1021 8B55EC   		movl	-20(%rbp), %edx
 2412 1024 488B45D0 		movq	-48(%rbp), %rax
 2413 1028 89D6     		movl	%edx, %esi
 2414 102a 4889C7   		movq	%rax, %rdi
 2415 102d E8000000 		call	_ZN8Solution5get_uEi
 2415      00
 2416 1032 66480F7E 		movq	%xmm0, %rax
 2416      C0
 2417 1037 488903   		movq	%rax, (%rbx)
 149:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             v[i] = soln_a.get_v(i);
 2418              		.loc 6 149 0 discriminator 2
 2419 103a 488B45D8 		movq	-40(%rbp), %rax
 2420 103e 488B4018 		movq	24(%rax), %rax
 2421 1042 8B55EC   		movl	-20(%rbp), %edx
 2422 1045 4863D2   		movslq	%edx, %rdx
 2423 1048 48C1E203 		salq	$3, %rdx
 2424 104c 488D1C10 		leaq	(%rax,%rdx), %rbx
 2425 1050 8B55EC   		movl	-20(%rbp), %edx
 2426 1053 488B45D0 		movq	-48(%rbp), %rax
 2427 1057 89D6     		movl	%edx, %esi
 2428 1059 4889C7   		movq	%rax, %rdi
 2429 105c E8000000 		call	_ZN8Solution5get_vEi
 2429      00
 2430 1061 66480F7E 		movq	%xmm0, %rax
 2430      C0
 2431 1066 488903   		movq	%rax, (%rbx)
 150:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             w[i] = soln_a.get_w(i);
 2432              		.loc 6 150 0 discriminator 2
 2433 1069 488B45D8 		movq	-40(%rbp), %rax
 2434 106d 488B4020 		movq	32(%rax), %rax
 2435 1071 8B55EC   		movl	-20(%rbp), %edx
 2436 1074 4863D2   		movslq	%edx, %rdx
 2437 1077 48C1E203 		salq	$3, %rdx
 2438 107b 488D1C10 		leaq	(%rax,%rdx), %rbx
 2439 107f 8B55EC   		movl	-20(%rbp), %edx
 2440 1082 488B45D0 		movq	-48(%rbp), %rax
 2441 1086 89D6     		movl	%edx, %esi
 2442 1088 4889C7   		movq	%rax, %rdi
 2443 108b E8000000 		call	_ZN8Solution5get_wEi
 2443      00
GAS LISTING /tmp/ccbg3Dll.s 			page 85


 2444 1090 66480F7E 		movq	%xmm0, %rax
 2444      C0
 2445 1095 488903   		movq	%rax, (%rbx)
 146:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho[i] = soln_a.get_rho(i);
 2446              		.loc 6 146 0 discriminator 2
 2447 1098 8345EC01 		addl	$1, -20(%rbp)
 2448 109c E92BFFFF 		jmp	.L134
 2448      FF
 2449              	.L133:
 2450              	.LBE12:
 151:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 152:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         }
 153:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         average_rho = soln_a.get_average_rho();
 2451              		.loc 6 153 0
 2452 10a1 488B45D0 		movq	-48(%rbp), %rax
 2453 10a5 4889C7   		movq	%rax, %rdi
 2454 10a8 E8000000 		call	_ZN8Solution15get_average_rhoEv
 2454      00
 2455 10ad 66480F7E 		movq	%xmm0, %rdx
 2455      C2
 2456 10b2 488B45D8 		movq	-40(%rbp), %rax
 2457 10b6 48895040 		movq	%rdx, 64(%rax)
 154:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 2458              		.loc 6 154 0
 2459 10ba 90       		nop
 2460 10bb 4883C428 		addq	$40, %rsp
 2461 10bf 5B       		popq	%rbx
 2462 10c0 5D       		popq	%rbp
 2463              		.cfi_def_cfa 7, 8
 2464 10c1 C3       		ret
 2465              		.cfi_endproc
 2466              	.LFE6840:
 2468              		.section	.text._ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_,
 2469              		.weak	_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
 2471              	_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_:
 2472              	.LFB6842:
 2473              		.file 7 "/usr/include/c++/5/cmath"
   1:/usr/include/c++/5/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/include/c++/5/cmath **** 
   3:/usr/include/c++/5/cmath **** // Copyright (C) 1997-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/cmath **** //
   5:/usr/include/c++/5/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/cmath **** // any later version.
  10:/usr/include/c++/5/cmath **** 
  11:/usr/include/c++/5/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/cmath **** // GNU General Public License for more details.
  15:/usr/include/c++/5/cmath **** 
  16:/usr/include/c++/5/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/cmath **** 
  20:/usr/include/c++/5/cmath **** // You should have received a copy of the GNU General Public License and
GAS LISTING /tmp/ccbg3Dll.s 			page 86


  21:/usr/include/c++/5/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/cmath **** 
  25:/usr/include/c++/5/cmath **** /** @file include/cmath
  26:/usr/include/c++/5/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/include/c++/5/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/include/c++/5/cmath ****  *
  29:/usr/include/c++/5/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/include/c++/5/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/include/c++/5/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/include/c++/5/cmath ****  *  as macros in C).
  33:/usr/include/c++/5/cmath ****  */
  34:/usr/include/c++/5/cmath **** 
  35:/usr/include/c++/5/cmath **** //
  36:/usr/include/c++/5/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/include/c++/5/cmath **** //
  38:/usr/include/c++/5/cmath **** 
  39:/usr/include/c++/5/cmath **** #pragma GCC system_header
  40:/usr/include/c++/5/cmath **** 
  41:/usr/include/c++/5/cmath **** #include <bits/c++config.h>
  42:/usr/include/c++/5/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/include/c++/5/cmath **** #include <ext/type_traits.h>
  44:/usr/include/c++/5/cmath **** #include <math.h>
  45:/usr/include/c++/5/cmath **** 
  46:/usr/include/c++/5/cmath **** #ifndef _GLIBCXX_CMATH
  47:/usr/include/c++/5/cmath **** #define _GLIBCXX_CMATH 1
  48:/usr/include/c++/5/cmath **** 
  49:/usr/include/c++/5/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  50:/usr/include/c++/5/cmath **** #undef abs
  51:/usr/include/c++/5/cmath **** #undef div
  52:/usr/include/c++/5/cmath **** #undef acos
  53:/usr/include/c++/5/cmath **** #undef asin
  54:/usr/include/c++/5/cmath **** #undef atan
  55:/usr/include/c++/5/cmath **** #undef atan2
  56:/usr/include/c++/5/cmath **** #undef ceil
  57:/usr/include/c++/5/cmath **** #undef cos
  58:/usr/include/c++/5/cmath **** #undef cosh
  59:/usr/include/c++/5/cmath **** #undef exp
  60:/usr/include/c++/5/cmath **** #undef fabs
  61:/usr/include/c++/5/cmath **** #undef floor
  62:/usr/include/c++/5/cmath **** #undef fmod
  63:/usr/include/c++/5/cmath **** #undef frexp
  64:/usr/include/c++/5/cmath **** #undef ldexp
  65:/usr/include/c++/5/cmath **** #undef log
  66:/usr/include/c++/5/cmath **** #undef log10
  67:/usr/include/c++/5/cmath **** #undef modf
  68:/usr/include/c++/5/cmath **** #undef pow
  69:/usr/include/c++/5/cmath **** #undef sin
  70:/usr/include/c++/5/cmath **** #undef sinh
  71:/usr/include/c++/5/cmath **** #undef sqrt
  72:/usr/include/c++/5/cmath **** #undef tan
  73:/usr/include/c++/5/cmath **** #undef tanh
  74:/usr/include/c++/5/cmath **** 
  75:/usr/include/c++/5/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  76:/usr/include/c++/5/cmath **** {
  77:/usr/include/c++/5/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
GAS LISTING /tmp/ccbg3Dll.s 			page 87


  78:/usr/include/c++/5/cmath **** 
  79:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  80:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR double
  81:/usr/include/c++/5/cmath ****   abs(double __x)
  82:/usr/include/c++/5/cmath ****   { return __builtin_fabs(__x); }
  83:/usr/include/c++/5/cmath **** #endif
  84:/usr/include/c++/5/cmath **** 
  85:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/include/c++/5/cmath ****   abs(float __x)
  88:/usr/include/c++/5/cmath ****   { return __builtin_fabsf(__x); }
  89:/usr/include/c++/5/cmath **** 
  90:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/include/c++/5/cmath ****   abs(long double __x)
  92:/usr/include/c++/5/cmath ****   { return __builtin_fabsl(__x); }
  93:/usr/include/c++/5/cmath **** #endif
  94:/usr/include/c++/5/cmath **** 
  95:/usr/include/c++/5/cmath ****   template<typename _Tp>
  96:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
  98:/usr/include/c++/5/cmath ****                                     double>::__type
  99:/usr/include/c++/5/cmath ****     abs(_Tp __x)
 100:/usr/include/c++/5/cmath ****     { return __builtin_fabs(__x); }
 101:/usr/include/c++/5/cmath **** 
 102:/usr/include/c++/5/cmath ****   using ::acos;
 103:/usr/include/c++/5/cmath **** 
 104:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/include/c++/5/cmath ****   acos(float __x)
 107:/usr/include/c++/5/cmath ****   { return __builtin_acosf(__x); }
 108:/usr/include/c++/5/cmath **** 
 109:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/include/c++/5/cmath ****   acos(long double __x)
 111:/usr/include/c++/5/cmath ****   { return __builtin_acosl(__x); }
 112:/usr/include/c++/5/cmath **** #endif
 113:/usr/include/c++/5/cmath **** 
 114:/usr/include/c++/5/cmath ****   template<typename _Tp>
 115:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 117:/usr/include/c++/5/cmath ****                                     double>::__type
 118:/usr/include/c++/5/cmath ****     acos(_Tp __x)
 119:/usr/include/c++/5/cmath ****     { return __builtin_acos(__x); }
 120:/usr/include/c++/5/cmath **** 
 121:/usr/include/c++/5/cmath ****   using ::asin;
 122:/usr/include/c++/5/cmath **** 
 123:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/include/c++/5/cmath ****   asin(float __x)
 126:/usr/include/c++/5/cmath ****   { return __builtin_asinf(__x); }
 127:/usr/include/c++/5/cmath **** 
 128:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/include/c++/5/cmath ****   asin(long double __x)
 130:/usr/include/c++/5/cmath ****   { return __builtin_asinl(__x); }
 131:/usr/include/c++/5/cmath **** #endif
 132:/usr/include/c++/5/cmath **** 
 133:/usr/include/c++/5/cmath ****   template<typename _Tp>
 134:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
GAS LISTING /tmp/ccbg3Dll.s 			page 88


 135:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/include/c++/5/cmath ****                                     double>::__type
 137:/usr/include/c++/5/cmath ****     asin(_Tp __x)
 138:/usr/include/c++/5/cmath ****     { return __builtin_asin(__x); }
 139:/usr/include/c++/5/cmath **** 
 140:/usr/include/c++/5/cmath ****   using ::atan;
 141:/usr/include/c++/5/cmath **** 
 142:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/include/c++/5/cmath ****   atan(float __x)
 145:/usr/include/c++/5/cmath ****   { return __builtin_atanf(__x); }
 146:/usr/include/c++/5/cmath **** 
 147:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/include/c++/5/cmath ****   atan(long double __x)
 149:/usr/include/c++/5/cmath ****   { return __builtin_atanl(__x); }
 150:/usr/include/c++/5/cmath **** #endif
 151:/usr/include/c++/5/cmath **** 
 152:/usr/include/c++/5/cmath ****   template<typename _Tp>
 153:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 155:/usr/include/c++/5/cmath ****                                     double>::__type
 156:/usr/include/c++/5/cmath ****     atan(_Tp __x)
 157:/usr/include/c++/5/cmath ****     { return __builtin_atan(__x); }
 158:/usr/include/c++/5/cmath **** 
 159:/usr/include/c++/5/cmath ****   using ::atan2;
 160:/usr/include/c++/5/cmath **** 
 161:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 162:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 163:/usr/include/c++/5/cmath ****   atan2(float __y, float __x)
 164:/usr/include/c++/5/cmath ****   { return __builtin_atan2f(__y, __x); }
 165:/usr/include/c++/5/cmath **** 
 166:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 167:/usr/include/c++/5/cmath ****   atan2(long double __y, long double __x)
 168:/usr/include/c++/5/cmath ****   { return __builtin_atan2l(__y, __x); }
 169:/usr/include/c++/5/cmath **** #endif
 170:/usr/include/c++/5/cmath **** 
 171:/usr/include/c++/5/cmath ****   template<typename _Tp, typename _Up>
 172:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 173:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 174:/usr/include/c++/5/cmath ****     atan2(_Tp __y, _Up __x)
 175:/usr/include/c++/5/cmath ****     {
 176:/usr/include/c++/5/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 177:/usr/include/c++/5/cmath ****       return atan2(__type(__y), __type(__x));
 178:/usr/include/c++/5/cmath ****     }
 179:/usr/include/c++/5/cmath **** 
 180:/usr/include/c++/5/cmath ****   using ::ceil;
 181:/usr/include/c++/5/cmath **** 
 182:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/include/c++/5/cmath ****   ceil(float __x)
 185:/usr/include/c++/5/cmath ****   { return __builtin_ceilf(__x); }
 186:/usr/include/c++/5/cmath **** 
 187:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/include/c++/5/cmath ****   ceil(long double __x)
 189:/usr/include/c++/5/cmath ****   { return __builtin_ceill(__x); }
 190:/usr/include/c++/5/cmath **** #endif
 191:/usr/include/c++/5/cmath **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 89


 192:/usr/include/c++/5/cmath ****   template<typename _Tp>
 193:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 195:/usr/include/c++/5/cmath ****                                     double>::__type
 196:/usr/include/c++/5/cmath ****     ceil(_Tp __x)
 197:/usr/include/c++/5/cmath ****     { return __builtin_ceil(__x); }
 198:/usr/include/c++/5/cmath **** 
 199:/usr/include/c++/5/cmath ****   using ::cos;
 200:/usr/include/c++/5/cmath **** 
 201:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/include/c++/5/cmath ****   cos(float __x)
 204:/usr/include/c++/5/cmath ****   { return __builtin_cosf(__x); }
 205:/usr/include/c++/5/cmath **** 
 206:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/include/c++/5/cmath ****   cos(long double __x)
 208:/usr/include/c++/5/cmath ****   { return __builtin_cosl(__x); }
 209:/usr/include/c++/5/cmath **** #endif
 210:/usr/include/c++/5/cmath **** 
 211:/usr/include/c++/5/cmath ****   template<typename _Tp>
 212:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/include/c++/5/cmath ****                                     double>::__type
 215:/usr/include/c++/5/cmath ****     cos(_Tp __x)
 216:/usr/include/c++/5/cmath ****     { return __builtin_cos(__x); }
 217:/usr/include/c++/5/cmath **** 
 218:/usr/include/c++/5/cmath ****   using ::cosh;
 219:/usr/include/c++/5/cmath **** 
 220:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/include/c++/5/cmath ****   cosh(float __x)
 223:/usr/include/c++/5/cmath ****   { return __builtin_coshf(__x); }
 224:/usr/include/c++/5/cmath **** 
 225:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/include/c++/5/cmath ****   cosh(long double __x)
 227:/usr/include/c++/5/cmath ****   { return __builtin_coshl(__x); }
 228:/usr/include/c++/5/cmath **** #endif
 229:/usr/include/c++/5/cmath **** 
 230:/usr/include/c++/5/cmath ****   template<typename _Tp>
 231:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/include/c++/5/cmath ****                                     double>::__type
 234:/usr/include/c++/5/cmath ****     cosh(_Tp __x)
 235:/usr/include/c++/5/cmath ****     { return __builtin_cosh(__x); }
 236:/usr/include/c++/5/cmath **** 
 237:/usr/include/c++/5/cmath ****   using ::exp;
 238:/usr/include/c++/5/cmath **** 
 239:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/include/c++/5/cmath ****   exp(float __x)
 242:/usr/include/c++/5/cmath ****   { return __builtin_expf(__x); }
 243:/usr/include/c++/5/cmath **** 
 244:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/include/c++/5/cmath ****   exp(long double __x)
 246:/usr/include/c++/5/cmath ****   { return __builtin_expl(__x); }
 247:/usr/include/c++/5/cmath **** #endif
 248:/usr/include/c++/5/cmath **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 90


 249:/usr/include/c++/5/cmath ****   template<typename _Tp>
 250:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/include/c++/5/cmath ****                                     double>::__type
 253:/usr/include/c++/5/cmath ****     exp(_Tp __x)
 254:/usr/include/c++/5/cmath ****     { return __builtin_exp(__x); }
 255:/usr/include/c++/5/cmath **** 
 256:/usr/include/c++/5/cmath ****   using ::fabs;
 257:/usr/include/c++/5/cmath **** 
 258:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/include/c++/5/cmath ****   fabs(float __x)
 261:/usr/include/c++/5/cmath ****   { return __builtin_fabsf(__x); }
 262:/usr/include/c++/5/cmath **** 
 263:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/include/c++/5/cmath ****   fabs(long double __x)
 265:/usr/include/c++/5/cmath ****   { return __builtin_fabsl(__x); }
 266:/usr/include/c++/5/cmath **** #endif
 267:/usr/include/c++/5/cmath **** 
 268:/usr/include/c++/5/cmath ****   template<typename _Tp>
 269:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/include/c++/5/cmath ****                                     double>::__type
 272:/usr/include/c++/5/cmath ****     fabs(_Tp __x)
 273:/usr/include/c++/5/cmath ****     { return __builtin_fabs(__x); }
 274:/usr/include/c++/5/cmath **** 
 275:/usr/include/c++/5/cmath ****   using ::floor;
 276:/usr/include/c++/5/cmath **** 
 277:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/include/c++/5/cmath ****   floor(float __x)
 280:/usr/include/c++/5/cmath ****   { return __builtin_floorf(__x); }
 281:/usr/include/c++/5/cmath **** 
 282:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/include/c++/5/cmath ****   floor(long double __x)
 284:/usr/include/c++/5/cmath ****   { return __builtin_floorl(__x); }
 285:/usr/include/c++/5/cmath **** #endif
 286:/usr/include/c++/5/cmath **** 
 287:/usr/include/c++/5/cmath ****   template<typename _Tp>
 288:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 290:/usr/include/c++/5/cmath ****                                     double>::__type
 291:/usr/include/c++/5/cmath ****     floor(_Tp __x)
 292:/usr/include/c++/5/cmath ****     { return __builtin_floor(__x); }
 293:/usr/include/c++/5/cmath **** 
 294:/usr/include/c++/5/cmath ****   using ::fmod;
 295:/usr/include/c++/5/cmath **** 
 296:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 297:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 298:/usr/include/c++/5/cmath ****   fmod(float __x, float __y)
 299:/usr/include/c++/5/cmath ****   { return __builtin_fmodf(__x, __y); }
 300:/usr/include/c++/5/cmath **** 
 301:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 302:/usr/include/c++/5/cmath ****   fmod(long double __x, long double __y)
 303:/usr/include/c++/5/cmath ****   { return __builtin_fmodl(__x, __y); }
 304:/usr/include/c++/5/cmath **** #endif
 305:/usr/include/c++/5/cmath **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 91


 306:/usr/include/c++/5/cmath ****   template<typename _Tp, typename _Up>
 307:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 308:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 309:/usr/include/c++/5/cmath ****     fmod(_Tp __x, _Up __y)
 310:/usr/include/c++/5/cmath ****     {
 311:/usr/include/c++/5/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 312:/usr/include/c++/5/cmath ****       return fmod(__type(__x), __type(__y));
 313:/usr/include/c++/5/cmath ****     }
 314:/usr/include/c++/5/cmath **** 
 315:/usr/include/c++/5/cmath ****   using ::frexp;
 316:/usr/include/c++/5/cmath **** 
 317:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/include/c++/5/cmath ****   inline float
 319:/usr/include/c++/5/cmath ****   frexp(float __x, int* __exp)
 320:/usr/include/c++/5/cmath ****   { return __builtin_frexpf(__x, __exp); }
 321:/usr/include/c++/5/cmath **** 
 322:/usr/include/c++/5/cmath ****   inline long double
 323:/usr/include/c++/5/cmath ****   frexp(long double __x, int* __exp)
 324:/usr/include/c++/5/cmath ****   { return __builtin_frexpl(__x, __exp); }
 325:/usr/include/c++/5/cmath **** #endif
 326:/usr/include/c++/5/cmath **** 
 327:/usr/include/c++/5/cmath ****   template<typename _Tp>
 328:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/include/c++/5/cmath ****                                     double>::__type
 331:/usr/include/c++/5/cmath ****     frexp(_Tp __x, int* __exp)
 332:/usr/include/c++/5/cmath ****     { return __builtin_frexp(__x, __exp); }
 333:/usr/include/c++/5/cmath **** 
 334:/usr/include/c++/5/cmath ****   using ::ldexp;
 335:/usr/include/c++/5/cmath **** 
 336:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/include/c++/5/cmath ****   ldexp(float __x, int __exp)
 339:/usr/include/c++/5/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 340:/usr/include/c++/5/cmath **** 
 341:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/include/c++/5/cmath ****   ldexp(long double __x, int __exp)
 343:/usr/include/c++/5/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 344:/usr/include/c++/5/cmath **** #endif
 345:/usr/include/c++/5/cmath **** 
 346:/usr/include/c++/5/cmath ****   template<typename _Tp>
 347:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/include/c++/5/cmath ****                                     double>::__type
 350:/usr/include/c++/5/cmath ****     ldexp(_Tp __x, int __exp)
 351:/usr/include/c++/5/cmath ****     { return __builtin_ldexp(__x, __exp); }
 352:/usr/include/c++/5/cmath **** 
 353:/usr/include/c++/5/cmath ****   using ::log;
 354:/usr/include/c++/5/cmath **** 
 355:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/include/c++/5/cmath ****   log(float __x)
 358:/usr/include/c++/5/cmath ****   { return __builtin_logf(__x); }
 359:/usr/include/c++/5/cmath **** 
 360:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/include/c++/5/cmath ****   log(long double __x)
 362:/usr/include/c++/5/cmath ****   { return __builtin_logl(__x); }
GAS LISTING /tmp/ccbg3Dll.s 			page 92


 363:/usr/include/c++/5/cmath **** #endif
 364:/usr/include/c++/5/cmath **** 
 365:/usr/include/c++/5/cmath ****   template<typename _Tp>
 366:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 368:/usr/include/c++/5/cmath ****                                     double>::__type
 369:/usr/include/c++/5/cmath ****     log(_Tp __x)
 370:/usr/include/c++/5/cmath ****     { return __builtin_log(__x); }
 371:/usr/include/c++/5/cmath **** 
 372:/usr/include/c++/5/cmath ****   using ::log10;
 373:/usr/include/c++/5/cmath **** 
 374:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 376:/usr/include/c++/5/cmath ****   log10(float __x)
 377:/usr/include/c++/5/cmath ****   { return __builtin_log10f(__x); }
 378:/usr/include/c++/5/cmath **** 
 379:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 380:/usr/include/c++/5/cmath ****   log10(long double __x)
 381:/usr/include/c++/5/cmath ****   { return __builtin_log10l(__x); }
 382:/usr/include/c++/5/cmath **** #endif
 383:/usr/include/c++/5/cmath **** 
 384:/usr/include/c++/5/cmath ****   template<typename _Tp>
 385:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 386:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 387:/usr/include/c++/5/cmath ****                                     double>::__type
 388:/usr/include/c++/5/cmath ****     log10(_Tp __x)
 389:/usr/include/c++/5/cmath ****     { return __builtin_log10(__x); }
 390:/usr/include/c++/5/cmath **** 
 391:/usr/include/c++/5/cmath ****   using ::modf;
 392:/usr/include/c++/5/cmath **** 
 393:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 394:/usr/include/c++/5/cmath ****   inline float
 395:/usr/include/c++/5/cmath ****   modf(float __x, float* __iptr)
 396:/usr/include/c++/5/cmath ****   { return __builtin_modff(__x, __iptr); }
 397:/usr/include/c++/5/cmath **** 
 398:/usr/include/c++/5/cmath ****   inline long double
 399:/usr/include/c++/5/cmath ****   modf(long double __x, long double* __iptr)
 400:/usr/include/c++/5/cmath ****   { return __builtin_modfl(__x, __iptr); }
 401:/usr/include/c++/5/cmath **** #endif
 402:/usr/include/c++/5/cmath **** 
 403:/usr/include/c++/5/cmath ****   using ::pow;
 404:/usr/include/c++/5/cmath **** 
 405:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 406:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 407:/usr/include/c++/5/cmath ****   pow(float __x, float __y)
 408:/usr/include/c++/5/cmath ****   { return __builtin_powf(__x, __y); }
 409:/usr/include/c++/5/cmath **** 
 410:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 411:/usr/include/c++/5/cmath ****   pow(long double __x, long double __y)
 412:/usr/include/c++/5/cmath ****   { return __builtin_powl(__x, __y); }
 413:/usr/include/c++/5/cmath **** 
 414:/usr/include/c++/5/cmath **** #if __cplusplus < 201103L
 415:/usr/include/c++/5/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 416:/usr/include/c++/5/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 417:/usr/include/c++/5/cmath ****   inline double
 418:/usr/include/c++/5/cmath ****   pow(double __x, int __i)
 419:/usr/include/c++/5/cmath ****   { return __builtin_powi(__x, __i); }
GAS LISTING /tmp/ccbg3Dll.s 			page 93


 420:/usr/include/c++/5/cmath **** 
 421:/usr/include/c++/5/cmath ****   inline float
 422:/usr/include/c++/5/cmath ****   pow(float __x, int __n)
 423:/usr/include/c++/5/cmath ****   { return __builtin_powif(__x, __n); }
 424:/usr/include/c++/5/cmath **** 
 425:/usr/include/c++/5/cmath ****   inline long double
 426:/usr/include/c++/5/cmath ****   pow(long double __x, int __n)
 427:/usr/include/c++/5/cmath ****   { return __builtin_powil(__x, __n); }
 428:/usr/include/c++/5/cmath **** #endif
 429:/usr/include/c++/5/cmath **** #endif
 430:/usr/include/c++/5/cmath **** 
 431:/usr/include/c++/5/cmath ****   template<typename _Tp, typename _Up>
 432:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 433:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 434:/usr/include/c++/5/cmath ****     pow(_Tp __x, _Up __y)
 435:/usr/include/c++/5/cmath ****     {
 436:/usr/include/c++/5/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 437:/usr/include/c++/5/cmath ****       return pow(__type(__x), __type(__y));
 438:/usr/include/c++/5/cmath ****     }
 439:/usr/include/c++/5/cmath **** 
 440:/usr/include/c++/5/cmath ****   using ::sin;
 441:/usr/include/c++/5/cmath **** 
 442:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/include/c++/5/cmath ****   sin(float __x)
 445:/usr/include/c++/5/cmath ****   { return __builtin_sinf(__x); }
 446:/usr/include/c++/5/cmath **** 
 447:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/include/c++/5/cmath ****   sin(long double __x)
 449:/usr/include/c++/5/cmath ****   { return __builtin_sinl(__x); }
 450:/usr/include/c++/5/cmath **** #endif
 451:/usr/include/c++/5/cmath **** 
 452:/usr/include/c++/5/cmath ****   template<typename _Tp>
 453:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/include/c++/5/cmath ****                                     double>::__type
 456:/usr/include/c++/5/cmath ****     sin(_Tp __x)
 457:/usr/include/c++/5/cmath ****     { return __builtin_sin(__x); }
 458:/usr/include/c++/5/cmath **** 
 459:/usr/include/c++/5/cmath ****   using ::sinh;
 460:/usr/include/c++/5/cmath **** 
 461:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/include/c++/5/cmath ****   sinh(float __x)
 464:/usr/include/c++/5/cmath ****   { return __builtin_sinhf(__x); }
 465:/usr/include/c++/5/cmath **** 
 466:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/include/c++/5/cmath ****   sinh(long double __x)
 468:/usr/include/c++/5/cmath ****   { return __builtin_sinhl(__x); }
 469:/usr/include/c++/5/cmath **** #endif
 470:/usr/include/c++/5/cmath **** 
 471:/usr/include/c++/5/cmath ****   template<typename _Tp>
 472:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/include/c++/5/cmath ****                                     double>::__type
 475:/usr/include/c++/5/cmath ****     sinh(_Tp __x)
 476:/usr/include/c++/5/cmath ****     { return __builtin_sinh(__x); }
GAS LISTING /tmp/ccbg3Dll.s 			page 94


 477:/usr/include/c++/5/cmath **** 
 478:/usr/include/c++/5/cmath ****   using ::sqrt;
 479:/usr/include/c++/5/cmath **** 
 480:/usr/include/c++/5/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/include/c++/5/cmath ****   sqrt(float __x)
 483:/usr/include/c++/5/cmath ****   { return __builtin_sqrtf(__x); }
 484:/usr/include/c++/5/cmath **** 
 485:/usr/include/c++/5/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/include/c++/5/cmath ****   sqrt(long double __x)
 487:/usr/include/c++/5/cmath ****   { return __builtin_sqrtl(__x); }
 488:/usr/include/c++/5/cmath **** #endif
 489:/usr/include/c++/5/cmath **** 
 490:/usr/include/c++/5/cmath ****   template<typename _Tp>
 491:/usr/include/c++/5/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/include/c++/5/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/include/c++/5/cmath ****                                     double>::__type
 494:/usr/include/c++/5/cmath ****     sqrt(_Tp __x)
 2474              		.loc 7 494 0
 2475              		.cfi_startproc
 2476 0000 55       		pushq	%rbp
 2477              		.cfi_def_cfa_offset 16
 2478              		.cfi_offset 6, -16
 2479 0001 4889E5   		movq	%rsp, %rbp
 2480              		.cfi_def_cfa_register 6
 2481 0004 4883EC10 		subq	$16, %rsp
 2482 0008 897DFC   		movl	%edi, -4(%rbp)
 495:/usr/include/c++/5/cmath ****     { return __builtin_sqrt(__x); }
 2483              		.loc 7 495 0
 2484 000b 660FEFC9 		pxor	%xmm1, %xmm1
 2485 000f F20F2A4D 		cvtsi2sd	-4(%rbp), %xmm1
 2485      FC
 2486 0014 F20F51C1 		sqrtsd	%xmm1, %xmm0
 2487 0018 660F2EC0 		ucomisd	%xmm0, %xmm0
 2488 001c 7A06     		jp	.L137
 2489 001e 660F2EC0 		ucomisd	%xmm0, %xmm0
 2490 0022 7409     		je	.L136
 2491              	.L137:
 2492 0024 660F28C1 		movapd	%xmm1, %xmm0
 2493 0028 E8000000 		call	sqrt
 2493      00
 2494              	.L136:
 2495 002d C9       		leave
 2496              		.cfi_def_cfa 7, 8
 2497 002e C3       		ret
 2498              		.cfi_endproc
 2499              	.LFE6842:
 2501              		.text
 2502              		.align 2
 2503              		.globl	_ZN8Solution12post_processEdR4MeshR16global_variablesR18initial_conditions
 2505              	_ZN8Solution12post_processEdR4MeshR16global_variablesR18initial_conditions:
 2506              	.LFB6841:
 155:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 156:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 157:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::post_process(double gamma, Mesh &mesh, global_variables &globals,
 158:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                             initial_conditions &initials){
 2507              		.loc 6 158 0
GAS LISTING /tmp/ccbg3Dll.s 			page 95


 2508              		.cfi_startproc
 2509 10c2 55       		pushq	%rbp
 2510              		.cfi_def_cfa_offset 16
 2511              		.cfi_offset 6, -16
 2512 10c3 4889E5   		movq	%rsp, %rbp
 2513              		.cfi_def_cfa_register 6
 2514 10c6 53       		pushq	%rbx
 2515 10c7 4883EC58 		subq	$88, %rsp
 2516              		.cfi_offset 3, -24
 2517 10cb 48897DD8 		movq	%rdi, -40(%rbp)
 2518 10cf F20F1145 		movsd	%xmm0, -48(%rbp)
 2518      D0
 2519 10d4 488975C8 		movq	%rsi, -56(%rbp)
 2520 10d8 488955C0 		movq	%rdx, -64(%rbp)
 2521 10dc 48894DB8 		movq	%rcx, -72(%rbp)
 2522              	.LBB13:
 159:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 160:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     if( globals.testcase == 1){
 2523              		.loc 6 160 0
 2524 10e0 488B45C0 		movq	-64(%rbp), %rax
 2525 10e4 8B808800 		movl	136(%rax), %eax
 2525      0000
 2526 10ea 83F801   		cmpl	$1, %eax
 2527 10ed 0F852401 		jne	.L140
 2527      0000
 2528              	.LBB14:
 2529              	.LBB15:
 161:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 162:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 163:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         for (int i =0; i< total_nodes; i++){
 2530              		.loc 6 163 0
 2531 10f3 C745E800 		movl	$0, -24(%rbp)
 2531      000000
 2532              	.L142:
 2533              		.loc 6 163 0 is_stmt 0 discriminator 3
 2534 10fa 488B45D8 		movq	-40(%rbp), %rax
 2535 10fe 8B4038   		movl	56(%rax), %eax
 2536 1101 3B45E8   		cmpl	-24(%rbp), %eax
 2537 1104 0F8E9602 		jle	.L146
 2537      0000
 164:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho[i] = rho[i] /gamma;
 2538              		.loc 6 164 0 is_stmt 1 discriminator 2
 2539 110a 488B45D8 		movq	-40(%rbp), %rax
 2540 110e 488B4008 		movq	8(%rax), %rax
 2541 1112 8B55E8   		movl	-24(%rbp), %edx
 2542 1115 4863D2   		movslq	%edx, %rdx
 2543 1118 48C1E203 		salq	$3, %rdx
 2544 111c 4801C2   		addq	%rax, %rdx
 2545 111f 488B45D8 		movq	-40(%rbp), %rax
 2546 1123 488B4008 		movq	8(%rax), %rax
 2547 1127 8B4DE8   		movl	-24(%rbp), %ecx
 2548 112a 4863C9   		movslq	%ecx, %rcx
 2549 112d 48C1E103 		salq	$3, %rcx
 2550 1131 4801C8   		addq	%rcx, %rax
 2551 1134 F20F1000 		movsd	(%rax), %xmm0
 2552 1138 F20F5E45 		divsd	-48(%rbp), %xmm0
 2552      D0
GAS LISTING /tmp/ccbg3Dll.s 			page 96


 2553 113d F20F1102 		movsd	%xmm0, (%rdx)
 165:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             u_exact[i] = mesh.get_centroid_y(i) *globals.mach_number /sqrt(3) / mesh.get_Y() ;
 2554              		.loc 6 165 0 discriminator 2
 2555 1141 488B45D8 		movq	-40(%rbp), %rax
 2556 1145 488B4030 		movq	48(%rax), %rax
 2557 1149 8B55E8   		movl	-24(%rbp), %edx
 2558 114c 4863D2   		movslq	%edx, %rdx
 2559 114f 48C1E203 		salq	$3, %rdx
 2560 1153 488D1C10 		leaq	(%rax,%rdx), %rbx
 2561 1157 8B55E8   		movl	-24(%rbp), %edx
 2562 115a 488B45C8 		movq	-56(%rbp), %rax
 2563 115e 89D6     		movl	%edx, %esi
 2564 1160 4889C7   		movq	%rax, %rdi
 2565 1163 E8000000 		call	_ZN4Mesh14get_centroid_yEi
 2565      00
 2566 1168 660F28C8 		movapd	%xmm0, %xmm1
 2567 116c 488B45C0 		movq	-64(%rbp), %rax
 2568 1170 F20F1040 		movsd	80(%rax), %xmm0
 2568      50
 2569 1175 F20F59C8 		mulsd	%xmm0, %xmm1
 2570 1179 F20F114D 		movsd	%xmm1, -80(%rbp)
 2570      B0
 2571 117e BF030000 		movl	$3, %edi
 2571      00
 2572 1183 E8000000 		call	_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
 2572      00
 2573 1188 F20F104D 		movsd	-80(%rbp), %xmm1
 2573      B0
 2574 118d F20F5EC8 		divsd	%xmm0, %xmm1
 2575 1191 F20F114D 		movsd	%xmm1, -80(%rbp)
 2575      B0
 2576 1196 488B45C8 		movq	-56(%rbp), %rax
 2577 119a 4889C7   		movq	%rax, %rdi
 2578 119d E8000000 		call	_ZN4Mesh5get_YEv
 2578      00
 2579 11a2 F20F104D 		movsd	-80(%rbp), %xmm1
 2579      B0
 2580 11a7 F20F5EC8 		divsd	%xmm0, %xmm1
 2581 11ab 660F28C1 		movapd	%xmm1, %xmm0
 2582 11af F20F1103 		movsd	%xmm0, (%rbx)
 166:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             error[i] = (u[i] - u_exact[i]) *100;
 2583              		.loc 6 166 0 discriminator 2
 2584 11b3 488B45D8 		movq	-40(%rbp), %rax
 2585 11b7 488B4028 		movq	40(%rax), %rax
 2586 11bb 8B55E8   		movl	-24(%rbp), %edx
 2587 11be 4863D2   		movslq	%edx, %rdx
 2588 11c1 48C1E203 		salq	$3, %rdx
 2589 11c5 4801C2   		addq	%rax, %rdx
 2590 11c8 488B45D8 		movq	-40(%rbp), %rax
 2591 11cc 488B4010 		movq	16(%rax), %rax
 2592 11d0 8B4DE8   		movl	-24(%rbp), %ecx
 2593 11d3 4863C9   		movslq	%ecx, %rcx
 2594 11d6 48C1E103 		salq	$3, %rcx
 2595 11da 4801C8   		addq	%rcx, %rax
 2596 11dd F20F1000 		movsd	(%rax), %xmm0
 2597 11e1 488B45D8 		movq	-40(%rbp), %rax
 2598 11e5 488B4030 		movq	48(%rax), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 97


 2599 11e9 8B4DE8   		movl	-24(%rbp), %ecx
 2600 11ec 4863C9   		movslq	%ecx, %rcx
 2601 11ef 48C1E103 		salq	$3, %rcx
 2602 11f3 4801C8   		addq	%rcx, %rax
 2603 11f6 F20F1008 		movsd	(%rax), %xmm1
 2604 11fa F20F5CC1 		subsd	%xmm1, %xmm0
 2605 11fe F20F100D 		movsd	.LC6(%rip), %xmm1
 2605      00000000 
 2606 1206 F20F59C1 		mulsd	%xmm1, %xmm0
 2607 120a F20F1102 		movsd	%xmm0, (%rdx)
 163:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho[i] = rho[i] /gamma;
 2608              		.loc 6 163 0 discriminator 2
 2609 120e 8345E801 		addl	$1, -24(%rbp)
 2610 1212 E9E3FEFF 		jmp	.L142
 2610      FF
 2611              	.L140:
 2612              	.LBE15:
 2613              	.LBE14:
 2614              	.LBB16:
 2615              	.LBB17:
 167:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****           }
 168:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     }else if( globals.testcase == 2){
 2616              		.loc 6 168 0
 2617 1217 488B45C0 		movq	-64(%rbp), %rax
 2618 121b 8B808800 		movl	136(%rax), %eax
 2618      0000
 2619 1221 83F802   		cmpl	$2, %eax
 2620 1224 0F857601 		jne	.L146
 2620      0000
 2621              	.LBB18:
 2622              	.LBB19:
 169:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****          for (int i =0; i< total_nodes; i++){
 2623              		.loc 6 169 0
 2624 122a C745EC00 		movl	$0, -20(%rbp)
 2624      000000
 2625              	.L145:
 2626              		.loc 6 169 0 is_stmt 0 discriminator 3
 2627 1231 488B45D8 		movq	-40(%rbp), %rax
 2628 1235 8B4038   		movl	56(%rax), %eax
 2629 1238 3B45EC   		cmpl	-20(%rbp), %eax
 2630 123b 0F8E5F01 		jle	.L146
 2630      0000
 170:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho[i] = rho[i] /gamma;
 2631              		.loc 6 170 0 is_stmt 1 discriminator 2
 2632 1241 488B45D8 		movq	-40(%rbp), %rax
 2633 1245 488B4008 		movq	8(%rax), %rax
 2634 1249 8B55EC   		movl	-20(%rbp), %edx
 2635 124c 4863D2   		movslq	%edx, %rdx
 2636 124f 48C1E203 		salq	$3, %rdx
 2637 1253 4801C2   		addq	%rax, %rdx
 2638 1256 488B45D8 		movq	-40(%rbp), %rax
 2639 125a 488B4008 		movq	8(%rax), %rax
 2640 125e 8B4DEC   		movl	-20(%rbp), %ecx
 2641 1261 4863C9   		movslq	%ecx, %rcx
 2642 1264 48C1E103 		salq	$3, %rcx
 2643 1268 4801C8   		addq	%rcx, %rax
 2644 126b F20F1000 		movsd	(%rax), %xmm0
GAS LISTING /tmp/ccbg3Dll.s 			page 98


 2645 126f F20F5E45 		divsd	-48(%rbp), %xmm0
 2645      D0
 2646 1274 F20F1102 		movsd	%xmm0, (%rdx)
 171:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             u_exact[i] = -initials.rho_gradient.x /2* mesh.get_centroid_y(i)*
 2647              		.loc 6 171 0 discriminator 2
 2648 1278 488B45D8 		movq	-40(%rbp), %rax
 2649 127c 488B4030 		movq	48(%rax), %rax
 2650 1280 8B55EC   		movl	-20(%rbp), %edx
 2651 1283 4863D2   		movslq	%edx, %rdx
 2652 1286 48C1E203 		salq	$3, %rdx
 2653 128a 488D1C10 		leaq	(%rax,%rdx), %rbx
 2654 128e 488B45B8 		movq	-72(%rbp), %rax
 2655 1292 F20F1048 		movsd	16(%rax), %xmm1
 2655      10
 2656 1297 F20F1005 		movsd	.LC7(%rip), %xmm0
 2656      00000000 
 2657 129f 660F57C1 		xorpd	%xmm1, %xmm0
 2658 12a3 F20F100D 		movsd	.LC8(%rip), %xmm1
 2658      00000000 
 2659 12ab F20F5EC1 		divsd	%xmm1, %xmm0
 2660 12af F20F1145 		movsd	%xmm0, -80(%rbp)
 2660      B0
 2661 12b4 8B55EC   		movl	-20(%rbp), %edx
 2662 12b7 488B45C8 		movq	-56(%rbp), %rax
 2663 12bb 89D6     		movl	%edx, %esi
 2664 12bd 4889C7   		movq	%rax, %rdi
 2665 12c0 E8000000 		call	_ZN4Mesh14get_centroid_yEi
 2665      00
 2666 12c5 660F28E0 		movapd	%xmm0, %xmm4
 2667 12c9 F20F5965 		mulsd	-80(%rbp), %xmm4
 2667      B0
 2668 12ce F20F1165 		movsd	%xmm4, -80(%rbp)
 2668      B0
 172:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 (mesh.get_Y()- mesh.get_centroid_y(i)) / ( (globals.tau - 0.5) /3) /3 ;
 2669              		.loc 6 172 0 discriminator 2
 2670 12d3 488B45C8 		movq	-56(%rbp), %rax
 2671 12d7 4889C7   		movq	%rax, %rdi
 2672 12da E8000000 		call	_ZN4Mesh5get_YEv
 2672      00
 2673 12df F20F1145 		movsd	%xmm0, -88(%rbp)
 2673      A8
 2674 12e4 8B55EC   		movl	-20(%rbp), %edx
 2675 12e7 488B45C8 		movq	-56(%rbp), %rax
 2676 12eb 89D6     		movl	%edx, %esi
 2677 12ed 4889C7   		movq	%rax, %rdi
 2678 12f0 E8000000 		call	_ZN4Mesh14get_centroid_yEi
 2678      00
 2679 12f5 F20F106D 		movsd	-88(%rbp), %xmm5
 2679      A8
 2680 12fa F20F5CE8 		subsd	%xmm0, %xmm5
 2681 12fe 660F28C5 		movapd	%xmm5, %xmm0
 171:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             u_exact[i] = -initials.rho_gradient.x /2* mesh.get_centroid_y(i)*
 2682              		.loc 6 171 0 discriminator 2
 2683 1302 F20F5945 		mulsd	-80(%rbp), %xmm0
 2683      B0
 2684              		.loc 6 172 0 discriminator 2
 2685 1307 488B45C0 		movq	-64(%rbp), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 99


 2686 130b F20F1048 		movsd	96(%rax), %xmm1
 2686      60
 2687 1310 F20F1015 		movsd	.LC9(%rip), %xmm2
 2687      00000000 
 2688 1318 F20F5CCA 		subsd	%xmm2, %xmm1
 2689 131c F20F1015 		movsd	.LC10(%rip), %xmm2
 2689      00000000 
 2690 1324 F20F5ECA 		divsd	%xmm2, %xmm1
 2691 1328 F20F5EC1 		divsd	%xmm1, %xmm0
 2692 132c F20F100D 		movsd	.LC10(%rip), %xmm1
 2692      00000000 
 2693 1334 F20F5EC1 		divsd	%xmm1, %xmm0
 2694 1338 F20F1103 		movsd	%xmm0, (%rbx)
 173:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****               //second divide by 3 for rho to P conversion
 174:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****              error[i] = (u[i] - u_exact[i])  *100;
 2695              		.loc 6 174 0 discriminator 2
 2696 133c 488B45D8 		movq	-40(%rbp), %rax
 2697 1340 488B4028 		movq	40(%rax), %rax
 2698 1344 8B55EC   		movl	-20(%rbp), %edx
 2699 1347 4863D2   		movslq	%edx, %rdx
 2700 134a 48C1E203 		salq	$3, %rdx
 2701 134e 4801C2   		addq	%rax, %rdx
 2702 1351 488B45D8 		movq	-40(%rbp), %rax
 2703 1355 488B4010 		movq	16(%rax), %rax
 2704 1359 8B4DEC   		movl	-20(%rbp), %ecx
 2705 135c 4863C9   		movslq	%ecx, %rcx
 2706 135f 48C1E103 		salq	$3, %rcx
 2707 1363 4801C8   		addq	%rcx, %rax
 2708 1366 F20F1000 		movsd	(%rax), %xmm0
 2709 136a 488B45D8 		movq	-40(%rbp), %rax
 2710 136e 488B4030 		movq	48(%rax), %rax
 2711 1372 8B4DEC   		movl	-20(%rbp), %ecx
 2712 1375 4863C9   		movslq	%ecx, %rcx
 2713 1378 48C1E103 		salq	$3, %rcx
 2714 137c 4801C8   		addq	%rcx, %rax
 2715 137f F20F1008 		movsd	(%rax), %xmm1
 2716 1383 F20F5CC1 		subsd	%xmm1, %xmm0
 2717 1387 F20F100D 		movsd	.LC6(%rip), %xmm1
 2717      00000000 
 2718 138f F20F59C1 		mulsd	%xmm1, %xmm0
 2719 1393 F20F1102 		movsd	%xmm0, (%rdx)
 169:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho[i] = rho[i] /gamma;
 2720              		.loc 6 169 0 discriminator 2
 2721 1397 8345EC01 		addl	$1, -20(%rbp)
 2722 139b E991FEFF 		jmp	.L145
 2722      FF
 2723              	.L146:
 2724              	.LBE19:
 2725              	.LBE18:
 2726              	.LBE17:
 2727              	.LBE16:
 2728              	.LBE13:
 175:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****           }
 176:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 177:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     }
 178:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 179:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
GAS LISTING /tmp/ccbg3Dll.s 			page 100


 2729              		.loc 6 179 0
 2730 13a0 90       		nop
 2731 13a1 4883C458 		addq	$88, %rsp
 2732 13a5 5B       		popq	%rbx
 2733 13a6 5D       		popq	%rbp
 2734              		.cfi_def_cfa 7, 8
 2735 13a7 C3       		ret
 2736              		.cfi_endproc
 2737              	.LFE6841:
 2739              		.section	.text._ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_
 2740              		.weak	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__value
 2742              	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__ty
 2743              	.LFB6844:
 434:/usr/include/c++/5/cmath ****     {
 2744              		.loc 7 434 0
 2745              		.cfi_startproc
 2746 0000 55       		pushq	%rbp
 2747              		.cfi_def_cfa_offset 16
 2748              		.cfi_offset 6, -16
 2749 0001 4889E5   		movq	%rsp, %rbp
 2750              		.cfi_def_cfa_register 6
 2751 0004 4883EC20 		subq	$32, %rsp
 2752 0008 F20F1145 		movsd	%xmm0, -8(%rbp)
 2752      F8
 2753 000d 897DF4   		movl	%edi, -12(%rbp)
 437:/usr/include/c++/5/cmath ****     }
 2754              		.loc 7 437 0
 2755 0010 660FEFC0 		pxor	%xmm0, %xmm0
 2756 0014 F20F2A45 		cvtsi2sd	-12(%rbp), %xmm0
 2756      F4
 2757 0019 488B45F8 		movq	-8(%rbp), %rax
 2758 001d 660F28C8 		movapd	%xmm0, %xmm1
 2759 0021 488945E8 		movq	%rax, -24(%rbp)
 2760 0025 F20F1045 		movsd	-24(%rbp), %xmm0
 2760      E8
 2761 002a E8000000 		call	pow
 2761      00
 2762 002f 66480F7E 		movq	%xmm0, %rax
 2762      C0
 2763 0034 488945E8 		movq	%rax, -24(%rbp)
 2764 0038 F20F1045 		movsd	-24(%rbp), %xmm0
 2764      E8
 438:/usr/include/c++/5/cmath **** 
 2765              		.loc 7 438 0
 2766 003d C9       		leave
 2767              		.cfi_def_cfa 7, 8
 2768 003e C3       		ret
 2769              		.cfi_endproc
 2770              	.LFE6844:
 2772              		.text
 2773              		.align 2
 2774              		.globl	_ZN8Solution10update_bcsER19Boundary_ConditionsR4MeshR15domain_geometry
 2776              	_ZN8Solution10update_bcsER19Boundary_ConditionsR4MeshR15domain_geometry:
 2777              	.LFB6843:
 180:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 181:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 182:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** // update bc nodes to allow for changes in solution
GAS LISTING /tmp/ccbg3Dll.s 			page 101


 183:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::update_bcs(Boundary_Conditions &bcs,Mesh &mesh,domain_geometry &domain){
 2778              		.loc 6 183 0
 2779              		.cfi_startproc
 2780 13a8 55       		pushq	%rbp
 2781              		.cfi_def_cfa_offset 16
 2782              		.cfi_offset 6, -16
 2783 13a9 4889E5   		movq	%rsp, %rbp
 2784              		.cfi_def_cfa_register 6
 2785 13ac 4154     		pushq	%r12
 2786 13ae 53       		pushq	%rbx
 2787 13af 4883EC40 		subq	$64, %rsp
 2788              		.cfi_offset 12, -24
 2789              		.cfi_offset 3, -32
 2790 13b3 48897DD8 		movq	%rdi, -40(%rbp)
 2791 13b7 488975D0 		movq	%rsi, -48(%rbp)
 2792 13bb 488955C8 		movq	%rdx, -56(%rbp)
 2793 13bf 48894DC0 		movq	%rcx, -64(%rbp)
 2794              	.LBB20:
 184:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 185:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     for(int i =0; i< mesh.get_total_cells();i++){
 2795              		.loc 6 185 0
 2796 13c3 C745EC00 		movl	$0, -20(%rbp)
 2796      000000
 2797              	.L159:
 2798              		.loc 6 185 0 is_stmt 0 discriminator 1
 2799 13ca 488B45C8 		movq	-56(%rbp), %rax
 2800 13ce 4889C7   		movq	%rax, %rdi
 2801 13d1 E8000000 		call	_ZN4Mesh15get_total_cellsEv
 2801      00
 2802 13d6 3B45EC   		cmpl	-20(%rbp), %eax
 2803 13d9 0F9FC0   		setg	%al
 2804 13dc 84C0     		testb	%al, %al
 2805 13de 0F849D07 		je	.L160
 2805      0000
 186:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 187:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         // if bc present
 188:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if (bcs.get_bc(i)){
 2806              		.loc 6 188 0 is_stmt 1
 2807 13e4 8B55EC   		movl	-20(%rbp), %edx
 2808 13e7 488B45D0 		movq	-48(%rbp), %rax
 2809 13eb 89D6     		movl	%edx, %esi
 2810 13ed 4889C7   		movq	%rax, %rdi
 2811 13f0 E8000000 		call	_ZN19Boundary_Conditions6get_bcEi
 2811      00
 2812 13f5 84C0     		testb	%al, %al
 2813 13f7 0F847B07 		je	.L151
 2813      0000
 189:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 190:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             ///NEEDS to be modified for non-uniform solver
 191:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             // 1 = dirichlet, 2 = neumann, 3 = periodic
 192:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             if(bcs.get_rho_type(i) == 1){
 2814              		.loc 6 192 0
 2815 13fd 8B55EC   		movl	-20(%rbp), %edx
 2816 1400 488B45D0 		movq	-48(%rbp), %rax
 2817 1404 89D6     		movl	%edx, %esi
 2818 1406 4889C7   		movq	%rax, %rdi
 2819 1409 E8000000 		call	_ZN19Boundary_Conditions12get_rho_typeEi
GAS LISTING /tmp/ccbg3Dll.s 			page 102


 2819      00
 2820 140e 83F801   		cmpl	$1, %eax
 2821 1411 0F94C0   		sete	%al
 2822 1414 84C0     		testb	%al, %al
 2823 1416 0F848B00 		je	.L152
 2823      0000
 193:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 rho[i] = bcs.get_rho(i) - (rho[bcs.get_neighbour(i)] -bcs.get_rho(i));
 2824              		.loc 6 193 0
 2825 141c 488B45D8 		movq	-40(%rbp), %rax
 2826 1420 488B4008 		movq	8(%rax), %rax
 2827 1424 8B55EC   		movl	-20(%rbp), %edx
 2828 1427 4863D2   		movslq	%edx, %rdx
 2829 142a 48C1E203 		salq	$3, %rdx
 2830 142e 488D1C10 		leaq	(%rax,%rdx), %rbx
 2831 1432 8B55EC   		movl	-20(%rbp), %edx
 2832 1435 488B45D0 		movq	-48(%rbp), %rax
 2833 1439 89D6     		movl	%edx, %esi
 2834 143b 4889C7   		movq	%rax, %rdi
 2835 143e E8000000 		call	_ZN19Boundary_Conditions7get_rhoEi
 2835      00
 2836 1443 F20F1145 		movsd	%xmm0, -72(%rbp)
 2836      B8
 2837 1448 488B45D8 		movq	-40(%rbp), %rax
 2838 144c 4C8B6008 		movq	8(%rax), %r12
 2839 1450 8B55EC   		movl	-20(%rbp), %edx
 2840 1453 488B45D0 		movq	-48(%rbp), %rax
 2841 1457 89D6     		movl	%edx, %esi
 2842 1459 4889C7   		movq	%rax, %rdi
 2843 145c E8000000 		call	_ZN19Boundary_Conditions13get_neighbourEi
 2843      00
 2844 1461 4898     		cltq
 2845 1463 48C1E003 		salq	$3, %rax
 2846 1467 4C01E0   		addq	%r12, %rax
 2847 146a F20F1010 		movsd	(%rax), %xmm2
 2848 146e F20F1155 		movsd	%xmm2, -80(%rbp)
 2848      B0
 2849 1473 8B55EC   		movl	-20(%rbp), %edx
 2850 1476 488B45D0 		movq	-48(%rbp), %rax
 2851 147a 89D6     		movl	%edx, %esi
 2852 147c 4889C7   		movq	%rax, %rdi
 2853 147f E8000000 		call	_ZN19Boundary_Conditions7get_rhoEi
 2853      00
 2854 1484 F20F1055 		movsd	-80(%rbp), %xmm2
 2854      B0
 2855 1489 F20F5CD0 		subsd	%xmm0, %xmm2
 2856 148d 660F28C2 		movapd	%xmm2, %xmm0
 2857 1491 F20F105D 		movsd	-72(%rbp), %xmm3
 2857      B8
 2858 1496 F20F5CD8 		subsd	%xmm0, %xmm3
 2859 149a 660F28C3 		movapd	%xmm3, %xmm0
 2860 149e F20F1103 		movsd	%xmm0, (%rbx)
 2861 14a2 E9E60000 		jmp	.L153
 2861      00
 2862              	.L152:
 194:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 195:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }else if(bcs.get_rho_type(i) == 2){
 2863              		.loc 6 195 0
GAS LISTING /tmp/ccbg3Dll.s 			page 103


 2864 14a7 8B55EC   		movl	-20(%rbp), %edx
 2865 14aa 488B45D0 		movq	-48(%rbp), %rax
 2866 14ae 89D6     		movl	%edx, %esi
 2867 14b0 4889C7   		movq	%rax, %rdi
 2868 14b3 E8000000 		call	_ZN19Boundary_Conditions12get_rho_typeEi
 2868      00
 2869 14b8 83F802   		cmpl	$2, %eax
 2870 14bb 0F94C0   		sete	%al
 2871 14be 84C0     		testb	%al, %al
 2872 14c0 7470     		je	.L154
 196:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 rho[i] = rho[bcs.get_neighbour(i)] + domain.dx*bcs.get_rho(i);
 2873              		.loc 6 196 0
 2874 14c2 488B45D8 		movq	-40(%rbp), %rax
 2875 14c6 488B4008 		movq	8(%rax), %rax
 2876 14ca 8B55EC   		movl	-20(%rbp), %edx
 2877 14cd 4863D2   		movslq	%edx, %rdx
 2878 14d0 48C1E203 		salq	$3, %rdx
 2879 14d4 488D1C10 		leaq	(%rax,%rdx), %rbx
 2880 14d8 488B45D8 		movq	-40(%rbp), %rax
 2881 14dc 4C8B6008 		movq	8(%rax), %r12
 2882 14e0 8B55EC   		movl	-20(%rbp), %edx
 2883 14e3 488B45D0 		movq	-48(%rbp), %rax
 2884 14e7 89D6     		movl	%edx, %esi
 2885 14e9 4889C7   		movq	%rax, %rdi
 2886 14ec E8000000 		call	_ZN19Boundary_Conditions13get_neighbourEi
 2886      00
 2887 14f1 4898     		cltq
 2888 14f3 48C1E003 		salq	$3, %rax
 2889 14f7 4C01E0   		addq	%r12, %rax
 2890 14fa F20F1018 		movsd	(%rax), %xmm3
 2891 14fe F20F115D 		movsd	%xmm3, -72(%rbp)
 2891      B8
 2892 1503 488B45C0 		movq	-64(%rbp), %rax
 2893 1507 F20F1070 		movsd	24(%rax), %xmm6
 2893      18
 2894 150c F20F1175 		movsd	%xmm6, -80(%rbp)
 2894      B0
 2895 1511 8B55EC   		movl	-20(%rbp), %edx
 2896 1514 488B45D0 		movq	-48(%rbp), %rax
 2897 1518 89D6     		movl	%edx, %esi
 2898 151a 4889C7   		movq	%rax, %rdi
 2899 151d E8000000 		call	_ZN19Boundary_Conditions7get_rhoEi
 2899      00
 2900 1522 F20F5945 		mulsd	-80(%rbp), %xmm0
 2900      B0
 2901 1527 F20F5845 		addsd	-72(%rbp), %xmm0
 2901      B8
 2902 152c F20F1103 		movsd	%xmm0, (%rbx)
 2903 1530 EB5B     		jmp	.L153
 2904              	.L154:
 197:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 198:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }else if(bcs.get_rho_type(i) == 3){
 2905              		.loc 6 198 0
 2906 1532 8B55EC   		movl	-20(%rbp), %edx
 2907 1535 488B45D0 		movq	-48(%rbp), %rax
 2908 1539 89D6     		movl	%edx, %esi
 2909 153b 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccbg3Dll.s 			page 104


 2910 153e E8000000 		call	_ZN19Boundary_Conditions12get_rho_typeEi
 2910      00
 2911 1543 83F803   		cmpl	$3, %eax
 2912 1546 0F94C0   		sete	%al
 2913 1549 84C0     		testb	%al, %al
 2914 154b 7440     		je	.L153
 199:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 rho[i] = rho[bcs.get_periodic_node(i)];
 2915              		.loc 6 199 0
 2916 154d 488B45D8 		movq	-40(%rbp), %rax
 2917 1551 488B4008 		movq	8(%rax), %rax
 2918 1555 8B55EC   		movl	-20(%rbp), %edx
 2919 1558 4863D2   		movslq	%edx, %rdx
 2920 155b 48C1E203 		salq	$3, %rdx
 2921 155f 488D1C10 		leaq	(%rax,%rdx), %rbx
 2922 1563 488B45D8 		movq	-40(%rbp), %rax
 2923 1567 4C8B6008 		movq	8(%rax), %r12
 2924 156b 8B55EC   		movl	-20(%rbp), %edx
 2925 156e 488B45D0 		movq	-48(%rbp), %rax
 2926 1572 89D6     		movl	%edx, %esi
 2927 1574 4889C7   		movq	%rax, %rdi
 2928 1577 E8000000 		call	_ZN19Boundary_Conditions17get_periodic_nodeEi
 2928      00
 2929 157c 4898     		cltq
 2930 157e 48C1E003 		salq	$3, %rax
 2931 1582 4C01E0   		addq	%r12, %rax
 2932 1585 F20F1000 		movsd	(%rax), %xmm0
 2933 1589 F20F1103 		movsd	%xmm0, (%rbx)
 2934              	.L153:
 200:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 201:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }
 202:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 203:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 204:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             if(bcs.get_vel_type(i) == 1){
 2935              		.loc 6 204 0
 2936 158d 8B55EC   		movl	-20(%rbp), %edx
 2937 1590 488B45D0 		movq	-48(%rbp), %rax
 2938 1594 89D6     		movl	%edx, %esi
 2939 1596 4889C7   		movq	%rax, %rdi
 2940 1599 E8000000 		call	_ZN19Boundary_Conditions12get_vel_typeEi
 2940      00
 2941 159e 83F801   		cmpl	$1, %eax
 2942 15a1 0F94C0   		sete	%al
 2943 15a4 84C0     		testb	%al, %al
 2944 15a6 0F841101 		je	.L155
 2944      0000
 205:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 u[i] = bcs.get_u(i) - (u[bcs.get_neighbour(i)] - bcs.get_u(i));
 2945              		.loc 6 205 0
 2946 15ac 488B45D8 		movq	-40(%rbp), %rax
 2947 15b0 488B4010 		movq	16(%rax), %rax
 2948 15b4 8B55EC   		movl	-20(%rbp), %edx
 2949 15b7 4863D2   		movslq	%edx, %rdx
 2950 15ba 48C1E203 		salq	$3, %rdx
 2951 15be 488D1C10 		leaq	(%rax,%rdx), %rbx
 2952 15c2 8B55EC   		movl	-20(%rbp), %edx
 2953 15c5 488B45D0 		movq	-48(%rbp), %rax
 2954 15c9 89D6     		movl	%edx, %esi
 2955 15cb 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccbg3Dll.s 			page 105


 2956 15ce E8000000 		call	_ZN19Boundary_Conditions5get_uEi
 2956      00
 2957 15d3 F20F1145 		movsd	%xmm0, -72(%rbp)
 2957      B8
 2958 15d8 488B45D8 		movq	-40(%rbp), %rax
 2959 15dc 4C8B6010 		movq	16(%rax), %r12
 2960 15e0 8B55EC   		movl	-20(%rbp), %edx
 2961 15e3 488B45D0 		movq	-48(%rbp), %rax
 2962 15e7 89D6     		movl	%edx, %esi
 2963 15e9 4889C7   		movq	%rax, %rdi
 2964 15ec E8000000 		call	_ZN19Boundary_Conditions13get_neighbourEi
 2964      00
 2965 15f1 4898     		cltq
 2966 15f3 48C1E003 		salq	$3, %rax
 2967 15f7 4C01E0   		addq	%r12, %rax
 2968 15fa F20F1020 		movsd	(%rax), %xmm4
 2969 15fe F20F1165 		movsd	%xmm4, -80(%rbp)
 2969      B0
 2970 1603 8B55EC   		movl	-20(%rbp), %edx
 2971 1606 488B45D0 		movq	-48(%rbp), %rax
 2972 160a 89D6     		movl	%edx, %esi
 2973 160c 4889C7   		movq	%rax, %rdi
 2974 160f E8000000 		call	_ZN19Boundary_Conditions5get_uEi
 2974      00
 2975 1614 F20F1065 		movsd	-80(%rbp), %xmm4
 2975      B0
 2976 1619 F20F5CE0 		subsd	%xmm0, %xmm4
 2977 161d 660F28C4 		movapd	%xmm4, %xmm0
 2978 1621 F20F106D 		movsd	-72(%rbp), %xmm5
 2978      B8
 2979 1626 F20F5CE8 		subsd	%xmm0, %xmm5
 2980 162a 660F28C5 		movapd	%xmm5, %xmm0
 2981 162e F20F1103 		movsd	%xmm0, (%rbx)
 206:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 v[i] = bcs.get_v(i) - (v[bcs.get_neighbour(i)] -bcs.get_v(i));
 2982              		.loc 6 206 0
 2983 1632 488B45D8 		movq	-40(%rbp), %rax
 2984 1636 488B4018 		movq	24(%rax), %rax
 2985 163a 8B55EC   		movl	-20(%rbp), %edx
 2986 163d 4863D2   		movslq	%edx, %rdx
 2987 1640 48C1E203 		salq	$3, %rdx
 2988 1644 488D1C10 		leaq	(%rax,%rdx), %rbx
 2989 1648 8B55EC   		movl	-20(%rbp), %edx
 2990 164b 488B45D0 		movq	-48(%rbp), %rax
 2991 164f 89D6     		movl	%edx, %esi
 2992 1651 4889C7   		movq	%rax, %rdi
 2993 1654 E8000000 		call	_ZN19Boundary_Conditions5get_vEi
 2993      00
 2994 1659 F20F1145 		movsd	%xmm0, -72(%rbp)
 2994      B8
 2995 165e 488B45D8 		movq	-40(%rbp), %rax
 2996 1662 4C8B6018 		movq	24(%rax), %r12
 2997 1666 8B55EC   		movl	-20(%rbp), %edx
 2998 1669 488B45D0 		movq	-48(%rbp), %rax
 2999 166d 89D6     		movl	%edx, %esi
 3000 166f 4889C7   		movq	%rax, %rdi
 3001 1672 E8000000 		call	_ZN19Boundary_Conditions13get_neighbourEi
 3001      00
GAS LISTING /tmp/ccbg3Dll.s 			page 106


 3002 1677 4898     		cltq
 3003 1679 48C1E003 		salq	$3, %rax
 3004 167d 4C01E0   		addq	%r12, %rax
 3005 1680 F20F1030 		movsd	(%rax), %xmm6
 3006 1684 F20F1175 		movsd	%xmm6, -80(%rbp)
 3006      B0
 3007 1689 8B55EC   		movl	-20(%rbp), %edx
 3008 168c 488B45D0 		movq	-48(%rbp), %rax
 3009 1690 89D6     		movl	%edx, %esi
 3010 1692 4889C7   		movq	%rax, %rdi
 3011 1695 E8000000 		call	_ZN19Boundary_Conditions5get_vEi
 3011      00
 3012 169a F20F1075 		movsd	-80(%rbp), %xmm6
 3012      B0
 3013 169f F20F5CF0 		subsd	%xmm0, %xmm6
 3014 16a3 660F28C6 		movapd	%xmm6, %xmm0
 3015 16a7 F20F107D 		movsd	-72(%rbp), %xmm7
 3015      B8
 3016 16ac F20F5CF8 		subsd	%xmm0, %xmm7
 3017 16b0 660F28C7 		movapd	%xmm7, %xmm0
 3018 16b4 F20F1103 		movsd	%xmm0, (%rbx)
 3019 16b8 E9BB0400 		jmp	.L151
 3019      00
 3020              	.L155:
 207:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }else if(bcs.get_vel_type(i) == 2){
 3021              		.loc 6 207 0
 3022 16bd 8B55EC   		movl	-20(%rbp), %edx
 3023 16c0 488B45D0 		movq	-48(%rbp), %rax
 3024 16c4 89D6     		movl	%edx, %esi
 3025 16c6 4889C7   		movq	%rax, %rdi
 3026 16c9 E8000000 		call	_ZN19Boundary_Conditions12get_vel_typeEi
 3026      00
 3027 16ce 83F802   		cmpl	$2, %eax
 3028 16d1 0F94C0   		sete	%al
 3029 16d4 84C0     		testb	%al, %al
 3030 16d6 0F84E100 		je	.L156
 3030      0000
 208:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 u[i] = u[bcs.get_neighbour(i)] + domain.dx*bcs.get_u(i);
 3031              		.loc 6 208 0
 3032 16dc 488B45D8 		movq	-40(%rbp), %rax
 3033 16e0 488B4010 		movq	16(%rax), %rax
 3034 16e4 8B55EC   		movl	-20(%rbp), %edx
 3035 16e7 4863D2   		movslq	%edx, %rdx
 3036 16ea 48C1E203 		salq	$3, %rdx
 3037 16ee 488D1C10 		leaq	(%rax,%rdx), %rbx
 3038 16f2 488B45D8 		movq	-40(%rbp), %rax
 3039 16f6 4C8B6010 		movq	16(%rax), %r12
 3040 16fa 8B55EC   		movl	-20(%rbp), %edx
 3041 16fd 488B45D0 		movq	-48(%rbp), %rax
 3042 1701 89D6     		movl	%edx, %esi
 3043 1703 4889C7   		movq	%rax, %rdi
 3044 1706 E8000000 		call	_ZN19Boundary_Conditions13get_neighbourEi
 3044      00
 3045 170b 4898     		cltq
 3046 170d 48C1E003 		salq	$3, %rax
 3047 1711 4C01E0   		addq	%r12, %rax
 3048 1714 F20F1028 		movsd	(%rax), %xmm5
GAS LISTING /tmp/ccbg3Dll.s 			page 107


 3049 1718 F20F116D 		movsd	%xmm5, -72(%rbp)
 3049      B8
 3050 171d 488B45C0 		movq	-64(%rbp), %rax
 3051 1721 F20F1050 		movsd	24(%rax), %xmm2
 3051      18
 3052 1726 F20F1155 		movsd	%xmm2, -80(%rbp)
 3052      B0
 3053 172b 8B55EC   		movl	-20(%rbp), %edx
 3054 172e 488B45D0 		movq	-48(%rbp), %rax
 3055 1732 89D6     		movl	%edx, %esi
 3056 1734 4889C7   		movq	%rax, %rdi
 3057 1737 E8000000 		call	_ZN19Boundary_Conditions5get_uEi
 3057      00
 3058 173c F20F5945 		mulsd	-80(%rbp), %xmm0
 3058      B0
 3059 1741 F20F5845 		addsd	-72(%rbp), %xmm0
 3059      B8
 3060 1746 F20F1103 		movsd	%xmm0, (%rbx)
 209:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 v[i] = v[bcs.get_neighbour(i)] + domain.dx*bcs.get_v(i);
 3061              		.loc 6 209 0
 3062 174a 488B45D8 		movq	-40(%rbp), %rax
 3063 174e 488B4018 		movq	24(%rax), %rax
 3064 1752 8B55EC   		movl	-20(%rbp), %edx
 3065 1755 4863D2   		movslq	%edx, %rdx
 3066 1758 48C1E203 		salq	$3, %rdx
 3067 175c 488D1C10 		leaq	(%rax,%rdx), %rbx
 3068 1760 488B45D8 		movq	-40(%rbp), %rax
 3069 1764 4C8B6018 		movq	24(%rax), %r12
 3070 1768 8B55EC   		movl	-20(%rbp), %edx
 3071 176b 488B45D0 		movq	-48(%rbp), %rax
 3072 176f 89D6     		movl	%edx, %esi
 3073 1771 4889C7   		movq	%rax, %rdi
 3074 1774 E8000000 		call	_ZN19Boundary_Conditions13get_neighbourEi
 3074      00
 3075 1779 4898     		cltq
 3076 177b 48C1E003 		salq	$3, %rax
 3077 177f 4C01E0   		addq	%r12, %rax
 3078 1782 F20F1020 		movsd	(%rax), %xmm4
 3079 1786 F20F1165 		movsd	%xmm4, -72(%rbp)
 3079      B8
 3080 178b 488B45C0 		movq	-64(%rbp), %rax
 3081 178f F20F1078 		movsd	24(%rax), %xmm7
 3081      18
 3082 1794 F20F117D 		movsd	%xmm7, -80(%rbp)
 3082      B0
 3083 1799 8B55EC   		movl	-20(%rbp), %edx
 3084 179c 488B45D0 		movq	-48(%rbp), %rax
 3085 17a0 89D6     		movl	%edx, %esi
 3086 17a2 4889C7   		movq	%rax, %rdi
 3087 17a5 E8000000 		call	_ZN19Boundary_Conditions5get_vEi
 3087      00
 3088 17aa F20F5945 		mulsd	-80(%rbp), %xmm0
 3088      B0
 3089 17af F20F5845 		addsd	-72(%rbp), %xmm0
 3089      B8
 3090 17b4 F20F1103 		movsd	%xmm0, (%rbx)
 3091 17b8 E9BB0300 		jmp	.L151
GAS LISTING /tmp/ccbg3Dll.s 			page 108


 3091      00
 3092              	.L156:
 210:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }else if(bcs.get_vel_type(i) == 3){
 3093              		.loc 6 210 0
 3094 17bd 8B55EC   		movl	-20(%rbp), %edx
 3095 17c0 488B45D0 		movq	-48(%rbp), %rax
 3096 17c4 89D6     		movl	%edx, %esi
 3097 17c6 4889C7   		movq	%rax, %rdi
 3098 17c9 E8000000 		call	_ZN19Boundary_Conditions12get_vel_typeEi
 3098      00
 3099 17ce 83F803   		cmpl	$3, %eax
 3100 17d1 0F94C0   		sete	%al
 3101 17d4 84C0     		testb	%al, %al
 3102 17d6 0F848500 		je	.L157
 3102      0000
 211:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 u[i] = u[bcs.get_periodic_node(i)];
 3103              		.loc 6 211 0
 3104 17dc 488B45D8 		movq	-40(%rbp), %rax
 3105 17e0 488B4010 		movq	16(%rax), %rax
 3106 17e4 8B55EC   		movl	-20(%rbp), %edx
 3107 17e7 4863D2   		movslq	%edx, %rdx
 3108 17ea 48C1E203 		salq	$3, %rdx
 3109 17ee 488D1C10 		leaq	(%rax,%rdx), %rbx
 3110 17f2 488B45D8 		movq	-40(%rbp), %rax
 3111 17f6 4C8B6010 		movq	16(%rax), %r12
 3112 17fa 8B55EC   		movl	-20(%rbp), %edx
 3113 17fd 488B45D0 		movq	-48(%rbp), %rax
 3114 1801 89D6     		movl	%edx, %esi
 3115 1803 4889C7   		movq	%rax, %rdi
 3116 1806 E8000000 		call	_ZN19Boundary_Conditions17get_periodic_nodeEi
 3116      00
 3117 180b 4898     		cltq
 3118 180d 48C1E003 		salq	$3, %rax
 3119 1811 4C01E0   		addq	%r12, %rax
 3120 1814 F20F1000 		movsd	(%rax), %xmm0
 3121 1818 F20F1103 		movsd	%xmm0, (%rbx)
 212:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                  v[i] = v[bcs.get_periodic_node(i)];
 3122              		.loc 6 212 0
 3123 181c 488B45D8 		movq	-40(%rbp), %rax
 3124 1820 488B4018 		movq	24(%rax), %rax
 3125 1824 8B55EC   		movl	-20(%rbp), %edx
 3126 1827 4863D2   		movslq	%edx, %rdx
 3127 182a 48C1E203 		salq	$3, %rdx
 3128 182e 488D1C10 		leaq	(%rax,%rdx), %rbx
 3129 1832 488B45D8 		movq	-40(%rbp), %rax
 3130 1836 4C8B6018 		movq	24(%rax), %r12
 3131 183a 8B55EC   		movl	-20(%rbp), %edx
 3132 183d 488B45D0 		movq	-48(%rbp), %rax
 3133 1841 89D6     		movl	%edx, %esi
 3134 1843 4889C7   		movq	%rax, %rdi
 3135 1846 E8000000 		call	_ZN19Boundary_Conditions17get_periodic_nodeEi
 3135      00
 3136 184b 4898     		cltq
 3137 184d 48C1E003 		salq	$3, %rax
 3138 1851 4C01E0   		addq	%r12, %rax
 3139 1854 F20F1000 		movsd	(%rax), %xmm0
 3140 1858 F20F1103 		movsd	%xmm0, (%rbx)
GAS LISTING /tmp/ccbg3Dll.s 			page 109


 3141 185c E9170300 		jmp	.L151
 3141      00
 3142              	.L157:
 213:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }else if(bcs.get_vel_type(i) == 4){
 3143              		.loc 6 213 0
 3144 1861 8B55EC   		movl	-20(%rbp), %edx
 3145 1864 488B45D0 		movq	-48(%rbp), %rax
 3146 1868 89D6     		movl	%edx, %esi
 3147 186a 4889C7   		movq	%rax, %rdi
 3148 186d E8000000 		call	_ZN19Boundary_Conditions12get_vel_typeEi
 3148      00
 3149 1872 83F804   		cmpl	$4, %eax
 3150 1875 0F94C0   		sete	%al
 3151 1878 84C0     		testb	%al, %al
 3152 187a 0F846F01 		je	.L158
 3152      0000
 214:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 u[i] = 4*bcs.get_u(i)/pow(domain.Y,2) * mesh.get_centroid_y(i)*
 3153              		.loc 6 214 0
 3154 1880 488B45D8 		movq	-40(%rbp), %rax
 3155 1884 488B4010 		movq	16(%rax), %rax
 3156 1888 8B55EC   		movl	-20(%rbp), %edx
 3157 188b 4863D2   		movslq	%edx, %rdx
 3158 188e 48C1E203 		salq	$3, %rdx
 3159 1892 488D1C10 		leaq	(%rax,%rdx), %rbx
 3160 1896 8B55EC   		movl	-20(%rbp), %edx
 3161 1899 488B45D0 		movq	-48(%rbp), %rax
 3162 189d 89D6     		movl	%edx, %esi
 3163 189f 4889C7   		movq	%rax, %rdi
 3164 18a2 E8000000 		call	_ZN19Boundary_Conditions5get_uEi
 3164      00
 3165 18a7 660F28C8 		movapd	%xmm0, %xmm1
 3166 18ab F20F1005 		movsd	.LC11(%rip), %xmm0
 3166      00000000 
 3167 18b3 F20F59C8 		mulsd	%xmm0, %xmm1
 3168 18b7 F20F114D 		movsd	%xmm1, -72(%rbp)
 3168      B8
 3169 18bc 488B45C0 		movq	-64(%rbp), %rax
 3170 18c0 488B4010 		movq	16(%rax), %rax
 3171 18c4 BF020000 		movl	$2, %edi
 3171      00
 3172 18c9 488945B0 		movq	%rax, -80(%rbp)
 3173 18cd F20F1045 		movsd	-80(%rbp), %xmm0
 3173      B0
 3174 18d2 E8000000 		call	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueE
 3174      00
 3175 18d7 F20F104D 		movsd	-72(%rbp), %xmm1
 3175      B8
 3176 18dc F20F5EC8 		divsd	%xmm0, %xmm1
 3177 18e0 F20F114D 		movsd	%xmm1, -72(%rbp)
 3177      B8
 3178 18e5 8B55EC   		movl	-20(%rbp), %edx
 3179 18e8 488B45C8 		movq	-56(%rbp), %rax
 3180 18ec 89D6     		movl	%edx, %esi
 3181 18ee 4889C7   		movq	%rax, %rdi
 3182 18f1 E8000000 		call	_ZN4Mesh14get_centroid_yEi
 3182      00
 3183 18f6 F20F5945 		mulsd	-72(%rbp), %xmm0
GAS LISTING /tmp/ccbg3Dll.s 			page 110


 3183      B8
 3184 18fb F20F1145 		movsd	%xmm0, -72(%rbp)
 3184      B8
 215:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         (domain.Y - mesh.get_centroid_y(i))   ;
 3185              		.loc 6 215 0
 3186 1900 488B45C0 		movq	-64(%rbp), %rax
 3187 1904 F20F1068 		movsd	16(%rax), %xmm5
 3187      10
 3188 1909 F20F116D 		movsd	%xmm5, -80(%rbp)
 3188      B0
 3189 190e 8B55EC   		movl	-20(%rbp), %edx
 3190 1911 488B45C8 		movq	-56(%rbp), %rax
 3191 1915 89D6     		movl	%edx, %esi
 3192 1917 4889C7   		movq	%rax, %rdi
 3193 191a E8000000 		call	_ZN4Mesh14get_centroid_yEi
 3193      00
 3194 191f F20F106D 		movsd	-80(%rbp), %xmm5
 3194      B0
 3195 1924 F20F5CE8 		subsd	%xmm0, %xmm5
 3196 1928 660F28C5 		movapd	%xmm5, %xmm0
 214:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 u[i] = 4*bcs.get_u(i)/pow(domain.Y,2) * mesh.get_centroid_y(i)*
 3197              		.loc 6 214 0
 3198 192c F20F5945 		mulsd	-72(%rbp), %xmm0
 3198      B8
 3199              		.loc 6 215 0
 3200 1931 F20F1103 		movsd	%xmm0, (%rbx)
 216:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 v[i] = 4*bcs.get_v(i)/pow(domain.Y,2) * mesh.get_centroid_y(i)*
 3201              		.loc 6 216 0
 3202 1935 488B45D8 		movq	-40(%rbp), %rax
 3203 1939 488B4018 		movq	24(%rax), %rax
 3204 193d 8B55EC   		movl	-20(%rbp), %edx
 3205 1940 4863D2   		movslq	%edx, %rdx
 3206 1943 48C1E203 		salq	$3, %rdx
 3207 1947 488D1C10 		leaq	(%rax,%rdx), %rbx
 3208 194b 8B55EC   		movl	-20(%rbp), %edx
 3209 194e 488B45D0 		movq	-48(%rbp), %rax
 3210 1952 89D6     		movl	%edx, %esi
 3211 1954 4889C7   		movq	%rax, %rdi
 3212 1957 E8000000 		call	_ZN19Boundary_Conditions5get_vEi
 3212      00
 3213 195c 660F28C8 		movapd	%xmm0, %xmm1
 3214 1960 F20F1005 		movsd	.LC11(%rip), %xmm0
 3214      00000000 
 3215 1968 F20F59C8 		mulsd	%xmm0, %xmm1
 3216 196c F20F114D 		movsd	%xmm1, -72(%rbp)
 3216      B8
 3217 1971 488B45C0 		movq	-64(%rbp), %rax
 3218 1975 488B4010 		movq	16(%rax), %rax
 3219 1979 BF020000 		movl	$2, %edi
 3219      00
 3220 197e 488945B0 		movq	%rax, -80(%rbp)
 3221 1982 F20F1045 		movsd	-80(%rbp), %xmm0
 3221      B0
 3222 1987 E8000000 		call	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueE
 3222      00
 3223 198c F20F104D 		movsd	-72(%rbp), %xmm1
 3223      B8
GAS LISTING /tmp/ccbg3Dll.s 			page 111


 3224 1991 F20F5EC8 		divsd	%xmm0, %xmm1
 3225 1995 F20F114D 		movsd	%xmm1, -72(%rbp)
 3225      B8
 3226 199a 8B55EC   		movl	-20(%rbp), %edx
 3227 199d 488B45C8 		movq	-56(%rbp), %rax
 3228 19a1 89D6     		movl	%edx, %esi
 3229 19a3 4889C7   		movq	%rax, %rdi
 3230 19a6 E8000000 		call	_ZN4Mesh14get_centroid_yEi
 3230      00
 3231 19ab F20F5945 		mulsd	-72(%rbp), %xmm0
 3231      B8
 3232 19b0 F20F1145 		movsd	%xmm0, -72(%rbp)
 3232      B8
 217:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         (domain.Y - mesh.get_centroid_y(i)) ;
 3233              		.loc 6 217 0
 3234 19b5 488B45C0 		movq	-64(%rbp), %rax
 3235 19b9 F20F1050 		movsd	16(%rax), %xmm2
 3235      10
 3236 19be F20F1155 		movsd	%xmm2, -80(%rbp)
 3236      B0
 3237 19c3 8B55EC   		movl	-20(%rbp), %edx
 3238 19c6 488B45C8 		movq	-56(%rbp), %rax
 3239 19ca 89D6     		movl	%edx, %esi
 3240 19cc 4889C7   		movq	%rax, %rdi
 3241 19cf E8000000 		call	_ZN4Mesh14get_centroid_yEi
 3241      00
 3242 19d4 F20F1055 		movsd	-80(%rbp), %xmm2
 3242      B0
 3243 19d9 F20F5CD0 		subsd	%xmm0, %xmm2
 3244 19dd 660F28C2 		movapd	%xmm2, %xmm0
 216:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 v[i] = 4*bcs.get_v(i)/pow(domain.Y,2) * mesh.get_centroid_y(i)*
 3245              		.loc 6 216 0
 3246 19e1 F20F5945 		mulsd	-72(%rbp), %xmm0
 3246      B8
 3247              		.loc 6 217 0
 3248 19e6 F20F1103 		movsd	%xmm0, (%rbx)
 3249 19ea E9890100 		jmp	.L151
 3249      00
 3250              	.L158:
 218:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }else if(bcs.get_vel_type(i) == 5){
 3251              		.loc 6 218 0
 3252 19ef 8B55EC   		movl	-20(%rbp), %edx
 3253 19f2 488B45D0 		movq	-48(%rbp), %rax
 3254 19f6 89D6     		movl	%edx, %esi
 3255 19f8 4889C7   		movq	%rax, %rdi
 3256 19fb E8000000 		call	_ZN19Boundary_Conditions12get_vel_typeEi
 3256      00
 3257 1a00 83F805   		cmpl	$5, %eax
 3258 1a03 0F94C0   		sete	%al
 3259 1a06 84C0     		testb	%al, %al
 3260 1a08 0F846A01 		je	.L151
 3260      0000
 219:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 u[i] = 4*bcs.get_u(i)/pow(domain.X,2) * mesh.get_centroid_x(i)*
 3261              		.loc 6 219 0
 3262 1a0e 488B45D8 		movq	-40(%rbp), %rax
 3263 1a12 488B4010 		movq	16(%rax), %rax
 3264 1a16 8B55EC   		movl	-20(%rbp), %edx
GAS LISTING /tmp/ccbg3Dll.s 			page 112


 3265 1a19 4863D2   		movslq	%edx, %rdx
 3266 1a1c 48C1E203 		salq	$3, %rdx
 3267 1a20 488D1C10 		leaq	(%rax,%rdx), %rbx
 3268 1a24 8B55EC   		movl	-20(%rbp), %edx
 3269 1a27 488B45D0 		movq	-48(%rbp), %rax
 3270 1a2b 89D6     		movl	%edx, %esi
 3271 1a2d 4889C7   		movq	%rax, %rdi
 3272 1a30 E8000000 		call	_ZN19Boundary_Conditions5get_uEi
 3272      00
 3273 1a35 660F28C8 		movapd	%xmm0, %xmm1
 3274 1a39 F20F1005 		movsd	.LC11(%rip), %xmm0
 3274      00000000 
 3275 1a41 F20F59C8 		mulsd	%xmm0, %xmm1
 3276 1a45 F20F114D 		movsd	%xmm1, -72(%rbp)
 3276      B8
 3277 1a4a 488B45C0 		movq	-64(%rbp), %rax
 3278 1a4e 488B4008 		movq	8(%rax), %rax
 3279 1a52 BF020000 		movl	$2, %edi
 3279      00
 3280 1a57 488945B0 		movq	%rax, -80(%rbp)
 3281 1a5b F20F1045 		movsd	-80(%rbp), %xmm0
 3281      B0
 3282 1a60 E8000000 		call	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueE
 3282      00
 3283 1a65 F20F104D 		movsd	-72(%rbp), %xmm1
 3283      B8
 3284 1a6a F20F5EC8 		divsd	%xmm0, %xmm1
 3285 1a6e F20F114D 		movsd	%xmm1, -72(%rbp)
 3285      B8
 3286 1a73 8B55EC   		movl	-20(%rbp), %edx
 3287 1a76 488B45C8 		movq	-56(%rbp), %rax
 3288 1a7a 89D6     		movl	%edx, %esi
 3289 1a7c 4889C7   		movq	%rax, %rdi
 3290 1a7f E8000000 		call	_ZN4Mesh14get_centroid_xEi
 3290      00
 3291 1a84 F20F5945 		mulsd	-72(%rbp), %xmm0
 3291      B8
 3292 1a89 F20F1145 		movsd	%xmm0, -72(%rbp)
 3292      B8
 220:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         (domain.X - mesh.get_centroid_y(i))   ;
 3293              		.loc 6 220 0
 3294 1a8e 488B45C0 		movq	-64(%rbp), %rax
 3295 1a92 F20F1060 		movsd	8(%rax), %xmm4
 3295      08
 3296 1a97 F20F1165 		movsd	%xmm4, -80(%rbp)
 3296      B0
 3297 1a9c 8B55EC   		movl	-20(%rbp), %edx
 3298 1a9f 488B45C8 		movq	-56(%rbp), %rax
 3299 1aa3 89D6     		movl	%edx, %esi
 3300 1aa5 4889C7   		movq	%rax, %rdi
 3301 1aa8 E8000000 		call	_ZN4Mesh14get_centroid_yEi
 3301      00
 3302 1aad F20F1065 		movsd	-80(%rbp), %xmm4
 3302      B0
 3303 1ab2 F20F5CE0 		subsd	%xmm0, %xmm4
 3304 1ab6 660F28C4 		movapd	%xmm4, %xmm0
 219:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 u[i] = 4*bcs.get_u(i)/pow(domain.X,2) * mesh.get_centroid_x(i)*
GAS LISTING /tmp/ccbg3Dll.s 			page 113


 3305              		.loc 6 219 0
 3306 1aba F20F5945 		mulsd	-72(%rbp), %xmm0
 3306      B8
 3307              		.loc 6 220 0
 3308 1abf F20F1103 		movsd	%xmm0, (%rbx)
 221:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 v[i] = 4*bcs.get_v(i)/pow(domain.X,2) * mesh.get_centroid_x(i)*
 3309              		.loc 6 221 0
 3310 1ac3 488B45D8 		movq	-40(%rbp), %rax
 3311 1ac7 488B4018 		movq	24(%rax), %rax
 3312 1acb 8B55EC   		movl	-20(%rbp), %edx
 3313 1ace 4863D2   		movslq	%edx, %rdx
 3314 1ad1 48C1E203 		salq	$3, %rdx
 3315 1ad5 488D1C10 		leaq	(%rax,%rdx), %rbx
 3316 1ad9 8B55EC   		movl	-20(%rbp), %edx
 3317 1adc 488B45D0 		movq	-48(%rbp), %rax
 3318 1ae0 89D6     		movl	%edx, %esi
 3319 1ae2 4889C7   		movq	%rax, %rdi
 3320 1ae5 E8000000 		call	_ZN19Boundary_Conditions5get_vEi
 3320      00
 3321 1aea 660F28C8 		movapd	%xmm0, %xmm1
 3322 1aee F20F1005 		movsd	.LC11(%rip), %xmm0
 3322      00000000 
 3323 1af6 F20F59C8 		mulsd	%xmm0, %xmm1
 3324 1afa F20F114D 		movsd	%xmm1, -72(%rbp)
 3324      B8
 3325 1aff 488B45C0 		movq	-64(%rbp), %rax
 3326 1b03 488B4008 		movq	8(%rax), %rax
 3327 1b07 BF020000 		movl	$2, %edi
 3327      00
 3328 1b0c 488945B0 		movq	%rax, -80(%rbp)
 3329 1b10 F20F1045 		movsd	-80(%rbp), %xmm0
 3329      B0
 3330 1b15 E8000000 		call	_ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueE
 3330      00
 3331 1b1a F20F104D 		movsd	-72(%rbp), %xmm1
 3331      B8
 3332 1b1f F20F5EC8 		divsd	%xmm0, %xmm1
 3333 1b23 F20F114D 		movsd	%xmm1, -72(%rbp)
 3333      B8
 3334 1b28 8B55EC   		movl	-20(%rbp), %edx
 3335 1b2b 488B45C8 		movq	-56(%rbp), %rax
 3336 1b2f 89D6     		movl	%edx, %esi
 3337 1b31 4889C7   		movq	%rax, %rdi
 3338 1b34 E8000000 		call	_ZN4Mesh14get_centroid_xEi
 3338      00
 3339 1b39 F20F5945 		mulsd	-72(%rbp), %xmm0
 3339      B8
 3340 1b3e F20F1145 		movsd	%xmm0, -72(%rbp)
 3340      B8
 222:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         (domain.X - mesh.get_centroid_x(i)) ;
 3341              		.loc 6 222 0
 3342 1b43 488B45C0 		movq	-64(%rbp), %rax
 3343 1b47 F20F1078 		movsd	8(%rax), %xmm7
 3343      08
 3344 1b4c F20F117D 		movsd	%xmm7, -80(%rbp)
 3344      B0
 3345 1b51 8B55EC   		movl	-20(%rbp), %edx
GAS LISTING /tmp/ccbg3Dll.s 			page 114


 3346 1b54 488B45C8 		movq	-56(%rbp), %rax
 3347 1b58 89D6     		movl	%edx, %esi
 3348 1b5a 4889C7   		movq	%rax, %rdi
 3349 1b5d E8000000 		call	_ZN4Mesh14get_centroid_xEi
 3349      00
 3350 1b62 F20F107D 		movsd	-80(%rbp), %xmm7
 3350      B0
 3351 1b67 F20F5CF8 		subsd	%xmm0, %xmm7
 3352 1b6b 660F28C7 		movapd	%xmm7, %xmm0
 221:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 v[i] = 4*bcs.get_v(i)/pow(domain.X,2) * mesh.get_centroid_x(i)*
 3353              		.loc 6 221 0
 3354 1b6f F20F5945 		mulsd	-72(%rbp), %xmm0
 3354      B8
 3355              		.loc 6 222 0
 3356 1b74 F20F1103 		movsd	%xmm0, (%rbx)
 3357              	.L151:
 185:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 3358              		.loc 6 185 0 discriminator 2
 3359 1b78 8345EC01 		addl	$1, -20(%rbp)
 3360 1b7c E949F8FF 		jmp	.L159
 3360      FF
 3361              	.L160:
 3362              	.LBE20:
 223:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }
 224:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 225:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 226:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 227:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 228:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         }
 229:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 230:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     }
 231:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 232:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 233:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 3363              		.loc 6 233 0
 3364 1b81 90       		nop
 3365 1b82 4883C440 		addq	$64, %rsp
 3366 1b86 5B       		popq	%rbx
 3367 1b87 415C     		popq	%r12
 3368 1b89 5D       		popq	%rbp
 3369              		.cfi_def_cfa 7, 8
 3370 1b8a C3       		ret
 3371              		.cfi_endproc
 3372              	.LFE6843:
 3374 1b8b 90       		.align 2
 3375              		.globl	_ZN8Solution20remove_double_errorsEv
 3377              	_ZN8Solution20remove_double_errorsEv:
 3378              	.LFB6845:
 234:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 235:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 236:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::remove_double_errors(){
 3379              		.loc 6 236 0
 3380              		.cfi_startproc
 3381 1b8c 55       		pushq	%rbp
 3382              		.cfi_def_cfa_offset 16
 3383              		.cfi_offset 6, -16
 3384 1b8d 4889E5   		movq	%rsp, %rbp
GAS LISTING /tmp/ccbg3Dll.s 			page 115


 3385              		.cfi_def_cfa_register 6
 3386 1b90 4883EC20 		subq	$32, %rsp
 3387 1b94 48897DE8 		movq	%rdi, -24(%rbp)
 237:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     double tolerance;
 238:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     tolerance = numeric_limits<double>::epsilon();
 3388              		.loc 6 238 0
 3389 1b98 E8000000 		call	_ZNSt14numeric_limitsIdE7epsilonEv
 3389      00
 3390 1b9d 66480F7E 		movq	%xmm0, %rax
 3390      C0
 3391 1ba2 488945F8 		movq	%rax, -8(%rbp)
 3392              	.LBB21:
 239:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     for (int i= 0; i< total_nodes; i++){
 3393              		.loc 6 239 0
 3394 1ba6 C745F400 		movl	$0, -12(%rbp)
 3394      000000
 3395              	.L169:
 3396              		.loc 6 239 0 is_stmt 0 discriminator 1
 3397 1bad 488B45E8 		movq	-24(%rbp), %rax
 3398 1bb1 8B4038   		movl	56(%rax), %eax
 3399 1bb4 3B45F4   		cmpl	-12(%rbp), %eax
 3400 1bb7 0F8EF000 		jle	.L173
 3400      0000
 240:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 241:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if( fabs(rho[i]) < tolerance){
 3401              		.loc 6 241 0 is_stmt 1
 3402 1bbd 488B45E8 		movq	-24(%rbp), %rax
 3403 1bc1 488B4008 		movq	8(%rax), %rax
 3404 1bc5 8B55F4   		movl	-12(%rbp), %edx
 3405 1bc8 4863D2   		movslq	%edx, %rdx
 3406 1bcb 48C1E203 		salq	$3, %rdx
 3407 1bcf 4801D0   		addq	%rdx, %rax
 3408 1bd2 F20F1008 		movsd	(%rax), %xmm1
 3409 1bd6 F20F1005 		movsd	.LC12(%rip), %xmm0
 3409      00000000 
 3410 1bde 660F54C1 		andpd	%xmm1, %xmm0
 3411 1be2 F20F104D 		movsd	-8(%rbp), %xmm1
 3411      F8
 3412 1be7 660F2EC8 		ucomisd	%xmm0, %xmm1
 3413 1beb 761D     		jbe	.L163
 242:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 243:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             rho[i] = 0.0;
 3414              		.loc 6 243 0
 3415 1bed 488B45E8 		movq	-24(%rbp), %rax
 3416 1bf1 488B4008 		movq	8(%rax), %rax
 3417 1bf5 8B55F4   		movl	-12(%rbp), %edx
 3418 1bf8 4863D2   		movslq	%edx, %rdx
 3419 1bfb 48C1E203 		salq	$3, %rdx
 3420 1bff 4801D0   		addq	%rdx, %rax
 3421 1c02 660FEFC0 		pxor	%xmm0, %xmm0
 3422 1c06 F20F1100 		movsd	%xmm0, (%rax)
 3423              	.L163:
 244:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         }
 245:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 246:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if( fabs(u[i]) < tolerance){
 3424              		.loc 6 246 0
 3425 1c0a 488B45E8 		movq	-24(%rbp), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 116


 3426 1c0e 488B4010 		movq	16(%rax), %rax
 3427 1c12 8B55F4   		movl	-12(%rbp), %edx
 3428 1c15 4863D2   		movslq	%edx, %rdx
 3429 1c18 48C1E203 		salq	$3, %rdx
 3430 1c1c 4801D0   		addq	%rdx, %rax
 3431 1c1f F20F1008 		movsd	(%rax), %xmm1
 3432 1c23 F20F1005 		movsd	.LC12(%rip), %xmm0
 3432      00000000 
 3433 1c2b 660F54C1 		andpd	%xmm1, %xmm0
 3434 1c2f F20F104D 		movsd	-8(%rbp), %xmm1
 3434      F8
 3435 1c34 660F2EC8 		ucomisd	%xmm0, %xmm1
 3436 1c38 761D     		jbe	.L165
 247:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 248:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             u[i] = 0.0;
 3437              		.loc 6 248 0
 3438 1c3a 488B45E8 		movq	-24(%rbp), %rax
 3439 1c3e 488B4010 		movq	16(%rax), %rax
 3440 1c42 8B55F4   		movl	-12(%rbp), %edx
 3441 1c45 4863D2   		movslq	%edx, %rdx
 3442 1c48 48C1E203 		salq	$3, %rdx
 3443 1c4c 4801D0   		addq	%rdx, %rax
 3444 1c4f 660FEFC0 		pxor	%xmm0, %xmm0
 3445 1c53 F20F1100 		movsd	%xmm0, (%rax)
 3446              	.L165:
 249:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         }
 250:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 251:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         if( fabs(v[i]) < tolerance){
 3447              		.loc 6 251 0
 3448 1c57 488B45E8 		movq	-24(%rbp), %rax
 3449 1c5b 488B4018 		movq	24(%rax), %rax
 3450 1c5f 8B55F4   		movl	-12(%rbp), %edx
 3451 1c62 4863D2   		movslq	%edx, %rdx
 3452 1c65 48C1E203 		salq	$3, %rdx
 3453 1c69 4801D0   		addq	%rdx, %rax
 3454 1c6c F20F1008 		movsd	(%rax), %xmm1
 3455 1c70 F20F1005 		movsd	.LC12(%rip), %xmm0
 3455      00000000 
 3456 1c78 660F54C1 		andpd	%xmm1, %xmm0
 3457 1c7c F20F104D 		movsd	-8(%rbp), %xmm1
 3457      F8
 3458 1c81 660F2EC8 		ucomisd	%xmm0, %xmm1
 3459 1c85 761D     		jbe	.L167
 252:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 253:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             v[i] = 0.0;
 3460              		.loc 6 253 0
 3461 1c87 488B45E8 		movq	-24(%rbp), %rax
 3462 1c8b 488B4018 		movq	24(%rax), %rax
 3463 1c8f 8B55F4   		movl	-12(%rbp), %edx
 3464 1c92 4863D2   		movslq	%edx, %rdx
 3465 1c95 48C1E203 		salq	$3, %rdx
 3466 1c99 4801D0   		addq	%rdx, %rax
 3467 1c9c 660FEFC0 		pxor	%xmm0, %xmm0
 3468 1ca0 F20F1100 		movsd	%xmm0, (%rax)
 3469              	.L167:
 239:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 3470              		.loc 6 239 0 discriminator 2
GAS LISTING /tmp/ccbg3Dll.s 			page 117


 3471 1ca4 8345F401 		addl	$1, -12(%rbp)
 3472 1ca8 E900FFFF 		jmp	.L169
 3472      FF
 3473              	.L173:
 3474              	.LBE21:
 254:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         }
 255:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 256:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 257:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 258:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     }
 259:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 260:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 261:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 3475              		.loc 6 261 0
 3476 1cad 90       		nop
 3477 1cae C9       		leave
 3478              		.cfi_def_cfa 7, 8
 3479 1caf C3       		ret
 3480              		.cfi_endproc
 3481              	.LFE6845:
 3483              		.section	.text._ZSt4fmodIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2
 3484              		.weak	_ZSt4fmodIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valu
 3486              	_ZSt4fmodIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__t
 3487              	.LFB6847:
 309:/usr/include/c++/5/cmath ****     {
 3488              		.loc 7 309 0
 3489              		.cfi_startproc
 3490 0000 55       		pushq	%rbp
 3491              		.cfi_def_cfa_offset 16
 3492              		.cfi_offset 6, -16
 3493 0001 4889E5   		movq	%rsp, %rbp
 3494              		.cfi_def_cfa_register 6
 3495 0004 4883EC10 		subq	$16, %rsp
 3496 0008 897DFC   		movl	%edi, -4(%rbp)
 3497 000b 8975F8   		movl	%esi, -8(%rbp)
 312:/usr/include/c++/5/cmath ****     }
 3498              		.loc 7 312 0
 3499 000e 660FEFC9 		pxor	%xmm1, %xmm1
 3500 0012 F20F2A4D 		cvtsi2sd	-8(%rbp), %xmm1
 3500      F8
 3501 0017 660FEFC0 		pxor	%xmm0, %xmm0
 3502 001b F20F2A45 		cvtsi2sd	-4(%rbp), %xmm0
 3502      FC
 3503 0020 E8000000 		call	fmod
 3503      00
 3504 0025 66480F7E 		movq	%xmm0, %rax
 3504      C0
 3505 002a 488945F0 		movq	%rax, -16(%rbp)
 3506 002e F20F1045 		movsd	-16(%rbp), %xmm0
 3506      F0
 313:/usr/include/c++/5/cmath **** 
 3507              		.loc 7 313 0
 3508 0033 C9       		leave
 3509              		.cfi_def_cfa 7, 8
 3510 0034 C3       		ret
 3511              		.cfi_endproc
 3512              	.LFE6847:
GAS LISTING /tmp/ccbg3Dll.s 			page 118


 3514              		.text
 3515              		.align 2
 3516              		.globl	_ZN8Solution11restrictionERS_R4MeshS2_R19Boundary_Conditions
 3518              	_ZN8Solution11restrictionERS_R4MeshS2_R19Boundary_Conditions:
 3519              	.LFB6846:
 262:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 263:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::restriction(Solution &coarse_soln,Mesh &coarse_mesh,
 264:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                            Mesh &fine_mesh, Boundary_Conditions &bc){
 3520              		.loc 6 264 0
 3521              		.cfi_startproc
 3522 1cb0 55       		pushq	%rbp
 3523              		.cfi_def_cfa_offset 16
 3524              		.cfi_offset 6, -16
 3525 1cb1 4889E5   		movq	%rsp, %rbp
 3526              		.cfi_def_cfa_register 6
 3527 1cb4 4883EC40 		subq	$64, %rsp
 3528 1cb8 48897DE8 		movq	%rdi, -24(%rbp)
 3529 1cbc 488975E0 		movq	%rsi, -32(%rbp)
 3530 1cc0 488955D8 		movq	%rdx, -40(%rbp)
 3531 1cc4 48894DD0 		movq	%rcx, -48(%rbp)
 3532 1cc8 4C8945C8 		movq	%r8, -56(%rbp)
 265:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 266:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     int coarse_x, coarse_y;
 267:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     int coarse_i;
 268:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 269:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     double coarse_rho,coarse_u,coarse_v,coarse_w;
 270:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 271:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     coarse_soln.set_average_rho( average_rho);
 3533              		.loc 6 271 0
 3534 1ccc 488B45E8 		movq	-24(%rbp), %rax
 3535 1cd0 488B5040 		movq	64(%rax), %rdx
 3536 1cd4 488B45E0 		movq	-32(%rbp), %rax
 3537 1cd8 488955C0 		movq	%rdx, -64(%rbp)
 3538 1cdc F20F1045 		movsd	-64(%rbp), %xmm0
 3538      C0
 3539 1ce1 4889C7   		movq	%rax, %rdi
 3540 1ce4 E8000000 		call	_ZN8Solution15set_average_rhoEd
 3540      00
 3541              	.LBB22:
 272:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 273:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     //may need to swap the approach here around for parrelisation
 274:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     // i.e. loop through coarse mesh
 275:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     for (int i =0; i< total_nodes; i++){
 3542              		.loc 6 275 0
 3543 1ce9 C745F000 		movl	$0, -16(%rbp)
 3543      000000
 3544              	.L179:
 3545              		.loc 6 275 0 is_stmt 0 discriminator 1
 3546 1cf0 488B45E8 		movq	-24(%rbp), %rax
 3547 1cf4 8B4038   		movl	56(%rax), %eax
 3548 1cf7 3B45F0   		cmpl	-16(%rbp), %eax
 3549 1cfa 0F8E9D01 		jle	.L180
 3549      0000
 276:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 277:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             if(!bc.get_bc(i)){
 3550              		.loc 6 277 0 is_stmt 1
 3551 1d00 8B55F0   		movl	-16(%rbp), %edx
GAS LISTING /tmp/ccbg3Dll.s 			page 119


 3552 1d03 488B45C8 		movq	-56(%rbp), %rax
 3553 1d07 89D6     		movl	%edx, %esi
 3554 1d09 4889C7   		movq	%rax, %rdi
 3555 1d0c E8000000 		call	_ZN19Boundary_Conditions6get_bcEi
 3555      00
 3556 1d11 83F001   		xorl	$1, %eax
 3557 1d14 84C0     		testb	%al, %al
 3558 1d16 0F847801 		je	.L178
 3558      0000
 278:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 // get index in terms of x and y
 279:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 280:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 // 0.5 allows for ghost cells
 281:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 coarse_x = floor( (i/ fine_mesh.get_num_y())/2.0 + 0.5);
 3559              		.loc 6 281 0
 3560 1d1c 488B45D0 		movq	-48(%rbp), %rax
 3561 1d20 4889C7   		movq	%rax, %rdi
 3562 1d23 E8000000 		call	_ZN4Mesh9get_num_yEv
 3562      00
 3563 1d28 89C1     		movl	%eax, %ecx
 3564 1d2a 8B45F0   		movl	-16(%rbp), %eax
 3565 1d2d 99       		cltd
 3566 1d2e F7F9     		idivl	%ecx
 3567 1d30 660FEFC0 		pxor	%xmm0, %xmm0
 3568 1d34 F20F2AC0 		cvtsi2sd	%eax, %xmm0
 3569 1d38 F20F100D 		movsd	.LC8(%rip), %xmm1
 3569      00000000 
 3570 1d40 F20F5EC1 		divsd	%xmm1, %xmm0
 3571 1d44 F20F100D 		movsd	.LC9(%rip), %xmm1
 3571      00000000 
 3572 1d4c F20F58C1 		addsd	%xmm1, %xmm0
 3573 1d50 E8000000 		call	floor
 3573      00
 3574 1d55 F20F2CC0 		cvttsd2si	%xmm0, %eax
 3575 1d59 8945F4   		movl	%eax, -12(%rbp)
 282:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 coarse_y = floor((fmod(i, fine_mesh.get_num_y()) )/2.0 +0.5);
 3576              		.loc 6 282 0
 3577 1d5c 488B45D0 		movq	-48(%rbp), %rax
 3578 1d60 4889C7   		movq	%rax, %rdi
 3579 1d63 E8000000 		call	_ZN4Mesh9get_num_yEv
 3579      00
 3580 1d68 89C2     		movl	%eax, %edx
 3581 1d6a 8B45F0   		movl	-16(%rbp), %eax
 3582 1d6d 89D6     		movl	%edx, %esi
 3583 1d6f 89C7     		movl	%eax, %edi
 3584 1d71 E8000000 		call	_ZSt4fmodIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__value
 3584      00
 3585 1d76 660F28C8 		movapd	%xmm0, %xmm1
 3586 1d7a F20F1005 		movsd	.LC8(%rip), %xmm0
 3586      00000000 
 3587 1d82 F20F5EC8 		divsd	%xmm0, %xmm1
 3588 1d86 660F28C1 		movapd	%xmm1, %xmm0
 3589 1d8a F20F100D 		movsd	.LC9(%rip), %xmm1
 3589      00000000 
 3590 1d92 F20F58C1 		addsd	%xmm1, %xmm0
 3591 1d96 E8000000 		call	floor
 3591      00
 3592 1d9b F20F2CC0 		cvttsd2si	%xmm0, %eax
GAS LISTING /tmp/ccbg3Dll.s 			page 120


 3593 1d9f 8945F8   		movl	%eax, -8(%rbp)
 283:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 284:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 coarse_i = coarse_mesh.get_num_y()* coarse_x + coarse_y;
 3594              		.loc 6 284 0
 3595 1da2 488B45D8 		movq	-40(%rbp), %rax
 3596 1da6 4889C7   		movq	%rax, %rdi
 3597 1da9 E8000000 		call	_ZN4Mesh9get_num_yEv
 3597      00
 3598 1dae 0FAF45F4 		imull	-12(%rbp), %eax
 3599 1db2 89C2     		movl	%eax, %edx
 3600 1db4 8B45F8   		movl	-8(%rbp), %eax
 3601 1db7 01D0     		addl	%edx, %eax
 3602 1db9 8945FC   		movl	%eax, -4(%rbp)
 285:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 286:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 // Uniform Mesh -> get area is not needed-> just divide by 4
 287:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 288:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 289:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 // add area_fine/area_coarse * var to coarse_i
 290:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 291:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 292:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 coarse_soln.add_rho(coarse_i, rho[i]/4.0);
 3603              		.loc 6 292 0
 3604 1dbc 488B45E8 		movq	-24(%rbp), %rax
 3605 1dc0 488B4008 		movq	8(%rax), %rax
 3606 1dc4 8B55F0   		movl	-16(%rbp), %edx
 3607 1dc7 4863D2   		movslq	%edx, %rdx
 3608 1dca 48C1E203 		salq	$3, %rdx
 3609 1dce 4801D0   		addq	%rdx, %rax
 3610 1dd1 F20F1000 		movsd	(%rax), %xmm0
 3611 1dd5 F20F100D 		movsd	.LC11(%rip), %xmm1
 3611      00000000 
 3612 1ddd F20F5EC1 		divsd	%xmm1, %xmm0
 3613 1de1 8B55FC   		movl	-4(%rbp), %edx
 3614 1de4 488B45E0 		movq	-32(%rbp), %rax
 3615 1de8 89D6     		movl	%edx, %esi
 3616 1dea 4889C7   		movq	%rax, %rdi
 3617 1ded E8000000 		call	_ZN8Solution7add_rhoEid
 3617      00
 293:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 coarse_soln.add_u(coarse_i, u[i]/4.0);
 3618              		.loc 6 293 0
 3619 1df2 488B45E8 		movq	-24(%rbp), %rax
 3620 1df6 488B4010 		movq	16(%rax), %rax
 3621 1dfa 8B55F0   		movl	-16(%rbp), %edx
 3622 1dfd 4863D2   		movslq	%edx, %rdx
 3623 1e00 48C1E203 		salq	$3, %rdx
 3624 1e04 4801D0   		addq	%rdx, %rax
 3625 1e07 F20F1000 		movsd	(%rax), %xmm0
 3626 1e0b F20F100D 		movsd	.LC11(%rip), %xmm1
 3626      00000000 
 3627 1e13 F20F5EC1 		divsd	%xmm1, %xmm0
 3628 1e17 8B55FC   		movl	-4(%rbp), %edx
 3629 1e1a 488B45E0 		movq	-32(%rbp), %rax
 3630 1e1e 89D6     		movl	%edx, %esi
 3631 1e20 4889C7   		movq	%rax, %rdi
 3632 1e23 E8000000 		call	_ZN8Solution5add_uEid
 3632      00
 294:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 coarse_soln.add_v(coarse_i, v[i]/4.0);
GAS LISTING /tmp/ccbg3Dll.s 			page 121


 3633              		.loc 6 294 0
 3634 1e28 488B45E8 		movq	-24(%rbp), %rax
 3635 1e2c 488B4018 		movq	24(%rax), %rax
 3636 1e30 8B55F0   		movl	-16(%rbp), %edx
 3637 1e33 4863D2   		movslq	%edx, %rdx
 3638 1e36 48C1E203 		salq	$3, %rdx
 3639 1e3a 4801D0   		addq	%rdx, %rax
 3640 1e3d F20F1000 		movsd	(%rax), %xmm0
 3641 1e41 F20F100D 		movsd	.LC11(%rip), %xmm1
 3641      00000000 
 3642 1e49 F20F5EC1 		divsd	%xmm1, %xmm0
 3643 1e4d 8B55FC   		movl	-4(%rbp), %edx
 3644 1e50 488B45E0 		movq	-32(%rbp), %rax
 3645 1e54 89D6     		movl	%edx, %esi
 3646 1e56 4889C7   		movq	%rax, %rdi
 3647 1e59 E8000000 		call	_ZN8Solution5add_vEid
 3647      00
 295:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 coarse_soln.add_w(coarse_i,w[i]/4.0);
 3648              		.loc 6 295 0
 3649 1e5e 488B45E8 		movq	-24(%rbp), %rax
 3650 1e62 488B4020 		movq	32(%rax), %rax
 3651 1e66 8B55F0   		movl	-16(%rbp), %edx
 3652 1e69 4863D2   		movslq	%edx, %rdx
 3653 1e6c 48C1E203 		salq	$3, %rdx
 3654 1e70 4801D0   		addq	%rdx, %rax
 3655 1e73 F20F1000 		movsd	(%rax), %xmm0
 3656 1e77 F20F100D 		movsd	.LC11(%rip), %xmm1
 3656      00000000 
 3657 1e7f F20F5EC1 		divsd	%xmm1, %xmm0
 3658 1e83 8B55FC   		movl	-4(%rbp), %edx
 3659 1e86 488B45E0 		movq	-32(%rbp), %rax
 3660 1e8a 89D6     		movl	%edx, %esi
 3661 1e8c 4889C7   		movq	%rax, %rdi
 3662 1e8f E8000000 		call	_ZN8Solution5add_wEid
 3662      00
 3663              	.L178:
 275:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 3664              		.loc 6 275 0 discriminator 2
 3665 1e94 8345F001 		addl	$1, -16(%rbp)
 3666 1e98 E953FEFF 		jmp	.L179
 3666      FF
 3667              	.L180:
 3668              	.LBE22:
 296:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }
 297:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 298:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 299:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     }
 300:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 301:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 302:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 3669              		.loc 6 302 0
 3670 1e9d 90       		nop
 3671 1e9e C9       		leave
 3672              		.cfi_def_cfa 7, 8
 3673 1e9f C3       		ret
 3674              		.cfi_endproc
 3675              	.LFE6846:
GAS LISTING /tmp/ccbg3Dll.s 			page 122


 3677              		.section	.text._ZSt5floorIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
 3678              		.weak	_ZSt5floorIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
 3680              	_ZSt5floorIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_:
 3681              	.LFB6849:
 291:/usr/include/c++/5/cmath ****     { return __builtin_floor(__x); }
 3682              		.loc 7 291 0
 3683              		.cfi_startproc
 3684 0000 55       		pushq	%rbp
 3685              		.cfi_def_cfa_offset 16
 3686              		.cfi_offset 6, -16
 3687 0001 4889E5   		movq	%rsp, %rbp
 3688              		.cfi_def_cfa_register 6
 3689 0004 4883EC10 		subq	$16, %rsp
 3690 0008 897DFC   		movl	%edi, -4(%rbp)
 292:/usr/include/c++/5/cmath **** 
 3691              		.loc 7 292 0
 3692 000b 660FEFC0 		pxor	%xmm0, %xmm0
 3693 000f F20F2A45 		cvtsi2sd	-4(%rbp), %xmm0
 3693      FC
 3694 0014 E8000000 		call	floor
 3694      00
 3695 0019 66480F7E 		movq	%xmm0, %rax
 3695      C0
 3696 001e 488945F0 		movq	%rax, -16(%rbp)
 3697 0022 F20F1045 		movsd	-16(%rbp), %xmm0
 3697      F0
 3698 0027 C9       		leave
 3699              		.cfi_def_cfa 7, 8
 3700 0028 C3       		ret
 3701              		.cfi_endproc
 3702              	.LFE6849:
 3704              		.text
 3705              		.align 2
 3706              		.globl	_ZN8Solution12prolongationERS_S0_S0_R4MeshS2_R19Boundary_Conditionsb
 3708              	_ZN8Solution12prolongationERS_S0_S0_R4MeshS2_R19Boundary_Conditionsb:
 3709              	.LFB6848:
 303:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 304:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 305:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 306:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** void Solution::prolongation(Solution &coarse_soln, Solution &temp_soln, Solution &soln,
 307:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                             Mesh &coarse_mesh, Mesh &fine_mesh,
 308:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     Boundary_Conditions &bc ,bool fmg){
 3710              		.loc 6 308 0
 3711              		.cfi_startproc
 3712              		.cfi_personality 0x3,__gxx_personality_v0
 3713              		.cfi_lsda 0x3,.LLSDA6848
 3714 1ea0 55       		pushq	%rbp
 3715              		.cfi_def_cfa_offset 16
 3716              		.cfi_offset 6, -16
 3717 1ea1 4889E5   		movq	%rsp, %rbp
 3718              		.cfi_def_cfa_register 6
 3719 1ea4 53       		pushq	%rbx
 3720 1ea5 4881EC18 		subq	$280, %rsp
 3720      010000
 3721              		.cfi_offset 3, -24
 3722 1eac 4889BD28 		movq	%rdi, -216(%rbp)
 3722      FFFFFF
GAS LISTING /tmp/ccbg3Dll.s 			page 123


 3723 1eb3 4889B520 		movq	%rsi, -224(%rbp)
 3723      FFFFFF
 3724 1eba 48899518 		movq	%rdx, -232(%rbp)
 3724      FFFFFF
 3725 1ec1 48898D10 		movq	%rcx, -240(%rbp)
 3725      FFFFFF
 3726 1ec8 4C898508 		movq	%r8, -248(%rbp)
 3726      FFFFFF
 3727 1ecf 4C898D00 		movq	%r9, -256(%rbp)
 3727      FFFFFF
 3728 1ed6 8B4518   		movl	24(%rbp), %eax
 3729 1ed9 488B5510 		movq	16(%rbp), %rdx
 3730 1edd 488995F8 		movq	%rdx, -264(%rbp)
 3730      FEFFFF
 3731 1ee4 8885F4FE 		movb	%al, -268(%rbp)
 3731      FFFF
 3732              		.loc 6 308 0
 3733 1eea 64488B04 		movq	%fs:40, %rax
 3733      25280000 
 3733      00
 3734 1ef3 488945E8 		movq	%rax, -24(%rbp)
 3735 1ef7 31C0     		xorl	%eax, %eax
 309:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         double mg_delta_rho, mg_delta_u, mg_delta_v, mg_delta_w;
 310:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             //loop through the finer mesh as this will enable parrelisation later
 311:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 312:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         int edge_cell_x,edge_cell_y,coarse_i,coarse_x,coarse_y;
 313:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 314:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 315:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         double mg_factor[4] = {9.0/16.0 ,3.0/16.0, 3.0/16.0, 1./16.0 };
 3736              		.loc 6 315 0
 3737 1ef9 F20F1005 		movsd	.LC13(%rip), %xmm0
 3737      00000000 
 3738 1f01 F20F1145 		movsd	%xmm0, -64(%rbp)
 3738      C0
 3739 1f06 F20F1005 		movsd	.LC14(%rip), %xmm0
 3739      00000000 
 3740 1f0e F20F1145 		movsd	%xmm0, -56(%rbp)
 3740      C8
 3741 1f13 F20F1005 		movsd	.LC14(%rip), %xmm0
 3741      00000000 
 3742 1f1b F20F1145 		movsd	%xmm0, -48(%rbp)
 3742      D0
 3743 1f20 F20F1005 		movsd	.LC15(%rip), %xmm0
 3743      00000000 
 3744 1f28 F20F1145 		movsd	%xmm0, -40(%rbp)
 3744      D8
 316:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 317:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         bool calculate;
 318:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         Solution debug(fine_mesh.get_total_cells());
 3745              		.loc 6 318 0
 3746 1f2d 488B8500 		movq	-256(%rbp), %rax
 3746      FFFFFF
 3747 1f34 4889C7   		movq	%rax, %rdi
 3748 1f37 E8000000 		call	_ZN4Mesh15get_total_cellsEv
 3748      00
 3749 1f3c 89C2     		movl	%eax, %edx
 3750 1f3e 488D8570 		leaq	-144(%rbp), %rax
GAS LISTING /tmp/ccbg3Dll.s 			page 124


 3750      FFFFFF
 3751 1f45 89D6     		movl	%edx, %esi
 3752 1f47 4889C7   		movq	%rax, %rdi
 3753              	.LEHB22:
 3754 1f4a E8000000 		call	_ZN8SolutionC1Ei
 3754      00
 3755              	.LEHE22:
 319:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 320:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         debug.Initialise();
 3756              		.loc 6 320 0
 3757 1f4f 488D8570 		leaq	-144(%rbp), %rax
 3757      FFFFFF
 3758 1f56 4889C7   		movq	%rax, %rdi
 3759              	.LEHB23:
 3760 1f59 E8000000 		call	_ZN8Solution10InitialiseEv
 3760      00
 3761              	.LEHE23:
 3762              	.LBB23:
 321:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 322:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****        for(int i =0; i< total_nodes; i++){
 3763              		.loc 6 322 0
 3764 1f5e C78540FF 		movl	$0, -192(%rbp)
 3764      FFFF0000 
 3764      0000
 3765              	.L195:
 3766              		.loc 6 322 0 is_stmt 0 discriminator 1
 3767 1f68 488B8528 		movq	-216(%rbp), %rax
 3767      FFFFFF
 3768 1f6f 8B4038   		movl	56(%rax), %eax
 3769 1f72 3B8540FF 		cmpl	-192(%rbp), %eax
 3769      FFFF
 3770 1f78 0F8E7805 		jle	.L184
 3770      0000
 3771              	.LBB24:
 3772              	.LBB25:
 323:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 324:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             if(! bc.get_bc(i)){
 3773              		.loc 6 324 0 is_stmt 1
 3774 1f7e 8B9540FF 		movl	-192(%rbp), %edx
 3774      FFFF
 3775 1f84 488B85F8 		movq	-264(%rbp), %rax
 3775      FEFFFF
 3776 1f8b 89D6     		movl	%edx, %esi
 3777 1f8d 4889C7   		movq	%rax, %rdi
 3778 1f90 E8000000 		call	_ZN19Boundary_Conditions6get_bcEi
 3778      00
 3779 1f95 83F001   		xorl	$1, %eax
 3780 1f98 84C0     		testb	%al, %al
 3781 1f9a 0F844A05 		je	.L185
 3781      0000
 3782              	.LBB26:
 325:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 326:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             // get index in terms of x and y
 327:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             coarse_x = floor(i/ fine_mesh.get_num_y()/2.0 +0.5);
 3783              		.loc 6 327 0
 3784 1fa0 488B8500 		movq	-256(%rbp), %rax
 3784      FFFFFF
GAS LISTING /tmp/ccbg3Dll.s 			page 125


 3785 1fa7 4889C7   		movq	%rax, %rdi
 3786 1faa E8000000 		call	_ZN4Mesh9get_num_yEv
 3786      00
 3787 1faf 89C3     		movl	%eax, %ebx
 3788 1fb1 8B8540FF 		movl	-192(%rbp), %eax
 3788      FFFF
 3789 1fb7 99       		cltd
 3790 1fb8 F7FB     		idivl	%ebx
 3791 1fba 660FEFC0 		pxor	%xmm0, %xmm0
 3792 1fbe F20F2AC0 		cvtsi2sd	%eax, %xmm0
 3793 1fc2 F20F100D 		movsd	.LC8(%rip), %xmm1
 3793      00000000 
 3794 1fca F20F5EC1 		divsd	%xmm1, %xmm0
 3795 1fce F20F100D 		movsd	.LC9(%rip), %xmm1
 3795      00000000 
 3796 1fd6 F20F58C1 		addsd	%xmm1, %xmm0
 3797 1fda E8000000 		call	floor
 3797      00
 3798 1fdf F20F2CC0 		cvttsd2si	%xmm0, %eax
 3799 1fe3 898548FF 		movl	%eax, -184(%rbp)
 3799      FFFF
 328:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             coarse_y = floor(fmod(i, fine_mesh.get_num_y())/2.0+ 0.5);
 3800              		.loc 6 328 0
 3801 1fe9 488B8500 		movq	-256(%rbp), %rax
 3801      FFFFFF
 3802 1ff0 4889C7   		movq	%rax, %rdi
 3803 1ff3 E8000000 		call	_ZN4Mesh9get_num_yEv
 3803      00
 3804 1ff8 89C2     		movl	%eax, %edx
 3805 1ffa 8B8540FF 		movl	-192(%rbp), %eax
 3805      FFFF
 3806 2000 89D6     		movl	%edx, %esi
 3807 2002 89C7     		movl	%eax, %edi
 3808 2004 E8000000 		call	_ZSt4fmodIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__value
 3808      00
 3809 2009 660F28C8 		movapd	%xmm0, %xmm1
 3810 200d F20F1005 		movsd	.LC8(%rip), %xmm0
 3810      00000000 
 3811 2015 F20F5EC8 		divsd	%xmm0, %xmm1
 3812 2019 660F28C1 		movapd	%xmm1, %xmm0
 3813 201d F20F100D 		movsd	.LC9(%rip), %xmm1
 3813      00000000 
 3814 2025 F20F58C1 		addsd	%xmm1, %xmm0
 3815 2029 E8000000 		call	floor
 3815      00
 3816 202e F20F2CC0 		cvttsd2si	%xmm0, %eax
 3817 2032 89854CFF 		movl	%eax, -180(%rbp)
 3817      FFFF
 3818              	.LBB27:
 329:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 330:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             // for finer cells within a coarse cell
 331:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 332:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             for(int j = 0; j <4; j++){
 3819              		.loc 6 332 0
 3820 2038 C78544FF 		movl	$0, -188(%rbp)
 3820      FFFF0000 
 3820      0000
GAS LISTING /tmp/ccbg3Dll.s 			page 126


 3821              	.L194:
 3822              		.loc 6 332 0 is_stmt 0 discriminator 1
 3823 2042 83BD44FF 		cmpl	$3, -188(%rbp)
 3823      FFFF03
 3824 2049 0F8F9B04 		jg	.L185
 3824      0000
 333:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     calculate = true;
 3825              		.loc 6 333 0 is_stmt 1
 3826 204f C68533FF 		movb	$1, -205(%rbp)
 3826      FFFF01
 334:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 335:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                  switch(j) {
 3827              		.loc 6 335 0
 3828 2056 8B8544FF 		movl	-188(%rbp), %eax
 3828      FFFF
 3829 205c 83F801   		cmpl	$1, %eax
 3830 205f 7450     		je	.L188
 3831 2061 83F801   		cmpl	$1, %eax
 3832 2064 7F09     		jg	.L189
 3833 2066 85C0     		testl	%eax, %eax
 3834 2068 741C     		je	.L190
 3835 206a E9A70100 		jmp	.L187
 3835      00
 3836              	.L189:
 3837 206f 83F802   		cmpl	$2, %eax
 3838 2072 0F84D900 		je	.L191
 3838      0000
 3839 2078 83F803   		cmpl	$3, %eax
 3840 207b 0F846E01 		je	.L192
 3840      0000
 3841 2081 E9900100 		jmp	.L187
 3841      00
 3842              	.L190:
 336:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 337:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     case 0: // nearest coarse cell
 338:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         coarse_i = coarse_mesh.get_num_y()* coarse_x + coarse_y;
 3843              		.loc 6 338 0
 3844 2086 488B8508 		movq	-248(%rbp), %rax
 3844      FFFFFF
 3845 208d 4889C7   		movq	%rax, %rdi
 3846 2090 E8000000 		call	_ZN4Mesh9get_num_yEv
 3846      00
 3847 2095 0FAF8548 		imull	-184(%rbp), %eax
 3847      FFFFFF
 3848 209c 89C2     		movl	%eax, %edx
 3849 209e 8B854CFF 		movl	-180(%rbp), %eax
 3849      FFFF
 3850 20a4 01D0     		addl	%edx, %eax
 3851 20a6 89853CFF 		movl	%eax, -196(%rbp)
 3851      FFFF
 339:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         break;
 3852              		.loc 6 339 0
 3853 20ac E9650100 		jmp	.L187
 3853      00
 3854              	.L188:
 340:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 341:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     case 1:
GAS LISTING /tmp/ccbg3Dll.s 			page 127


 342:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         //North/South edge cell contribution
 343:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         edge_cell_y = coarse_y + pow(-1.0,floor(fmod(fmod(i, fine_mesh.get_num_y())
 3855              		.loc 6 343 0
 3856 20b1 660FEFFF 		pxor	%xmm7, %xmm7
 3857 20b5 F20F2ABD 		cvtsi2sd	-180(%rbp), %xmm7
 3857      4CFFFFFF 
 3858 20bd F20F11BD 		movsd	%xmm7, -280(%rbp)
 3858      E8FEFFFF 
 3859 20c5 488B8500 		movq	-256(%rbp), %rax
 3859      FFFFFF
 3860 20cc 4889C7   		movq	%rax, %rdi
 3861 20cf E8000000 		call	_ZN4Mesh9get_num_yEv
 3861      00
 3862 20d4 89C2     		movl	%eax, %edx
 3863 20d6 8B8540FF 		movl	-192(%rbp), %eax
 3863      FFFF
 3864 20dc 89D6     		movl	%edx, %esi
 3865 20de 89C7     		movl	%eax, %edi
 3866 20e0 E8000000 		call	_ZSt4fmodIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__value
 3866      00
 3867 20e5 660F28D0 		movapd	%xmm0, %xmm2
 3868 20e9 F20F1005 		movsd	.LC8(%rip), %xmm0
 3868      00000000 
 3869 20f1 660F28C8 		movapd	%xmm0, %xmm1
 3870 20f5 660F28C2 		movapd	%xmm2, %xmm0
 3871 20f9 E8000000 		call	fmod
 3871      00
 3872 20fe E8000000 		call	floor
 3872      00
 3873 2103 660F28C8 		movapd	%xmm0, %xmm1
 3874 2107 F20F1005 		movsd	.LC16(%rip), %xmm0
 3874      00000000 
 3875 210f E8000000 		call	pow
 3875      00
 3876 2114 F20F5885 		addsd	-280(%rbp), %xmm0
 3876      E8FEFFFF 
 3877 211c F20F2CC0 		cvttsd2si	%xmm0, %eax
 3878 2120 898538FF 		movl	%eax, -200(%rbp)
 3878      FFFF
 344:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         coarse_i = coarse_mesh.get_num_y() * coarse_x + edge_cell_y;
 3879              		.loc 6 344 0
 3880 2126 488B8508 		movq	-248(%rbp), %rax
 3880      FFFFFF
 3881 212d 4889C7   		movq	%rax, %rdi
 3882 2130 E8000000 		call	_ZN4Mesh9get_num_yEv
 3882      00
 3883 2135 0FAF8548 		imull	-184(%rbp), %eax
 3883      FFFFFF
 3884 213c 89C2     		movl	%eax, %edx
 3885 213e 8B8538FF 		movl	-200(%rbp), %eax
 3885      FFFF
 3886 2144 01D0     		addl	%edx, %eax
 3887 2146 89853CFF 		movl	%eax, -196(%rbp)
 3887      FFFF
 345:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 346:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         break;
 3888              		.loc 6 346 0
GAS LISTING /tmp/ccbg3Dll.s 			page 128


 3889 214c E9C50000 		jmp	.L187
 3889      00
 3890              	.L191:
 347:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     case 2:
 348:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         //East/West edge cell contribution
 349:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         edge_cell_x = coarse_x + pow(-1.0 , floor(fmod(floor(i/ fine_mesh.get_num_y
 3891              		.loc 6 349 0
 3892 2151 660FEFDB 		pxor	%xmm3, %xmm3
 3893 2155 F20F2A9D 		cvtsi2sd	-184(%rbp), %xmm3
 3893      48FFFFFF 
 3894 215d F20F119D 		movsd	%xmm3, -280(%rbp)
 3894      E8FEFFFF 
 3895 2165 488B8500 		movq	-256(%rbp), %rax
 3895      FFFFFF
 3896 216c 4889C7   		movq	%rax, %rdi
 3897 216f E8000000 		call	_ZN4Mesh9get_num_yEv
 3897      00
 3898 2174 89C3     		movl	%eax, %ebx
 3899 2176 8B8540FF 		movl	-192(%rbp), %eax
 3899      FFFF
 3900 217c 99       		cltd
 3901 217d F7FB     		idivl	%ebx
 3902 217f 89C7     		movl	%eax, %edi
 3903 2181 E8000000 		call	_ZSt5floorIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
 3903      00
 3904 2186 660F28D0 		movapd	%xmm0, %xmm2
 3905 218a F20F1005 		movsd	.LC8(%rip), %xmm0
 3905      00000000 
 3906 2192 660F28C8 		movapd	%xmm0, %xmm1
 3907 2196 660F28C2 		movapd	%xmm2, %xmm0
 3908 219a E8000000 		call	fmod
 3908      00
 3909 219f E8000000 		call	floor
 3909      00
 3910 21a4 660F28C8 		movapd	%xmm0, %xmm1
 3911 21a8 F20F1005 		movsd	.LC16(%rip), %xmm0
 3911      00000000 
 3912 21b0 E8000000 		call	pow
 3912      00
 3913 21b5 F20F5885 		addsd	-280(%rbp), %xmm0
 3913      E8FEFFFF 
 3914 21bd F20F2CC0 		cvttsd2si	%xmm0, %eax
 3915 21c1 898534FF 		movl	%eax, -204(%rbp)
 3915      FFFF
 350:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         coarse_i = coarse_mesh.get_num_y()* edge_cell_x + coarse_y;
 3916              		.loc 6 350 0
 3917 21c7 488B8508 		movq	-248(%rbp), %rax
 3917      FFFFFF
 3918 21ce 4889C7   		movq	%rax, %rdi
 3919 21d1 E8000000 		call	_ZN4Mesh9get_num_yEv
 3919      00
 3920 21d6 0FAF8534 		imull	-204(%rbp), %eax
 3920      FFFFFF
 3921 21dd 89C2     		movl	%eax, %edx
 3922 21df 8B854CFF 		movl	-180(%rbp), %eax
 3922      FFFF
 3923 21e5 01D0     		addl	%edx, %eax
GAS LISTING /tmp/ccbg3Dll.s 			page 129


 3924 21e7 89853CFF 		movl	%eax, -196(%rbp)
 3924      FFFF
 351:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 352:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         break;
 3925              		.loc 6 352 0
 3926 21ed EB27     		jmp	.L187
 3927              	.L192:
 353:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     case 3:
 354:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         // Vertex coarse cell Contribution
 355:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         coarse_i = coarse_mesh.get_num_y()* edge_cell_x + edge_cell_y;
 3928              		.loc 6 355 0
 3929 21ef 488B8508 		movq	-248(%rbp), %rax
 3929      FFFFFF
 3930 21f6 4889C7   		movq	%rax, %rdi
 3931 21f9 E8000000 		call	_ZN4Mesh9get_num_yEv
 3931      00
 3932 21fe 0FAF8534 		imull	-204(%rbp), %eax
 3932      FFFFFF
 3933 2205 89C2     		movl	%eax, %edx
 3934 2207 8B8538FF 		movl	-200(%rbp), %eax
 3934      FFFF
 3935 220d 01D0     		addl	%edx, %eax
 3936 220f 89853CFF 		movl	%eax, -196(%rbp)
 3936      FFFF
 356:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 357:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                         break;
 3937              		.loc 6 357 0
 3938 2215 90       		nop
 3939              	.L187:
 358:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 }
 359:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 360:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 // check if fine cell is on corner or edge
 361:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 362:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 // West Edge
 363:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 364:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 365:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 /// coarse_soln = Q2h
 366:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 /// temp_soln = Q2h_(0)
 367:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 /// soln = Qh
 368:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 if (calculate == true){
 3940              		.loc 6 368 0
 3941 2216 80BD33FF 		cmpb	$0, -205(%rbp)
 3941      FFFF00
 3942 221d 0F84BB02 		je	.L193
 3942      0000
 369:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     //_delta_rho = 1*mg_factor[j]* edge_factor;
 370:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     mg_delta_rho = (coarse_soln.get_rho(coarse_i) - temp_soln.get_rho(coarse_i)) *m
 3943              		.loc 6 370 0
 3944 2223 8B953CFF 		movl	-196(%rbp), %edx
 3944      FFFF
 3945 2229 488B8520 		movq	-224(%rbp), %rax
 3945      FFFFFF
 3946 2230 89D6     		movl	%edx, %esi
 3947 2232 4889C7   		movq	%rax, %rdi
 3948 2235 E8000000 		call	_ZN8Solution7get_rhoEi
 3948      00
 3949 223a F20F1185 		movsd	%xmm0, -280(%rbp)
GAS LISTING /tmp/ccbg3Dll.s 			page 130


 3949      E8FEFFFF 
 3950 2242 8B953CFF 		movl	-196(%rbp), %edx
 3950      FFFF
 3951 2248 488B8518 		movq	-232(%rbp), %rax
 3951      FFFFFF
 3952 224f 89D6     		movl	%edx, %esi
 3953 2251 4889C7   		movq	%rax, %rdi
 3954 2254 E8000000 		call	_ZN8Solution7get_rhoEi
 3954      00
 3955 2259 F20F109D 		movsd	-280(%rbp), %xmm3
 3955      E8FEFFFF 
 3956 2261 F20F5CD8 		subsd	%xmm0, %xmm3
 3957 2265 660F28C3 		movapd	%xmm3, %xmm0
 3958 2269 8B8544FF 		movl	-188(%rbp), %eax
 3958      FFFF
 3959 226f 4898     		cltq
 3960 2271 F20F104C 		movsd	-64(%rbp,%rax,8), %xmm1
 3960      C5C0
 3961 2277 F20F59C1 		mulsd	%xmm1, %xmm0
 3962 227b F20F1185 		movsd	%xmm0, -176(%rbp)
 3962      50FFFFFF 
 371:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     mg_delta_u = (coarse_soln.get_u(coarse_i) - temp_soln.get_u(coarse_i))*mg_facto
 3963              		.loc 6 371 0
 3964 2283 8B953CFF 		movl	-196(%rbp), %edx
 3964      FFFF
 3965 2289 488B8520 		movq	-224(%rbp), %rax
 3965      FFFFFF
 3966 2290 89D6     		movl	%edx, %esi
 3967 2292 4889C7   		movq	%rax, %rdi
 3968 2295 E8000000 		call	_ZN8Solution5get_uEi
 3968      00
 3969 229a F20F1185 		movsd	%xmm0, -280(%rbp)
 3969      E8FEFFFF 
 3970 22a2 8B953CFF 		movl	-196(%rbp), %edx
 3970      FFFF
 3971 22a8 488B8518 		movq	-232(%rbp), %rax
 3971      FFFFFF
 3972 22af 89D6     		movl	%edx, %esi
 3973 22b1 4889C7   		movq	%rax, %rdi
 3974 22b4 E8000000 		call	_ZN8Solution5get_uEi
 3974      00
 3975 22b9 F20F10A5 		movsd	-280(%rbp), %xmm4
 3975      E8FEFFFF 
 3976 22c1 F20F5CE0 		subsd	%xmm0, %xmm4
 3977 22c5 660F28C4 		movapd	%xmm4, %xmm0
 3978 22c9 8B8544FF 		movl	-188(%rbp), %eax
 3978      FFFF
 3979 22cf 4898     		cltq
 3980 22d1 F20F104C 		movsd	-64(%rbp,%rax,8), %xmm1
 3980      C5C0
 3981 22d7 F20F59C1 		mulsd	%xmm1, %xmm0
 3982 22db F20F1185 		movsd	%xmm0, -168(%rbp)
 3982      58FFFFFF 
 372:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     mg_delta_v = (coarse_soln.get_v(coarse_i) - temp_soln.get_v(coarse_i)) *mg_fact
 3983              		.loc 6 372 0
 3984 22e3 8B953CFF 		movl	-196(%rbp), %edx
 3984      FFFF
GAS LISTING /tmp/ccbg3Dll.s 			page 131


 3985 22e9 488B8520 		movq	-224(%rbp), %rax
 3985      FFFFFF
 3986 22f0 89D6     		movl	%edx, %esi
 3987 22f2 4889C7   		movq	%rax, %rdi
 3988 22f5 E8000000 		call	_ZN8Solution5get_vEi
 3988      00
 3989 22fa F20F1185 		movsd	%xmm0, -280(%rbp)
 3989      E8FEFFFF 
 3990 2302 8B953CFF 		movl	-196(%rbp), %edx
 3990      FFFF
 3991 2308 488B8518 		movq	-232(%rbp), %rax
 3991      FFFFFF
 3992 230f 89D6     		movl	%edx, %esi
 3993 2311 4889C7   		movq	%rax, %rdi
 3994 2314 E8000000 		call	_ZN8Solution5get_vEi
 3994      00
 3995 2319 F20F10AD 		movsd	-280(%rbp), %xmm5
 3995      E8FEFFFF 
 3996 2321 F20F5CE8 		subsd	%xmm0, %xmm5
 3997 2325 660F28C5 		movapd	%xmm5, %xmm0
 3998 2329 8B8544FF 		movl	-188(%rbp), %eax
 3998      FFFF
 3999 232f 4898     		cltq
 4000 2331 F20F104C 		movsd	-64(%rbp,%rax,8), %xmm1
 4000      C5C0
 4001 2337 F20F59C1 		mulsd	%xmm1, %xmm0
 4002 233b F20F1185 		movsd	%xmm0, -160(%rbp)
 4002      60FFFFFF 
 373:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     mg_delta_w = (coarse_soln.get_w(coarse_i) - temp_soln.get_w(coarse_i))*mg_facto
 4003              		.loc 6 373 0
 4004 2343 8B953CFF 		movl	-196(%rbp), %edx
 4004      FFFF
 4005 2349 488B8520 		movq	-224(%rbp), %rax
 4005      FFFFFF
 4006 2350 89D6     		movl	%edx, %esi
 4007 2352 4889C7   		movq	%rax, %rdi
 4008 2355 E8000000 		call	_ZN8Solution5get_wEi
 4008      00
 4009 235a F20F1185 		movsd	%xmm0, -280(%rbp)
 4009      E8FEFFFF 
 4010 2362 8B953CFF 		movl	-196(%rbp), %edx
 4010      FFFF
 4011 2368 488B8518 		movq	-232(%rbp), %rax
 4011      FFFFFF
 4012 236f 89D6     		movl	%edx, %esi
 4013 2371 4889C7   		movq	%rax, %rdi
 4014 2374 E8000000 		call	_ZN8Solution5get_wEi
 4014      00
 4015 2379 F20F10B5 		movsd	-280(%rbp), %xmm6
 4015      E8FEFFFF 
 4016 2381 F20F5CF0 		subsd	%xmm0, %xmm6
 4017 2385 660F28C6 		movapd	%xmm6, %xmm0
 4018 2389 8B8544FF 		movl	-188(%rbp), %eax
 4018      FFFF
 4019 238f 4898     		cltq
 4020 2391 F20F104C 		movsd	-64(%rbp,%rax,8), %xmm1
 4020      C5C0
GAS LISTING /tmp/ccbg3Dll.s 			page 132


 4021 2397 F20F59C1 		mulsd	%xmm1, %xmm0
 4022 239b F20F1185 		movsd	%xmm0, -152(%rbp)
 4022      68FFFFFF 
 374:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 375:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     soln.add_rho(i, mg_delta_rho ) ;
 4023              		.loc 6 375 0
 4024 23a3 488B8D50 		movq	-176(%rbp), %rcx
 4024      FFFFFF
 4025 23aa 8B9540FF 		movl	-192(%rbp), %edx
 4025      FFFF
 4026 23b0 488B8510 		movq	-240(%rbp), %rax
 4026      FFFFFF
 4027 23b7 48898DE8 		movq	%rcx, -280(%rbp)
 4027      FEFFFF
 4028 23be F20F1085 		movsd	-280(%rbp), %xmm0
 4028      E8FEFFFF 
 4029 23c6 89D6     		movl	%edx, %esi
 4030 23c8 4889C7   		movq	%rax, %rdi
 4031 23cb E8000000 		call	_ZN8Solution7add_rhoEid
 4031      00
 376:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     soln.add_u(i, mg_delta_u);
 4032              		.loc 6 376 0
 4033 23d0 488B8D58 		movq	-168(%rbp), %rcx
 4033      FFFFFF
 4034 23d7 8B9540FF 		movl	-192(%rbp), %edx
 4034      FFFF
 4035 23dd 488B8510 		movq	-240(%rbp), %rax
 4035      FFFFFF
 4036 23e4 48898DE8 		movq	%rcx, -280(%rbp)
 4036      FEFFFF
 4037 23eb F20F1085 		movsd	-280(%rbp), %xmm0
 4037      E8FEFFFF 
 4038 23f3 89D6     		movl	%edx, %esi
 4039 23f5 4889C7   		movq	%rax, %rdi
 4040 23f8 E8000000 		call	_ZN8Solution5add_uEid
 4040      00
 377:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     soln.add_v(i,mg_delta_v);
 4041              		.loc 6 377 0
 4042 23fd 488B8D60 		movq	-160(%rbp), %rcx
 4042      FFFFFF
 4043 2404 8B9540FF 		movl	-192(%rbp), %edx
 4043      FFFF
 4044 240a 488B8510 		movq	-240(%rbp), %rax
 4044      FFFFFF
 4045 2411 48898DE8 		movq	%rcx, -280(%rbp)
 4045      FEFFFF
 4046 2418 F20F1085 		movsd	-280(%rbp), %xmm0
 4046      E8FEFFFF 
 4047 2420 89D6     		movl	%edx, %esi
 4048 2422 4889C7   		movq	%rax, %rdi
 4049 2425 E8000000 		call	_ZN8Solution5add_vEid
 4049      00
 378:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     soln.add_w(i,mg_delta_v);
 4050              		.loc 6 378 0
 4051 242a 488B8D60 		movq	-160(%rbp), %rcx
 4051      FFFFFF
 4052 2431 8B9540FF 		movl	-192(%rbp), %edx
GAS LISTING /tmp/ccbg3Dll.s 			page 133


 4052      FFFF
 4053 2437 488B8510 		movq	-240(%rbp), %rax
 4053      FFFFFF
 4054 243e 48898DE8 		movq	%rcx, -280(%rbp)
 4054      FEFFFF
 4055 2445 F20F1085 		movsd	-280(%rbp), %xmm0
 4055      E8FEFFFF 
 4056 244d 89D6     		movl	%edx, %esi
 4057 244f 4889C7   		movq	%rax, %rdi
 4058 2452 E8000000 		call	_ZN8Solution5add_wEid
 4058      00
 379:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     debug.add_rho(i, mg_delta_rho);
 4059              		.loc 6 379 0
 4060 2457 488B8D50 		movq	-176(%rbp), %rcx
 4060      FFFFFF
 4061 245e 8B9540FF 		movl	-192(%rbp), %edx
 4061      FFFF
 4062 2464 488D8570 		leaq	-144(%rbp), %rax
 4062      FFFFFF
 4063 246b 48898DE8 		movq	%rcx, -280(%rbp)
 4063      FEFFFF
 4064 2472 F20F1085 		movsd	-280(%rbp), %xmm0
 4064      E8FEFFFF 
 4065 247a 89D6     		movl	%edx, %esi
 4066 247c 4889C7   		movq	%rax, %rdi
 4067 247f E8000000 		call	_ZN8Solution7add_rhoEid
 4067      00
 380:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     debug.add_u(i,mg_delta_u);
 4068              		.loc 6 380 0
 4069 2484 488B8D58 		movq	-168(%rbp), %rcx
 4069      FFFFFF
 4070 248b 8B9540FF 		movl	-192(%rbp), %edx
 4070      FFFF
 4071 2491 488D8570 		leaq	-144(%rbp), %rax
 4071      FFFFFF
 4072 2498 48898DE8 		movq	%rcx, -280(%rbp)
 4072      FEFFFF
 4073 249f F20F1085 		movsd	-280(%rbp), %xmm0
 4073      E8FEFFFF 
 4074 24a7 89D6     		movl	%edx, %esi
 4075 24a9 4889C7   		movq	%rax, %rdi
 4076 24ac E8000000 		call	_ZN8Solution5add_uEid
 4076      00
 381:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     debug.add_v(i,mg_delta_v);
 4077              		.loc 6 381 0
 4078 24b1 488B8D60 		movq	-160(%rbp), %rcx
 4078      FFFFFF
 4079 24b8 8B9540FF 		movl	-192(%rbp), %edx
 4079      FFFF
 4080 24be 488D8570 		leaq	-144(%rbp), %rax
 4080      FFFFFF
 4081 24c5 48898DE8 		movq	%rcx, -280(%rbp)
 4081      FEFFFF
 4082 24cc F20F1085 		movsd	-280(%rbp), %xmm0
 4082      E8FEFFFF 
 4083 24d4 89D6     		movl	%edx, %esi
 4084 24d6 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccbg3Dll.s 			page 134


 4085 24d9 E8000000 		call	_ZN8Solution5add_vEid
 4085      00
 4086              	.L193:
 332:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                     calculate = true;
 4087              		.loc 6 332 0 discriminator 2
 4088 24de 838544FF 		addl	$1, -188(%rbp)
 4088      FFFF01
 4089 24e5 E958FBFF 		jmp	.L194
 4089      FF
 4090              	.L185:
 4091              	.LBE27:
 4092              	.LBE26:
 4093              	.LBE25:
 4094              	.LBE24:
 322:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 4095              		.loc 6 322 0 discriminator 2
 4096 24ea 838540FF 		addl	$1, -192(%rbp)
 4096      FFFF01
 4097 24f1 E972FAFF 		jmp	.L195
 4097      FF
 4098              	.L184:
 4099              	.LBE23:
 382:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****                 }
 383:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****             }
 384:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****         }
 385:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****     }
 386:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp ****       calculate = true;
 4100              		.loc 6 386 0
 4101 24f6 C68533FF 		movb	$1, -205(%rbp)
 4101      FFFF01
 318:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 4102              		.loc 6 318 0
 4103 24fd 488D8570 		leaq	-144(%rbp), %rax
 4103      FFFFFF
 4104 2504 4889C7   		movq	%rax, %rdi
 4105 2507 E8000000 		call	_ZN8SolutionD1Ev
 4105      00
 387:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** }
 4106              		.loc 6 387 0
 4107 250c 90       		nop
 4108 250d 488B45E8 		movq	-24(%rbp), %rax
 4109 2511 64483304 		xorq	%fs:40, %rax
 4109      25280000 
 4109      00
 4110 251a 7424     		je	.L197
 4111 251c EB1D     		jmp	.L199
 4112              	.L198:
 4113 251e 4889C3   		movq	%rax, %rbx
 318:/home/brendan/Dropbox/PhD/Code/LBM/2D LBFS/src/Solution.cpp **** 
 4114              		.loc 6 318 0
 4115 2521 488D8570 		leaq	-144(%rbp), %rax
 4115      FFFFFF
 4116 2528 4889C7   		movq	%rax, %rdi
 4117 252b E8000000 		call	_ZN8SolutionD1Ev
 4117      00
 4118 2530 4889D8   		movq	%rbx, %rax
 4119 2533 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccbg3Dll.s 			page 135


 4120              	.LEHB24:
 4121 2536 E8000000 		call	_Unwind_Resume
 4121      00
 4122              	.LEHE24:
 4123              	.L199:
 4124              		.loc 6 387 0
 4125 253b E8000000 		call	__stack_chk_fail
 4125      00
 4126              	.L197:
 4127 2540 4881C418 		addq	$280, %rsp
 4127      010000
 4128 2547 5B       		popq	%rbx
 4129 2548 5D       		popq	%rbp
 4130              		.cfi_def_cfa 7, 8
 4131 2549 C3       		ret
 4132              		.cfi_endproc
 4133              	.LFE6848:
 4134              		.section	.gcc_except_table
 4135              	.LLSDA6848:
 4136 0084 FF       		.byte	0xff
 4137 0085 FF       		.byte	0xff
 4138 0086 01       		.byte	0x1
 4139 0087 10       		.uleb128 .LLSDACSE6848-.LLSDACSB6848
 4140              	.LLSDACSB6848:
 4141 0088 AA01     		.uleb128 .LEHB22-.LFB6848
 4142 008a 05       		.uleb128 .LEHE22-.LEHB22
 4143 008b 00       		.uleb128 0
 4144 008c 00       		.uleb128 0
 4145 008d B901     		.uleb128 .LEHB23-.LFB6848
 4146 008f 05       		.uleb128 .LEHE23-.LEHB23
 4147 0090 FE0C     		.uleb128 .L198-.LFB6848
 4148 0092 00       		.uleb128 0
 4149 0093 960D     		.uleb128 .LEHB24-.LFB6848
 4150 0095 05       		.uleb128 .LEHE24-.LEHB24
 4151 0096 00       		.uleb128 0
 4152 0097 00       		.uleb128 0
 4153              	.LLSDACSE6848:
 4154              		.text
 4156              		.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_,"axG
 4157              		.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
 4159              	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_:
 4160              	.LFB6918:
 4161              		.file 8 "/usr/include/c++/5/bits/basic_string.h"
   1:/usr/include/c++/5/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/5/bits/basic_string.h **** 
   3:/usr/include/c++/5/bits/basic_string.h **** // Copyright (C) 1997-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/basic_string.h **** //
   5:/usr/include/c++/5/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/5/bits/basic_string.h **** 
  11:/usr/include/c++/5/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/basic_string.h **** // GNU General Public License for more details.
GAS LISTING /tmp/ccbg3Dll.s 			page 136


  15:/usr/include/c++/5/bits/basic_string.h **** 
  16:/usr/include/c++/5/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/basic_string.h **** 
  20:/usr/include/c++/5/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/basic_string.h **** 
  25:/usr/include/c++/5/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/5/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/5/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/5/bits/basic_string.h ****  */
  29:/usr/include/c++/5/bits/basic_string.h **** 
  30:/usr/include/c++/5/bits/basic_string.h **** //
  31:/usr/include/c++/5/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/5/bits/basic_string.h **** //
  33:/usr/include/c++/5/bits/basic_string.h **** 
  34:/usr/include/c++/5/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/5/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/5/bits/basic_string.h **** 
  37:/usr/include/c++/5/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/5/bits/basic_string.h **** 
  39:/usr/include/c++/5/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/5/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/usr/include/c++/5/bits/basic_string.h **** #include <debug/debug.h>
  42:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
  43:/usr/include/c++/5/bits/basic_string.h **** #include <initializer_list>
  44:/usr/include/c++/5/bits/basic_string.h **** #endif
  45:/usr/include/c++/5/bits/basic_string.h **** 
  46:/usr/include/c++/5/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/usr/include/c++/5/bits/basic_string.h **** {
  48:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/usr/include/c++/5/bits/basic_string.h **** 
  50:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  51:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  52:/usr/include/c++/5/bits/basic_string.h ****   /**
  53:/usr/include/c++/5/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  54:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  55:/usr/include/c++/5/bits/basic_string.h ****    *
  56:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup strings
  57:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup sequences
  58:/usr/include/c++/5/bits/basic_string.h ****    *
  59:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  60:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  61:/usr/include/c++/5/bits/basic_string.h ****    *                   char_traits<_CharT>.
  62:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  63:/usr/include/c++/5/bits/basic_string.h ****    *
  64:/usr/include/c++/5/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  65:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  66:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  67:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  68:/usr/include/c++/5/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  69:/usr/include/c++/5/bits/basic_string.h ****    */
  70:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  71:/usr/include/c++/5/bits/basic_string.h ****     class basic_string
GAS LISTING /tmp/ccbg3Dll.s 			page 137


  72:/usr/include/c++/5/bits/basic_string.h ****     {
  73:/usr/include/c++/5/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  74:/usr/include/c++/5/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  75:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  76:/usr/include/c++/5/bits/basic_string.h **** 
  77:/usr/include/c++/5/bits/basic_string.h ****       // Types:
  78:/usr/include/c++/5/bits/basic_string.h ****     public:
  79:/usr/include/c++/5/bits/basic_string.h ****       typedef _Traits					traits_type;
  80:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  81:/usr/include/c++/5/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  82:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  83:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  84:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  85:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  86:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  87:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  88:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  89:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  90:/usr/include/c++/5/bits/basic_string.h **** 							const_iterator;
  91:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  92:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  93:/usr/include/c++/5/bits/basic_string.h **** 
  94:/usr/include/c++/5/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
  95:/usr/include/c++/5/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
  96:/usr/include/c++/5/bits/basic_string.h **** 
  97:/usr/include/c++/5/bits/basic_string.h ****     private:
  98:/usr/include/c++/5/bits/basic_string.h ****       // type used for positions in insert, erase etc.
  99:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus < 201103L
 100:/usr/include/c++/5/bits/basic_string.h ****       typedef iterator __const_iterator;
 101:/usr/include/c++/5/bits/basic_string.h **** #else
 102:/usr/include/c++/5/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 103:/usr/include/c++/5/bits/basic_string.h **** #endif
 104:/usr/include/c++/5/bits/basic_string.h **** 
 105:/usr/include/c++/5/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 106:/usr/include/c++/5/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 107:/usr/include/c++/5/bits/basic_string.h ****       {
 108:/usr/include/c++/5/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 109:/usr/include/c++/5/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 110:/usr/include/c++/5/bits/basic_string.h **** 
 111:/usr/include/c++/5/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 112:/usr/include/c++/5/bits/basic_string.h ****       };
 113:/usr/include/c++/5/bits/basic_string.h **** 
 114:/usr/include/c++/5/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 115:/usr/include/c++/5/bits/basic_string.h ****       size_type		_M_string_length;
 116:/usr/include/c++/5/bits/basic_string.h **** 
 117:/usr/include/c++/5/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 118:/usr/include/c++/5/bits/basic_string.h **** 
 119:/usr/include/c++/5/bits/basic_string.h ****       union
 120:/usr/include/c++/5/bits/basic_string.h ****       {
 121:/usr/include/c++/5/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 122:/usr/include/c++/5/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 123:/usr/include/c++/5/bits/basic_string.h ****       };
 124:/usr/include/c++/5/bits/basic_string.h **** 
 125:/usr/include/c++/5/bits/basic_string.h ****       void
 126:/usr/include/c++/5/bits/basic_string.h ****       _M_data(pointer __p)
 127:/usr/include/c++/5/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 128:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 138


 129:/usr/include/c++/5/bits/basic_string.h ****       void
 130:/usr/include/c++/5/bits/basic_string.h ****       _M_length(size_type __length)
 131:/usr/include/c++/5/bits/basic_string.h ****       { _M_string_length = __length; }
 132:/usr/include/c++/5/bits/basic_string.h **** 
 133:/usr/include/c++/5/bits/basic_string.h ****       pointer
 134:/usr/include/c++/5/bits/basic_string.h ****       _M_data() const
 135:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 136:/usr/include/c++/5/bits/basic_string.h **** 
 137:/usr/include/c++/5/bits/basic_string.h ****       pointer
 138:/usr/include/c++/5/bits/basic_string.h ****       _M_local_data()
 139:/usr/include/c++/5/bits/basic_string.h ****       {
 140:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/5/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 142:/usr/include/c++/5/bits/basic_string.h **** #else
 143:/usr/include/c++/5/bits/basic_string.h **** 	return pointer(_M_local_buf);
 144:/usr/include/c++/5/bits/basic_string.h **** #endif
 145:/usr/include/c++/5/bits/basic_string.h ****       }
 146:/usr/include/c++/5/bits/basic_string.h **** 
 147:/usr/include/c++/5/bits/basic_string.h ****       const_pointer
 148:/usr/include/c++/5/bits/basic_string.h ****       _M_local_data() const
 149:/usr/include/c++/5/bits/basic_string.h ****       {
 150:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 151:/usr/include/c++/5/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 152:/usr/include/c++/5/bits/basic_string.h **** #else
 153:/usr/include/c++/5/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 154:/usr/include/c++/5/bits/basic_string.h **** #endif
 155:/usr/include/c++/5/bits/basic_string.h ****       }
 156:/usr/include/c++/5/bits/basic_string.h **** 
 157:/usr/include/c++/5/bits/basic_string.h ****       void
 158:/usr/include/c++/5/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 159:/usr/include/c++/5/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 160:/usr/include/c++/5/bits/basic_string.h **** 
 161:/usr/include/c++/5/bits/basic_string.h ****       void
 162:/usr/include/c++/5/bits/basic_string.h ****       _M_set_length(size_type __n)
 163:/usr/include/c++/5/bits/basic_string.h ****       {
 164:/usr/include/c++/5/bits/basic_string.h **** 	_M_length(__n);
 165:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 166:/usr/include/c++/5/bits/basic_string.h ****       }
 167:/usr/include/c++/5/bits/basic_string.h **** 
 168:/usr/include/c++/5/bits/basic_string.h ****       bool
 169:/usr/include/c++/5/bits/basic_string.h ****       _M_is_local() const
 170:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 171:/usr/include/c++/5/bits/basic_string.h **** 
 172:/usr/include/c++/5/bits/basic_string.h ****       // Create & Destroy
 173:/usr/include/c++/5/bits/basic_string.h ****       pointer
 174:/usr/include/c++/5/bits/basic_string.h ****       _M_create(size_type&, size_type);
 175:/usr/include/c++/5/bits/basic_string.h **** 
 176:/usr/include/c++/5/bits/basic_string.h ****       void
 177:/usr/include/c++/5/bits/basic_string.h ****       _M_dispose()
 178:/usr/include/c++/5/bits/basic_string.h ****       {
 179:/usr/include/c++/5/bits/basic_string.h **** 	if (!_M_is_local())
 180:/usr/include/c++/5/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 181:/usr/include/c++/5/bits/basic_string.h ****       }
 182:/usr/include/c++/5/bits/basic_string.h **** 
 183:/usr/include/c++/5/bits/basic_string.h ****       void
 184:/usr/include/c++/5/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 185:/usr/include/c++/5/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
GAS LISTING /tmp/ccbg3Dll.s 			page 139


 186:/usr/include/c++/5/bits/basic_string.h **** 
 187:/usr/include/c++/5/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 188:/usr/include/c++/5/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 189:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 190:/usr/include/c++/5/bits/basic_string.h ****         void
 191:/usr/include/c++/5/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 192:/usr/include/c++/5/bits/basic_string.h **** 			 std::__false_type)
 193:/usr/include/c++/5/bits/basic_string.h **** 	{
 194:/usr/include/c++/5/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 195:/usr/include/c++/5/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 196:/usr/include/c++/5/bits/basic_string.h **** 	}
 197:/usr/include/c++/5/bits/basic_string.h **** 
 198:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 199:/usr/include/c++/5/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 200:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Integer>
 201:/usr/include/c++/5/bits/basic_string.h ****         void
 202:/usr/include/c++/5/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 203:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 204:/usr/include/c++/5/bits/basic_string.h **** 
 205:/usr/include/c++/5/bits/basic_string.h ****       void
 206:/usr/include/c++/5/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 207:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__req, __c); }
 208:/usr/include/c++/5/bits/basic_string.h **** 
 209:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 210:/usr/include/c++/5/bits/basic_string.h ****         void
 211:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 212:/usr/include/c++/5/bits/basic_string.h **** 	{
 213:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 214:/usr/include/c++/5/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 215:/usr/include/c++/5/bits/basic_string.h ****         }
 216:/usr/include/c++/5/bits/basic_string.h **** 
 217:/usr/include/c++/5/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 218:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InIterator>
 219:/usr/include/c++/5/bits/basic_string.h ****         void
 220:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 221:/usr/include/c++/5/bits/basic_string.h **** 		     std::input_iterator_tag);
 222:/usr/include/c++/5/bits/basic_string.h **** 
 223:/usr/include/c++/5/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 224:/usr/include/c++/5/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 225:/usr/include/c++/5/bits/basic_string.h ****       template<typename _FwdIterator>
 226:/usr/include/c++/5/bits/basic_string.h ****         void
 227:/usr/include/c++/5/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 228:/usr/include/c++/5/bits/basic_string.h **** 		     std::forward_iterator_tag);
 229:/usr/include/c++/5/bits/basic_string.h **** 
 230:/usr/include/c++/5/bits/basic_string.h ****       void
 231:/usr/include/c++/5/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 232:/usr/include/c++/5/bits/basic_string.h **** 
 233:/usr/include/c++/5/bits/basic_string.h ****       allocator_type&
 234:/usr/include/c++/5/bits/basic_string.h ****       _M_get_allocator()
 235:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
 236:/usr/include/c++/5/bits/basic_string.h **** 
 237:/usr/include/c++/5/bits/basic_string.h ****       const allocator_type&
 238:/usr/include/c++/5/bits/basic_string.h ****       _M_get_allocator() const
 239:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
 240:/usr/include/c++/5/bits/basic_string.h **** 
 241:/usr/include/c++/5/bits/basic_string.h ****     private:
 242:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 140


 243:/usr/include/c++/5/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 244:/usr/include/c++/5/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 245:/usr/include/c++/5/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 246:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 247:/usr/include/c++/5/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 248:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 249:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 250:/usr/include/c++/5/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 251:/usr/include/c++/5/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 252:/usr/include/c++/5/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 253:/usr/include/c++/5/bits/basic_string.h ****       template<typename _Tp>
 254:/usr/include/c++/5/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 255:/usr/include/c++/5/bits/basic_string.h **** #endif
 256:/usr/include/c++/5/bits/basic_string.h **** 
 257:/usr/include/c++/5/bits/basic_string.h ****       size_type
 258:/usr/include/c++/5/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 259:/usr/include/c++/5/bits/basic_string.h ****       {
 260:/usr/include/c++/5/bits/basic_string.h **** 	if (__pos > this->size())
 261:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 262:/usr/include/c++/5/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 263:/usr/include/c++/5/bits/basic_string.h **** 				   __s, __pos, this->size());
 264:/usr/include/c++/5/bits/basic_string.h **** 	return __pos;
 265:/usr/include/c++/5/bits/basic_string.h ****       }
 266:/usr/include/c++/5/bits/basic_string.h **** 
 267:/usr/include/c++/5/bits/basic_string.h ****       void
 268:/usr/include/c++/5/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 269:/usr/include/c++/5/bits/basic_string.h ****       {
 270:/usr/include/c++/5/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 271:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 272:/usr/include/c++/5/bits/basic_string.h ****       }
 273:/usr/include/c++/5/bits/basic_string.h **** 
 274:/usr/include/c++/5/bits/basic_string.h **** 
 275:/usr/include/c++/5/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 276:/usr/include/c++/5/bits/basic_string.h ****       size_type
 277:/usr/include/c++/5/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 278:/usr/include/c++/5/bits/basic_string.h ****       {
 279:/usr/include/c++/5/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 280:/usr/include/c++/5/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 281:/usr/include/c++/5/bits/basic_string.h ****       }
 282:/usr/include/c++/5/bits/basic_string.h **** 
 283:/usr/include/c++/5/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 284:/usr/include/c++/5/bits/basic_string.h ****       bool
 285:/usr/include/c++/5/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 286:/usr/include/c++/5/bits/basic_string.h ****       {
 287:/usr/include/c++/5/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 288:/usr/include/c++/5/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 289:/usr/include/c++/5/bits/basic_string.h ****       }
 290:/usr/include/c++/5/bits/basic_string.h **** 
 291:/usr/include/c++/5/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 292:/usr/include/c++/5/bits/basic_string.h ****       // traits_type::copy/move/assign.
 293:/usr/include/c++/5/bits/basic_string.h ****       static void
 294:/usr/include/c++/5/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 295:/usr/include/c++/5/bits/basic_string.h ****       {
 296:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 297:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 298:/usr/include/c++/5/bits/basic_string.h **** 	else
 299:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
GAS LISTING /tmp/ccbg3Dll.s 			page 141


 300:/usr/include/c++/5/bits/basic_string.h ****       }
 301:/usr/include/c++/5/bits/basic_string.h **** 
 302:/usr/include/c++/5/bits/basic_string.h ****       static void
 303:/usr/include/c++/5/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 304:/usr/include/c++/5/bits/basic_string.h ****       {
 305:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 306:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 307:/usr/include/c++/5/bits/basic_string.h **** 	else
 308:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 309:/usr/include/c++/5/bits/basic_string.h ****       }
 310:/usr/include/c++/5/bits/basic_string.h **** 
 311:/usr/include/c++/5/bits/basic_string.h ****       static void
 312:/usr/include/c++/5/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 313:/usr/include/c++/5/bits/basic_string.h ****       {
 314:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
 315:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 316:/usr/include/c++/5/bits/basic_string.h **** 	else
 317:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 318:/usr/include/c++/5/bits/basic_string.h ****       }
 319:/usr/include/c++/5/bits/basic_string.h **** 
 320:/usr/include/c++/5/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 321:/usr/include/c++/5/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 322:/usr/include/c++/5/bits/basic_string.h ****       template<class _Iterator>
 323:/usr/include/c++/5/bits/basic_string.h ****         static void
 324:/usr/include/c++/5/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 325:/usr/include/c++/5/bits/basic_string.h ****         {
 326:/usr/include/c++/5/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
 327:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 328:/usr/include/c++/5/bits/basic_string.h **** 	}
 329:/usr/include/c++/5/bits/basic_string.h **** 
 330:/usr/include/c++/5/bits/basic_string.h ****       static void
 331:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 332:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 333:/usr/include/c++/5/bits/basic_string.h **** 
 334:/usr/include/c++/5/bits/basic_string.h ****       static void
 335:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 336:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 337:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 338:/usr/include/c++/5/bits/basic_string.h **** 
 339:/usr/include/c++/5/bits/basic_string.h ****       static void
 340:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 341:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 342:/usr/include/c++/5/bits/basic_string.h **** 
 343:/usr/include/c++/5/bits/basic_string.h ****       static void
 344:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 345:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 346:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 347:/usr/include/c++/5/bits/basic_string.h **** 
 348:/usr/include/c++/5/bits/basic_string.h ****       static int
 349:/usr/include/c++/5/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 350:/usr/include/c++/5/bits/basic_string.h ****       {
 351:/usr/include/c++/5/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 352:/usr/include/c++/5/bits/basic_string.h **** 
 353:/usr/include/c++/5/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 354:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 355:/usr/include/c++/5/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 356:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
GAS LISTING /tmp/ccbg3Dll.s 			page 142


 357:/usr/include/c++/5/bits/basic_string.h **** 	else
 358:/usr/include/c++/5/bits/basic_string.h **** 	  return int(__d);
 359:/usr/include/c++/5/bits/basic_string.h ****       }
 360:/usr/include/c++/5/bits/basic_string.h **** 
 361:/usr/include/c++/5/bits/basic_string.h ****       void
 362:/usr/include/c++/5/bits/basic_string.h ****       _M_assign(const basic_string& __rcs);
 363:/usr/include/c++/5/bits/basic_string.h **** 
 364:/usr/include/c++/5/bits/basic_string.h ****       void
 365:/usr/include/c++/5/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 366:/usr/include/c++/5/bits/basic_string.h **** 		size_type __len2);
 367:/usr/include/c++/5/bits/basic_string.h **** 
 368:/usr/include/c++/5/bits/basic_string.h ****       void
 369:/usr/include/c++/5/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 370:/usr/include/c++/5/bits/basic_string.h **** 
 371:/usr/include/c++/5/bits/basic_string.h ****     public:
 372:/usr/include/c++/5/bits/basic_string.h ****       // Construct/copy/destroy:
 373:/usr/include/c++/5/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 374:/usr/include/c++/5/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 375:/usr/include/c++/5/bits/basic_string.h **** 
 376:/usr/include/c++/5/bits/basic_string.h ****       /**
 377:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 378:/usr/include/c++/5/bits/basic_string.h ****        */
 379:/usr/include/c++/5/bits/basic_string.h ****       basic_string()
 380:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 381:/usr/include/c++/5/bits/basic_string.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 382:/usr/include/c++/5/bits/basic_string.h **** #endif
 383:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 384:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 385:/usr/include/c++/5/bits/basic_string.h **** 
 386:/usr/include/c++/5/bits/basic_string.h ****       /**
 387:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 388:/usr/include/c++/5/bits/basic_string.h ****        */
 389:/usr/include/c++/5/bits/basic_string.h ****       explicit
 390:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _Alloc& __a)
 391:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 392:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 393:/usr/include/c++/5/bits/basic_string.h **** 
 394:/usr/include/c++/5/bits/basic_string.h ****       /**
 395:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 396:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 397:/usr/include/c++/5/bits/basic_string.h ****        */
 398:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str)
 399:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __str._M_get_allocator()) // TODO A traits
 400:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 401:/usr/include/c++/5/bits/basic_string.h **** 
 402:/usr/include/c++/5/bits/basic_string.h ****       /**
 403:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 404:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 405:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 406:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 407:/usr/include/c++/5/bits/basic_string.h ****        */
 408:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 409:/usr/include/c++/5/bits/basic_string.h ****       // 2402. [this constructor] shouldn't use Allocator()
 410:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 411:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n = npos)
 412:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 413:/usr/include/c++/5/bits/basic_string.h ****       {
GAS LISTING /tmp/ccbg3Dll.s 			page 143


 414:/usr/include/c++/5/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 415:/usr/include/c++/5/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 416:/usr/include/c++/5/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 417:/usr/include/c++/5/bits/basic_string.h ****       }
 418:/usr/include/c++/5/bits/basic_string.h **** 
 419:/usr/include/c++/5/bits/basic_string.h ****       /**
 420:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 421:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 422:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 423:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 424:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 425:/usr/include/c++/5/bits/basic_string.h ****        */
 426:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 427:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 428:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 429:/usr/include/c++/5/bits/basic_string.h ****       {
 430:/usr/include/c++/5/bits/basic_string.h **** 	const _CharT* __start
 431:/usr/include/c++/5/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 432:/usr/include/c++/5/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 433:/usr/include/c++/5/bits/basic_string.h ****       }
 434:/usr/include/c++/5/bits/basic_string.h **** 
 435:/usr/include/c++/5/bits/basic_string.h ****       /**
 436:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 437:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source character %array.
 438:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 439:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 440:/usr/include/c++/5/bits/basic_string.h ****        *
 441:/usr/include/c++/5/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 442:/usr/include/c++/5/bits/basic_string.h ****        *  has no special meaning.
 443:/usr/include/c++/5/bits/basic_string.h ****        */
 444:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 445:/usr/include/c++/5/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 446:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 447:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 448:/usr/include/c++/5/bits/basic_string.h **** 
 449:/usr/include/c++/5/bits/basic_string.h ****       /**
 450:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 451:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source C string.
 452:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 453:/usr/include/c++/5/bits/basic_string.h ****        */
 454:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 455:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 456:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 457:/usr/include/c++/5/bits/basic_string.h **** 
 458:/usr/include/c++/5/bits/basic_string.h ****       /**
 459:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 460:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters.
 461:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to use.
 462:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 463:/usr/include/c++/5/bits/basic_string.h ****        */
 464:/usr/include/c++/5/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 465:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 466:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__n, __c); }
 467:/usr/include/c++/5/bits/basic_string.h **** 
 468:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 469:/usr/include/c++/5/bits/basic_string.h ****       /**
 470:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move construct string.
GAS LISTING /tmp/ccbg3Dll.s 			page 144


 471:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 472:/usr/include/c++/5/bits/basic_string.h ****        *
 473:/usr/include/c++/5/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 474:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 475:/usr/include/c++/5/bits/basic_string.h ****        **/
 476:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 477:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 478:/usr/include/c++/5/bits/basic_string.h ****       {
 479:/usr/include/c++/5/bits/basic_string.h **** 	if (__str._M_is_local())
 480:/usr/include/c++/5/bits/basic_string.h **** 	  {
 481:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 482:/usr/include/c++/5/bits/basic_string.h **** 			      _S_local_capacity + 1);
 483:/usr/include/c++/5/bits/basic_string.h **** 	  }
 484:/usr/include/c++/5/bits/basic_string.h **** 	else
 485:/usr/include/c++/5/bits/basic_string.h **** 	  {
 486:/usr/include/c++/5/bits/basic_string.h **** 	    _M_data(__str._M_data());
 487:/usr/include/c++/5/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 488:/usr/include/c++/5/bits/basic_string.h **** 	  }
 489:/usr/include/c++/5/bits/basic_string.h **** 
 490:/usr/include/c++/5/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 491:/usr/include/c++/5/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 492:/usr/include/c++/5/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 493:/usr/include/c++/5/bits/basic_string.h **** 	_M_length(__str.length());
 494:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 495:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_set_length(0);
 496:/usr/include/c++/5/bits/basic_string.h ****       }
 497:/usr/include/c++/5/bits/basic_string.h **** 
 498:/usr/include/c++/5/bits/basic_string.h ****       /**
 499:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 500:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 501:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 502:/usr/include/c++/5/bits/basic_string.h ****        */
 503:/usr/include/c++/5/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 504:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 505:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
 506:/usr/include/c++/5/bits/basic_string.h **** 
 507:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 508:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 509:/usr/include/c++/5/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 510:/usr/include/c++/5/bits/basic_string.h **** 
 511:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 512:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/usr/include/c++/5/bits/basic_string.h ****       {
 514:/usr/include/c++/5/bits/basic_string.h **** 	if (__str.get_allocator() == __a)
 515:/usr/include/c++/5/bits/basic_string.h **** 	  *this = std::move(__str);
 516:/usr/include/c++/5/bits/basic_string.h **** 	else
 517:/usr/include/c++/5/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 518:/usr/include/c++/5/bits/basic_string.h ****       }
 519:/usr/include/c++/5/bits/basic_string.h **** 
 520:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 521:/usr/include/c++/5/bits/basic_string.h **** 
 522:/usr/include/c++/5/bits/basic_string.h ****       /**
 523:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 524:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __beg  Start of range.
 525:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __end  End of range.
 526:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 527:/usr/include/c++/5/bits/basic_string.h ****        */
GAS LISTING /tmp/ccbg3Dll.s 			page 145


 528:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 529:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InputIterator,
 530:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 531:/usr/include/c++/5/bits/basic_string.h **** #else
 532:/usr/include/c++/5/bits/basic_string.h ****       template<typename _InputIterator>
 533:/usr/include/c++/5/bits/basic_string.h **** #endif
 534:/usr/include/c++/5/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 535:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 536:/usr/include/c++/5/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 537:/usr/include/c++/5/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 538:/usr/include/c++/5/bits/basic_string.h **** 
 539:/usr/include/c++/5/bits/basic_string.h ****       /**
 540:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 541:/usr/include/c++/5/bits/basic_string.h ****        */
 542:/usr/include/c++/5/bits/basic_string.h ****       ~basic_string()
 543:/usr/include/c++/5/bits/basic_string.h ****       { _M_dispose(); }
 544:/usr/include/c++/5/bits/basic_string.h **** 
 545:/usr/include/c++/5/bits/basic_string.h ****       /**
 546:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 547:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/usr/include/c++/5/bits/basic_string.h ****        */
 549:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 550:/usr/include/c++/5/bits/basic_string.h ****       operator=(const basic_string& __str)
 551:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str); }
 552:/usr/include/c++/5/bits/basic_string.h **** 
 553:/usr/include/c++/5/bits/basic_string.h ****       /**
 554:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 555:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 556:/usr/include/c++/5/bits/basic_string.h ****        */
 557:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 558:/usr/include/c++/5/bits/basic_string.h ****       operator=(const _CharT* __s)
 559:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__s); }
 560:/usr/include/c++/5/bits/basic_string.h **** 
 561:/usr/include/c++/5/bits/basic_string.h ****       /**
 562:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 563:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Source character.
 564:/usr/include/c++/5/bits/basic_string.h ****        *
 565:/usr/include/c++/5/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 566:/usr/include/c++/5/bits/basic_string.h ****        *  (*this)[0] == @a c.
 567:/usr/include/c++/5/bits/basic_string.h ****        */
 568:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 569:/usr/include/c++/5/bits/basic_string.h ****       operator=(_CharT __c)
 570:/usr/include/c++/5/bits/basic_string.h ****       {
 571:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(1, __c);
 572:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 573:/usr/include/c++/5/bits/basic_string.h ****       }
 574:/usr/include/c++/5/bits/basic_string.h **** 
 575:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 576:/usr/include/c++/5/bits/basic_string.h ****       /**
 577:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 578:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
 579:/usr/include/c++/5/bits/basic_string.h ****        *
 580:/usr/include/c++/5/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 581:/usr/include/c++/5/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 582:/usr/include/c++/5/bits/basic_string.h ****        **/
 583:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
 584:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
GAS LISTING /tmp/ccbg3Dll.s 			page 146


 585:/usr/include/c++/5/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 586:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 587:/usr/include/c++/5/bits/basic_string.h ****       operator=(basic_string&& __str)
 588:/usr/include/c++/5/bits/basic_string.h ****       {
 589:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
 590:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 591:/usr/include/c++/5/bits/basic_string.h ****       }
 592:/usr/include/c++/5/bits/basic_string.h **** 
 593:/usr/include/c++/5/bits/basic_string.h ****       /**
 594:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 595:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 596:/usr/include/c++/5/bits/basic_string.h ****        */
 597:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 598:/usr/include/c++/5/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 599:/usr/include/c++/5/bits/basic_string.h ****       {
 600:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 601:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 602:/usr/include/c++/5/bits/basic_string.h ****       }
 603:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 604:/usr/include/c++/5/bits/basic_string.h **** 
 605:/usr/include/c++/5/bits/basic_string.h ****       // Iterators:
 606:/usr/include/c++/5/bits/basic_string.h ****       /**
 607:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 608:/usr/include/c++/5/bits/basic_string.h ****        *  the %string.
 609:/usr/include/c++/5/bits/basic_string.h ****        */
 610:/usr/include/c++/5/bits/basic_string.h ****       iterator
 611:/usr/include/c++/5/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 612:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data()); }
 613:/usr/include/c++/5/bits/basic_string.h **** 
 614:/usr/include/c++/5/bits/basic_string.h ****       /**
 615:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 616:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 617:/usr/include/c++/5/bits/basic_string.h ****        */
 618:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 619:/usr/include/c++/5/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 620:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 621:/usr/include/c++/5/bits/basic_string.h **** 
 622:/usr/include/c++/5/bits/basic_string.h ****       /**
 623:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 624:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 625:/usr/include/c++/5/bits/basic_string.h ****        */
 626:/usr/include/c++/5/bits/basic_string.h ****       iterator
 627:/usr/include/c++/5/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 628:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 629:/usr/include/c++/5/bits/basic_string.h **** 
 630:/usr/include/c++/5/bits/basic_string.h ****       /**
 631:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 632:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
 633:/usr/include/c++/5/bits/basic_string.h ****        */
 634:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 635:/usr/include/c++/5/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 636:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 637:/usr/include/c++/5/bits/basic_string.h **** 
 638:/usr/include/c++/5/bits/basic_string.h ****       /**
 639:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 640:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 641:/usr/include/c++/5/bits/basic_string.h ****        *  order.
GAS LISTING /tmp/ccbg3Dll.s 			page 147


 642:/usr/include/c++/5/bits/basic_string.h ****        */
 643:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
 644:/usr/include/c++/5/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 645:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 646:/usr/include/c++/5/bits/basic_string.h **** 
 647:/usr/include/c++/5/bits/basic_string.h ****       /**
 648:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 649:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 650:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
 651:/usr/include/c++/5/bits/basic_string.h ****        */
 652:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 653:/usr/include/c++/5/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 654:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 655:/usr/include/c++/5/bits/basic_string.h **** 
 656:/usr/include/c++/5/bits/basic_string.h ****       /**
 657:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 658:/usr/include/c++/5/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 659:/usr/include/c++/5/bits/basic_string.h ****        *  element order.
 660:/usr/include/c++/5/bits/basic_string.h ****        */
 661:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
 662:/usr/include/c++/5/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 663:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 664:/usr/include/c++/5/bits/basic_string.h **** 
 665:/usr/include/c++/5/bits/basic_string.h ****       /**
 666:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 667:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 668:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
 669:/usr/include/c++/5/bits/basic_string.h ****        */
 670:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 671:/usr/include/c++/5/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 672:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 673:/usr/include/c++/5/bits/basic_string.h **** 
 674:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 675:/usr/include/c++/5/bits/basic_string.h ****       /**
 676:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 677:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
 678:/usr/include/c++/5/bits/basic_string.h ****        */
 679:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 680:/usr/include/c++/5/bits/basic_string.h ****       cbegin() const noexcept
 681:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 682:/usr/include/c++/5/bits/basic_string.h **** 
 683:/usr/include/c++/5/bits/basic_string.h ****       /**
 684:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 685:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
 686:/usr/include/c++/5/bits/basic_string.h ****        */
 687:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
 688:/usr/include/c++/5/bits/basic_string.h ****       cend() const noexcept
 689:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 690:/usr/include/c++/5/bits/basic_string.h **** 
 691:/usr/include/c++/5/bits/basic_string.h ****       /**
 692:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 693:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 694:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
 695:/usr/include/c++/5/bits/basic_string.h ****        */
 696:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 697:/usr/include/c++/5/bits/basic_string.h ****       crbegin() const noexcept
 698:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
GAS LISTING /tmp/ccbg3Dll.s 			page 148


 699:/usr/include/c++/5/bits/basic_string.h **** 
 700:/usr/include/c++/5/bits/basic_string.h ****       /**
 701:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 702:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 703:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
 704:/usr/include/c++/5/bits/basic_string.h ****        */
 705:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
 706:/usr/include/c++/5/bits/basic_string.h ****       crend() const noexcept
 707:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 708:/usr/include/c++/5/bits/basic_string.h **** #endif
 709:/usr/include/c++/5/bits/basic_string.h **** 
 710:/usr/include/c++/5/bits/basic_string.h ****     public:
 711:/usr/include/c++/5/bits/basic_string.h ****       // Capacity:
 712:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 713:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
 714:/usr/include/c++/5/bits/basic_string.h ****       size_type
 715:/usr/include/c++/5/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 716:/usr/include/c++/5/bits/basic_string.h ****       { return _M_string_length; }
 717:/usr/include/c++/5/bits/basic_string.h **** 
 718:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 719:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
 720:/usr/include/c++/5/bits/basic_string.h ****       size_type
 721:/usr/include/c++/5/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 722:/usr/include/c++/5/bits/basic_string.h ****       { return _M_string_length; }
 723:/usr/include/c++/5/bits/basic_string.h **** 
 724:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 725:/usr/include/c++/5/bits/basic_string.h ****       size_type
 726:/usr/include/c++/5/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 727:/usr/include/c++/5/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 728:/usr/include/c++/5/bits/basic_string.h **** 
 729:/usr/include/c++/5/bits/basic_string.h ****       /**
 730:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 731:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 732:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 733:/usr/include/c++/5/bits/basic_string.h ****        *
 734:/usr/include/c++/5/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 735:/usr/include/c++/5/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 736:/usr/include/c++/5/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 737:/usr/include/c++/5/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 738:/usr/include/c++/5/bits/basic_string.h ****        */
 739:/usr/include/c++/5/bits/basic_string.h ****       void
 740:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 741:/usr/include/c++/5/bits/basic_string.h **** 
 742:/usr/include/c++/5/bits/basic_string.h ****       /**
 743:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 744:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 745:/usr/include/c++/5/bits/basic_string.h ****        *
 746:/usr/include/c++/5/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 747:/usr/include/c++/5/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 748:/usr/include/c++/5/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 749:/usr/include/c++/5/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 750:/usr/include/c++/5/bits/basic_string.h ****        *  setting them to 0.
 751:/usr/include/c++/5/bits/basic_string.h ****        */
 752:/usr/include/c++/5/bits/basic_string.h ****       void
 753:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n)
 754:/usr/include/c++/5/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 755:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 149


 756:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 757:/usr/include/c++/5/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 758:/usr/include/c++/5/bits/basic_string.h ****       void
 759:/usr/include/c++/5/bits/basic_string.h ****       shrink_to_fit() noexcept
 760:/usr/include/c++/5/bits/basic_string.h ****       {
 761:/usr/include/c++/5/bits/basic_string.h **** #if __cpp_exceptions
 762:/usr/include/c++/5/bits/basic_string.h **** 	if (capacity() > size())
 763:/usr/include/c++/5/bits/basic_string.h **** 	  {
 764:/usr/include/c++/5/bits/basic_string.h **** 	    try
 765:/usr/include/c++/5/bits/basic_string.h **** 	      { reserve(0); }
 766:/usr/include/c++/5/bits/basic_string.h **** 	    catch(...)
 767:/usr/include/c++/5/bits/basic_string.h **** 	      { }
 768:/usr/include/c++/5/bits/basic_string.h **** 	  }
 769:/usr/include/c++/5/bits/basic_string.h **** #endif
 770:/usr/include/c++/5/bits/basic_string.h ****       }
 771:/usr/include/c++/5/bits/basic_string.h **** #endif
 772:/usr/include/c++/5/bits/basic_string.h **** 
 773:/usr/include/c++/5/bits/basic_string.h ****       /**
 774:/usr/include/c++/5/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 775:/usr/include/c++/5/bits/basic_string.h ****        *  before needing to allocate more memory.
 776:/usr/include/c++/5/bits/basic_string.h ****        */
 777:/usr/include/c++/5/bits/basic_string.h ****       size_type
 778:/usr/include/c++/5/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 779:/usr/include/c++/5/bits/basic_string.h ****       {
 780:/usr/include/c++/5/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 781:/usr/include/c++/5/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 782:/usr/include/c++/5/bits/basic_string.h ****       }
 783:/usr/include/c++/5/bits/basic_string.h **** 
 784:/usr/include/c++/5/bits/basic_string.h ****       /**
 785:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 786:/usr/include/c++/5/bits/basic_string.h ****        *          characters.
 787:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 788:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 789:/usr/include/c++/5/bits/basic_string.h ****        *
 790:/usr/include/c++/5/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 791:/usr/include/c++/5/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 792:/usr/include/c++/5/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 793:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
 794:/usr/include/c++/5/bits/basic_string.h ****        *
 795:/usr/include/c++/5/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 796:/usr/include/c++/5/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 797:/usr/include/c++/5/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 798:/usr/include/c++/5/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 799:/usr/include/c++/5/bits/basic_string.h ****        *  data.
 800:/usr/include/c++/5/bits/basic_string.h ****        */
 801:/usr/include/c++/5/bits/basic_string.h ****       void
 802:/usr/include/c++/5/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 803:/usr/include/c++/5/bits/basic_string.h **** 
 804:/usr/include/c++/5/bits/basic_string.h ****       /**
 805:/usr/include/c++/5/bits/basic_string.h ****        *  Erases the string, making it empty.
 806:/usr/include/c++/5/bits/basic_string.h ****        */
 807:/usr/include/c++/5/bits/basic_string.h ****       void
 808:/usr/include/c++/5/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 809:/usr/include/c++/5/bits/basic_string.h ****       { _M_set_length(0); }
 810:/usr/include/c++/5/bits/basic_string.h **** 
 811:/usr/include/c++/5/bits/basic_string.h ****       /**
 812:/usr/include/c++/5/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
GAS LISTING /tmp/ccbg3Dll.s 			page 150


 813:/usr/include/c++/5/bits/basic_string.h ****        *  <code>*this == ""</code>.
 814:/usr/include/c++/5/bits/basic_string.h ****        */
 815:/usr/include/c++/5/bits/basic_string.h ****       bool
 816:/usr/include/c++/5/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
 817:/usr/include/c++/5/bits/basic_string.h ****       { return this->size() == 0; }
 818:/usr/include/c++/5/bits/basic_string.h **** 
 819:/usr/include/c++/5/bits/basic_string.h ****       // Element access:
 820:/usr/include/c++/5/bits/basic_string.h ****       /**
 821:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 822:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 823:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
 824:/usr/include/c++/5/bits/basic_string.h ****        *
 825:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 826:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 827:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 828:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
 829:/usr/include/c++/5/bits/basic_string.h ****        */
 830:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 831:/usr/include/c++/5/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
 832:/usr/include/c++/5/bits/basic_string.h ****       {
 833:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 834:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
 835:/usr/include/c++/5/bits/basic_string.h ****       }
 836:/usr/include/c++/5/bits/basic_string.h **** 
 837:/usr/include/c++/5/bits/basic_string.h ****       /**
 838:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 839:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 840:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 841:/usr/include/c++/5/bits/basic_string.h ****        *
 842:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 843:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 844:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 845:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
 846:/usr/include/c++/5/bits/basic_string.h ****        */
 847:/usr/include/c++/5/bits/basic_string.h ****       reference
 848:/usr/include/c++/5/bits/basic_string.h ****       operator[](size_type __pos)
 849:/usr/include/c++/5/bits/basic_string.h ****       {
 850:/usr/include/c++/5/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
 851:/usr/include/c++/5/bits/basic_string.h **** 	// and in C++11 mode.
 852:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 853:/usr/include/c++/5/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
 854:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
 855:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
 856:/usr/include/c++/5/bits/basic_string.h ****       }
 857:/usr/include/c++/5/bits/basic_string.h **** 
 858:/usr/include/c++/5/bits/basic_string.h ****       /**
 859:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 860:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
 861:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
 862:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 863:/usr/include/c++/5/bits/basic_string.h ****        *
 864:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 865:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 866:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 867:/usr/include/c++/5/bits/basic_string.h ****        */
 868:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 869:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n) const
GAS LISTING /tmp/ccbg3Dll.s 			page 151


 870:/usr/include/c++/5/bits/basic_string.h ****       {
 871:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= this->size())
 872:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 873:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
 874:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
 875:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
 876:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
 877:/usr/include/c++/5/bits/basic_string.h ****       }
 878:/usr/include/c++/5/bits/basic_string.h **** 
 879:/usr/include/c++/5/bits/basic_string.h ****       /**
 880:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 881:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
 882:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 883:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 884:/usr/include/c++/5/bits/basic_string.h ****        *
 885:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 886:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 887:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 888:/usr/include/c++/5/bits/basic_string.h ****        */
 889:/usr/include/c++/5/bits/basic_string.h ****       reference
 890:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n)
 891:/usr/include/c++/5/bits/basic_string.h ****       {
 892:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= size())
 893:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
 894:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
 895:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
 896:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
 897:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
 898:/usr/include/c++/5/bits/basic_string.h ****       }
 899:/usr/include/c++/5/bits/basic_string.h **** 
 900:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 901:/usr/include/c++/5/bits/basic_string.h ****       /**
 902:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
 903:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 904:/usr/include/c++/5/bits/basic_string.h ****        */
 905:/usr/include/c++/5/bits/basic_string.h ****       reference
 906:/usr/include/c++/5/bits/basic_string.h ****       front() noexcept
 907:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
 908:/usr/include/c++/5/bits/basic_string.h **** 
 909:/usr/include/c++/5/bits/basic_string.h ****       /**
 910:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
 911:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 912:/usr/include/c++/5/bits/basic_string.h ****        */
 913:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 914:/usr/include/c++/5/bits/basic_string.h ****       front() const noexcept
 915:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
 916:/usr/include/c++/5/bits/basic_string.h **** 
 917:/usr/include/c++/5/bits/basic_string.h ****       /**
 918:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
 919:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
 920:/usr/include/c++/5/bits/basic_string.h ****        */
 921:/usr/include/c++/5/bits/basic_string.h ****       reference
 922:/usr/include/c++/5/bits/basic_string.h ****       back() noexcept
 923:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 924:/usr/include/c++/5/bits/basic_string.h **** 
 925:/usr/include/c++/5/bits/basic_string.h ****       /**
 926:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
GAS LISTING /tmp/ccbg3Dll.s 			page 152


 927:/usr/include/c++/5/bits/basic_string.h ****        *  last element of the %string.
 928:/usr/include/c++/5/bits/basic_string.h ****        */
 929:/usr/include/c++/5/bits/basic_string.h ****       const_reference
 930:/usr/include/c++/5/bits/basic_string.h ****       back() const noexcept
 931:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 932:/usr/include/c++/5/bits/basic_string.h **** #endif
 933:/usr/include/c++/5/bits/basic_string.h **** 
 934:/usr/include/c++/5/bits/basic_string.h ****       // Modifiers:
 935:/usr/include/c++/5/bits/basic_string.h ****       /**
 936:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
 937:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 938:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 939:/usr/include/c++/5/bits/basic_string.h ****        */
 940:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 941:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const basic_string& __str)
 942:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__str); }
 943:/usr/include/c++/5/bits/basic_string.h **** 
 944:/usr/include/c++/5/bits/basic_string.h ****       /**
 945:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
 946:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
 947:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 948:/usr/include/c++/5/bits/basic_string.h ****        */
 949:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 950:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const _CharT* __s)
 951:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__s); }
 952:/usr/include/c++/5/bits/basic_string.h **** 
 953:/usr/include/c++/5/bits/basic_string.h ****       /**
 954:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a character.
 955:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to append.
 956:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 957:/usr/include/c++/5/bits/basic_string.h ****        */
 958:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 959:/usr/include/c++/5/bits/basic_string.h ****       operator+=(_CharT __c)
 960:/usr/include/c++/5/bits/basic_string.h ****       {
 961:/usr/include/c++/5/bits/basic_string.h **** 	this->push_back(__c);
 962:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
 963:/usr/include/c++/5/bits/basic_string.h ****       }
 964:/usr/include/c++/5/bits/basic_string.h **** 
 965:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
 966:/usr/include/c++/5/bits/basic_string.h ****       /**
 967:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
 968:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
 969:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 970:/usr/include/c++/5/bits/basic_string.h ****        */
 971:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 972:/usr/include/c++/5/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
 973:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
 974:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
 975:/usr/include/c++/5/bits/basic_string.h **** 
 976:/usr/include/c++/5/bits/basic_string.h ****       /**
 977:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
 978:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 979:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 980:/usr/include/c++/5/bits/basic_string.h ****        */
 981:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 982:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str)
 983:/usr/include/c++/5/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
GAS LISTING /tmp/ccbg3Dll.s 			page 153


 984:/usr/include/c++/5/bits/basic_string.h **** 
 985:/usr/include/c++/5/bits/basic_string.h ****       /**
 986:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a substring.
 987:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
 988:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
 989:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 990:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
 991:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
 992:/usr/include/c++/5/bits/basic_string.h ****        *
 993:/usr/include/c++/5/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
 994:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
 995:/usr/include/c++/5/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
 996:/usr/include/c++/5/bits/basic_string.h ****        *  remainder of @a __str is appended.
 997:/usr/include/c++/5/bits/basic_string.h ****        */
 998:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
 999:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n)
1000:/usr/include/c++/5/bits/basic_string.h ****       { return _M_append(__str._M_data()
1001:/usr/include/c++/5/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1002:/usr/include/c++/5/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1003:/usr/include/c++/5/bits/basic_string.h **** 
1004:/usr/include/c++/5/bits/basic_string.h ****       /**
1005:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C substring.
1006:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
1007:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1008:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1009:/usr/include/c++/5/bits/basic_string.h ****        */
1010:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1011:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1012:/usr/include/c++/5/bits/basic_string.h ****       {
1013:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1014:/usr/include/c++/5/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1015:/usr/include/c++/5/bits/basic_string.h **** 	return _M_append(__s, __n);
1016:/usr/include/c++/5/bits/basic_string.h ****       }
1017:/usr/include/c++/5/bits/basic_string.h **** 
1018:/usr/include/c++/5/bits/basic_string.h ****       /**
1019:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
1020:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
1021:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1022:/usr/include/c++/5/bits/basic_string.h ****        */
1023:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1024:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s)
1025:/usr/include/c++/5/bits/basic_string.h ****       {
1026:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1027:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1028:/usr/include/c++/5/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1029:/usr/include/c++/5/bits/basic_string.h **** 	return _M_append(__s, __n);
1030:/usr/include/c++/5/bits/basic_string.h ****       }
1031:/usr/include/c++/5/bits/basic_string.h **** 
1032:/usr/include/c++/5/bits/basic_string.h ****       /**
1033:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append multiple characters.
1034:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1035:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
1036:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1037:/usr/include/c++/5/bits/basic_string.h ****        *
1038:/usr/include/c++/5/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1039:/usr/include/c++/5/bits/basic_string.h ****        */
1040:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/ccbg3Dll.s 			page 154


1041:/usr/include/c++/5/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1042:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1043:/usr/include/c++/5/bits/basic_string.h **** 
1044:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1045:/usr/include/c++/5/bits/basic_string.h ****       /**
1046:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1047:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1048:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1049:/usr/include/c++/5/bits/basic_string.h ****        */
1050:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1051:/usr/include/c++/5/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1052:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1053:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1054:/usr/include/c++/5/bits/basic_string.h **** 
1055:/usr/include/c++/5/bits/basic_string.h ****       /**
1056:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a range of characters.
1057:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1058:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1059:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1060:/usr/include/c++/5/bits/basic_string.h ****        *
1061:/usr/include/c++/5/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1062:/usr/include/c++/5/bits/basic_string.h ****        */
1063:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1064:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1065:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1066:/usr/include/c++/5/bits/basic_string.h **** #else
1067:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1068:/usr/include/c++/5/bits/basic_string.h **** #endif
1069:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1070:/usr/include/c++/5/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1071:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1072:/usr/include/c++/5/bits/basic_string.h **** 
1073:/usr/include/c++/5/bits/basic_string.h ****       /**
1074:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a single character.
1075:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to append.
1076:/usr/include/c++/5/bits/basic_string.h ****        */
1077:/usr/include/c++/5/bits/basic_string.h ****       void
1078:/usr/include/c++/5/bits/basic_string.h ****       push_back(_CharT __c)
1079:/usr/include/c++/5/bits/basic_string.h ****       {
1080:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
1081:/usr/include/c++/5/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1082:/usr/include/c++/5/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1083:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1084:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1085:/usr/include/c++/5/bits/basic_string.h ****       }
1086:/usr/include/c++/5/bits/basic_string.h **** 
1087:/usr/include/c++/5/bits/basic_string.h ****       /**
1088:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1089:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
1090:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1091:/usr/include/c++/5/bits/basic_string.h ****        */
1092:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1093:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str)
1094:/usr/include/c++/5/bits/basic_string.h ****       {
1095:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_assign(__str);
1096:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
1097:/usr/include/c++/5/bits/basic_string.h ****       }
GAS LISTING /tmp/ccbg3Dll.s 			page 155


1098:/usr/include/c++/5/bits/basic_string.h **** 
1099:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1100:/usr/include/c++/5/bits/basic_string.h ****       /**
1101:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1102:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
1103:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1104:/usr/include/c++/5/bits/basic_string.h ****        *
1105:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1106:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1107:/usr/include/c++/5/bits/basic_string.h ****        */
1108:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1109:/usr/include/c++/5/bits/basic_string.h ****       assign(basic_string&& __str)
1110:/usr/include/c++/5/bits/basic_string.h ****       {
1111:/usr/include/c++/5/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1112:/usr/include/c++/5/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1113:/usr/include/c++/5/bits/basic_string.h **** 	return *this = std::move(__str);
1114:/usr/include/c++/5/bits/basic_string.h ****       }
1115:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1116:/usr/include/c++/5/bits/basic_string.h **** 
1117:/usr/include/c++/5/bits/basic_string.h ****       /**
1118:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1119:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to use.
1120:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1121:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1122:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1123:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1124:/usr/include/c++/5/bits/basic_string.h ****        *
1125:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1126:/usr/include/c++/5/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1127:/usr/include/c++/5/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1128:/usr/include/c++/5/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1129:/usr/include/c++/5/bits/basic_string.h ****        */
1130:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1131:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1132:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1133:/usr/include/c++/5/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1134:/usr/include/c++/5/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1135:/usr/include/c++/5/bits/basic_string.h **** 
1136:/usr/include/c++/5/bits/basic_string.h ****       /**
1137:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1138:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
1139:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1140:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1141:/usr/include/c++/5/bits/basic_string.h ****        *
1142:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1143:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1144:/usr/include/c++/5/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1145:/usr/include/c++/5/bits/basic_string.h ****        */
1146:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1147:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1148:/usr/include/c++/5/bits/basic_string.h ****       {
1149:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1150:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1151:/usr/include/c++/5/bits/basic_string.h ****       }
1152:/usr/include/c++/5/bits/basic_string.h **** 
1153:/usr/include/c++/5/bits/basic_string.h ****       /**
1154:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
GAS LISTING /tmp/ccbg3Dll.s 			page 156


1155:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
1156:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1157:/usr/include/c++/5/bits/basic_string.h ****        *
1158:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1159:/usr/include/c++/5/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1160:/usr/include/c++/5/bits/basic_string.h ****        *  function returns.
1161:/usr/include/c++/5/bits/basic_string.h ****        */
1162:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1163:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s)
1164:/usr/include/c++/5/bits/basic_string.h ****       {
1165:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1166:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1167:/usr/include/c++/5/bits/basic_string.h **** 			  traits_type::length(__s));
1168:/usr/include/c++/5/bits/basic_string.h ****       }
1169:/usr/include/c++/5/bits/basic_string.h **** 
1170:/usr/include/c++/5/bits/basic_string.h ****       /**
1171:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1172:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1173:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
1174:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/usr/include/c++/5/bits/basic_string.h ****        *
1176:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1177:/usr/include/c++/5/bits/basic_string.h ****        *  character @a __c.
1178:/usr/include/c++/5/bits/basic_string.h ****        */
1179:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1180:/usr/include/c++/5/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1181:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1182:/usr/include/c++/5/bits/basic_string.h **** 
1183:/usr/include/c++/5/bits/basic_string.h ****       /**
1184:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1185:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1186:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1187:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1188:/usr/include/c++/5/bits/basic_string.h ****        *
1189:/usr/include/c++/5/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1190:/usr/include/c++/5/bits/basic_string.h ****       */
1191:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1192:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1193:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1194:/usr/include/c++/5/bits/basic_string.h **** #else
1195:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1196:/usr/include/c++/5/bits/basic_string.h **** #endif
1197:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1198:/usr/include/c++/5/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1199:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1200:/usr/include/c++/5/bits/basic_string.h **** 
1201:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1202:/usr/include/c++/5/bits/basic_string.h ****       /**
1203:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1204:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1205:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1206:/usr/include/c++/5/bits/basic_string.h ****        */
1207:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1208:/usr/include/c++/5/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1209:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1210:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1211:/usr/include/c++/5/bits/basic_string.h **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 157


1212:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1213:/usr/include/c++/5/bits/basic_string.h ****       /**
1214:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1215:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1216:/usr/include/c++/5/bits/basic_string.h ****        *              insert at.
1217:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1218:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1219:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1220:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1221:/usr/include/c++/5/bits/basic_string.h ****        *
1222:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1223:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1224:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1225:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1226:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1227:/usr/include/c++/5/bits/basic_string.h ****       */
1228:/usr/include/c++/5/bits/basic_string.h ****       iterator
1229:/usr/include/c++/5/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1230:/usr/include/c++/5/bits/basic_string.h ****       {
1231:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1232:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1233:/usr/include/c++/5/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1234:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1235:/usr/include/c++/5/bits/basic_string.h ****       }
1236:/usr/include/c++/5/bits/basic_string.h **** #else
1237:/usr/include/c++/5/bits/basic_string.h ****       /**
1238:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1239:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1240:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1241:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1242:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1243:/usr/include/c++/5/bits/basic_string.h ****        *
1244:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1245:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1246:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1247:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1248:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1249:/usr/include/c++/5/bits/basic_string.h ****       */
1250:/usr/include/c++/5/bits/basic_string.h ****       void
1251:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1252:/usr/include/c++/5/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1253:/usr/include/c++/5/bits/basic_string.h **** #endif
1254:/usr/include/c++/5/bits/basic_string.h **** 
1255:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1256:/usr/include/c++/5/bits/basic_string.h ****       /**
1257:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1258:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1259:/usr/include/c++/5/bits/basic_string.h ****        *              insert at.
1260:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
1261:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
1262:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1263:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1264:/usr/include/c++/5/bits/basic_string.h ****        *
1265:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1266:/usr/include/c++/5/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1267:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1268:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
GAS LISTING /tmp/ccbg3Dll.s 			page 158


1269:/usr/include/c++/5/bits/basic_string.h ****       */
1270:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1271:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1272:/usr/include/c++/5/bits/basic_string.h **** 	iterator
1273:/usr/include/c++/5/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1274:/usr/include/c++/5/bits/basic_string.h ****         {
1275:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1276:/usr/include/c++/5/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1277:/usr/include/c++/5/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1278:/usr/include/c++/5/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1279:/usr/include/c++/5/bits/basic_string.h **** 	}
1280:/usr/include/c++/5/bits/basic_string.h **** #else
1281:/usr/include/c++/5/bits/basic_string.h ****       /**
1282:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1283:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1284:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
1285:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
1286:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1287:/usr/include/c++/5/bits/basic_string.h ****        *
1288:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1289:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1290:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1291:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1292:/usr/include/c++/5/bits/basic_string.h ****       */
1293:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1294:/usr/include/c++/5/bits/basic_string.h ****         void
1295:/usr/include/c++/5/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1296:/usr/include/c++/5/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1297:/usr/include/c++/5/bits/basic_string.h **** #endif
1298:/usr/include/c++/5/bits/basic_string.h **** 
1299:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1300:/usr/include/c++/5/bits/basic_string.h ****       /**
1301:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1302:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1303:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1304:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1305:/usr/include/c++/5/bits/basic_string.h ****        */
1306:/usr/include/c++/5/bits/basic_string.h ****       void
1307:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1308:/usr/include/c++/5/bits/basic_string.h ****       {
1309:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1310:/usr/include/c++/5/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1311:/usr/include/c++/5/bits/basic_string.h ****       }
1312:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1313:/usr/include/c++/5/bits/basic_string.h **** 
1314:/usr/include/c++/5/bits/basic_string.h ****       /**
1315:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert value of a string.
1316:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1317:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
1318:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1319:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1320:/usr/include/c++/5/bits/basic_string.h ****        *
1321:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1322:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1323:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1324:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1325:/usr/include/c++/5/bits/basic_string.h ****       */
GAS LISTING /tmp/ccbg3Dll.s 			page 159


1326:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1327:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1328:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1329:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1330:/usr/include/c++/5/bits/basic_string.h **** 
1331:/usr/include/c++/5/bits/basic_string.h ****       /**
1332:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a substring.
1333:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1334:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
1335:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1336:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1337:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1338:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1339:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1340:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1341:/usr/include/c++/5/bits/basic_string.h ****        *
1342:/usr/include/c++/5/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1343:/usr/include/c++/5/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1344:/usr/include/c++/5/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1345:/usr/include/c++/5/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1346:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1347:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1348:/usr/include/c++/5/bits/basic_string.h ****       */
1349:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1350:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1351:/usr/include/c++/5/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1352:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1353:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1354:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1355:/usr/include/c++/5/bits/basic_string.h **** 
1356:/usr/include/c++/5/bits/basic_string.h ****       /**
1357:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C substring.
1358:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1359:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
1360:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1361:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1363:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1364:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1365:/usr/include/c++/5/bits/basic_string.h ****        *
1366:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1367:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1368:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1369:/usr/include/c++/5/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1370:/usr/include/c++/5/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1371:/usr/include/c++/5/bits/basic_string.h ****       */
1372:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1373:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1374:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1375:/usr/include/c++/5/bits/basic_string.h **** 
1376:/usr/include/c++/5/bits/basic_string.h ****       /**
1377:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C string.
1378:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1379:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
1380:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1381:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1382:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
GAS LISTING /tmp/ccbg3Dll.s 			page 160


1383:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1384:/usr/include/c++/5/bits/basic_string.h ****        *
1385:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1386:/usr/include/c++/5/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1387:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1388:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1389:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1390:/usr/include/c++/5/bits/basic_string.h ****       */
1391:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1392:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1393:/usr/include/c++/5/bits/basic_string.h ****       {
1394:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1395:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1396:/usr/include/c++/5/bits/basic_string.h **** 			     traits_type::length(__s));
1397:/usr/include/c++/5/bits/basic_string.h ****       }
1398:/usr/include/c++/5/bits/basic_string.h **** 
1399:/usr/include/c++/5/bits/basic_string.h ****       /**
1400:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1401:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1402:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1403:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1404:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1405:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1406:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1407:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1408:/usr/include/c++/5/bits/basic_string.h ****        *
1409:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1410:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1411:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1412:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1413:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1414:/usr/include/c++/5/bits/basic_string.h ****       */
1415:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1416:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1417:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1418:/usr/include/c++/5/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1419:/usr/include/c++/5/bits/basic_string.h **** 
1420:/usr/include/c++/5/bits/basic_string.h ****       /**
1421:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert one character.
1422:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1423:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
1424:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1425:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1426:/usr/include/c++/5/bits/basic_string.h ****        *
1427:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1428:/usr/include/c++/5/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1429:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1430:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1431:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1432:/usr/include/c++/5/bits/basic_string.h ****       */
1433:/usr/include/c++/5/bits/basic_string.h ****       iterator
1434:/usr/include/c++/5/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1435:/usr/include/c++/5/bits/basic_string.h ****       {
1436:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1437:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1438:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1439:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
GAS LISTING /tmp/ccbg3Dll.s 			page 161


1440:/usr/include/c++/5/bits/basic_string.h ****       }
1441:/usr/include/c++/5/bits/basic_string.h **** 
1442:/usr/include/c++/5/bits/basic_string.h ****       /**
1443:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove characters.
1444:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1445:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1446:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1448:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1449:/usr/include/c++/5/bits/basic_string.h ****        *
1450:/usr/include/c++/5/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1451:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1452:/usr/include/c++/5/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1453:/usr/include/c++/5/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1454:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1455:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1456:/usr/include/c++/5/bits/basic_string.h ****       */
1457:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1458:/usr/include/c++/5/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1459:/usr/include/c++/5/bits/basic_string.h ****       {
1460:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(_M_check(__pos, "basic_string::erase"),
1461:/usr/include/c++/5/bits/basic_string.h **** 		       _M_limit(__pos, __n));
1462:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
1463:/usr/include/c++/5/bits/basic_string.h ****       }
1464:/usr/include/c++/5/bits/basic_string.h **** 
1465:/usr/include/c++/5/bits/basic_string.h ****       /**
1466:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove one character.
1467:/usr/include/c++/5/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1468:/usr/include/c++/5/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1469:/usr/include/c++/5/bits/basic_string.h ****        *
1470:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1471:/usr/include/c++/5/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1472:/usr/include/c++/5/bits/basic_string.h ****       */
1473:/usr/include/c++/5/bits/basic_string.h ****       iterator
1474:/usr/include/c++/5/bits/basic_string.h ****       erase(__const_iterator __position)
1475:/usr/include/c++/5/bits/basic_string.h ****       {
1476:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1477:/usr/include/c++/5/bits/basic_string.h **** 				 && __position < end());
1478:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1479:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1480:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1481:/usr/include/c++/5/bits/basic_string.h ****       }
1482:/usr/include/c++/5/bits/basic_string.h **** 
1483:/usr/include/c++/5/bits/basic_string.h ****       /**
1484:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1485:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1486:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1487:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1488:/usr/include/c++/5/bits/basic_string.h ****        *
1489:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1490:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1491:/usr/include/c++/5/bits/basic_string.h ****       */
1492:/usr/include/c++/5/bits/basic_string.h ****       iterator
1493:/usr/include/c++/5/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1494:/usr/include/c++/5/bits/basic_string.h ****       {
1495:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1496:/usr/include/c++/5/bits/basic_string.h **** 				 && __last <= end());
GAS LISTING /tmp/ccbg3Dll.s 			page 162


1497:/usr/include/c++/5/bits/basic_string.h ****         const size_type __pos = __first - begin();
1498:/usr/include/c++/5/bits/basic_string.h **** 	this->_M_erase(__pos, __last - __first);
1499:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1500:/usr/include/c++/5/bits/basic_string.h ****       }
1501:/usr/include/c++/5/bits/basic_string.h **** 
1502:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1503:/usr/include/c++/5/bits/basic_string.h ****       /**
1504:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove the last character.
1505:/usr/include/c++/5/bits/basic_string.h ****        *
1506:/usr/include/c++/5/bits/basic_string.h ****        *  The string must be non-empty.
1507:/usr/include/c++/5/bits/basic_string.h ****        */
1508:/usr/include/c++/5/bits/basic_string.h ****       void
1509:/usr/include/c++/5/bits/basic_string.h ****       pop_back() noexcept
1510:/usr/include/c++/5/bits/basic_string.h ****       { _M_erase(size()-1, 1); }
1511:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1512:/usr/include/c++/5/bits/basic_string.h **** 
1513:/usr/include/c++/5/bits/basic_string.h ****       /**
1514:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1515:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1516:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1517:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
1518:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1519:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1520:/usr/include/c++/5/bits/basic_string.h ****        *  string.
1521:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1522:/usr/include/c++/5/bits/basic_string.h ****        *
1523:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1524:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1525:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1526:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1527:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1528:/usr/include/c++/5/bits/basic_string.h ****        *  error is thrown.
1529:/usr/include/c++/5/bits/basic_string.h ****       */
1530:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1531:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1532:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1533:/usr/include/c++/5/bits/basic_string.h **** 
1534:/usr/include/c++/5/bits/basic_string.h ****       /**
1535:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1537:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1538:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
1539:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1540:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1541:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1542:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1543:/usr/include/c++/5/bits/basic_string.h ****        *  __str.size().
1544:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1545:/usr/include/c++/5/bits/basic_string.h ****        *
1546:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1547:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1548:/usr/include/c++/5/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1549:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1550:/usr/include/c++/5/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1551:/usr/include/c++/5/bits/basic_string.h ****       */
1552:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1553:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
GAS LISTING /tmp/ccbg3Dll.s 			page 163


1554:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1555:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1556:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1557:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1558:/usr/include/c++/5/bits/basic_string.h **** 
1559:/usr/include/c++/5/bits/basic_string.h ****       /**
1560:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1561:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1562:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1563:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
1564:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1565:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1566:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1567:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1568:/usr/include/c++/5/bits/basic_string.h ****        *
1569:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1570:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1571:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1572:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1573:/usr/include/c++/5/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1574:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1575:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1576:/usr/include/c++/5/bits/basic_string.h ****       */
1577:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1578:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1579:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2)
1580:/usr/include/c++/5/bits/basic_string.h ****       {
1581:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1582:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1583:/usr/include/c++/5/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1584:/usr/include/c++/5/bits/basic_string.h ****       }
1585:/usr/include/c++/5/bits/basic_string.h **** 
1586:/usr/include/c++/5/bits/basic_string.h ****       /**
1587:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1588:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1589:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1590:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
1591:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1592:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1593:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1594:/usr/include/c++/5/bits/basic_string.h ****        *
1595:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1596:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1597:/usr/include/c++/5/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1598:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1599:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1600:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
1601:/usr/include/c++/5/bits/basic_string.h ****       */
1602:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1603:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1604:/usr/include/c++/5/bits/basic_string.h ****       {
1605:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1606:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1607:/usr/include/c++/5/bits/basic_string.h ****       }
1608:/usr/include/c++/5/bits/basic_string.h **** 
1609:/usr/include/c++/5/bits/basic_string.h ****       /**
1610:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
GAS LISTING /tmp/ccbg3Dll.s 			page 164


1611:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1612:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1613:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1614:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
1615:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1616:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1617:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1618:/usr/include/c++/5/bits/basic_string.h ****        *
1619:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1620:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1621:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1622:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1623:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1624:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
1625:/usr/include/c++/5/bits/basic_string.h ****       */
1626:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1627:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1628:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1629:/usr/include/c++/5/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1630:/usr/include/c++/5/bits/basic_string.h **** 
1631:/usr/include/c++/5/bits/basic_string.h ****       /**
1632:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1633:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1634:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1635:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String value to insert.
1636:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1637:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1638:/usr/include/c++/5/bits/basic_string.h ****        *
1639:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1640:/usr/include/c++/5/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1641:/usr/include/c++/5/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1642:/usr/include/c++/5/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1643:/usr/include/c++/5/bits/basic_string.h ****       */
1644:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1645:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1646:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string& __str)
1647:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
1648:/usr/include/c++/5/bits/basic_string.h **** 
1649:/usr/include/c++/5/bits/basic_string.h ****       /**
1650:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1651:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1652:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1653:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
1654:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1655:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1656:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1657:/usr/include/c++/5/bits/basic_string.h ****        *
1658:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1659:/usr/include/c++/5/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1660:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1661:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1662:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1663:/usr/include/c++/5/bits/basic_string.h ****       */
1664:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1665:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1666:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
1667:/usr/include/c++/5/bits/basic_string.h ****       {
GAS LISTING /tmp/ccbg3Dll.s 			page 165


1668:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1669:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1670:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
1671:/usr/include/c++/5/bits/basic_string.h ****       }
1672:/usr/include/c++/5/bits/basic_string.h **** 
1673:/usr/include/c++/5/bits/basic_string.h ****       /**
1674:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
1675:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1676:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1677:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
1678:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1679:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1680:/usr/include/c++/5/bits/basic_string.h ****        *
1681:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1682:/usr/include/c++/5/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
1683:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1684:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1685:/usr/include/c++/5/bits/basic_string.h ****       */
1686:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1687:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
1688:/usr/include/c++/5/bits/basic_string.h ****       {
1689:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1690:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
1691:/usr/include/c++/5/bits/basic_string.h ****       }
1692:/usr/include/c++/5/bits/basic_string.h **** 
1693:/usr/include/c++/5/bits/basic_string.h ****       /**
1694:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
1695:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1696:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1697:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1698:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
1699:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1700:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1701:/usr/include/c++/5/bits/basic_string.h ****        *
1702:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1703:/usr/include/c++/5/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
1704:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1705:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1706:/usr/include/c++/5/bits/basic_string.h ****       */
1707:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1708:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
1709:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT __c)
1710:/usr/include/c++/5/bits/basic_string.h ****       {
1711:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1712:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1713:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
1714:/usr/include/c++/5/bits/basic_string.h ****       }
1715:/usr/include/c++/5/bits/basic_string.h **** 
1716:/usr/include/c++/5/bits/basic_string.h ****       /**
1717:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
1718:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1719:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1720:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
1721:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
1722:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1723:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1724:/usr/include/c++/5/bits/basic_string.h ****        *
GAS LISTING /tmp/ccbg3Dll.s 			page 166


1725:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1726:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1727:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1728:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1729:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1730:/usr/include/c++/5/bits/basic_string.h ****       */
1731:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1732:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator,
1733:/usr/include/c++/5/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1734:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1735:/usr/include/c++/5/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
1736:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1737:/usr/include/c++/5/bits/basic_string.h ****         {
1738:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1739:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= end());
1740:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1741:/usr/include/c++/5/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
1742:/usr/include/c++/5/bits/basic_string.h **** 					   std::__false_type());
1743:/usr/include/c++/5/bits/basic_string.h **** 	}
1744:/usr/include/c++/5/bits/basic_string.h **** #else
1745:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1746:/usr/include/c++/5/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
1747:/usr/include/c++/5/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
1748:/usr/include/c++/5/bits/basic_string.h **** #else
1749:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
1750:/usr/include/c++/5/bits/basic_string.h **** #endif
1751:/usr/include/c++/5/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
1752:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1753:/usr/include/c++/5/bits/basic_string.h ****         {
1754:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1755:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= end());
1756:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1757:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1758:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
1759:/usr/include/c++/5/bits/basic_string.h **** 	}
1760:/usr/include/c++/5/bits/basic_string.h **** #endif
1761:/usr/include/c++/5/bits/basic_string.h **** 
1762:/usr/include/c++/5/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
1763:/usr/include/c++/5/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
1764:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1765:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1766:/usr/include/c++/5/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
1767:/usr/include/c++/5/bits/basic_string.h ****       {
1768:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1769:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1770:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1771:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1772:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1773:/usr/include/c++/5/bits/basic_string.h ****       }
1774:/usr/include/c++/5/bits/basic_string.h **** 
1775:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1776:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1777:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
1778:/usr/include/c++/5/bits/basic_string.h ****       {
1779:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1780:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1781:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
GAS LISTING /tmp/ccbg3Dll.s 			page 167


1782:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1783:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1784:/usr/include/c++/5/bits/basic_string.h ****       }
1785:/usr/include/c++/5/bits/basic_string.h **** 
1786:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1787:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1788:/usr/include/c++/5/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
1789:/usr/include/c++/5/bits/basic_string.h ****       {
1790:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1791:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1792:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1793:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1794:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1795:/usr/include/c++/5/bits/basic_string.h ****       }
1796:/usr/include/c++/5/bits/basic_string.h **** 
1797:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1798:/usr/include/c++/5/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
1799:/usr/include/c++/5/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
1800:/usr/include/c++/5/bits/basic_string.h ****       {
1801:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
1802:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= end());
1803:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1804:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
1805:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1806:/usr/include/c++/5/bits/basic_string.h ****       }
1807:/usr/include/c++/5/bits/basic_string.h **** 
1808:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
1809:/usr/include/c++/5/bits/basic_string.h ****       /**
1810:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
1811:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1812:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1813:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1814:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
1815:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1816:/usr/include/c++/5/bits/basic_string.h ****        *
1817:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1818:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1819:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1820:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1821:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
1822:/usr/include/c++/5/bits/basic_string.h ****       */
1823:/usr/include/c++/5/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
1824:/usr/include/c++/5/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
1825:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
1826:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
1827:/usr/include/c++/5/bits/basic_string.h **** 
1828:/usr/include/c++/5/bits/basic_string.h ****     private:
1829:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
1830:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
1831:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1832:/usr/include/c++/5/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
1833:/usr/include/c++/5/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
1834:/usr/include/c++/5/bits/basic_string.h **** 
1835:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
1836:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
1837:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
1838:/usr/include/c++/5/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
GAS LISTING /tmp/ccbg3Dll.s 			page 168


1839:/usr/include/c++/5/bits/basic_string.h **** 			    __false_type);
1840:/usr/include/c++/5/bits/basic_string.h **** 
1841:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1842:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1843:/usr/include/c++/5/bits/basic_string.h **** 		     _CharT __c);
1844:/usr/include/c++/5/bits/basic_string.h **** 
1845:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1846:/usr/include/c++/5/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
1847:/usr/include/c++/5/bits/basic_string.h **** 		 const size_type __len2);
1848:/usr/include/c++/5/bits/basic_string.h **** 
1849:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
1850:/usr/include/c++/5/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
1851:/usr/include/c++/5/bits/basic_string.h **** 
1852:/usr/include/c++/5/bits/basic_string.h ****     public:
1853:/usr/include/c++/5/bits/basic_string.h **** 
1854:/usr/include/c++/5/bits/basic_string.h ****       /**
1855:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy substring into C string.
1856:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to copy value into.
1857:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
1858:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
1859:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Number of characters actually copied
1860:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
1861:/usr/include/c++/5/bits/basic_string.h ****        *
1862:/usr/include/c++/5/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
1863:/usr/include/c++/5/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
1864:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.
1865:/usr/include/c++/5/bits/basic_string.h ****       */
1866:/usr/include/c++/5/bits/basic_string.h ****       size_type
1867:/usr/include/c++/5/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
1868:/usr/include/c++/5/bits/basic_string.h **** 
1869:/usr/include/c++/5/bits/basic_string.h ****       /**
1870:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Swap contents with another string.
1871:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String to swap with.
1872:/usr/include/c++/5/bits/basic_string.h ****        *
1873:/usr/include/c++/5/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
1874:/usr/include/c++/5/bits/basic_string.h ****        *  time.
1875:/usr/include/c++/5/bits/basic_string.h ****       */
1876:/usr/include/c++/5/bits/basic_string.h ****       void
1877:/usr/include/c++/5/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
1878:/usr/include/c++/5/bits/basic_string.h **** 
1879:/usr/include/c++/5/bits/basic_string.h ****       // String operations:
1880:/usr/include/c++/5/bits/basic_string.h ****       /**
1881:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
1882:/usr/include/c++/5/bits/basic_string.h ****        *
1883:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1884:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
1885:/usr/include/c++/5/bits/basic_string.h ****       */
1886:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
1887:/usr/include/c++/5/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
1888:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
1889:/usr/include/c++/5/bits/basic_string.h **** 
1890:/usr/include/c++/5/bits/basic_string.h ****       /**
1891:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
1892:/usr/include/c++/5/bits/basic_string.h ****        *
1893:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1894:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
1895:/usr/include/c++/5/bits/basic_string.h ****       */
GAS LISTING /tmp/ccbg3Dll.s 			page 169


1896:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
1897:/usr/include/c++/5/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
1898:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
1899:/usr/include/c++/5/bits/basic_string.h **** 
1900:/usr/include/c++/5/bits/basic_string.h ****       /**
1901:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
1902:/usr/include/c++/5/bits/basic_string.h ****       */
1903:/usr/include/c++/5/bits/basic_string.h ****       allocator_type
1904:/usr/include/c++/5/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1905:/usr/include/c++/5/bits/basic_string.h ****       { return _M_get_allocator(); }
1906:/usr/include/c++/5/bits/basic_string.h **** 
1907:/usr/include/c++/5/bits/basic_string.h ****       /**
1908:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C substring.
1909:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1910:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1911:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
1912:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1913:/usr/include/c++/5/bits/basic_string.h ****        *
1914:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
1915:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1916:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1917:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
1918:/usr/include/c++/5/bits/basic_string.h ****       */
1919:/usr/include/c++/5/bits/basic_string.h ****       size_type
1920:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
1921:/usr/include/c++/5/bits/basic_string.h **** 
1922:/usr/include/c++/5/bits/basic_string.h ****       /**
1923:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a string.
1924:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
1925:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1926:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1927:/usr/include/c++/5/bits/basic_string.h ****        *
1928:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
1929:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
1930:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns npos.
1931:/usr/include/c++/5/bits/basic_string.h ****       */
1932:/usr/include/c++/5/bits/basic_string.h ****       size_type
1933:/usr/include/c++/5/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
1934:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1935:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
1936:/usr/include/c++/5/bits/basic_string.h **** 
1937:/usr/include/c++/5/bits/basic_string.h ****       /**
1938:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C string.
1939:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1940:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1941:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1942:/usr/include/c++/5/bits/basic_string.h ****        *
1943:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
1944:/usr/include/c++/5/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
1945:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1946:/usr/include/c++/5/bits/basic_string.h ****       */
1947:/usr/include/c++/5/bits/basic_string.h ****       size_type
1948:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
1949:/usr/include/c++/5/bits/basic_string.h ****       {
1950:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1951:/usr/include/c++/5/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
1952:/usr/include/c++/5/bits/basic_string.h ****       }
GAS LISTING /tmp/ccbg3Dll.s 			page 170


1953:/usr/include/c++/5/bits/basic_string.h **** 
1954:/usr/include/c++/5/bits/basic_string.h ****       /**
1955:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
1956:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
1957:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1958:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
1959:/usr/include/c++/5/bits/basic_string.h ****        *
1960:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
1961:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1962:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
1963:/usr/include/c++/5/bits/basic_string.h ****       */
1964:/usr/include/c++/5/bits/basic_string.h ****       size_type
1965:/usr/include/c++/5/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
1966:/usr/include/c++/5/bits/basic_string.h **** 
1967:/usr/include/c++/5/bits/basic_string.h ****       /**
1968:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a string.
1969:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
1970:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1971:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1972:/usr/include/c++/5/bits/basic_string.h ****        *
1973:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
1974:/usr/include/c++/5/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
1975:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1976:/usr/include/c++/5/bits/basic_string.h ****       */
1977:/usr/include/c++/5/bits/basic_string.h ****       size_type
1978:/usr/include/c++/5/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
1979:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1980:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
1981:/usr/include/c++/5/bits/basic_string.h **** 
1982:/usr/include/c++/5/bits/basic_string.h ****       /**
1983:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
1984:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
1985:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
1986:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1987:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1988:/usr/include/c++/5/bits/basic_string.h ****        *
1989:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
1990:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1991:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1992:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
1993:/usr/include/c++/5/bits/basic_string.h ****       */
1994:/usr/include/c++/5/bits/basic_string.h ****       size_type
1995:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
1996:/usr/include/c++/5/bits/basic_string.h **** 
1997:/usr/include/c++/5/bits/basic_string.h ****       /**
1998:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C string.
1999:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
2000:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2001:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2002:/usr/include/c++/5/bits/basic_string.h ****        *
2003:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2004:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2005:/usr/include/c++/5/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2006:/usr/include/c++/5/bits/basic_string.h ****       */
2007:/usr/include/c++/5/bits/basic_string.h ****       size_type
2008:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2009:/usr/include/c++/5/bits/basic_string.h ****       {
GAS LISTING /tmp/ccbg3Dll.s 			page 171


2010:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2011:/usr/include/c++/5/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2012:/usr/include/c++/5/bits/basic_string.h ****       }
2013:/usr/include/c++/5/bits/basic_string.h **** 
2014:/usr/include/c++/5/bits/basic_string.h ****       /**
2015:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
2016:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2017:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2018:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2019:/usr/include/c++/5/bits/basic_string.h ****        *
2020:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2021:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2022:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2023:/usr/include/c++/5/bits/basic_string.h ****       */
2024:/usr/include/c++/5/bits/basic_string.h ****       size_type
2025:/usr/include/c++/5/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2026:/usr/include/c++/5/bits/basic_string.h **** 
2027:/usr/include/c++/5/bits/basic_string.h ****       /**
2028:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2029:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2030:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2031:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2032:/usr/include/c++/5/bits/basic_string.h ****        *
2033:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2034:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2035:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2036:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2037:/usr/include/c++/5/bits/basic_string.h ****       */
2038:/usr/include/c++/5/bits/basic_string.h ****       size_type
2039:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2040:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2041:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2042:/usr/include/c++/5/bits/basic_string.h **** 
2043:/usr/include/c++/5/bits/basic_string.h ****       /**
2044:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2045:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2046:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2047:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2048:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2049:/usr/include/c++/5/bits/basic_string.h ****        *
2050:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2051:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2052:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2053:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2054:/usr/include/c++/5/bits/basic_string.h ****       */
2055:/usr/include/c++/5/bits/basic_string.h ****       size_type
2056:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
2057:/usr/include/c++/5/bits/basic_string.h **** 
2058:/usr/include/c++/5/bits/basic_string.h ****       /**
2059:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2060:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2061:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2062:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2063:/usr/include/c++/5/bits/basic_string.h ****        *
2064:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2065:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2066:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
GAS LISTING /tmp/ccbg3Dll.s 			page 172


2067:/usr/include/c++/5/bits/basic_string.h ****       */
2068:/usr/include/c++/5/bits/basic_string.h ****       size_type
2069:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2070:/usr/include/c++/5/bits/basic_string.h ****       {
2071:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2072:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2073:/usr/include/c++/5/bits/basic_string.h ****       }
2074:/usr/include/c++/5/bits/basic_string.h **** 
2075:/usr/include/c++/5/bits/basic_string.h ****       /**
2076:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
2077:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2078:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2079:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2080:/usr/include/c++/5/bits/basic_string.h ****        *
2081:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2082:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2083:/usr/include/c++/5/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2084:/usr/include/c++/5/bits/basic_string.h ****        *
2085:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2086:/usr/include/c++/5/bits/basic_string.h ****       */
2087:/usr/include/c++/5/bits/basic_string.h ****       size_type
2088:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2089:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__c, __pos); }
2090:/usr/include/c++/5/bits/basic_string.h **** 
2091:/usr/include/c++/5/bits/basic_string.h ****       /**
2092:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2093:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2094:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2095:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2096:/usr/include/c++/5/bits/basic_string.h ****        *
2097:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2098:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2099:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2100:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2101:/usr/include/c++/5/bits/basic_string.h ****       */
2102:/usr/include/c++/5/bits/basic_string.h ****       size_type
2103:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2104:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2105:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2106:/usr/include/c++/5/bits/basic_string.h **** 
2107:/usr/include/c++/5/bits/basic_string.h ****       /**
2108:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2109:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2110:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2111:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2112:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2113:/usr/include/c++/5/bits/basic_string.h ****        *
2114:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2115:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2116:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2117:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2118:/usr/include/c++/5/bits/basic_string.h ****       */
2119:/usr/include/c++/5/bits/basic_string.h ****       size_type
2120:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
2121:/usr/include/c++/5/bits/basic_string.h **** 
2122:/usr/include/c++/5/bits/basic_string.h ****       /**
2123:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
GAS LISTING /tmp/ccbg3Dll.s 			page 173


2124:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2125:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2126:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2127:/usr/include/c++/5/bits/basic_string.h ****        *
2128:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2129:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2130:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2131:/usr/include/c++/5/bits/basic_string.h ****       */
2132:/usr/include/c++/5/bits/basic_string.h ****       size_type
2133:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2134:/usr/include/c++/5/bits/basic_string.h ****       {
2135:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2136:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2137:/usr/include/c++/5/bits/basic_string.h ****       }
2138:/usr/include/c++/5/bits/basic_string.h **** 
2139:/usr/include/c++/5/bits/basic_string.h ****       /**
2140:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
2141:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
2142:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2143:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2144:/usr/include/c++/5/bits/basic_string.h ****        *
2145:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2146:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2147:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2148:/usr/include/c++/5/bits/basic_string.h ****        *
2149:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2150:/usr/include/c++/5/bits/basic_string.h ****       */
2151:/usr/include/c++/5/bits/basic_string.h ****       size_type
2152:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2153:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2154:/usr/include/c++/5/bits/basic_string.h **** 
2155:/usr/include/c++/5/bits/basic_string.h ****       /**
2156:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2157:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2158:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2159:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2160:/usr/include/c++/5/bits/basic_string.h ****        *
2161:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2162:/usr/include/c++/5/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2163:/usr/include/c++/5/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2164:/usr/include/c++/5/bits/basic_string.h ****       */
2165:/usr/include/c++/5/bits/basic_string.h ****       size_type
2166:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2167:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2168:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2169:/usr/include/c++/5/bits/basic_string.h **** 
2170:/usr/include/c++/5/bits/basic_string.h ****       /**
2171:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2172:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2173:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2174:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2175:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2176:/usr/include/c++/5/bits/basic_string.h ****        *
2177:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2178:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2179:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2180:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
GAS LISTING /tmp/ccbg3Dll.s 			page 174


2181:/usr/include/c++/5/bits/basic_string.h ****       */
2182:/usr/include/c++/5/bits/basic_string.h ****       size_type
2183:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2184:/usr/include/c++/5/bits/basic_string.h **** 			size_type __n) const;
2185:/usr/include/c++/5/bits/basic_string.h **** 
2186:/usr/include/c++/5/bits/basic_string.h ****       /**
2187:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2188:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2189:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2190:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2191:/usr/include/c++/5/bits/basic_string.h ****        *
2192:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2193:/usr/include/c++/5/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2194:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2195:/usr/include/c++/5/bits/basic_string.h ****       */
2196:/usr/include/c++/5/bits/basic_string.h ****       size_type
2197:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2198:/usr/include/c++/5/bits/basic_string.h ****       {
2199:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2200:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2201:/usr/include/c++/5/bits/basic_string.h ****       }
2202:/usr/include/c++/5/bits/basic_string.h **** 
2203:/usr/include/c++/5/bits/basic_string.h ****       /**
2204:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a different character.
2205:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
2206:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2207:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
2208:/usr/include/c++/5/bits/basic_string.h ****        *
2209:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2210:/usr/include/c++/5/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2211:/usr/include/c++/5/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2212:/usr/include/c++/5/bits/basic_string.h ****       */
2213:/usr/include/c++/5/bits/basic_string.h ****       size_type
2214:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2215:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2216:/usr/include/c++/5/bits/basic_string.h **** 
2217:/usr/include/c++/5/bits/basic_string.h ****       /**
2218:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2219:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2220:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2221:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2222:/usr/include/c++/5/bits/basic_string.h ****        *
2223:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2224:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2225:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2226:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2227:/usr/include/c++/5/bits/basic_string.h ****       */
2228:/usr/include/c++/5/bits/basic_string.h ****       size_type
2229:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2230:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2231:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2232:/usr/include/c++/5/bits/basic_string.h **** 
2233:/usr/include/c++/5/bits/basic_string.h ****       /**
2234:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2235:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2236:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2237:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
GAS LISTING /tmp/ccbg3Dll.s 			page 175


2238:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2239:/usr/include/c++/5/bits/basic_string.h ****        *
2240:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2241:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2242:/usr/include/c++/5/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2243:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
2244:/usr/include/c++/5/bits/basic_string.h ****       */
2245:/usr/include/c++/5/bits/basic_string.h ****       size_type
2246:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2247:/usr/include/c++/5/bits/basic_string.h **** 		       size_type __n) const;
2248:/usr/include/c++/5/bits/basic_string.h ****       /**
2249:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2250:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2251:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2252:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2253:/usr/include/c++/5/bits/basic_string.h ****        *
2254:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2255:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2256:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2257:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
2258:/usr/include/c++/5/bits/basic_string.h ****       */
2259:/usr/include/c++/5/bits/basic_string.h ****       size_type
2260:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2261:/usr/include/c++/5/bits/basic_string.h ****       {
2262:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2263:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2264:/usr/include/c++/5/bits/basic_string.h ****       }
2265:/usr/include/c++/5/bits/basic_string.h **** 
2266:/usr/include/c++/5/bits/basic_string.h ****       /**
2267:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2268:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
2269:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2270:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
2271:/usr/include/c++/5/bits/basic_string.h ****        *
2272:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2273:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2274:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
2275:/usr/include/c++/5/bits/basic_string.h ****       */
2276:/usr/include/c++/5/bits/basic_string.h ****       size_type
2277:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2278:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2279:/usr/include/c++/5/bits/basic_string.h **** 
2280:/usr/include/c++/5/bits/basic_string.h ****       /**
2281:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Get a substring.
2282:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2283:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2284:/usr/include/c++/5/bits/basic_string.h ****        *  @return  The new string.
2285:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2286:/usr/include/c++/5/bits/basic_string.h ****        *
2287:/usr/include/c++/5/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2288:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2289:/usr/include/c++/5/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2290:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2291:/usr/include/c++/5/bits/basic_string.h ****       */
2292:/usr/include/c++/5/bits/basic_string.h ****       basic_string
2293:/usr/include/c++/5/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2294:/usr/include/c++/5/bits/basic_string.h ****       { return basic_string(*this,
GAS LISTING /tmp/ccbg3Dll.s 			page 176


2295:/usr/include/c++/5/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2296:/usr/include/c++/5/bits/basic_string.h **** 
2297:/usr/include/c++/5/bits/basic_string.h ****       /**
2298:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a string.
2299:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2300:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2301:/usr/include/c++/5/bits/basic_string.h ****        *
2302:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2303:/usr/include/c++/5/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2304:/usr/include/c++/5/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2305:/usr/include/c++/5/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2306:/usr/include/c++/5/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2307:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2308:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2309:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2310:/usr/include/c++/5/bits/basic_string.h ****       */
2311:/usr/include/c++/5/bits/basic_string.h ****       int
2312:/usr/include/c++/5/bits/basic_string.h ****       compare(const basic_string& __str) const
2313:/usr/include/c++/5/bits/basic_string.h ****       {
2314:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
2315:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __osize = __str.size();
2316:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2317:/usr/include/c++/5/bits/basic_string.h **** 
2318:/usr/include/c++/5/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2319:/usr/include/c++/5/bits/basic_string.h **** 	if (!__r)
2320:/usr/include/c++/5/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2321:/usr/include/c++/5/bits/basic_string.h **** 	return __r;
2322:/usr/include/c++/5/bits/basic_string.h ****       }
2323:/usr/include/c++/5/bits/basic_string.h **** 
2324:/usr/include/c++/5/bits/basic_string.h ****       /**
2325:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2326:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2327:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2328:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2329:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2330:/usr/include/c++/5/bits/basic_string.h ****        *
2331:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2332:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2333:/usr/include/c++/5/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2334:/usr/include/c++/5/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2335:/usr/include/c++/5/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2336:/usr/include/c++/5/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2337:/usr/include/c++/5/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2338:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling
2339:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2340:/usr/include/c++/5/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2341:/usr/include/c++/5/bits/basic_string.h ****        *  the shorter one is ordered first.
2342:/usr/include/c++/5/bits/basic_string.h ****       */
2343:/usr/include/c++/5/bits/basic_string.h ****       int
2344:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2345:/usr/include/c++/5/bits/basic_string.h **** 
2346:/usr/include/c++/5/bits/basic_string.h ****       /**
2347:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2348:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2349:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2350:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
2351:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
GAS LISTING /tmp/ccbg3Dll.s 			page 177


2352:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2353:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2354:/usr/include/c++/5/bits/basic_string.h ****        *
2355:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2356:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2357:/usr/include/c++/5/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2358:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2359:/usr/include/c++/5/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2360:/usr/include/c++/5/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2361:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2362:/usr/include/c++/5/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2363:/usr/include/c++/5/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2364:/usr/include/c++/5/bits/basic_string.h ****        *  calling
2365:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2366:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2367:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2368:/usr/include/c++/5/bits/basic_string.h ****       */
2369:/usr/include/c++/5/bits/basic_string.h ****       int
2370:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2371:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2372:/usr/include/c++/5/bits/basic_string.h **** 
2373:/usr/include/c++/5/bits/basic_string.h ****       /**
2374:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a C string.
2375:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
2376:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2377:/usr/include/c++/5/bits/basic_string.h ****        *
2378:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2379:/usr/include/c++/5/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2380:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2381:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2382:/usr/include/c++/5/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2383:/usr/include/c++/5/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2384:/usr/include/c++/5/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2385:/usr/include/c++/5/bits/basic_string.h ****        *  ordered first.
2386:/usr/include/c++/5/bits/basic_string.h ****       */
2387:/usr/include/c++/5/bits/basic_string.h ****       int
2388:/usr/include/c++/5/bits/basic_string.h ****       compare(const _CharT* __s) const;
2389:/usr/include/c++/5/bits/basic_string.h **** 
2390:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2391:/usr/include/c++/5/bits/basic_string.h ****       // 5 String::compare specification questionable
2392:/usr/include/c++/5/bits/basic_string.h ****       /**
2393:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2394:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2395:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2396:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
2397:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2398:/usr/include/c++/5/bits/basic_string.h ****        *
2399:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2400:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2401:/usr/include/c++/5/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2402:/usr/include/c++/5/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2403:/usr/include/c++/5/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2404:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2405:/usr/include/c++/5/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2406:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two string by calling
2407:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2408:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
GAS LISTING /tmp/ccbg3Dll.s 			page 178


2409:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
2410:/usr/include/c++/5/bits/basic_string.h ****       */
2411:/usr/include/c++/5/bits/basic_string.h ****       int
2412:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2413:/usr/include/c++/5/bits/basic_string.h **** 
2414:/usr/include/c++/5/bits/basic_string.h ****       /**
2415:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2416:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2417:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2418:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2419:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2420:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2421:/usr/include/c++/5/bits/basic_string.h ****        *
2422:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2423:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2424:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
2425:/usr/include/c++/5/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2426:/usr/include/c++/5/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
2427:/usr/include/c++/5/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
2428:/usr/include/c++/5/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
2429:/usr/include/c++/5/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
2430:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two strings by calling
2431:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
2432:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2433:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
2434:/usr/include/c++/5/bits/basic_string.h ****        *
2435:/usr/include/c++/5/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
2436:/usr/include/c++/5/bits/basic_string.h ****        *  no special meaning.
2437:/usr/include/c++/5/bits/basic_string.h ****       */
2438:/usr/include/c++/5/bits/basic_string.h ****       int
2439:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
2440:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2) const;
2441:/usr/include/c++/5/bits/basic_string.h ****   };
2442:/usr/include/c++/5/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
2443:/usr/include/c++/5/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
2444:/usr/include/c++/5/bits/basic_string.h ****   // Reference-counted COW string implentation
2445:/usr/include/c++/5/bits/basic_string.h **** 
2446:/usr/include/c++/5/bits/basic_string.h ****   /**
2447:/usr/include/c++/5/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
2448:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
2449:/usr/include/c++/5/bits/basic_string.h ****    *
2450:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup strings
2451:/usr/include/c++/5/bits/basic_string.h ****    *  @ingroup sequences
2452:/usr/include/c++/5/bits/basic_string.h ****    *
2453:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _CharT  Type of character
2454:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
2455:/usr/include/c++/5/bits/basic_string.h ****    *                   char_traits<_CharT>.
2456:/usr/include/c++/5/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
2457:/usr/include/c++/5/bits/basic_string.h ****    *
2458:/usr/include/c++/5/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
2459:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
2460:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
2461:/usr/include/c++/5/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
2462:/usr/include/c++/5/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
2463:/usr/include/c++/5/bits/basic_string.h ****    *
2464:/usr/include/c++/5/bits/basic_string.h ****    *  @doctodo
2465:/usr/include/c++/5/bits/basic_string.h ****    *
GAS LISTING /tmp/ccbg3Dll.s 			page 179


2466:/usr/include/c++/5/bits/basic_string.h ****    *
2467:/usr/include/c++/5/bits/basic_string.h ****    *  Documentation?  What's that?
2468:/usr/include/c++/5/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
2469:/usr/include/c++/5/bits/basic_string.h ****    *
2470:/usr/include/c++/5/bits/basic_string.h ****    *  A string looks like this:
2471:/usr/include/c++/5/bits/basic_string.h ****    *
2472:/usr/include/c++/5/bits/basic_string.h ****    *  @code
2473:/usr/include/c++/5/bits/basic_string.h ****    *                                        [_Rep]
2474:/usr/include/c++/5/bits/basic_string.h ****    *                                        _M_length
2475:/usr/include/c++/5/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
2476:/usr/include/c++/5/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
2477:/usr/include/c++/5/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
2478:/usr/include/c++/5/bits/basic_string.h ****    *  @endcode
2479:/usr/include/c++/5/bits/basic_string.h ****    *
2480:/usr/include/c++/5/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
2481:/usr/include/c++/5/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
2482:/usr/include/c++/5/bits/basic_string.h ****    *  pointer to the header.
2483:/usr/include/c++/5/bits/basic_string.h ****    *
2484:/usr/include/c++/5/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
2485:/usr/include/c++/5/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
2486:/usr/include/c++/5/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
2487:/usr/include/c++/5/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
2488:/usr/include/c++/5/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
2489:/usr/include/c++/5/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
2490:/usr/include/c++/5/bits/basic_string.h ****    *  object at the front.
2491:/usr/include/c++/5/bits/basic_string.h ****    *
2492:/usr/include/c++/5/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
2493:/usr/include/c++/5/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
2494:/usr/include/c++/5/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
2495:/usr/include/c++/5/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
2496:/usr/include/c++/5/bits/basic_string.h ****    *  string length.)
2497:/usr/include/c++/5/bits/basic_string.h ****    *
2498:/usr/include/c++/5/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
2499:/usr/include/c++/5/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
2500:/usr/include/c++/5/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
2501:/usr/include/c++/5/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
2502:/usr/include/c++/5/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
2503:/usr/include/c++/5/bits/basic_string.h ****    *
2504:/usr/include/c++/5/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
2505:/usr/include/c++/5/bits/basic_string.h ****    *  for a C++ string implementation.
2506:/usr/include/c++/5/bits/basic_string.h ****   */
2507:/usr/include/c++/5/bits/basic_string.h ****   // 21.3  Template class basic_string
2508:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2509:/usr/include/c++/5/bits/basic_string.h ****     class basic_string
2510:/usr/include/c++/5/bits/basic_string.h ****     {
2511:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
2512:/usr/include/c++/5/bits/basic_string.h **** 
2513:/usr/include/c++/5/bits/basic_string.h ****       // Types:
2514:/usr/include/c++/5/bits/basic_string.h ****     public:
2515:/usr/include/c++/5/bits/basic_string.h ****       typedef _Traits					    traits_type;
2516:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
2517:/usr/include/c++/5/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
2518:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
2519:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
2520:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
2521:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
2522:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
GAS LISTING /tmp/ccbg3Dll.s 			page 180


2523:/usr/include/c++/5/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
2524:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
2525:/usr/include/c++/5/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
2526:/usr/include/c++/5/bits/basic_string.h ****                                                             const_iterator;
2527:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
2528:/usr/include/c++/5/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
2529:/usr/include/c++/5/bits/basic_string.h **** 
2530:/usr/include/c++/5/bits/basic_string.h ****     private:
2531:/usr/include/c++/5/bits/basic_string.h ****       // _Rep: string representation
2532:/usr/include/c++/5/bits/basic_string.h ****       //   Invariants:
2533:/usr/include/c++/5/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
2534:/usr/include/c++/5/bits/basic_string.h ****       //      must be kept null-terminated.
2535:/usr/include/c++/5/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
2536:/usr/include/c++/5/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
2537:/usr/include/c++/5/bits/basic_string.h ****       //   3. _M_refcount has three states:
2538:/usr/include/c++/5/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
2539:/usr/include/c++/5/bits/basic_string.h ****       //       0: one reference, non-const.
2540:/usr/include/c++/5/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
2541:/usr/include/c++/5/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
2542:/usr/include/c++/5/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
2543:/usr/include/c++/5/bits/basic_string.h ****       //      empty string representation needs no constructor.
2544:/usr/include/c++/5/bits/basic_string.h **** 
2545:/usr/include/c++/5/bits/basic_string.h ****       struct _Rep_base
2546:/usr/include/c++/5/bits/basic_string.h ****       {
2547:/usr/include/c++/5/bits/basic_string.h **** 	size_type		_M_length;
2548:/usr/include/c++/5/bits/basic_string.h **** 	size_type		_M_capacity;
2549:/usr/include/c++/5/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
2550:/usr/include/c++/5/bits/basic_string.h ****       };
2551:/usr/include/c++/5/bits/basic_string.h **** 
2552:/usr/include/c++/5/bits/basic_string.h ****       struct _Rep : _Rep_base
2553:/usr/include/c++/5/bits/basic_string.h ****       {
2554:/usr/include/c++/5/bits/basic_string.h **** 	// Types:
2555:/usr/include/c++/5/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
2556:/usr/include/c++/5/bits/basic_string.h **** 
2557:/usr/include/c++/5/bits/basic_string.h **** 	// (Public) Data members:
2558:/usr/include/c++/5/bits/basic_string.h **** 
2559:/usr/include/c++/5/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
2560:/usr/include/c++/5/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
2561:/usr/include/c++/5/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
2562:/usr/include/c++/5/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
2563:/usr/include/c++/5/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
2564:/usr/include/c++/5/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
2565:/usr/include/c++/5/bits/basic_string.h **** 	// look like this:
2566:/usr/include/c++/5/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
2567:/usr/include/c++/5/bits/basic_string.h **** 	// Solving for m:
2568:/usr/include/c++/5/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
2569:/usr/include/c++/5/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
2570:/usr/include/c++/5/bits/basic_string.h **** 	static const size_type	_S_max_size;
2571:/usr/include/c++/5/bits/basic_string.h **** 	static const _CharT	_S_terminal;
2572:/usr/include/c++/5/bits/basic_string.h **** 
2573:/usr/include/c++/5/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
2574:/usr/include/c++/5/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
2575:/usr/include/c++/5/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
2576:/usr/include/c++/5/bits/basic_string.h **** 
2577:/usr/include/c++/5/bits/basic_string.h ****         static _Rep&
2578:/usr/include/c++/5/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
2579:/usr/include/c++/5/bits/basic_string.h ****         { 
GAS LISTING /tmp/ccbg3Dll.s 			page 181


2580:/usr/include/c++/5/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
2581:/usr/include/c++/5/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
2582:/usr/include/c++/5/bits/basic_string.h **** 	  // be reasonably safe in this case.
2583:/usr/include/c++/5/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
2584:/usr/include/c++/5/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
2585:/usr/include/c++/5/bits/basic_string.h **** 	}
2586:/usr/include/c++/5/bits/basic_string.h **** 
2587:/usr/include/c++/5/bits/basic_string.h ****         bool
2588:/usr/include/c++/5/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
2589:/usr/include/c++/5/bits/basic_string.h ****         { return this->_M_refcount < 0; }
2590:/usr/include/c++/5/bits/basic_string.h **** 
2591:/usr/include/c++/5/bits/basic_string.h ****         bool
2592:/usr/include/c++/5/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
2593:/usr/include/c++/5/bits/basic_string.h ****         { return this->_M_refcount > 0; }
2594:/usr/include/c++/5/bits/basic_string.h **** 
2595:/usr/include/c++/5/bits/basic_string.h ****         void
2596:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
2597:/usr/include/c++/5/bits/basic_string.h ****         { this->_M_refcount = -1; }
2598:/usr/include/c++/5/bits/basic_string.h **** 
2599:/usr/include/c++/5/bits/basic_string.h ****         void
2600:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
2601:/usr/include/c++/5/bits/basic_string.h ****         { this->_M_refcount = 0; }
2602:/usr/include/c++/5/bits/basic_string.h **** 
2603:/usr/include/c++/5/bits/basic_string.h **** 	void
2604:/usr/include/c++/5/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
2605:/usr/include/c++/5/bits/basic_string.h **** 	{
2606:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2607:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2608:/usr/include/c++/5/bits/basic_string.h **** #endif
2609:/usr/include/c++/5/bits/basic_string.h **** 	    {
2610:/usr/include/c++/5/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
2611:/usr/include/c++/5/bits/basic_string.h **** 	      this->_M_length = __n;
2612:/usr/include/c++/5/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
2613:/usr/include/c++/5/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
2614:/usr/include/c++/5/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
2615:/usr/include/c++/5/bits/basic_string.h **** 	    }
2616:/usr/include/c++/5/bits/basic_string.h **** 	}
2617:/usr/include/c++/5/bits/basic_string.h **** 
2618:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2619:/usr/include/c++/5/bits/basic_string.h **** 	_M_refdata() throw()
2620:/usr/include/c++/5/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
2621:/usr/include/c++/5/bits/basic_string.h **** 
2622:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2623:/usr/include/c++/5/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
2624:/usr/include/c++/5/bits/basic_string.h **** 	{
2625:/usr/include/c++/5/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
2626:/usr/include/c++/5/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
2627:/usr/include/c++/5/bits/basic_string.h **** 	}
2628:/usr/include/c++/5/bits/basic_string.h **** 
2629:/usr/include/c++/5/bits/basic_string.h **** 	// Create & Destroy
2630:/usr/include/c++/5/bits/basic_string.h **** 	static _Rep*
2631:/usr/include/c++/5/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
2632:/usr/include/c++/5/bits/basic_string.h **** 
2633:/usr/include/c++/5/bits/basic_string.h **** 	void
2634:/usr/include/c++/5/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
2635:/usr/include/c++/5/bits/basic_string.h **** 	{
2636:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
GAS LISTING /tmp/ccbg3Dll.s 			page 182


2637:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2638:/usr/include/c++/5/bits/basic_string.h **** #endif
2639:/usr/include/c++/5/bits/basic_string.h **** 	    {
2640:/usr/include/c++/5/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
2641:/usr/include/c++/5/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
2642:/usr/include/c++/5/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
2643:/usr/include/c++/5/bits/basic_string.h **** 							 -1) <= 0)
2644:/usr/include/c++/5/bits/basic_string.h **** 		{
2645:/usr/include/c++/5/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
2646:/usr/include/c++/5/bits/basic_string.h **** 		  _M_destroy(__a);
2647:/usr/include/c++/5/bits/basic_string.h **** 		}
2648:/usr/include/c++/5/bits/basic_string.h **** 	    }
2649:/usr/include/c++/5/bits/basic_string.h **** 	}  // XXX MT
2650:/usr/include/c++/5/bits/basic_string.h **** 
2651:/usr/include/c++/5/bits/basic_string.h **** 	void
2652:/usr/include/c++/5/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
2653:/usr/include/c++/5/bits/basic_string.h **** 
2654:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2655:/usr/include/c++/5/bits/basic_string.h **** 	_M_refcopy() throw()
2656:/usr/include/c++/5/bits/basic_string.h **** 	{
2657:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2658:/usr/include/c++/5/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
2659:/usr/include/c++/5/bits/basic_string.h **** #endif
2660:/usr/include/c++/5/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
2661:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_refdata();
2662:/usr/include/c++/5/bits/basic_string.h **** 	}  // XXX MT
2663:/usr/include/c++/5/bits/basic_string.h **** 
2664:/usr/include/c++/5/bits/basic_string.h **** 	_CharT*
2665:/usr/include/c++/5/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
2666:/usr/include/c++/5/bits/basic_string.h ****       };
2667:/usr/include/c++/5/bits/basic_string.h **** 
2668:/usr/include/c++/5/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
2669:/usr/include/c++/5/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
2670:/usr/include/c++/5/bits/basic_string.h ****       {
2671:/usr/include/c++/5/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
2672:/usr/include/c++/5/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
2673:/usr/include/c++/5/bits/basic_string.h **** 
2674:/usr/include/c++/5/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
2675:/usr/include/c++/5/bits/basic_string.h ****       };
2676:/usr/include/c++/5/bits/basic_string.h **** 
2677:/usr/include/c++/5/bits/basic_string.h ****     public:
2678:/usr/include/c++/5/bits/basic_string.h ****       // Data Members (public):
2679:/usr/include/c++/5/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
2680:/usr/include/c++/5/bits/basic_string.h ****       // size that the allocator can hold.
2681:/usr/include/c++/5/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
2682:/usr/include/c++/5/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
2683:/usr/include/c++/5/bits/basic_string.h **** 
2684:/usr/include/c++/5/bits/basic_string.h ****     private:
2685:/usr/include/c++/5/bits/basic_string.h ****       // Data Members (private):
2686:/usr/include/c++/5/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
2687:/usr/include/c++/5/bits/basic_string.h **** 
2688:/usr/include/c++/5/bits/basic_string.h ****       _CharT*
2689:/usr/include/c++/5/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
2690:/usr/include/c++/5/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
2691:/usr/include/c++/5/bits/basic_string.h **** 
2692:/usr/include/c++/5/bits/basic_string.h ****       _CharT*
2693:/usr/include/c++/5/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccbg3Dll.s 			page 183


2694:/usr/include/c++/5/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
2695:/usr/include/c++/5/bits/basic_string.h **** 
2696:/usr/include/c++/5/bits/basic_string.h ****       _Rep*
2697:/usr/include/c++/5/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
2698:/usr/include/c++/5/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
2699:/usr/include/c++/5/bits/basic_string.h **** 
2700:/usr/include/c++/5/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
2701:/usr/include/c++/5/bits/basic_string.h ****       // but they do not call _M_leak.
2702:/usr/include/c++/5/bits/basic_string.h ****       iterator
2703:/usr/include/c++/5/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
2704:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data()); }
2705:/usr/include/c++/5/bits/basic_string.h **** 
2706:/usr/include/c++/5/bits/basic_string.h ****       iterator
2707:/usr/include/c++/5/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
2708:/usr/include/c++/5/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
2709:/usr/include/c++/5/bits/basic_string.h **** 
2710:/usr/include/c++/5/bits/basic_string.h ****       void
2711:/usr/include/c++/5/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
2712:/usr/include/c++/5/bits/basic_string.h ****       {
2713:/usr/include/c++/5/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
2714:/usr/include/c++/5/bits/basic_string.h **** 	  _M_leak_hard();
2715:/usr/include/c++/5/bits/basic_string.h ****       }
2716:/usr/include/c++/5/bits/basic_string.h **** 
2717:/usr/include/c++/5/bits/basic_string.h ****       size_type
2718:/usr/include/c++/5/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
2719:/usr/include/c++/5/bits/basic_string.h ****       {
2720:/usr/include/c++/5/bits/basic_string.h **** 	if (__pos > this->size())
2721:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
2722:/usr/include/c++/5/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
2723:/usr/include/c++/5/bits/basic_string.h **** 				   __s, __pos, this->size());
2724:/usr/include/c++/5/bits/basic_string.h **** 	return __pos;
2725:/usr/include/c++/5/bits/basic_string.h ****       }
2726:/usr/include/c++/5/bits/basic_string.h **** 
2727:/usr/include/c++/5/bits/basic_string.h ****       void
2728:/usr/include/c++/5/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
2729:/usr/include/c++/5/bits/basic_string.h ****       {
2730:/usr/include/c++/5/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
2731:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
2732:/usr/include/c++/5/bits/basic_string.h ****       }
2733:/usr/include/c++/5/bits/basic_string.h **** 
2734:/usr/include/c++/5/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
2735:/usr/include/c++/5/bits/basic_string.h ****       size_type
2736:/usr/include/c++/5/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
2737:/usr/include/c++/5/bits/basic_string.h ****       {
2738:/usr/include/c++/5/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
2739:/usr/include/c++/5/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
2740:/usr/include/c++/5/bits/basic_string.h ****       }
2741:/usr/include/c++/5/bits/basic_string.h **** 
2742:/usr/include/c++/5/bits/basic_string.h ****       // True if _Rep and source do not overlap.
2743:/usr/include/c++/5/bits/basic_string.h ****       bool
2744:/usr/include/c++/5/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
2745:/usr/include/c++/5/bits/basic_string.h ****       {
2746:/usr/include/c++/5/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
2747:/usr/include/c++/5/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
2748:/usr/include/c++/5/bits/basic_string.h ****       }
2749:/usr/include/c++/5/bits/basic_string.h **** 
2750:/usr/include/c++/5/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
GAS LISTING /tmp/ccbg3Dll.s 			page 184


2751:/usr/include/c++/5/bits/basic_string.h ****       // traits_type::copy/move/assign.
2752:/usr/include/c++/5/bits/basic_string.h ****       static void
2753:/usr/include/c++/5/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2754:/usr/include/c++/5/bits/basic_string.h ****       {
2755:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2756:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
2757:/usr/include/c++/5/bits/basic_string.h **** 	else
2758:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
2759:/usr/include/c++/5/bits/basic_string.h ****       }
2760:/usr/include/c++/5/bits/basic_string.h **** 
2761:/usr/include/c++/5/bits/basic_string.h ****       static void
2762:/usr/include/c++/5/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
2763:/usr/include/c++/5/bits/basic_string.h ****       {
2764:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2765:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
2766:/usr/include/c++/5/bits/basic_string.h **** 	else
2767:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
2768:/usr/include/c++/5/bits/basic_string.h ****       }
2769:/usr/include/c++/5/bits/basic_string.h **** 
2770:/usr/include/c++/5/bits/basic_string.h ****       static void
2771:/usr/include/c++/5/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
2772:/usr/include/c++/5/bits/basic_string.h ****       {
2773:/usr/include/c++/5/bits/basic_string.h **** 	if (__n == 1)
2774:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
2775:/usr/include/c++/5/bits/basic_string.h **** 	else
2776:/usr/include/c++/5/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
2777:/usr/include/c++/5/bits/basic_string.h ****       }
2778:/usr/include/c++/5/bits/basic_string.h **** 
2779:/usr/include/c++/5/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
2780:/usr/include/c++/5/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
2781:/usr/include/c++/5/bits/basic_string.h ****       template<class _Iterator>
2782:/usr/include/c++/5/bits/basic_string.h ****         static void
2783:/usr/include/c++/5/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
2784:/usr/include/c++/5/bits/basic_string.h ****         {
2785:/usr/include/c++/5/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
2786:/usr/include/c++/5/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
2787:/usr/include/c++/5/bits/basic_string.h **** 	}
2788:/usr/include/c++/5/bits/basic_string.h **** 
2789:/usr/include/c++/5/bits/basic_string.h ****       static void
2790:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
2791:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2792:/usr/include/c++/5/bits/basic_string.h **** 
2793:/usr/include/c++/5/bits/basic_string.h ****       static void
2794:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
2795:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2796:/usr/include/c++/5/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
2797:/usr/include/c++/5/bits/basic_string.h **** 
2798:/usr/include/c++/5/bits/basic_string.h ****       static void
2799:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
2800:/usr/include/c++/5/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2801:/usr/include/c++/5/bits/basic_string.h **** 
2802:/usr/include/c++/5/bits/basic_string.h ****       static void
2803:/usr/include/c++/5/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
2804:/usr/include/c++/5/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2805:/usr/include/c++/5/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
2806:/usr/include/c++/5/bits/basic_string.h **** 
2807:/usr/include/c++/5/bits/basic_string.h ****       static int
GAS LISTING /tmp/ccbg3Dll.s 			page 185


2808:/usr/include/c++/5/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
2809:/usr/include/c++/5/bits/basic_string.h ****       {
2810:/usr/include/c++/5/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
2811:/usr/include/c++/5/bits/basic_string.h **** 
2812:/usr/include/c++/5/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
2813:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
2814:/usr/include/c++/5/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
2815:/usr/include/c++/5/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
2816:/usr/include/c++/5/bits/basic_string.h **** 	else
2817:/usr/include/c++/5/bits/basic_string.h **** 	  return int(__d);
2818:/usr/include/c++/5/bits/basic_string.h ****       }
2819:/usr/include/c++/5/bits/basic_string.h **** 
2820:/usr/include/c++/5/bits/basic_string.h ****       void
2821:/usr/include/c++/5/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
2822:/usr/include/c++/5/bits/basic_string.h **** 
2823:/usr/include/c++/5/bits/basic_string.h ****       void
2824:/usr/include/c++/5/bits/basic_string.h ****       _M_leak_hard();
2825:/usr/include/c++/5/bits/basic_string.h **** 
2826:/usr/include/c++/5/bits/basic_string.h ****       static _Rep&
2827:/usr/include/c++/5/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
2828:/usr/include/c++/5/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
2829:/usr/include/c++/5/bits/basic_string.h **** 
2830:/usr/include/c++/5/bits/basic_string.h ****     public:
2831:/usr/include/c++/5/bits/basic_string.h ****       // Construct/copy/destroy:
2832:/usr/include/c++/5/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
2833:/usr/include/c++/5/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
2834:/usr/include/c++/5/bits/basic_string.h **** 
2835:/usr/include/c++/5/bits/basic_string.h ****       /**
2836:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
2837:/usr/include/c++/5/bits/basic_string.h ****        */
2838:/usr/include/c++/5/bits/basic_string.h ****       basic_string()
2839:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2840:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
2841:/usr/include/c++/5/bits/basic_string.h **** #else
2842:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
2843:/usr/include/c++/5/bits/basic_string.h **** #endif
2844:/usr/include/c++/5/bits/basic_string.h **** 
2845:/usr/include/c++/5/bits/basic_string.h ****       /**
2846:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
2847:/usr/include/c++/5/bits/basic_string.h ****        */
2848:/usr/include/c++/5/bits/basic_string.h ****       explicit
2849:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _Alloc& __a);
2850:/usr/include/c++/5/bits/basic_string.h **** 
2851:/usr/include/c++/5/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
2852:/usr/include/c++/5/bits/basic_string.h ****       /**
2853:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
2854:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2855:/usr/include/c++/5/bits/basic_string.h ****        */
2856:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str);
2857:/usr/include/c++/5/bits/basic_string.h ****       /**
2858:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
2859:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2860:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
2861:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
2862:/usr/include/c++/5/bits/basic_string.h ****        */
2863:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
2864:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n = npos);
GAS LISTING /tmp/ccbg3Dll.s 			page 186


2865:/usr/include/c++/5/bits/basic_string.h ****       /**
2866:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
2867:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2868:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
2869:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
2870:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use.
2871:/usr/include/c++/5/bits/basic_string.h ****        */
2872:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
2873:/usr/include/c++/5/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
2874:/usr/include/c++/5/bits/basic_string.h **** 
2875:/usr/include/c++/5/bits/basic_string.h ****       /**
2876:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
2877:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source character %array.
2878:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
2879:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2880:/usr/include/c++/5/bits/basic_string.h ****        *
2881:/usr/include/c++/5/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
2882:/usr/include/c++/5/bits/basic_string.h ****        *  has no special meaning.
2883:/usr/include/c++/5/bits/basic_string.h ****        */
2884:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
2885:/usr/include/c++/5/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
2886:/usr/include/c++/5/bits/basic_string.h ****       /**
2887:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
2888:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source C string.
2889:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2890:/usr/include/c++/5/bits/basic_string.h ****        */
2891:/usr/include/c++/5/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
2892:/usr/include/c++/5/bits/basic_string.h ****       /**
2893:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
2894:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters.
2895:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to use.
2896:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2897:/usr/include/c++/5/bits/basic_string.h ****        */
2898:/usr/include/c++/5/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
2899:/usr/include/c++/5/bits/basic_string.h **** 
2900:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
2901:/usr/include/c++/5/bits/basic_string.h ****       /**
2902:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move construct string.
2903:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2904:/usr/include/c++/5/bits/basic_string.h ****        *
2905:/usr/include/c++/5/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
2906:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
2907:/usr/include/c++/5/bits/basic_string.h ****        **/
2908:/usr/include/c++/5/bits/basic_string.h ****       basic_string(basic_string&& __str)
2909:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2910:/usr/include/c++/5/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
2911:/usr/include/c++/5/bits/basic_string.h **** #endif
2912:/usr/include/c++/5/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
2913:/usr/include/c++/5/bits/basic_string.h ****       {
2914:/usr/include/c++/5/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
2915:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
2916:/usr/include/c++/5/bits/basic_string.h **** #else
2917:/usr/include/c++/5/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
2918:/usr/include/c++/5/bits/basic_string.h **** #endif
2919:/usr/include/c++/5/bits/basic_string.h ****       }
2920:/usr/include/c++/5/bits/basic_string.h **** 
2921:/usr/include/c++/5/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccbg3Dll.s 			page 187


2922:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
2923:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
2924:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2925:/usr/include/c++/5/bits/basic_string.h ****        */
2926:/usr/include/c++/5/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
2927:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
2928:/usr/include/c++/5/bits/basic_string.h **** 
2929:/usr/include/c++/5/bits/basic_string.h ****       /**
2930:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
2931:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __beg  Start of range.
2932:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __end  End of range.
2933:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
2934:/usr/include/c++/5/bits/basic_string.h ****        */
2935:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
2936:/usr/include/c++/5/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
2937:/usr/include/c++/5/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
2938:/usr/include/c++/5/bits/basic_string.h **** 
2939:/usr/include/c++/5/bits/basic_string.h ****       /**
2940:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Destroy the string instance.
2941:/usr/include/c++/5/bits/basic_string.h ****        */
2942:/usr/include/c++/5/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
2943:/usr/include/c++/5/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
2944:/usr/include/c++/5/bits/basic_string.h **** 
2945:/usr/include/c++/5/bits/basic_string.h ****       /**
2946:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
2947:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
2948:/usr/include/c++/5/bits/basic_string.h ****        */
2949:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2950:/usr/include/c++/5/bits/basic_string.h ****       operator=(const basic_string& __str) 
2951:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str); }
2952:/usr/include/c++/5/bits/basic_string.h **** 
2953:/usr/include/c++/5/bits/basic_string.h ****       /**
2954:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
2955:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
2956:/usr/include/c++/5/bits/basic_string.h ****        */
2957:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2958:/usr/include/c++/5/bits/basic_string.h ****       operator=(const _CharT* __s) 
2959:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__s); }
2960:/usr/include/c++/5/bits/basic_string.h **** 
2961:/usr/include/c++/5/bits/basic_string.h ****       /**
2962:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
2963:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Source character.
2964:/usr/include/c++/5/bits/basic_string.h ****        *
2965:/usr/include/c++/5/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
2966:/usr/include/c++/5/bits/basic_string.h ****        *  (*this)[0] == @a c.
2967:/usr/include/c++/5/bits/basic_string.h ****        */
2968:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2969:/usr/include/c++/5/bits/basic_string.h ****       operator=(_CharT __c) 
2970:/usr/include/c++/5/bits/basic_string.h ****       { 
2971:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(1, __c); 
2972:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
2973:/usr/include/c++/5/bits/basic_string.h ****       }
2974:/usr/include/c++/5/bits/basic_string.h **** 
2975:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
2976:/usr/include/c++/5/bits/basic_string.h ****       /**
2977:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
2978:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string.
GAS LISTING /tmp/ccbg3Dll.s 			page 188


2979:/usr/include/c++/5/bits/basic_string.h ****        *
2980:/usr/include/c++/5/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
2981:/usr/include/c++/5/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
2982:/usr/include/c++/5/bits/basic_string.h ****        **/
2983:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
2984:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2985:/usr/include/c++/5/bits/basic_string.h ****       operator=(basic_string&& __str)
2986:/usr/include/c++/5/bits/basic_string.h ****       {
2987:/usr/include/c++/5/bits/basic_string.h **** 	// NB: DR 1204.
2988:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
2989:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
2990:/usr/include/c++/5/bits/basic_string.h ****       }
2991:/usr/include/c++/5/bits/basic_string.h **** 
2992:/usr/include/c++/5/bits/basic_string.h ****       /**
2993:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
2994:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
2995:/usr/include/c++/5/bits/basic_string.h ****        */
2996:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
2997:/usr/include/c++/5/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
2998:/usr/include/c++/5/bits/basic_string.h ****       {
2999:/usr/include/c++/5/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3000:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3001:/usr/include/c++/5/bits/basic_string.h ****       }
3002:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3003:/usr/include/c++/5/bits/basic_string.h **** 
3004:/usr/include/c++/5/bits/basic_string.h ****       // Iterators:
3005:/usr/include/c++/5/bits/basic_string.h ****       /**
3006:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3007:/usr/include/c++/5/bits/basic_string.h ****        *  the %string.  Unshares the string.
3008:/usr/include/c++/5/bits/basic_string.h ****        */
3009:/usr/include/c++/5/bits/basic_string.h ****       iterator
3010:/usr/include/c++/5/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3011:/usr/include/c++/5/bits/basic_string.h ****       {
3012:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3013:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data());
3014:/usr/include/c++/5/bits/basic_string.h ****       }
3015:/usr/include/c++/5/bits/basic_string.h **** 
3016:/usr/include/c++/5/bits/basic_string.h ****       /**
3017:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3018:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
3019:/usr/include/c++/5/bits/basic_string.h ****        */
3020:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3021:/usr/include/c++/5/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3022:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3023:/usr/include/c++/5/bits/basic_string.h **** 
3024:/usr/include/c++/5/bits/basic_string.h ****       /**
3025:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3026:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3027:/usr/include/c++/5/bits/basic_string.h ****        */
3028:/usr/include/c++/5/bits/basic_string.h ****       iterator
3029:/usr/include/c++/5/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3030:/usr/include/c++/5/bits/basic_string.h ****       {
3031:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3032:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3033:/usr/include/c++/5/bits/basic_string.h ****       }
3034:/usr/include/c++/5/bits/basic_string.h **** 
3035:/usr/include/c++/5/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccbg3Dll.s 			page 189


3036:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3037:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
3038:/usr/include/c++/5/bits/basic_string.h ****        */
3039:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3040:/usr/include/c++/5/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3041:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3042:/usr/include/c++/5/bits/basic_string.h **** 
3043:/usr/include/c++/5/bits/basic_string.h ****       /**
3044:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3045:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3046:/usr/include/c++/5/bits/basic_string.h ****        *  order.  Unshares the string.
3047:/usr/include/c++/5/bits/basic_string.h ****        */
3048:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
3049:/usr/include/c++/5/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3050:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3051:/usr/include/c++/5/bits/basic_string.h **** 
3052:/usr/include/c++/5/bits/basic_string.h ****       /**
3053:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3054:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3055:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
3056:/usr/include/c++/5/bits/basic_string.h ****        */
3057:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3058:/usr/include/c++/5/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3059:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3060:/usr/include/c++/5/bits/basic_string.h **** 
3061:/usr/include/c++/5/bits/basic_string.h ****       /**
3062:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3063:/usr/include/c++/5/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3064:/usr/include/c++/5/bits/basic_string.h ****        *  element order.  Unshares the string.
3065:/usr/include/c++/5/bits/basic_string.h ****        */
3066:/usr/include/c++/5/bits/basic_string.h ****       reverse_iterator
3067:/usr/include/c++/5/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3068:/usr/include/c++/5/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3069:/usr/include/c++/5/bits/basic_string.h **** 
3070:/usr/include/c++/5/bits/basic_string.h ****       /**
3071:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3072:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3073:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
3074:/usr/include/c++/5/bits/basic_string.h ****        */
3075:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3076:/usr/include/c++/5/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3077:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3078:/usr/include/c++/5/bits/basic_string.h **** 
3079:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3080:/usr/include/c++/5/bits/basic_string.h ****       /**
3081:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3082:/usr/include/c++/5/bits/basic_string.h ****        *  character in the %string.
3083:/usr/include/c++/5/bits/basic_string.h ****        */
3084:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
3085:/usr/include/c++/5/bits/basic_string.h ****       cbegin() const noexcept
3086:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3087:/usr/include/c++/5/bits/basic_string.h **** 
3088:/usr/include/c++/5/bits/basic_string.h ****       /**
3089:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3090:/usr/include/c++/5/bits/basic_string.h ****        *  last character in the %string.
3091:/usr/include/c++/5/bits/basic_string.h ****        */
3092:/usr/include/c++/5/bits/basic_string.h ****       const_iterator
GAS LISTING /tmp/ccbg3Dll.s 			page 190


3093:/usr/include/c++/5/bits/basic_string.h ****       cend() const noexcept
3094:/usr/include/c++/5/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3095:/usr/include/c++/5/bits/basic_string.h **** 
3096:/usr/include/c++/5/bits/basic_string.h ****       /**
3097:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3098:/usr/include/c++/5/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3099:/usr/include/c++/5/bits/basic_string.h ****        *  reverse element order.
3100:/usr/include/c++/5/bits/basic_string.h ****        */
3101:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3102:/usr/include/c++/5/bits/basic_string.h ****       crbegin() const noexcept
3103:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3104:/usr/include/c++/5/bits/basic_string.h **** 
3105:/usr/include/c++/5/bits/basic_string.h ****       /**
3106:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3107:/usr/include/c++/5/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3108:/usr/include/c++/5/bits/basic_string.h ****        *  is done in reverse element order.
3109:/usr/include/c++/5/bits/basic_string.h ****        */
3110:/usr/include/c++/5/bits/basic_string.h ****       const_reverse_iterator
3111:/usr/include/c++/5/bits/basic_string.h ****       crend() const noexcept
3112:/usr/include/c++/5/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3113:/usr/include/c++/5/bits/basic_string.h **** #endif
3114:/usr/include/c++/5/bits/basic_string.h **** 
3115:/usr/include/c++/5/bits/basic_string.h ****     public:
3116:/usr/include/c++/5/bits/basic_string.h ****       // Capacity:
3117:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3118:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
3119:/usr/include/c++/5/bits/basic_string.h ****       size_type
3120:/usr/include/c++/5/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3121:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3122:/usr/include/c++/5/bits/basic_string.h **** 
3123:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3124:/usr/include/c++/5/bits/basic_string.h ****       ///  null-termination.
3125:/usr/include/c++/5/bits/basic_string.h ****       size_type
3126:/usr/include/c++/5/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3127:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3128:/usr/include/c++/5/bits/basic_string.h **** 
3129:/usr/include/c++/5/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
3130:/usr/include/c++/5/bits/basic_string.h ****       size_type
3131:/usr/include/c++/5/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3132:/usr/include/c++/5/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3133:/usr/include/c++/5/bits/basic_string.h **** 
3134:/usr/include/c++/5/bits/basic_string.h ****       /**
3135:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3136:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3137:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3138:/usr/include/c++/5/bits/basic_string.h ****        *
3139:/usr/include/c++/5/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3140:/usr/include/c++/5/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3141:/usr/include/c++/5/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3142:/usr/include/c++/5/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3143:/usr/include/c++/5/bits/basic_string.h ****        */
3144:/usr/include/c++/5/bits/basic_string.h ****       void
3145:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3146:/usr/include/c++/5/bits/basic_string.h **** 
3147:/usr/include/c++/5/bits/basic_string.h ****       /**
3148:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3149:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
GAS LISTING /tmp/ccbg3Dll.s 			page 191


3150:/usr/include/c++/5/bits/basic_string.h ****        *
3151:/usr/include/c++/5/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3152:/usr/include/c++/5/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3153:/usr/include/c++/5/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3154:/usr/include/c++/5/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3155:/usr/include/c++/5/bits/basic_string.h ****        *  setting them to 0.
3156:/usr/include/c++/5/bits/basic_string.h ****        */
3157:/usr/include/c++/5/bits/basic_string.h ****       void
3158:/usr/include/c++/5/bits/basic_string.h ****       resize(size_type __n)
3159:/usr/include/c++/5/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3160:/usr/include/c++/5/bits/basic_string.h **** 
3161:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3162:/usr/include/c++/5/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3163:/usr/include/c++/5/bits/basic_string.h ****       void
3164:/usr/include/c++/5/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3165:/usr/include/c++/5/bits/basic_string.h ****       {
3166:/usr/include/c++/5/bits/basic_string.h **** #if __cpp_exceptions
3167:/usr/include/c++/5/bits/basic_string.h **** 	if (capacity() > size())
3168:/usr/include/c++/5/bits/basic_string.h **** 	  {
3169:/usr/include/c++/5/bits/basic_string.h **** 	    try
3170:/usr/include/c++/5/bits/basic_string.h **** 	      { reserve(0); }
3171:/usr/include/c++/5/bits/basic_string.h **** 	    catch(...)
3172:/usr/include/c++/5/bits/basic_string.h **** 	      { }
3173:/usr/include/c++/5/bits/basic_string.h **** 	  }
3174:/usr/include/c++/5/bits/basic_string.h **** #endif
3175:/usr/include/c++/5/bits/basic_string.h ****       }
3176:/usr/include/c++/5/bits/basic_string.h **** #endif
3177:/usr/include/c++/5/bits/basic_string.h **** 
3178:/usr/include/c++/5/bits/basic_string.h ****       /**
3179:/usr/include/c++/5/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3180:/usr/include/c++/5/bits/basic_string.h ****        *  before needing to allocate more memory.
3181:/usr/include/c++/5/bits/basic_string.h ****        */
3182:/usr/include/c++/5/bits/basic_string.h ****       size_type
3183:/usr/include/c++/5/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3184:/usr/include/c++/5/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3185:/usr/include/c++/5/bits/basic_string.h **** 
3186:/usr/include/c++/5/bits/basic_string.h ****       /**
3187:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3188:/usr/include/c++/5/bits/basic_string.h ****        *          characters.
3189:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3190:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3191:/usr/include/c++/5/bits/basic_string.h ****        *
3192:/usr/include/c++/5/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3193:/usr/include/c++/5/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3194:/usr/include/c++/5/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3195:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3196:/usr/include/c++/5/bits/basic_string.h ****        *
3197:/usr/include/c++/5/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3198:/usr/include/c++/5/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3199:/usr/include/c++/5/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3200:/usr/include/c++/5/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3201:/usr/include/c++/5/bits/basic_string.h ****        *  data.
3202:/usr/include/c++/5/bits/basic_string.h ****        */
3203:/usr/include/c++/5/bits/basic_string.h ****       void
3204:/usr/include/c++/5/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3205:/usr/include/c++/5/bits/basic_string.h **** 
3206:/usr/include/c++/5/bits/basic_string.h ****       /**
GAS LISTING /tmp/ccbg3Dll.s 			page 192


3207:/usr/include/c++/5/bits/basic_string.h ****        *  Erases the string, making it empty.
3208:/usr/include/c++/5/bits/basic_string.h ****        */
3209:/usr/include/c++/5/bits/basic_string.h ****       // PR 56166: this should not throw.
3210:/usr/include/c++/5/bits/basic_string.h ****       void
3211:/usr/include/c++/5/bits/basic_string.h ****       clear()
3212:/usr/include/c++/5/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
3213:/usr/include/c++/5/bits/basic_string.h **** 
3214:/usr/include/c++/5/bits/basic_string.h ****       /**
3215:/usr/include/c++/5/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
3216:/usr/include/c++/5/bits/basic_string.h ****        *  <code>*this == ""</code>.
3217:/usr/include/c++/5/bits/basic_string.h ****        */
3218:/usr/include/c++/5/bits/basic_string.h ****       bool
3219:/usr/include/c++/5/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
3220:/usr/include/c++/5/bits/basic_string.h ****       { return this->size() == 0; }
3221:/usr/include/c++/5/bits/basic_string.h **** 
3222:/usr/include/c++/5/bits/basic_string.h ****       // Element access:
3223:/usr/include/c++/5/bits/basic_string.h ****       /**
3224:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3225:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3226:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
3227:/usr/include/c++/5/bits/basic_string.h ****        *
3228:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3229:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3230:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3231:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)
3232:/usr/include/c++/5/bits/basic_string.h ****        */
3233:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3234:/usr/include/c++/5/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
3235:/usr/include/c++/5/bits/basic_string.h ****       {
3236:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
3237:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
3238:/usr/include/c++/5/bits/basic_string.h ****       }
3239:/usr/include/c++/5/bits/basic_string.h **** 
3240:/usr/include/c++/5/bits/basic_string.h ****       /**
3241:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
3242:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
3243:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3244:/usr/include/c++/5/bits/basic_string.h ****        *
3245:/usr/include/c++/5/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
3246:/usr/include/c++/5/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
3247:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
3248:/usr/include/c++/5/bits/basic_string.h ****        *  see at().)  Unshares the string.
3249:/usr/include/c++/5/bits/basic_string.h ****        */
3250:/usr/include/c++/5/bits/basic_string.h ****       reference
3251:/usr/include/c++/5/bits/basic_string.h ****       operator[](size_type __pos)
3252:/usr/include/c++/5/bits/basic_string.h ****       {
3253:/usr/include/c++/5/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
3254:/usr/include/c++/5/bits/basic_string.h **** 	// and in C++11 mode.
3255:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
3256:/usr/include/c++/5/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
3257:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
3258:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3259:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__pos];
3260:/usr/include/c++/5/bits/basic_string.h ****       }
3261:/usr/include/c++/5/bits/basic_string.h **** 
3262:/usr/include/c++/5/bits/basic_string.h ****       /**
3263:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
GAS LISTING /tmp/ccbg3Dll.s 			page 193


3264:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
3265:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
3266:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3267:/usr/include/c++/5/bits/basic_string.h ****        *
3268:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3269:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3270:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.
3271:/usr/include/c++/5/bits/basic_string.h ****        */
3272:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3273:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n) const
3274:/usr/include/c++/5/bits/basic_string.h ****       {
3275:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= this->size())
3276:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3277:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3278:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
3279:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
3280:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
3281:/usr/include/c++/5/bits/basic_string.h ****       }
3282:/usr/include/c++/5/bits/basic_string.h **** 
3283:/usr/include/c++/5/bits/basic_string.h ****       /**
3284:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
3285:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n The index of the character to access.
3286:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Read/write reference to the character.
3287:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
3288:/usr/include/c++/5/bits/basic_string.h ****        *
3289:/usr/include/c++/5/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
3290:/usr/include/c++/5/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
3291:/usr/include/c++/5/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
3292:/usr/include/c++/5/bits/basic_string.h ****        *  unsharing the string.
3293:/usr/include/c++/5/bits/basic_string.h ****        */
3294:/usr/include/c++/5/bits/basic_string.h ****       reference
3295:/usr/include/c++/5/bits/basic_string.h ****       at(size_type __n)
3296:/usr/include/c++/5/bits/basic_string.h ****       {
3297:/usr/include/c++/5/bits/basic_string.h **** 	if (__n >= size())
3298:/usr/include/c++/5/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
3299:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
3300:/usr/include/c++/5/bits/basic_string.h **** 				       "(which is %zu)"),
3301:/usr/include/c++/5/bits/basic_string.h **** 				   __n, this->size());
3302:/usr/include/c++/5/bits/basic_string.h **** 	_M_leak();
3303:/usr/include/c++/5/bits/basic_string.h **** 	return _M_data()[__n];
3304:/usr/include/c++/5/bits/basic_string.h ****       }
3305:/usr/include/c++/5/bits/basic_string.h **** 
3306:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3307:/usr/include/c++/5/bits/basic_string.h ****       /**
3308:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
3309:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3310:/usr/include/c++/5/bits/basic_string.h ****        */
3311:/usr/include/c++/5/bits/basic_string.h ****       reference
3312:/usr/include/c++/5/bits/basic_string.h ****       front()
3313:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
3314:/usr/include/c++/5/bits/basic_string.h **** 
3315:/usr/include/c++/5/bits/basic_string.h ****       /**
3316:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
3317:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3318:/usr/include/c++/5/bits/basic_string.h ****        */
3319:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3320:/usr/include/c++/5/bits/basic_string.h ****       front() const _GLIBCXX_NOEXCEPT
GAS LISTING /tmp/ccbg3Dll.s 			page 194


3321:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](0); }
3322:/usr/include/c++/5/bits/basic_string.h **** 
3323:/usr/include/c++/5/bits/basic_string.h ****       /**
3324:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
3325:/usr/include/c++/5/bits/basic_string.h ****        *  element of the %string.
3326:/usr/include/c++/5/bits/basic_string.h ****        */
3327:/usr/include/c++/5/bits/basic_string.h ****       reference
3328:/usr/include/c++/5/bits/basic_string.h ****       back()
3329:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
3330:/usr/include/c++/5/bits/basic_string.h **** 
3331:/usr/include/c++/5/bits/basic_string.h ****       /**
3332:/usr/include/c++/5/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
3333:/usr/include/c++/5/bits/basic_string.h ****        *  last element of the %string.
3334:/usr/include/c++/5/bits/basic_string.h ****        */
3335:/usr/include/c++/5/bits/basic_string.h ****       const_reference
3336:/usr/include/c++/5/bits/basic_string.h ****       back() const _GLIBCXX_NOEXCEPT
3337:/usr/include/c++/5/bits/basic_string.h ****       { return operator[](this->size() - 1); }
3338:/usr/include/c++/5/bits/basic_string.h **** #endif
3339:/usr/include/c++/5/bits/basic_string.h **** 
3340:/usr/include/c++/5/bits/basic_string.h ****       // Modifiers:
3341:/usr/include/c++/5/bits/basic_string.h ****       /**
3342:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
3343:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3344:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3345:/usr/include/c++/5/bits/basic_string.h ****        */
3346:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3347:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const basic_string& __str)
3348:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__str); }
3349:/usr/include/c++/5/bits/basic_string.h **** 
3350:/usr/include/c++/5/bits/basic_string.h ****       /**
3351:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
3352:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3353:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3354:/usr/include/c++/5/bits/basic_string.h ****        */
3355:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3356:/usr/include/c++/5/bits/basic_string.h ****       operator+=(const _CharT* __s)
3357:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__s); }
3358:/usr/include/c++/5/bits/basic_string.h **** 
3359:/usr/include/c++/5/bits/basic_string.h ****       /**
3360:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a character.
3361:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to append.
3362:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3363:/usr/include/c++/5/bits/basic_string.h ****        */
3364:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3365:/usr/include/c++/5/bits/basic_string.h ****       operator+=(_CharT __c)
3366:/usr/include/c++/5/bits/basic_string.h ****       { 
3367:/usr/include/c++/5/bits/basic_string.h **** 	this->push_back(__c);
3368:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3369:/usr/include/c++/5/bits/basic_string.h ****       }
3370:/usr/include/c++/5/bits/basic_string.h **** 
3371:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3372:/usr/include/c++/5/bits/basic_string.h ****       /**
3373:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
3374:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
3375:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3376:/usr/include/c++/5/bits/basic_string.h ****        */
3377:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/ccbg3Dll.s 			page 195


3378:/usr/include/c++/5/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
3379:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3380:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3381:/usr/include/c++/5/bits/basic_string.h **** 
3382:/usr/include/c++/5/bits/basic_string.h ****       /**
3383:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a string to this string.
3384:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3385:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3386:/usr/include/c++/5/bits/basic_string.h ****        */
3387:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3388:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str);
3389:/usr/include/c++/5/bits/basic_string.h **** 
3390:/usr/include/c++/5/bits/basic_string.h ****       /**
3391:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a substring.
3392:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to append.
3393:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
3394:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3395:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3396:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
3397:/usr/include/c++/5/bits/basic_string.h ****        *
3398:/usr/include/c++/5/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
3399:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
3400:/usr/include/c++/5/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
3401:/usr/include/c++/5/bits/basic_string.h ****        *  remainder of @a __str is appended.
3402:/usr/include/c++/5/bits/basic_string.h ****        */
3403:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3404:/usr/include/c++/5/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
3405:/usr/include/c++/5/bits/basic_string.h **** 
3406:/usr/include/c++/5/bits/basic_string.h ****       /**
3407:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C substring.
3408:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3409:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3410:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3411:/usr/include/c++/5/bits/basic_string.h ****        */
3412:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3413:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
3414:/usr/include/c++/5/bits/basic_string.h **** 
3415:/usr/include/c++/5/bits/basic_string.h ****       /**
3416:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a C string.
3417:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to append.
3418:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3419:/usr/include/c++/5/bits/basic_string.h ****        */
3420:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3421:/usr/include/c++/5/bits/basic_string.h ****       append(const _CharT* __s)
3422:/usr/include/c++/5/bits/basic_string.h ****       {
3423:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3424:/usr/include/c++/5/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
3425:/usr/include/c++/5/bits/basic_string.h ****       }
3426:/usr/include/c++/5/bits/basic_string.h **** 
3427:/usr/include/c++/5/bits/basic_string.h ****       /**
3428:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append multiple characters.
3429:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to append.
3430:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
3431:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3432:/usr/include/c++/5/bits/basic_string.h ****        *
3433:/usr/include/c++/5/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
3434:/usr/include/c++/5/bits/basic_string.h ****        */
GAS LISTING /tmp/ccbg3Dll.s 			page 196


3435:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3436:/usr/include/c++/5/bits/basic_string.h ****       append(size_type __n, _CharT __c);
3437:/usr/include/c++/5/bits/basic_string.h **** 
3438:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3439:/usr/include/c++/5/bits/basic_string.h ****       /**
3440:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
3441:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
3442:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3443:/usr/include/c++/5/bits/basic_string.h ****        */
3444:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3445:/usr/include/c++/5/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
3446:/usr/include/c++/5/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
3447:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3448:/usr/include/c++/5/bits/basic_string.h **** 
3449:/usr/include/c++/5/bits/basic_string.h ****       /**
3450:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a range of characters.
3451:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3452:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3453:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3454:/usr/include/c++/5/bits/basic_string.h ****        *
3455:/usr/include/c++/5/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
3456:/usr/include/c++/5/bits/basic_string.h ****        */
3457:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3458:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
3459:/usr/include/c++/5/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
3460:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
3461:/usr/include/c++/5/bits/basic_string.h **** 
3462:/usr/include/c++/5/bits/basic_string.h ****       /**
3463:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Append a single character.
3464:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to append.
3465:/usr/include/c++/5/bits/basic_string.h ****        */
3466:/usr/include/c++/5/bits/basic_string.h ****       void
3467:/usr/include/c++/5/bits/basic_string.h ****       push_back(_CharT __c)
3468:/usr/include/c++/5/bits/basic_string.h ****       { 
3469:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
3470:/usr/include/c++/5/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
3471:/usr/include/c++/5/bits/basic_string.h **** 	  this->reserve(__len);
3472:/usr/include/c++/5/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
3473:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
3474:/usr/include/c++/5/bits/basic_string.h ****       }
3475:/usr/include/c++/5/bits/basic_string.h **** 
3476:/usr/include/c++/5/bits/basic_string.h ****       /**
3477:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
3478:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
3479:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3480:/usr/include/c++/5/bits/basic_string.h ****        */
3481:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3482:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str);
3483:/usr/include/c++/5/bits/basic_string.h **** 
3484:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3485:/usr/include/c++/5/bits/basic_string.h ****       /**
3486:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
3487:/usr/include/c++/5/bits/basic_string.h ****        *  @param  __str  Source string to use.
3488:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3489:/usr/include/c++/5/bits/basic_string.h ****        *
3490:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
3491:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
GAS LISTING /tmp/ccbg3Dll.s 			page 197


3492:/usr/include/c++/5/bits/basic_string.h ****        */
3493:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
3494:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3495:/usr/include/c++/5/bits/basic_string.h ****       assign(basic_string&& __str)
3496:/usr/include/c++/5/bits/basic_string.h ****       {
3497:/usr/include/c++/5/bits/basic_string.h **** 	this->swap(__str);
3498:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3499:/usr/include/c++/5/bits/basic_string.h ****       }
3500:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3501:/usr/include/c++/5/bits/basic_string.h **** 
3502:/usr/include/c++/5/bits/basic_string.h ****       /**
3503:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
3504:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to use.
3505:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
3506:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
3507:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3508:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
3509:/usr/include/c++/5/bits/basic_string.h ****        *
3510:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
3511:/usr/include/c++/5/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
3512:/usr/include/c++/5/bits/basic_string.h ****        *  is larger than the number of available characters in @a
3513:/usr/include/c++/5/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
3514:/usr/include/c++/5/bits/basic_string.h ****        */
3515:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3516:/usr/include/c++/5/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
3517:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__str._M_data()
3518:/usr/include/c++/5/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
3519:/usr/include/c++/5/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
3520:/usr/include/c++/5/bits/basic_string.h **** 
3521:/usr/include/c++/5/bits/basic_string.h ****       /**
3522:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a C substring.
3523:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
3524:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to use.
3525:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3526:/usr/include/c++/5/bits/basic_string.h ****        *
3527:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
3528:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
3529:/usr/include/c++/5/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
3530:/usr/include/c++/5/bits/basic_string.h ****        */
3531:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3532:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
3533:/usr/include/c++/5/bits/basic_string.h **** 
3534:/usr/include/c++/5/bits/basic_string.h ****       /**
3535:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
3536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to use.
3537:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3538:/usr/include/c++/5/bits/basic_string.h ****        *
3539:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
3540:/usr/include/c++/5/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
3541:/usr/include/c++/5/bits/basic_string.h ****        *  function returns.
3542:/usr/include/c++/5/bits/basic_string.h ****        */
3543:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3544:/usr/include/c++/5/bits/basic_string.h ****       assign(const _CharT* __s)
3545:/usr/include/c++/5/bits/basic_string.h ****       {
3546:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3547:/usr/include/c++/5/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
3548:/usr/include/c++/5/bits/basic_string.h ****       }
GAS LISTING /tmp/ccbg3Dll.s 			page 198


3549:/usr/include/c++/5/bits/basic_string.h **** 
3550:/usr/include/c++/5/bits/basic_string.h ****       /**
3551:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
3552:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
3553:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to use.
3554:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3555:/usr/include/c++/5/bits/basic_string.h ****        *
3556:/usr/include/c++/5/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
3557:/usr/include/c++/5/bits/basic_string.h ****        *  character @a __c.
3558:/usr/include/c++/5/bits/basic_string.h ****        */
3559:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3560:/usr/include/c++/5/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
3561:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
3562:/usr/include/c++/5/bits/basic_string.h **** 
3563:/usr/include/c++/5/bits/basic_string.h ****       /**
3564:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
3565:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
3566:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
3567:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3568:/usr/include/c++/5/bits/basic_string.h ****        *
3569:/usr/include/c++/5/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
3570:/usr/include/c++/5/bits/basic_string.h ****       */
3571:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3572:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
3573:/usr/include/c++/5/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
3574:/usr/include/c++/5/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
3575:/usr/include/c++/5/bits/basic_string.h **** 
3576:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3577:/usr/include/c++/5/bits/basic_string.h ****       /**
3578:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
3579:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
3580:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3581:/usr/include/c++/5/bits/basic_string.h ****        */
3582:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3583:/usr/include/c++/5/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
3584:/usr/include/c++/5/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
3585:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3586:/usr/include/c++/5/bits/basic_string.h **** 
3587:/usr/include/c++/5/bits/basic_string.h ****       /**
3588:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
3589:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3590:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
3591:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3592:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3593:/usr/include/c++/5/bits/basic_string.h ****        *
3594:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
3595:/usr/include/c++/5/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
3596:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3597:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3598:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3599:/usr/include/c++/5/bits/basic_string.h ****       */
3600:/usr/include/c++/5/bits/basic_string.h ****       void
3601:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
3602:/usr/include/c++/5/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
3603:/usr/include/c++/5/bits/basic_string.h **** 
3604:/usr/include/c++/5/bits/basic_string.h ****       /**
3605:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a range of characters.
GAS LISTING /tmp/ccbg3Dll.s 			page 199


3606:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3607:/usr/include/c++/5/bits/basic_string.h ****        *  @param __beg  Start of range.
3608:/usr/include/c++/5/bits/basic_string.h ****        *  @param __end  End of range.
3609:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3610:/usr/include/c++/5/bits/basic_string.h ****        *
3611:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
3612:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3613:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3614:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3615:/usr/include/c++/5/bits/basic_string.h ****       */
3616:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
3617:/usr/include/c++/5/bits/basic_string.h ****         void
3618:/usr/include/c++/5/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
3619:/usr/include/c++/5/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
3620:/usr/include/c++/5/bits/basic_string.h **** 
3621:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3622:/usr/include/c++/5/bits/basic_string.h ****       /**
3623:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
3624:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
3625:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
3626:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3627:/usr/include/c++/5/bits/basic_string.h ****        */
3628:/usr/include/c++/5/bits/basic_string.h ****       void
3629:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
3630:/usr/include/c++/5/bits/basic_string.h ****       {
3631:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3632:/usr/include/c++/5/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
3633:/usr/include/c++/5/bits/basic_string.h ****       }
3634:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3635:/usr/include/c++/5/bits/basic_string.h **** 
3636:/usr/include/c++/5/bits/basic_string.h ****       /**
3637:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert value of a string.
3638:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3639:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
3640:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3641:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3642:/usr/include/c++/5/bits/basic_string.h ****        *
3643:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
3644:/usr/include/c++/5/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
3645:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3646:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3647:/usr/include/c++/5/bits/basic_string.h ****       */
3648:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3649:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
3650:/usr/include/c++/5/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
3651:/usr/include/c++/5/bits/basic_string.h **** 
3652:/usr/include/c++/5/bits/basic_string.h ****       /**
3653:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a substring.
3654:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
3655:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  The string to insert.
3656:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
3657:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
3658:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3659:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3660:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
3661:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
3662:/usr/include/c++/5/bits/basic_string.h ****        *
GAS LISTING /tmp/ccbg3Dll.s 			page 200


3663:/usr/include/c++/5/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
3664:/usr/include/c++/5/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
3665:/usr/include/c++/5/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
3666:/usr/include/c++/5/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
3667:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
3668:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
3669:/usr/include/c++/5/bits/basic_string.h ****       */
3670:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3671:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
3672:/usr/include/c++/5/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
3673:/usr/include/c++/5/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
3674:/usr/include/c++/5/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
3675:/usr/include/c++/5/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
3676:/usr/include/c++/5/bits/basic_string.h **** 
3677:/usr/include/c++/5/bits/basic_string.h ****       /**
3678:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C substring.
3679:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3680:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
3681:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
3682:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3683:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3684:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3685:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3686:/usr/include/c++/5/bits/basic_string.h ****        *
3687:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
3688:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
3689:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
3690:/usr/include/c++/5/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
3691:/usr/include/c++/5/bits/basic_string.h ****        *  doesn't change if an error is thrown.
3692:/usr/include/c++/5/bits/basic_string.h ****       */
3693:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3694:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
3695:/usr/include/c++/5/bits/basic_string.h **** 
3696:/usr/include/c++/5/bits/basic_string.h ****       /**
3697:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert a C string.
3698:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
3699:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  The C string to insert.
3700:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3701:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3702:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3703:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3704:/usr/include/c++/5/bits/basic_string.h ****        *
3705:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
3706:/usr/include/c++/5/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
3707:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
3708:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
3709:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3710:/usr/include/c++/5/bits/basic_string.h ****       */
3711:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3712:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
3713:/usr/include/c++/5/bits/basic_string.h ****       {
3714:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3715:/usr/include/c++/5/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
3716:/usr/include/c++/5/bits/basic_string.h ****       }
3717:/usr/include/c++/5/bits/basic_string.h **** 
3718:/usr/include/c++/5/bits/basic_string.h ****       /**
3719:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert multiple characters.
GAS LISTING /tmp/ccbg3Dll.s 			page 201


3720:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
3721:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert
3722:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3723:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3724:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3725:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
3726:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3727:/usr/include/c++/5/bits/basic_string.h ****        *
3728:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
3729:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
3730:/usr/include/c++/5/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
3731:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3732:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3733:/usr/include/c++/5/bits/basic_string.h ****       */
3734:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3735:/usr/include/c++/5/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
3736:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
3737:/usr/include/c++/5/bits/basic_string.h **** 			      size_type(0), __n, __c); }
3738:/usr/include/c++/5/bits/basic_string.h **** 
3739:/usr/include/c++/5/bits/basic_string.h ****       /**
3740:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Insert one character.
3741:/usr/include/c++/5/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
3742:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  The character to insert.
3743:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
3744:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3745:/usr/include/c++/5/bits/basic_string.h ****        *
3746:/usr/include/c++/5/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
3747:/usr/include/c++/5/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
3748:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
3749:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3750:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3751:/usr/include/c++/5/bits/basic_string.h ****       */
3752:/usr/include/c++/5/bits/basic_string.h ****       iterator
3753:/usr/include/c++/5/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
3754:/usr/include/c++/5/bits/basic_string.h ****       {
3755:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
3756:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
3757:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
3758:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
3759:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
3760:/usr/include/c++/5/bits/basic_string.h ****       }
3761:/usr/include/c++/5/bits/basic_string.h **** 
3762:/usr/include/c++/5/bits/basic_string.h ****       /**
3763:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove characters.
3764:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
3765:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
3766:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3767:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
3768:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3769:/usr/include/c++/5/bits/basic_string.h ****        *
3770:/usr/include/c++/5/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
3771:/usr/include/c++/5/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
3772:/usr/include/c++/5/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
3773:/usr/include/c++/5/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
3774:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
3775:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3776:/usr/include/c++/5/bits/basic_string.h ****       */
GAS LISTING /tmp/ccbg3Dll.s 			page 202


3777:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3778:/usr/include/c++/5/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
3779:/usr/include/c++/5/bits/basic_string.h ****       { 
3780:/usr/include/c++/5/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
3781:/usr/include/c++/5/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
3782:/usr/include/c++/5/bits/basic_string.h **** 	return *this;
3783:/usr/include/c++/5/bits/basic_string.h ****       }
3784:/usr/include/c++/5/bits/basic_string.h **** 
3785:/usr/include/c++/5/bits/basic_string.h ****       /**
3786:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove one character.
3787:/usr/include/c++/5/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
3788:/usr/include/c++/5/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
3789:/usr/include/c++/5/bits/basic_string.h ****        *
3790:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
3791:/usr/include/c++/5/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
3792:/usr/include/c++/5/bits/basic_string.h ****       */
3793:/usr/include/c++/5/bits/basic_string.h ****       iterator
3794:/usr/include/c++/5/bits/basic_string.h ****       erase(iterator __position)
3795:/usr/include/c++/5/bits/basic_string.h ****       {
3796:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
3797:/usr/include/c++/5/bits/basic_string.h **** 				 && __position < _M_iend());
3798:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
3799:/usr/include/c++/5/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
3800:/usr/include/c++/5/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
3801:/usr/include/c++/5/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
3802:/usr/include/c++/5/bits/basic_string.h ****       }
3803:/usr/include/c++/5/bits/basic_string.h **** 
3804:/usr/include/c++/5/bits/basic_string.h ****       /**
3805:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove a range of characters.
3806:/usr/include/c++/5/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
3807:/usr/include/c++/5/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
3808:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
3809:/usr/include/c++/5/bits/basic_string.h ****        *
3810:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
3811:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
3812:/usr/include/c++/5/bits/basic_string.h ****       */
3813:/usr/include/c++/5/bits/basic_string.h ****       iterator
3814:/usr/include/c++/5/bits/basic_string.h ****       erase(iterator __first, iterator __last);
3815:/usr/include/c++/5/bits/basic_string.h ****  
3816:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
3817:/usr/include/c++/5/bits/basic_string.h ****       /**
3818:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Remove the last character.
3819:/usr/include/c++/5/bits/basic_string.h ****        *
3820:/usr/include/c++/5/bits/basic_string.h ****        *  The string must be non-empty.
3821:/usr/include/c++/5/bits/basic_string.h ****        */
3822:/usr/include/c++/5/bits/basic_string.h ****       void
3823:/usr/include/c++/5/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
3824:/usr/include/c++/5/bits/basic_string.h ****       { erase(size()-1, 1); }
3825:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
3826:/usr/include/c++/5/bits/basic_string.h **** 
3827:/usr/include/c++/5/bits/basic_string.h ****       /**
3828:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
3829:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3830:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
3831:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
3832:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3833:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
GAS LISTING /tmp/ccbg3Dll.s 			page 203


3834:/usr/include/c++/5/bits/basic_string.h ****        *  string.
3835:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3836:/usr/include/c++/5/bits/basic_string.h ****        *
3837:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
3838:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
3839:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
3840:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
3841:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
3842:/usr/include/c++/5/bits/basic_string.h ****        *  error is thrown.
3843:/usr/include/c++/5/bits/basic_string.h ****       */
3844:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3845:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
3846:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
3847:/usr/include/c++/5/bits/basic_string.h **** 
3848:/usr/include/c++/5/bits/basic_string.h ****       /**
3849:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
3850:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
3851:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3852:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to insert.
3853:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
3854:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
3855:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3856:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
3857:/usr/include/c++/5/bits/basic_string.h ****        *  __str.size().
3858:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3859:/usr/include/c++/5/bits/basic_string.h ****        *
3860:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
3861:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
3862:/usr/include/c++/5/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
3863:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
3864:/usr/include/c++/5/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
3865:/usr/include/c++/5/bits/basic_string.h ****       */
3866:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3867:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
3868:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
3869:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
3870:/usr/include/c++/5/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
3871:/usr/include/c++/5/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
3872:/usr/include/c++/5/bits/basic_string.h **** 
3873:/usr/include/c++/5/bits/basic_string.h ****       /**
3874:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
3875:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3876:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3877:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
3878:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
3879:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3880:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
3881:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3882:/usr/include/c++/5/bits/basic_string.h ****        *
3883:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
3884:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
3885:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
3886:/usr/include/c++/5/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
3887:/usr/include/c++/5/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
3888:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
3889:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
3890:/usr/include/c++/5/bits/basic_string.h ****       */
GAS LISTING /tmp/ccbg3Dll.s 			page 204


3891:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3892:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
3893:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2);
3894:/usr/include/c++/5/bits/basic_string.h **** 
3895:/usr/include/c++/5/bits/basic_string.h ****       /**
3896:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
3897:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3898:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3899:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to insert.
3900:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3901:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
3902:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3903:/usr/include/c++/5/bits/basic_string.h ****        *
3904:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
3905:/usr/include/c++/5/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
3906:/usr/include/c++/5/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
3907:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
3908:/usr/include/c++/5/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
3909:/usr/include/c++/5/bits/basic_string.h ****        *  change if an error is thrown.
3910:/usr/include/c++/5/bits/basic_string.h ****       */
3911:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3912:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
3913:/usr/include/c++/5/bits/basic_string.h ****       {
3914:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3915:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
3916:/usr/include/c++/5/bits/basic_string.h ****       }
3917:/usr/include/c++/5/bits/basic_string.h **** 
3918:/usr/include/c++/5/bits/basic_string.h ****       /**
3919:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
3920:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
3921:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
3922:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
3923:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
3924:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3925:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
3926:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3927:/usr/include/c++/5/bits/basic_string.h ****        *
3928:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
3929:/usr/include/c++/5/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
3930:/usr/include/c++/5/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
3931:/usr/include/c++/5/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
3932:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
3933:/usr/include/c++/5/bits/basic_string.h ****        *  is thrown.
3934:/usr/include/c++/5/bits/basic_string.h ****       */
3935:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3936:/usr/include/c++/5/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
3937:/usr/include/c++/5/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
3938:/usr/include/c++/5/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
3939:/usr/include/c++/5/bits/basic_string.h **** 
3940:/usr/include/c++/5/bits/basic_string.h ****       /**
3941:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
3942:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3943:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3944:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String value to insert.
3945:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3946:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3947:/usr/include/c++/5/bits/basic_string.h ****        *
GAS LISTING /tmp/ccbg3Dll.s 			page 205


3948:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3949:/usr/include/c++/5/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
3950:/usr/include/c++/5/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
3951:/usr/include/c++/5/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
3952:/usr/include/c++/5/bits/basic_string.h ****       */
3953:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3954:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
3955:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
3956:/usr/include/c++/5/bits/basic_string.h **** 
3957:/usr/include/c++/5/bits/basic_string.h ****       /**
3958:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
3959:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3960:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3961:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
3962:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
3963:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3964:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3965:/usr/include/c++/5/bits/basic_string.h ****        *
3966:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3967:/usr/include/c++/5/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
3968:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
3969:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
3970:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
3971:/usr/include/c++/5/bits/basic_string.h ****       */
3972:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3973:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
3974:/usr/include/c++/5/bits/basic_string.h ****       {
3975:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
3976:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
3977:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
3978:/usr/include/c++/5/bits/basic_string.h ****       }
3979:/usr/include/c++/5/bits/basic_string.h **** 
3980:/usr/include/c++/5/bits/basic_string.h ****       /**
3981:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
3982:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
3983:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
3984:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string value to insert.
3985:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
3986:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
3987:/usr/include/c++/5/bits/basic_string.h ****        *
3988:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
3989:/usr/include/c++/5/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
3990:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
3991:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
3992:/usr/include/c++/5/bits/basic_string.h ****       */
3993:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
3994:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
3995:/usr/include/c++/5/bits/basic_string.h ****       {
3996:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3997:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
3998:/usr/include/c++/5/bits/basic_string.h ****       }
3999:/usr/include/c++/5/bits/basic_string.h **** 
4000:/usr/include/c++/5/bits/basic_string.h ****       /**
4001:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4002:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4003:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4004:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
GAS LISTING /tmp/ccbg3Dll.s 			page 206


4005:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to insert.
4006:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4007:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4008:/usr/include/c++/5/bits/basic_string.h ****        *
4009:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4010:/usr/include/c++/5/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4011:/usr/include/c++/5/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4012:/usr/include/c++/5/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4013:/usr/include/c++/5/bits/basic_string.h ****       */
4014:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4015:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4016:/usr/include/c++/5/bits/basic_string.h ****       {
4017:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4018:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4019:/usr/include/c++/5/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4020:/usr/include/c++/5/bits/basic_string.h ****       }
4021:/usr/include/c++/5/bits/basic_string.h **** 
4022:/usr/include/c++/5/bits/basic_string.h ****       /**
4023:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4024:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4025:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4026:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4027:/usr/include/c++/5/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4028:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4029:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4030:/usr/include/c++/5/bits/basic_string.h ****        *
4031:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4032:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4033:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4034:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4035:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
4036:/usr/include/c++/5/bits/basic_string.h ****       */
4037:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
4038:/usr/include/c++/5/bits/basic_string.h ****         basic_string&
4039:/usr/include/c++/5/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4040:/usr/include/c++/5/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4041:/usr/include/c++/5/bits/basic_string.h ****         {
4042:/usr/include/c++/5/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4043:/usr/include/c++/5/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4044:/usr/include/c++/5/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4045:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4046:/usr/include/c++/5/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4047:/usr/include/c++/5/bits/basic_string.h **** 	}
4048:/usr/include/c++/5/bits/basic_string.h **** 
4049:/usr/include/c++/5/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4050:/usr/include/c++/5/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4051:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4052:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4053:/usr/include/c++/5/bits/basic_string.h ****       {
4054:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4055:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4056:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4057:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4058:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4059:/usr/include/c++/5/bits/basic_string.h ****       }
4060:/usr/include/c++/5/bits/basic_string.h **** 
4061:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/ccbg3Dll.s 			page 207


4062:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4063:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4064:/usr/include/c++/5/bits/basic_string.h ****       {
4065:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4066:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4067:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4068:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4069:/usr/include/c++/5/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4070:/usr/include/c++/5/bits/basic_string.h ****       }
4071:/usr/include/c++/5/bits/basic_string.h **** 
4072:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4073:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4074:/usr/include/c++/5/bits/basic_string.h ****       {
4075:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4076:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4077:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4078:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4079:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4080:/usr/include/c++/5/bits/basic_string.h ****       }
4081:/usr/include/c++/5/bits/basic_string.h **** 
4082:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4083:/usr/include/c++/5/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4084:/usr/include/c++/5/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
4085:/usr/include/c++/5/bits/basic_string.h ****       {
4086:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4087:/usr/include/c++/5/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4088:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4089:/usr/include/c++/5/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4090:/usr/include/c++/5/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
4091:/usr/include/c++/5/bits/basic_string.h ****       }
4092:/usr/include/c++/5/bits/basic_string.h ****       
4093:/usr/include/c++/5/bits/basic_string.h **** #if __cplusplus >= 201103L
4094:/usr/include/c++/5/bits/basic_string.h ****       /**
4095:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
4096:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4097:/usr/include/c++/5/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4098:/usr/include/c++/5/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4099:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Reference to this string.
4100:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4101:/usr/include/c++/5/bits/basic_string.h ****        *
4102:/usr/include/c++/5/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4103:/usr/include/c++/5/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4104:/usr/include/c++/5/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4105:/usr/include/c++/5/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4106:/usr/include/c++/5/bits/basic_string.h ****        *  thrown.
4107:/usr/include/c++/5/bits/basic_string.h ****       */
4108:/usr/include/c++/5/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
4109:/usr/include/c++/5/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
4110:/usr/include/c++/5/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
4111:/usr/include/c++/5/bits/basic_string.h **** #endif // C++11
4112:/usr/include/c++/5/bits/basic_string.h **** 
4113:/usr/include/c++/5/bits/basic_string.h ****     private:
4114:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
4115:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
4116:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
4117:/usr/include/c++/5/bits/basic_string.h **** 			    _Integer __val, __true_type)
4118:/usr/include/c++/5/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
GAS LISTING /tmp/ccbg3Dll.s 			page 208


4119:/usr/include/c++/5/bits/basic_string.h **** 
4120:/usr/include/c++/5/bits/basic_string.h ****       template<class _InputIterator>
4121:/usr/include/c++/5/bits/basic_string.h **** 	basic_string&
4122:/usr/include/c++/5/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
4123:/usr/include/c++/5/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
4124:/usr/include/c++/5/bits/basic_string.h **** 
4125:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4126:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
4127:/usr/include/c++/5/bits/basic_string.h **** 		     _CharT __c);
4128:/usr/include/c++/5/bits/basic_string.h **** 
4129:/usr/include/c++/5/bits/basic_string.h ****       basic_string&
4130:/usr/include/c++/5/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
4131:/usr/include/c++/5/bits/basic_string.h **** 		      size_type __n2);
4132:/usr/include/c++/5/bits/basic_string.h **** 
4133:/usr/include/c++/5/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
4134:/usr/include/c++/5/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
4135:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4136:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4137:/usr/include/c++/5/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
4138:/usr/include/c++/5/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
4139:/usr/include/c++/5/bits/basic_string.h **** 	{
4140:/usr/include/c++/5/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
4141:/usr/include/c++/5/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
4142:/usr/include/c++/5/bits/basic_string.h **** 	}
4143:/usr/include/c++/5/bits/basic_string.h **** 
4144:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4145:/usr/include/c++/5/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
4146:/usr/include/c++/5/bits/basic_string.h ****       template<class _Integer>
4147:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4148:/usr/include/c++/5/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
4149:/usr/include/c++/5/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
4150:/usr/include/c++/5/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
4151:/usr/include/c++/5/bits/basic_string.h **** 				    __end, __a); }
4152:/usr/include/c++/5/bits/basic_string.h **** 
4153:/usr/include/c++/5/bits/basic_string.h ****       static _CharT*
4154:/usr/include/c++/5/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
4155:/usr/include/c++/5/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
4156:/usr/include/c++/5/bits/basic_string.h **** 
4157:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4158:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4159:/usr/include/c++/5/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
4160:/usr/include/c++/5/bits/basic_string.h **** 	{
4161:/usr/include/c++/5/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
4162:/usr/include/c++/5/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
4163:/usr/include/c++/5/bits/basic_string.h ****         }
4164:/usr/include/c++/5/bits/basic_string.h **** 
4165:/usr/include/c++/5/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
4166:/usr/include/c++/5/bits/basic_string.h ****       template<class _InIterator>
4167:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4168:/usr/include/c++/5/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
4169:/usr/include/c++/5/bits/basic_string.h **** 		      input_iterator_tag);
4170:/usr/include/c++/5/bits/basic_string.h **** 
4171:/usr/include/c++/5/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
4172:/usr/include/c++/5/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
4173:/usr/include/c++/5/bits/basic_string.h ****       template<class _FwdIterator>
4174:/usr/include/c++/5/bits/basic_string.h ****         static _CharT*
4175:/usr/include/c++/5/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
GAS LISTING /tmp/ccbg3Dll.s 			page 209


4176:/usr/include/c++/5/bits/basic_string.h **** 		     forward_iterator_tag);
4177:/usr/include/c++/5/bits/basic_string.h **** 
4178:/usr/include/c++/5/bits/basic_string.h ****       static _CharT*
4179:/usr/include/c++/5/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
4180:/usr/include/c++/5/bits/basic_string.h **** 
4181:/usr/include/c++/5/bits/basic_string.h ****     public:
4182:/usr/include/c++/5/bits/basic_string.h **** 
4183:/usr/include/c++/5/bits/basic_string.h ****       /**
4184:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Copy substring into C string.
4185:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to copy value into.
4186:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
4187:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
4188:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Number of characters actually copied
4189:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4190:/usr/include/c++/5/bits/basic_string.h ****        *
4191:/usr/include/c++/5/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
4192:/usr/include/c++/5/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
4193:/usr/include/c++/5/bits/basic_string.h ****        *  out_of_range is thrown.
4194:/usr/include/c++/5/bits/basic_string.h ****       */
4195:/usr/include/c++/5/bits/basic_string.h ****       size_type
4196:/usr/include/c++/5/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
4197:/usr/include/c++/5/bits/basic_string.h **** 
4198:/usr/include/c++/5/bits/basic_string.h ****       /**
4199:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Swap contents with another string.
4200:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String to swap with.
4201:/usr/include/c++/5/bits/basic_string.h ****        *
4202:/usr/include/c++/5/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
4203:/usr/include/c++/5/bits/basic_string.h ****        *  time.
4204:/usr/include/c++/5/bits/basic_string.h ****       */
4205:/usr/include/c++/5/bits/basic_string.h ****       // PR 58265, this should be noexcept.
4206:/usr/include/c++/5/bits/basic_string.h ****       void
4207:/usr/include/c++/5/bits/basic_string.h ****       swap(basic_string& __s);
4208:/usr/include/c++/5/bits/basic_string.h **** 
4209:/usr/include/c++/5/bits/basic_string.h ****       // String operations:
4210:/usr/include/c++/5/bits/basic_string.h ****       /**
4211:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
4212:/usr/include/c++/5/bits/basic_string.h ****        *
4213:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4214:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
4215:/usr/include/c++/5/bits/basic_string.h ****       */
4216:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
4217:/usr/include/c++/5/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
4218:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
4219:/usr/include/c++/5/bits/basic_string.h **** 
4220:/usr/include/c++/5/bits/basic_string.h ****       /**
4221:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
4222:/usr/include/c++/5/bits/basic_string.h ****        *
4223:/usr/include/c++/5/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
4224:/usr/include/c++/5/bits/basic_string.h ****        *  happen.
4225:/usr/include/c++/5/bits/basic_string.h ****       */
4226:/usr/include/c++/5/bits/basic_string.h ****       const _CharT*
4227:/usr/include/c++/5/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
4228:/usr/include/c++/5/bits/basic_string.h ****       { return _M_data(); }
4229:/usr/include/c++/5/bits/basic_string.h **** 
4230:/usr/include/c++/5/bits/basic_string.h ****       /**
4231:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
4232:/usr/include/c++/5/bits/basic_string.h ****       */
GAS LISTING /tmp/ccbg3Dll.s 			page 210


4233:/usr/include/c++/5/bits/basic_string.h ****       allocator_type
4234:/usr/include/c++/5/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
4235:/usr/include/c++/5/bits/basic_string.h ****       { return _M_dataplus; }
4236:/usr/include/c++/5/bits/basic_string.h **** 
4237:/usr/include/c++/5/bits/basic_string.h ****       /**
4238:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C substring.
4239:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4240:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4241:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
4242:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4243:/usr/include/c++/5/bits/basic_string.h ****        *
4244:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
4245:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4246:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
4247:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4248:/usr/include/c++/5/bits/basic_string.h ****       */
4249:/usr/include/c++/5/bits/basic_string.h ****       size_type
4250:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
4251:/usr/include/c++/5/bits/basic_string.h **** 
4252:/usr/include/c++/5/bits/basic_string.h ****       /**
4253:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a string.
4254:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
4255:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4256:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4257:/usr/include/c++/5/bits/basic_string.h ****        *
4258:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
4259:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
4260:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns npos.
4261:/usr/include/c++/5/bits/basic_string.h ****       */
4262:/usr/include/c++/5/bits/basic_string.h ****       size_type
4263:/usr/include/c++/5/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
4264:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4265:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
4266:/usr/include/c++/5/bits/basic_string.h **** 
4267:/usr/include/c++/5/bits/basic_string.h ****       /**
4268:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a C string.
4269:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4270:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4271:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
4272:/usr/include/c++/5/bits/basic_string.h ****        *
4273:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
4274:/usr/include/c++/5/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
4275:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
4276:/usr/include/c++/5/bits/basic_string.h ****       */
4277:/usr/include/c++/5/bits/basic_string.h ****       size_type
4278:/usr/include/c++/5/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
4279:/usr/include/c++/5/bits/basic_string.h ****       {
4280:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4281:/usr/include/c++/5/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
4282:/usr/include/c++/5/bits/basic_string.h ****       }
4283:/usr/include/c++/5/bits/basic_string.h **** 
4284:/usr/include/c++/5/bits/basic_string.h ****       /**
4285:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
4286:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4287:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4288:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4289:/usr/include/c++/5/bits/basic_string.h ****        *
GAS LISTING /tmp/ccbg3Dll.s 			page 211


4290:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
4291:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4292:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4293:/usr/include/c++/5/bits/basic_string.h ****       */
4294:/usr/include/c++/5/bits/basic_string.h ****       size_type
4295:/usr/include/c++/5/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
4296:/usr/include/c++/5/bits/basic_string.h **** 
4297:/usr/include/c++/5/bits/basic_string.h ****       /**
4298:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a string.
4299:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to locate.
4300:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4301:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
4302:/usr/include/c++/5/bits/basic_string.h ****        *
4303:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
4304:/usr/include/c++/5/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
4305:/usr/include/c++/5/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
4306:/usr/include/c++/5/bits/basic_string.h ****       */
4307:/usr/include/c++/5/bits/basic_string.h ****       size_type
4308:/usr/include/c++/5/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
4309:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4310:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
4311:/usr/include/c++/5/bits/basic_string.h **** 
4312:/usr/include/c++/5/bits/basic_string.h ****       /**
4313:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
4314:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4315:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4316:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4317:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
4318:/usr/include/c++/5/bits/basic_string.h ****        *
4319:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
4320:/usr/include/c++/5/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
4321:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
4322:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4323:/usr/include/c++/5/bits/basic_string.h ****       */
4324:/usr/include/c++/5/bits/basic_string.h ****       size_type
4325:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
4326:/usr/include/c++/5/bits/basic_string.h **** 
4327:/usr/include/c++/5/bits/basic_string.h ****       /**
4328:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a C string.
4329:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to locate.
4330:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
4331:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
4332:/usr/include/c++/5/bits/basic_string.h ****        *
4333:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
4334:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
4335:/usr/include/c++/5/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
4336:/usr/include/c++/5/bits/basic_string.h ****       */
4337:/usr/include/c++/5/bits/basic_string.h ****       size_type
4338:/usr/include/c++/5/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
4339:/usr/include/c++/5/bits/basic_string.h ****       {
4340:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4341:/usr/include/c++/5/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
4342:/usr/include/c++/5/bits/basic_string.h ****       }
4343:/usr/include/c++/5/bits/basic_string.h **** 
4344:/usr/include/c++/5/bits/basic_string.h ****       /**
4345:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
4346:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
GAS LISTING /tmp/ccbg3Dll.s 			page 212


4347:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4348:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4349:/usr/include/c++/5/bits/basic_string.h ****        *
4350:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4351:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4352:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4353:/usr/include/c++/5/bits/basic_string.h ****       */
4354:/usr/include/c++/5/bits/basic_string.h ****       size_type
4355:/usr/include/c++/5/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
4356:/usr/include/c++/5/bits/basic_string.h **** 
4357:/usr/include/c++/5/bits/basic_string.h ****       /**
4358:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of string.
4359:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
4360:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4361:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4362:/usr/include/c++/5/bits/basic_string.h ****        *
4363:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4364:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
4365:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4366:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4367:/usr/include/c++/5/bits/basic_string.h ****       */
4368:/usr/include/c++/5/bits/basic_string.h ****       size_type
4369:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
4370:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4371:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
4372:/usr/include/c++/5/bits/basic_string.h **** 
4373:/usr/include/c++/5/bits/basic_string.h ****       /**
4374:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
4375:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
4376:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4377:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4378:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4379:/usr/include/c++/5/bits/basic_string.h ****        *
4380:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4381:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4382:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
4383:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4384:/usr/include/c++/5/bits/basic_string.h ****       */
4385:/usr/include/c++/5/bits/basic_string.h ****       size_type
4386:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
4387:/usr/include/c++/5/bits/basic_string.h **** 
4388:/usr/include/c++/5/bits/basic_string.h ****       /**
4389:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
4390:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
4391:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4392:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4393:/usr/include/c++/5/bits/basic_string.h ****        *
4394:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
4395:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4396:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4397:/usr/include/c++/5/bits/basic_string.h ****       */
4398:/usr/include/c++/5/bits/basic_string.h ****       size_type
4399:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
4400:/usr/include/c++/5/bits/basic_string.h ****       {
4401:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4402:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
4403:/usr/include/c++/5/bits/basic_string.h ****       }
GAS LISTING /tmp/ccbg3Dll.s 			page 213


4404:/usr/include/c++/5/bits/basic_string.h **** 
4405:/usr/include/c++/5/bits/basic_string.h ****       /**
4406:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character.
4407:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4408:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4409:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4410:/usr/include/c++/5/bits/basic_string.h ****        *
4411:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
4412:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
4413:/usr/include/c++/5/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
4414:/usr/include/c++/5/bits/basic_string.h ****        *
4415:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
4416:/usr/include/c++/5/bits/basic_string.h ****       */
4417:/usr/include/c++/5/bits/basic_string.h ****       size_type
4418:/usr/include/c++/5/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
4419:/usr/include/c++/5/bits/basic_string.h ****       { return this->find(__c, __pos); }
4420:/usr/include/c++/5/bits/basic_string.h **** 
4421:/usr/include/c++/5/bits/basic_string.h ****       /**
4422:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
4423:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
4424:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4425:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4426:/usr/include/c++/5/bits/basic_string.h ****        *
4427:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4428:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
4429:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4430:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4431:/usr/include/c++/5/bits/basic_string.h ****       */
4432:/usr/include/c++/5/bits/basic_string.h ****       size_type
4433:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
4434:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4435:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
4436:/usr/include/c++/5/bits/basic_string.h **** 
4437:/usr/include/c++/5/bits/basic_string.h ****       /**
4438:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
4439:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
4440:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4441:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
4442:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4443:/usr/include/c++/5/bits/basic_string.h ****        *
4444:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4445:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
4446:/usr/include/c++/5/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
4447:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4448:/usr/include/c++/5/bits/basic_string.h ****       */
4449:/usr/include/c++/5/bits/basic_string.h ****       size_type
4450:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
4451:/usr/include/c++/5/bits/basic_string.h **** 
4452:/usr/include/c++/5/bits/basic_string.h ****       /**
4453:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
4454:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
4455:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4456:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4457:/usr/include/c++/5/bits/basic_string.h ****        *
4458:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
4459:/usr/include/c++/5/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
4460:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
GAS LISTING /tmp/ccbg3Dll.s 			page 214


4461:/usr/include/c++/5/bits/basic_string.h ****       */
4462:/usr/include/c++/5/bits/basic_string.h ****       size_type
4463:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
4464:/usr/include/c++/5/bits/basic_string.h ****       {
4465:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4466:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
4467:/usr/include/c++/5/bits/basic_string.h ****       }
4468:/usr/include/c++/5/bits/basic_string.h **** 
4469:/usr/include/c++/5/bits/basic_string.h ****       /**
4470:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character.
4471:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to locate.
4472:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4473:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4474:/usr/include/c++/5/bits/basic_string.h ****        *
4475:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
4476:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4477:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4478:/usr/include/c++/5/bits/basic_string.h ****        *
4479:/usr/include/c++/5/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
4480:/usr/include/c++/5/bits/basic_string.h ****       */
4481:/usr/include/c++/5/bits/basic_string.h ****       size_type
4482:/usr/include/c++/5/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
4483:/usr/include/c++/5/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
4484:/usr/include/c++/5/bits/basic_string.h **** 
4485:/usr/include/c++/5/bits/basic_string.h ****       /**
4486:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
4487:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
4488:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4489:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4490:/usr/include/c++/5/bits/basic_string.h ****        *
4491:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
4492:/usr/include/c++/5/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
4493:/usr/include/c++/5/bits/basic_string.h ****        *  was found.  If not found, returns npos.
4494:/usr/include/c++/5/bits/basic_string.h ****       */
4495:/usr/include/c++/5/bits/basic_string.h ****       size_type
4496:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
4497:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4498:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
4499:/usr/include/c++/5/bits/basic_string.h **** 
4500:/usr/include/c++/5/bits/basic_string.h ****       /**
4501:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
4502:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4503:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
4504:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
4505:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4506:/usr/include/c++/5/bits/basic_string.h ****        *
4507:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4508:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
4509:/usr/include/c++/5/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
4510:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4511:/usr/include/c++/5/bits/basic_string.h ****       */
4512:/usr/include/c++/5/bits/basic_string.h ****       size_type
4513:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
4514:/usr/include/c++/5/bits/basic_string.h **** 			size_type __n) const;
4515:/usr/include/c++/5/bits/basic_string.h **** 
4516:/usr/include/c++/5/bits/basic_string.h ****       /**
4517:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
GAS LISTING /tmp/ccbg3Dll.s 			page 215


4518:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4519:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4520:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4521:/usr/include/c++/5/bits/basic_string.h ****        *
4522:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
4523:/usr/include/c++/5/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
4524:/usr/include/c++/5/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
4525:/usr/include/c++/5/bits/basic_string.h ****       */
4526:/usr/include/c++/5/bits/basic_string.h ****       size_type
4527:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
4528:/usr/include/c++/5/bits/basic_string.h ****       {
4529:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4530:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
4531:/usr/include/c++/5/bits/basic_string.h ****       }
4532:/usr/include/c++/5/bits/basic_string.h **** 
4533:/usr/include/c++/5/bits/basic_string.h ****       /**
4534:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find position of a different character.
4535:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
4536:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
4537:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of first occurrence.
4538:/usr/include/c++/5/bits/basic_string.h ****        *
4539:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
4540:/usr/include/c++/5/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
4541:/usr/include/c++/5/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
4542:/usr/include/c++/5/bits/basic_string.h ****       */
4543:/usr/include/c++/5/bits/basic_string.h ****       size_type
4544:/usr/include/c++/5/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
4545:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4546:/usr/include/c++/5/bits/basic_string.h **** 
4547:/usr/include/c++/5/bits/basic_string.h ****       /**
4548:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
4549:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
4550:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4551:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4552:/usr/include/c++/5/bits/basic_string.h ****        *
4553:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4554:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
4555:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4556:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4557:/usr/include/c++/5/bits/basic_string.h ****       */
4558:/usr/include/c++/5/bits/basic_string.h ****       size_type
4559:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
4560:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
4561:/usr/include/c++/5/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
4562:/usr/include/c++/5/bits/basic_string.h **** 
4563:/usr/include/c++/5/bits/basic_string.h ****       /**
4564:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
4565:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4566:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
4567:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
4568:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4569:/usr/include/c++/5/bits/basic_string.h ****        *
4570:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
4571:/usr/include/c++/5/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
4572:/usr/include/c++/5/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
4573:/usr/include/c++/5/bits/basic_string.h ****        *  returns npos.
4574:/usr/include/c++/5/bits/basic_string.h ****       */
GAS LISTING /tmp/ccbg3Dll.s 			page 216


4575:/usr/include/c++/5/bits/basic_string.h ****       size_type
4576:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
4577:/usr/include/c++/5/bits/basic_string.h **** 		       size_type __n) const;
4578:/usr/include/c++/5/bits/basic_string.h ****       /**
4579:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
4580:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
4581:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4582:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4583:/usr/include/c++/5/bits/basic_string.h ****        *
4584:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
4585:/usr/include/c++/5/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
4586:/usr/include/c++/5/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
4587:/usr/include/c++/5/bits/basic_string.h ****        *  npos.
4588:/usr/include/c++/5/bits/basic_string.h ****       */
4589:/usr/include/c++/5/bits/basic_string.h ****       size_type
4590:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
4591:/usr/include/c++/5/bits/basic_string.h ****       {
4592:/usr/include/c++/5/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4593:/usr/include/c++/5/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
4594:/usr/include/c++/5/bits/basic_string.h ****       }
4595:/usr/include/c++/5/bits/basic_string.h **** 
4596:/usr/include/c++/5/bits/basic_string.h ****       /**
4597:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Find last position of a different character.
4598:/usr/include/c++/5/bits/basic_string.h ****        *  @param __c  Character to avoid.
4599:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
4600:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Index of last occurrence.
4601:/usr/include/c++/5/bits/basic_string.h ****        *
4602:/usr/include/c++/5/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
4603:/usr/include/c++/5/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
4604:/usr/include/c++/5/bits/basic_string.h ****        *  found.  If not found, returns npos.
4605:/usr/include/c++/5/bits/basic_string.h ****       */
4606:/usr/include/c++/5/bits/basic_string.h ****       size_type
4607:/usr/include/c++/5/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
4608:/usr/include/c++/5/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
4609:/usr/include/c++/5/bits/basic_string.h **** 
4610:/usr/include/c++/5/bits/basic_string.h ****       /**
4611:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Get a substring.
4612:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
4613:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
4614:/usr/include/c++/5/bits/basic_string.h ****        *  @return  The new string.
4615:/usr/include/c++/5/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
4616:/usr/include/c++/5/bits/basic_string.h ****        *
4617:/usr/include/c++/5/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
4618:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
4619:/usr/include/c++/5/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
4620:/usr/include/c++/5/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
4621:/usr/include/c++/5/bits/basic_string.h ****       */
4622:/usr/include/c++/5/bits/basic_string.h ****       basic_string
4623:/usr/include/c++/5/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
4624:/usr/include/c++/5/bits/basic_string.h ****       { return basic_string(*this,
4625:/usr/include/c++/5/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
4626:/usr/include/c++/5/bits/basic_string.h **** 
4627:/usr/include/c++/5/bits/basic_string.h ****       /**
4628:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a string.
4629:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4630:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4631:/usr/include/c++/5/bits/basic_string.h ****        *
GAS LISTING /tmp/ccbg3Dll.s 			page 217


4632:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
4633:/usr/include/c++/5/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
4634:/usr/include/c++/5/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
4635:/usr/include/c++/5/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
4636:/usr/include/c++/5/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
4637:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
4638:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4639:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
4640:/usr/include/c++/5/bits/basic_string.h ****       */
4641:/usr/include/c++/5/bits/basic_string.h ****       int
4642:/usr/include/c++/5/bits/basic_string.h ****       compare(const basic_string& __str) const
4643:/usr/include/c++/5/bits/basic_string.h ****       {
4644:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __size = this->size();
4645:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __osize = __str.size();
4646:/usr/include/c++/5/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
4647:/usr/include/c++/5/bits/basic_string.h **** 
4648:/usr/include/c++/5/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
4649:/usr/include/c++/5/bits/basic_string.h **** 	if (!__r)
4650:/usr/include/c++/5/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
4651:/usr/include/c++/5/bits/basic_string.h **** 	return __r;
4652:/usr/include/c++/5/bits/basic_string.h ****       }
4653:/usr/include/c++/5/bits/basic_string.h **** 
4654:/usr/include/c++/5/bits/basic_string.h ****       /**
4655:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a string.
4656:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4657:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
4658:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4659:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4660:/usr/include/c++/5/bits/basic_string.h ****        *
4661:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
4662:/usr/include/c++/5/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
4663:/usr/include/c++/5/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
4664:/usr/include/c++/5/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
4665:/usr/include/c++/5/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
4666:/usr/include/c++/5/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
4667:/usr/include/c++/5/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
4668:/usr/include/c++/5/bits/basic_string.h ****        *  strings by calling
4669:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
4670:/usr/include/c++/5/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
4671:/usr/include/c++/5/bits/basic_string.h ****        *  the shorter one is ordered first.
4672:/usr/include/c++/5/bits/basic_string.h ****       */
4673:/usr/include/c++/5/bits/basic_string.h ****       int
4674:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
4675:/usr/include/c++/5/bits/basic_string.h **** 
4676:/usr/include/c++/5/bits/basic_string.h ****       /**
4677:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
4678:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
4679:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4680:/usr/include/c++/5/bits/basic_string.h ****        *  @param __str  String to compare against.
4681:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
4682:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
4683:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4684:/usr/include/c++/5/bits/basic_string.h ****        *
4685:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4686:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
4687:/usr/include/c++/5/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
4688:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
GAS LISTING /tmp/ccbg3Dll.s 			page 218


4689:/usr/include/c++/5/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
4690:/usr/include/c++/5/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
4691:/usr/include/c++/5/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
4692:/usr/include/c++/5/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
4693:/usr/include/c++/5/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
4694:/usr/include/c++/5/bits/basic_string.h ****        *  calling
4695:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
4696:/usr/include/c++/5/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
4697:/usr/include/c++/5/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
4698:/usr/include/c++/5/bits/basic_string.h ****       */
4699:/usr/include/c++/5/bits/basic_string.h ****       int
4700:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
4701:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
4702:/usr/include/c++/5/bits/basic_string.h **** 
4703:/usr/include/c++/5/bits/basic_string.h ****       /**
4704:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare to a C string.
4705:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
4706:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4707:/usr/include/c++/5/bits/basic_string.h ****        *
4708:/usr/include/c++/5/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
4709:/usr/include/c++/5/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
4710:/usr/include/c++/5/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
4711:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
4712:/usr/include/c++/5/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
4713:/usr/include/c++/5/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
4714:/usr/include/c++/5/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
4715:/usr/include/c++/5/bits/basic_string.h ****        *  ordered first.
4716:/usr/include/c++/5/bits/basic_string.h ****       */
4717:/usr/include/c++/5/bits/basic_string.h ****       int
4718:/usr/include/c++/5/bits/basic_string.h ****       compare(const _CharT* __s) const;
4719:/usr/include/c++/5/bits/basic_string.h **** 
4720:/usr/include/c++/5/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4721:/usr/include/c++/5/bits/basic_string.h ****       // 5 String::compare specification questionable
4722:/usr/include/c++/5/bits/basic_string.h ****       /**
4723:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
4724:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4725:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4726:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  C string to compare against.
4727:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4728:/usr/include/c++/5/bits/basic_string.h ****        *
4729:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4730:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
4731:/usr/include/c++/5/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
4732:/usr/include/c++/5/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
4733:/usr/include/c++/5/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
4734:/usr/include/c++/5/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
4735:/usr/include/c++/5/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
4736:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two string by calling
4737:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
4738:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4739:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
4740:/usr/include/c++/5/bits/basic_string.h ****       */
4741:/usr/include/c++/5/bits/basic_string.h ****       int
4742:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
4743:/usr/include/c++/5/bits/basic_string.h **** 
4744:/usr/include/c++/5/bits/basic_string.h ****       /**
4745:/usr/include/c++/5/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
GAS LISTING /tmp/ccbg3Dll.s 			page 219


4746:/usr/include/c++/5/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
4747:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
4748:/usr/include/c++/5/bits/basic_string.h ****        *  @param __s  character %array to compare against.
4749:/usr/include/c++/5/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
4750:/usr/include/c++/5/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
4751:/usr/include/c++/5/bits/basic_string.h ****        *
4752:/usr/include/c++/5/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
4753:/usr/include/c++/5/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
4754:/usr/include/c++/5/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
4755:/usr/include/c++/5/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
4756:/usr/include/c++/5/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
4757:/usr/include/c++/5/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
4758:/usr/include/c++/5/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
4759:/usr/include/c++/5/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
4760:/usr/include/c++/5/bits/basic_string.h ****        *  function then compares the two strings by calling
4761:/usr/include/c++/5/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
4762:/usr/include/c++/5/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
4763:/usr/include/c++/5/bits/basic_string.h ****        *  one is ordered first.
4764:/usr/include/c++/5/bits/basic_string.h ****        *
4765:/usr/include/c++/5/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
4766:/usr/include/c++/5/bits/basic_string.h ****        *  no special meaning.
4767:/usr/include/c++/5/bits/basic_string.h ****       */
4768:/usr/include/c++/5/bits/basic_string.h ****       int
4769:/usr/include/c++/5/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
4770:/usr/include/c++/5/bits/basic_string.h **** 	      size_type __n2) const;
4771:/usr/include/c++/5/bits/basic_string.h ****   };
4772:/usr/include/c++/5/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
4773:/usr/include/c++/5/bits/basic_string.h **** 
4774:/usr/include/c++/5/bits/basic_string.h ****   // operator+
4775:/usr/include/c++/5/bits/basic_string.h ****   /**
4776:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate two strings.
4777:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4778:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4779:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4780:/usr/include/c++/5/bits/basic_string.h ****    */
4781:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4782:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
4783:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4784:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4785:/usr/include/c++/5/bits/basic_string.h ****     {
4786:/usr/include/c++/5/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
4787:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__rhs);
4788:/usr/include/c++/5/bits/basic_string.h ****       return __str;
4789:/usr/include/c++/5/bits/basic_string.h ****     }
4790:/usr/include/c++/5/bits/basic_string.h **** 
4791:/usr/include/c++/5/bits/basic_string.h ****   /**
4792:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
4793:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4794:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4795:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
4796:/usr/include/c++/5/bits/basic_string.h ****    */
4797:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4798:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4799:/usr/include/c++/5/bits/basic_string.h ****     operator+(const _CharT* __lhs,
4800:/usr/include/c++/5/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4801:/usr/include/c++/5/bits/basic_string.h **** 
4802:/usr/include/c++/5/bits/basic_string.h ****   /**
GAS LISTING /tmp/ccbg3Dll.s 			page 220


4803:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate character and string.
4804:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4805:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4806:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4807:/usr/include/c++/5/bits/basic_string.h ****    */
4808:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4809:/usr/include/c++/5/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
4810:/usr/include/c++/5/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
4811:/usr/include/c++/5/bits/basic_string.h **** 
4812:/usr/include/c++/5/bits/basic_string.h ****   /**
4813:/usr/include/c++/5/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
4814:/usr/include/c++/5/bits/basic_string.h ****    *  @param __lhs  First string.
4815:/usr/include/c++/5/bits/basic_string.h ****    *  @param __rhs  Last string.
4816:/usr/include/c++/5/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
4817:/usr/include/c++/5/bits/basic_string.h ****    */
4818:/usr/include/c++/5/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4819:/usr/include/c++/5/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
4820:/usr/include/c++/5/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 4162              		.loc 8 4820 0
 4163              		.cfi_startproc
 4164              		.cfi_personality 0x3,__gxx_personality_v0
 4165              		.cfi_lsda 0x3,.LLSDA6918
 4166 0000 55       		pushq	%rbp
 4167              		.cfi_def_cfa_offset 16
 4168              		.cfi_offset 6, -16
 4169 0001 4889E5   		movq	%rsp, %rbp
 4170              		.cfi_def_cfa_register 6
 4171 0004 53       		pushq	%rbx
 4172 0005 4883EC38 		subq	$56, %rsp
 4173              		.cfi_offset 3, -24
 4174 0009 48897DD8 		movq	%rdi, -40(%rbp)
 4175 000d 488975D0 		movq	%rsi, -48(%rbp)
 4176 0011 488955C8 		movq	%rdx, -56(%rbp)
 4177              		.loc 8 4820 0
 4178 0015 64488B04 		movq	%fs:40, %rax
 4178      25280000 
 4178      00
 4179 001e 488945E8 		movq	%rax, -24(%rbp)
 4180 0022 31C0     		xorl	%eax, %eax
4821:/usr/include/c++/5/bits/basic_string.h **** 	      const _CharT* __rhs)
4822:/usr/include/c++/5/bits/basic_string.h ****     {
4823:/usr/include/c++/5/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
 4181              		.loc 8 4823 0
 4182 0024 488B55D0 		movq	-48(%rbp), %rdx
 4183 0028 488B45D8 		movq	-40(%rbp), %rax
 4184 002c 4889D6   		movq	%rdx, %rsi
 4185 002f 4889C7   		movq	%rax, %rdi
 4186              	.LEHB25:
 4187 0032 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
 4187      00
 4188              	.LEHE25:
4824:/usr/include/c++/5/bits/basic_string.h ****       __str.append(__rhs);
 4189              		.loc 8 4824 0
 4190 0037 488B55C8 		movq	-56(%rbp), %rdx
 4191 003b 488B45D8 		movq	-40(%rbp), %rax
 4192 003f 4889D6   		movq	%rdx, %rsi
 4193 0042 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccbg3Dll.s 			page 221


 4194              	.LEHB26:
 4195 0045 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc
 4195      00
 4196              	.LEHE26:
4825:/usr/include/c++/5/bits/basic_string.h ****       return __str;
 4197              		.loc 8 4825 0
 4198 004a EB1A     		jmp	.L205
 4199              	.L204:
 4200 004c 4889C3   		movq	%rax, %rbx
 4201 004f 488B45D8 		movq	-40(%rbp), %rax
 4202 0053 4889C7   		movq	%rax, %rdi
 4203 0056 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
 4203      00
 4204 005b 4889D8   		movq	%rbx, %rax
 4205 005e 4889C7   		movq	%rax, %rdi
 4206              	.LEHB27:
 4207 0061 E8000000 		call	_Unwind_Resume
 4207      00
 4208              	.LEHE27:
 4209              	.L205:
4826:/usr/include/c++/5/bits/basic_string.h ****     }
 4210              		.loc 8 4826 0
 4211 0066 488B45D8 		movq	-40(%rbp), %rax
 4212 006a 488B4DE8 		movq	-24(%rbp), %rcx
 4213 006e 6448330C 		xorq	%fs:40, %rcx
 4213      25280000 
 4213      00
 4214 0077 7405     		je	.L203
 4215 0079 E8000000 		call	__stack_chk_fail
 4215      00
 4216              	.L203:
 4217 007e 4883C438 		addq	$56, %rsp
 4218 0082 5B       		popq	%rbx
 4219 0083 5D       		popq	%rbp
 4220              		.cfi_def_cfa 7, 8
 4221 0084 C3       		ret
 4222              		.cfi_endproc
 4223              	.LFE6918:
 4224              		.section	.gcc_except_table
 4225              	.LLSDA6918:
 4226 0098 FF       		.byte	0xff
 4227 0099 FF       		.byte	0xff
 4228 009a 01       		.byte	0x1
 4229 009b 0C       		.uleb128 .LLSDACSE6918-.LLSDACSB6918
 4230              	.LLSDACSB6918:
 4231 009c 32       		.uleb128 .LEHB25-.LFB6918
 4232 009d 05       		.uleb128 .LEHE25-.LEHB25
 4233 009e 00       		.uleb128 0
 4234 009f 00       		.uleb128 0
 4235 00a0 45       		.uleb128 .LEHB26-.LFB6918
 4236 00a1 05       		.uleb128 .LEHE26-.LEHB26
 4237 00a2 4C       		.uleb128 .L204-.LFB6918
 4238 00a3 00       		.uleb128 0
 4239 00a4 61       		.uleb128 .LEHB27-.LFB6918
 4240 00a5 05       		.uleb128 .LEHE27-.LEHB27
 4241 00a6 00       		.uleb128 0
 4242 00a7 00       		.uleb128 0
GAS LISTING /tmp/ccbg3Dll.s 			page 222


 4243              	.LLSDACSE6918:
 4244              		.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_,"axG
 4246              		.section	.text._ZSt6fill_nIPdidET_S1_T0_RKT1_,"axG",@progbits,_ZSt6fill_nIPdidET_S1_T0_RKT1_,comda
 4247              		.weak	_ZSt6fill_nIPdidET_S1_T0_RKT1_
 4249              	_ZSt6fill_nIPdidET_S1_T0_RKT1_:
 4250              	.LFB6945:
 4251              		.file 9 "/usr/include/c++/5/bits/stl_algobase.h"
   1:/usr/include/c++/5/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_algobase.h **** 
   3:/usr/include/c++/5/bits/stl_algobase.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_algobase.h **** //
   5:/usr/include/c++/5/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_algobase.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_algobase.h **** 
  11:/usr/include/c++/5/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_algobase.h **** 
  16:/usr/include/c++/5/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_algobase.h **** 
  20:/usr/include/c++/5/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_algobase.h **** 
  25:/usr/include/c++/5/bits/stl_algobase.h **** /*
  26:/usr/include/c++/5/bits/stl_algobase.h ****  *
  27:/usr/include/c++/5/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_algobase.h ****  *
  30:/usr/include/c++/5/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_algobase.h ****  *
  38:/usr/include/c++/5/bits/stl_algobase.h ****  *
  39:/usr/include/c++/5/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_algobase.h ****  *
  42:/usr/include/c++/5/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/usr/include/c++/5/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_algobase.h ****  */
  50:/usr/include/c++/5/bits/stl_algobase.h **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 223


  51:/usr/include/c++/5/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/usr/include/c++/5/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/usr/include/c++/5/bits/stl_algobase.h ****  */
  55:/usr/include/c++/5/bits/stl_algobase.h **** 
  56:/usr/include/c++/5/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/usr/include/c++/5/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/usr/include/c++/5/bits/stl_algobase.h **** 
  59:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/usr/include/c++/5/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/usr/include/c++/5/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/usr/include/c++/5/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  71:/usr/include/c++/5/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/usr/include/c++/5/bits/stl_algobase.h **** 
  73:/usr/include/c++/5/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  74:/usr/include/c++/5/bits/stl_algobase.h **** {
  75:/usr/include/c++/5/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  76:/usr/include/c++/5/bits/stl_algobase.h **** 
  77:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus < 201103L
  78:/usr/include/c++/5/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  79:/usr/include/c++/5/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  80:/usr/include/c++/5/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  81:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _BoolType>
  82:/usr/include/c++/5/bits/stl_algobase.h ****     struct __iter_swap
  83:/usr/include/c++/5/bits/stl_algobase.h ****     {
  84:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  85:/usr/include/c++/5/bits/stl_algobase.h ****         static void
  86:/usr/include/c++/5/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  87:/usr/include/c++/5/bits/stl_algobase.h ****         {
  88:/usr/include/c++/5/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  89:/usr/include/c++/5/bits/stl_algobase.h ****             _ValueType1;
  90:/usr/include/c++/5/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  91:/usr/include/c++/5/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  92:/usr/include/c++/5/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  93:/usr/include/c++/5/bits/stl_algobase.h **** 	}
  94:/usr/include/c++/5/bits/stl_algobase.h ****     };
  95:/usr/include/c++/5/bits/stl_algobase.h **** 
  96:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
  97:/usr/include/c++/5/bits/stl_algobase.h ****     struct __iter_swap<true>
  98:/usr/include/c++/5/bits/stl_algobase.h ****     {
  99:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 100:/usr/include/c++/5/bits/stl_algobase.h ****         static void 
 101:/usr/include/c++/5/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 102:/usr/include/c++/5/bits/stl_algobase.h ****         {
 103:/usr/include/c++/5/bits/stl_algobase.h ****           swap(*__a, *__b);
 104:/usr/include/c++/5/bits/stl_algobase.h ****         }
 105:/usr/include/c++/5/bits/stl_algobase.h ****     };
 106:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 107:/usr/include/c++/5/bits/stl_algobase.h **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 224


 108:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 109:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 110:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 111:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 112:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 113:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   Nothing.
 114:/usr/include/c++/5/bits/stl_algobase.h ****    *
 115:/usr/include/c++/5/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 116:/usr/include/c++/5/bits/stl_algobase.h ****    *  iterators themselves.
 117:/usr/include/c++/5/bits/stl_algobase.h ****   */
 118:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 119:/usr/include/c++/5/bits/stl_algobase.h ****     inline void
 120:/usr/include/c++/5/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 121:/usr/include/c++/5/bits/stl_algobase.h ****     {
 122:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 123:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 124:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 125:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 126:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 127:/usr/include/c++/5/bits/stl_algobase.h **** 
 128:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus < 201103L
 129:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 130:/usr/include/c++/5/bits/stl_algobase.h **** 	_ValueType1;
 131:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 132:/usr/include/c++/5/bits/stl_algobase.h **** 	_ValueType2;
 133:/usr/include/c++/5/bits/stl_algobase.h **** 
 134:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 135:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ValueType2>)
 136:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 137:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ValueType1>)
 138:/usr/include/c++/5/bits/stl_algobase.h **** 
 139:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 140:/usr/include/c++/5/bits/stl_algobase.h **** 	_ReferenceType1;
 141:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 142:/usr/include/c++/5/bits/stl_algobase.h **** 	_ReferenceType2;
 143:/usr/include/c++/5/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 144:/usr/include/c++/5/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 145:/usr/include/c++/5/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 146:/usr/include/c++/5/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 147:/usr/include/c++/5/bits/stl_algobase.h **** #else
 148:/usr/include/c++/5/bits/stl_algobase.h ****       swap(*__a, *__b);
 149:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 150:/usr/include/c++/5/bits/stl_algobase.h ****     }
 151:/usr/include/c++/5/bits/stl_algobase.h **** 
 152:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 153:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 154:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 155:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 156:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 157:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 158:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 159:/usr/include/c++/5/bits/stl_algobase.h ****    *
 160:/usr/include/c++/5/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 161:/usr/include/c++/5/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 162:/usr/include/c++/5/bits/stl_algobase.h ****    *  The ranges must not overlap.
 163:/usr/include/c++/5/bits/stl_algobase.h ****   */
 164:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
GAS LISTING /tmp/ccbg3Dll.s 			page 225


 165:/usr/include/c++/5/bits/stl_algobase.h ****     _ForwardIterator2
 166:/usr/include/c++/5/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 167:/usr/include/c++/5/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 168:/usr/include/c++/5/bits/stl_algobase.h ****     {
 169:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 170:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 171:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 172:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 173:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 174:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 175:/usr/include/c++/5/bits/stl_algobase.h **** 
 176:/usr/include/c++/5/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 177:/usr/include/c++/5/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 178:/usr/include/c++/5/bits/stl_algobase.h ****       return __first2;
 179:/usr/include/c++/5/bits/stl_algobase.h ****     }
 180:/usr/include/c++/5/bits/stl_algobase.h **** 
 181:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 182:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 183:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 184:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 185:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 186:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 187:/usr/include/c++/5/bits/stl_algobase.h ****    *
 188:/usr/include/c++/5/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 189:/usr/include/c++/5/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 190:/usr/include/c++/5/bits/stl_algobase.h ****    *  preprocessor macro.
 191:/usr/include/c++/5/bits/stl_algobase.h ****   */
 192:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 193:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 194:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 195:/usr/include/c++/5/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 196:/usr/include/c++/5/bits/stl_algobase.h ****     {
 197:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 198:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 199:/usr/include/c++/5/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 200:/usr/include/c++/5/bits/stl_algobase.h ****       if (__b < __a)
 201:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 202:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 203:/usr/include/c++/5/bits/stl_algobase.h ****     }
 204:/usr/include/c++/5/bits/stl_algobase.h **** 
 205:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 206:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 207:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 208:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 209:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 210:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 211:/usr/include/c++/5/bits/stl_algobase.h ****    *
 212:/usr/include/c++/5/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 213:/usr/include/c++/5/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 214:/usr/include/c++/5/bits/stl_algobase.h ****    *  preprocessor macro.
 215:/usr/include/c++/5/bits/stl_algobase.h ****   */
 216:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 217:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 218:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 219:/usr/include/c++/5/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 220:/usr/include/c++/5/bits/stl_algobase.h ****     {
 221:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
GAS LISTING /tmp/ccbg3Dll.s 			page 226


 222:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 223:/usr/include/c++/5/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 224:/usr/include/c++/5/bits/stl_algobase.h ****       if (__a < __b)
 225:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 226:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 227:/usr/include/c++/5/bits/stl_algobase.h ****     }
 228:/usr/include/c++/5/bits/stl_algobase.h **** 
 229:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 230:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 231:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 232:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 233:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 234:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 235:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 236:/usr/include/c++/5/bits/stl_algobase.h ****    *
 237:/usr/include/c++/5/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 238:/usr/include/c++/5/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 239:/usr/include/c++/5/bits/stl_algobase.h ****   */
 240:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 241:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 242:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 243:/usr/include/c++/5/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 244:/usr/include/c++/5/bits/stl_algobase.h ****     {
 245:/usr/include/c++/5/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 246:/usr/include/c++/5/bits/stl_algobase.h ****       if (__comp(__b, __a))
 247:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 248:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 249:/usr/include/c++/5/bits/stl_algobase.h ****     }
 250:/usr/include/c++/5/bits/stl_algobase.h **** 
 251:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 252:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 253:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 254:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 255:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 256:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 257:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 258:/usr/include/c++/5/bits/stl_algobase.h ****    *
 259:/usr/include/c++/5/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 260:/usr/include/c++/5/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 261:/usr/include/c++/5/bits/stl_algobase.h ****   */
 262:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 263:/usr/include/c++/5/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 264:/usr/include/c++/5/bits/stl_algobase.h ****     inline const _Tp&
 265:/usr/include/c++/5/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 266:/usr/include/c++/5/bits/stl_algobase.h ****     {
 267:/usr/include/c++/5/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 268:/usr/include/c++/5/bits/stl_algobase.h ****       if (__comp(__a, __b))
 269:/usr/include/c++/5/bits/stl_algobase.h **** 	return __b;
 270:/usr/include/c++/5/bits/stl_algobase.h ****       return __a;
 271:/usr/include/c++/5/bits/stl_algobase.h ****     }
 272:/usr/include/c++/5/bits/stl_algobase.h **** 
 273:/usr/include/c++/5/bits/stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 274:/usr/include/c++/5/bits/stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 275:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/usr/include/c++/5/bits/stl_algobase.h ****     struct _Niter_base
 277:/usr/include/c++/5/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 278:/usr/include/c++/5/bits/stl_algobase.h ****     { };
GAS LISTING /tmp/ccbg3Dll.s 			page 227


 279:/usr/include/c++/5/bits/stl_algobase.h **** 
 280:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 281:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 282:/usr/include/c++/5/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 283:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 284:/usr/include/c++/5/bits/stl_algobase.h **** 
 285:/usr/include/c++/5/bits/stl_algobase.h ****   // Likewise, for move_iterator.
 286:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 287:/usr/include/c++/5/bits/stl_algobase.h ****     struct _Miter_base
 288:/usr/include/c++/5/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 289:/usr/include/c++/5/bits/stl_algobase.h ****     { };
 290:/usr/include/c++/5/bits/stl_algobase.h **** 
 291:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Iterator>
 292:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 293:/usr/include/c++/5/bits/stl_algobase.h ****     __miter_base(_Iterator __it)
 294:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 295:/usr/include/c++/5/bits/stl_algobase.h **** 
 296:/usr/include/c++/5/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 297:/usr/include/c++/5/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 298:/usr/include/c++/5/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 299:/usr/include/c++/5/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 300:/usr/include/c++/5/bits/stl_algobase.h ****   // a for loop with an explicit count.
 301:/usr/include/c++/5/bits/stl_algobase.h **** 
 302:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool, bool, typename>
 303:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move
 304:/usr/include/c++/5/bits/stl_algobase.h ****     {
 305:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 306:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 307:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 308:/usr/include/c++/5/bits/stl_algobase.h ****         {
 309:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 310:/usr/include/c++/5/bits/stl_algobase.h **** 	    *__result = *__first;
 311:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 312:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 313:/usr/include/c++/5/bits/stl_algobase.h ****     };
 314:/usr/include/c++/5/bits/stl_algobase.h **** 
 315:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 316:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Category>
 317:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 318:/usr/include/c++/5/bits/stl_algobase.h ****     {
 319:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 320:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 321:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 322:/usr/include/c++/5/bits/stl_algobase.h ****         {
 323:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 324:/usr/include/c++/5/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 325:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 326:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 327:/usr/include/c++/5/bits/stl_algobase.h ****     };
 328:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 329:/usr/include/c++/5/bits/stl_algobase.h **** 
 330:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 331:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 332:/usr/include/c++/5/bits/stl_algobase.h ****     {
 333:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 334:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 335:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
GAS LISTING /tmp/ccbg3Dll.s 			page 228


 336:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 337:/usr/include/c++/5/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 338:/usr/include/c++/5/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 339:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 340:/usr/include/c++/5/bits/stl_algobase.h **** 	      *__result = *__first;
 341:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 342:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 343:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 344:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 345:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 346:/usr/include/c++/5/bits/stl_algobase.h ****     };
 347:/usr/include/c++/5/bits/stl_algobase.h **** 
 348:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 349:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 350:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 351:/usr/include/c++/5/bits/stl_algobase.h ****     {
 352:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 353:/usr/include/c++/5/bits/stl_algobase.h ****         static _OI
 354:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 355:/usr/include/c++/5/bits/stl_algobase.h ****         { 
 356:/usr/include/c++/5/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 357:/usr/include/c++/5/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 358:/usr/include/c++/5/bits/stl_algobase.h **** 	    {
 359:/usr/include/c++/5/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 360:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__first;
 361:/usr/include/c++/5/bits/stl_algobase.h **** 	      ++__result;
 362:/usr/include/c++/5/bits/stl_algobase.h **** 	    }
 363:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 364:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 365:/usr/include/c++/5/bits/stl_algobase.h ****     };
 366:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 367:/usr/include/c++/5/bits/stl_algobase.h **** 
 368:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove>
 369:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 370:/usr/include/c++/5/bits/stl_algobase.h ****     {
 371:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _Tp>
 372:/usr/include/c++/5/bits/stl_algobase.h ****         static _Tp*
 373:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 374:/usr/include/c++/5/bits/stl_algobase.h ****         {
 375:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 376:/usr/include/c++/5/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 377:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 378:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 379:/usr/include/c++/5/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 380:/usr/include/c++/5/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 381:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 382:/usr/include/c++/5/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 383:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 384:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 385:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result + _Num;
 386:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 387:/usr/include/c++/5/bits/stl_algobase.h ****     };
 388:/usr/include/c++/5/bits/stl_algobase.h **** 
 389:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 390:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 391:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 392:/usr/include/c++/5/bits/stl_algobase.h ****     {
GAS LISTING /tmp/ccbg3Dll.s 			page 229


 393:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 394:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 395:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 396:/usr/include/c++/5/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 397:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 398:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 399:/usr/include/c++/5/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 400:/usr/include/c++/5/bits/stl_algobase.h **** 
 401:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 402:/usr/include/c++/5/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 403:/usr/include/c++/5/bits/stl_algobase.h ****     }
 404:/usr/include/c++/5/bits/stl_algobase.h **** 
 405:/usr/include/c++/5/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 406:/usr/include/c++/5/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 407:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT>
 408:/usr/include/c++/5/bits/stl_algobase.h ****     struct char_traits;
 409:/usr/include/c++/5/bits/stl_algobase.h **** 
 410:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 411:/usr/include/c++/5/bits/stl_algobase.h ****     class istreambuf_iterator;
 412:/usr/include/c++/5/bits/stl_algobase.h **** 
 413:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 414:/usr/include/c++/5/bits/stl_algobase.h ****     class ostreambuf_iterator;
 415:/usr/include/c++/5/bits/stl_algobase.h **** 
 416:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 417:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 418:/usr/include/c++/5/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 419:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 420:/usr/include/c++/5/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 421:/usr/include/c++/5/bits/stl_algobase.h **** 
 422:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 423:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 424:/usr/include/c++/5/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 425:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 426:/usr/include/c++/5/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 427:/usr/include/c++/5/bits/stl_algobase.h **** 
 428:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 429:/usr/include/c++/5/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 430:/usr/include/c++/5/bits/stl_algobase.h **** 				    _CharT*>::__type
 431:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 432:/usr/include/c++/5/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 433:/usr/include/c++/5/bits/stl_algobase.h **** 
 434:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 435:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 436:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 437:/usr/include/c++/5/bits/stl_algobase.h ****     {
 438:/usr/include/c++/5/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 439:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 440:/usr/include/c++/5/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 441:/usr/include/c++/5/bits/stl_algobase.h ****     }
 442:/usr/include/c++/5/bits/stl_algobase.h **** 
 443:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 444:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 445:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 446:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 447:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 448:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 449:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result + (first - last)
GAS LISTING /tmp/ccbg3Dll.s 			page 230


 450:/usr/include/c++/5/bits/stl_algobase.h ****    *
 451:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 452:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 453:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 454:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 455:/usr/include/c++/5/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 456:/usr/include/c++/5/bits/stl_algobase.h ****    *
 457:/usr/include/c++/5/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 458:/usr/include/c++/5/bits/stl_algobase.h ****    *  within [first,last).
 459:/usr/include/c++/5/bits/stl_algobase.h ****   */
 460:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 461:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 462:/usr/include/c++/5/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 463:/usr/include/c++/5/bits/stl_algobase.h ****     {
 464:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 465:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 466:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 467:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 468:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 469:/usr/include/c++/5/bits/stl_algobase.h **** 
 470:/usr/include/c++/5/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 471:/usr/include/c++/5/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 472:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 473:/usr/include/c++/5/bits/stl_algobase.h ****     }
 474:/usr/include/c++/5/bits/stl_algobase.h **** 
 475:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 476:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 477:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 478:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 479:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 480:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 481:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 482:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result + (first - last)
 483:/usr/include/c++/5/bits/stl_algobase.h ****    *
 484:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 485:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 486:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 487:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 488:/usr/include/c++/5/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 489:/usr/include/c++/5/bits/stl_algobase.h ****    *
 490:/usr/include/c++/5/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 491:/usr/include/c++/5/bits/stl_algobase.h ****    *  within [first,last).
 492:/usr/include/c++/5/bits/stl_algobase.h ****   */
 493:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 494:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 495:/usr/include/c++/5/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 496:/usr/include/c++/5/bits/stl_algobase.h ****     {
 497:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 498:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 499:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 500:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 501:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 502:/usr/include/c++/5/bits/stl_algobase.h **** 
 503:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 504:/usr/include/c++/5/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 505:/usr/include/c++/5/bits/stl_algobase.h ****     }
 506:/usr/include/c++/5/bits/stl_algobase.h **** 
GAS LISTING /tmp/ccbg3Dll.s 			page 231


 507:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 508:/usr/include/c++/5/bits/stl_algobase.h **** #else
 509:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 510:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 511:/usr/include/c++/5/bits/stl_algobase.h **** 
 512:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool, bool, typename>
 513:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward
 514:/usr/include/c++/5/bits/stl_algobase.h ****     {
 515:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 516:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 517:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 518:/usr/include/c++/5/bits/stl_algobase.h ****         {
 519:/usr/include/c++/5/bits/stl_algobase.h **** 	  while (__first != __last)
 520:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 521:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 522:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 523:/usr/include/c++/5/bits/stl_algobase.h ****     };
 524:/usr/include/c++/5/bits/stl_algobase.h **** 
 525:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 526:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Category>
 527:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 528:/usr/include/c++/5/bits/stl_algobase.h ****     {
 529:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 530:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 531:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 532:/usr/include/c++/5/bits/stl_algobase.h ****         {
 533:/usr/include/c++/5/bits/stl_algobase.h **** 	  while (__first != __last)
 534:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 535:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 536:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 537:/usr/include/c++/5/bits/stl_algobase.h ****     };
 538:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 539:/usr/include/c++/5/bits/stl_algobase.h **** 
 540:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 541:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 542:/usr/include/c++/5/bits/stl_algobase.h ****     {
 543:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 544:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 545:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 546:/usr/include/c++/5/bits/stl_algobase.h ****         {
 547:/usr/include/c++/5/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 548:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 549:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = *--__last;
 550:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 551:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 552:/usr/include/c++/5/bits/stl_algobase.h ****     };
 553:/usr/include/c++/5/bits/stl_algobase.h **** 
 554:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 555:/usr/include/c++/5/bits/stl_algobase.h ****   template<>
 556:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 557:/usr/include/c++/5/bits/stl_algobase.h ****     {
 558:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 559:/usr/include/c++/5/bits/stl_algobase.h ****         static _BI2
 560:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 561:/usr/include/c++/5/bits/stl_algobase.h ****         {
 562:/usr/include/c++/5/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 563:/usr/include/c++/5/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
GAS LISTING /tmp/ccbg3Dll.s 			page 232


 564:/usr/include/c++/5/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 565:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result;
 566:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 567:/usr/include/c++/5/bits/stl_algobase.h ****     };
 568:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 569:/usr/include/c++/5/bits/stl_algobase.h **** 
 570:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove>
 571:/usr/include/c++/5/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 572:/usr/include/c++/5/bits/stl_algobase.h ****     {
 573:/usr/include/c++/5/bits/stl_algobase.h ****       template<typename _Tp>
 574:/usr/include/c++/5/bits/stl_algobase.h ****         static _Tp*
 575:/usr/include/c++/5/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 576:/usr/include/c++/5/bits/stl_algobase.h ****         {
 577:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 578:/usr/include/c++/5/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 579:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 580:/usr/include/c++/5/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 581:/usr/include/c++/5/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 582:/usr/include/c++/5/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 583:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 584:/usr/include/c++/5/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 585:/usr/include/c++/5/bits/stl_algobase.h **** 	  if (_Num)
 586:/usr/include/c++/5/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 587:/usr/include/c++/5/bits/stl_algobase.h **** 	  return __result - _Num;
 588:/usr/include/c++/5/bits/stl_algobase.h **** 	}
 589:/usr/include/c++/5/bits/stl_algobase.h ****     };
 590:/usr/include/c++/5/bits/stl_algobase.h **** 
 591:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 592:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 593:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 594:/usr/include/c++/5/bits/stl_algobase.h ****     {
 595:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 596:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 597:/usr/include/c++/5/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 598:/usr/include/c++/5/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 599:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 600:/usr/include/c++/5/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 601:/usr/include/c++/5/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 602:/usr/include/c++/5/bits/stl_algobase.h **** 
 603:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 604:/usr/include/c++/5/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
 605:/usr/include/c++/5/bits/stl_algobase.h **** 								 __last,
 606:/usr/include/c++/5/bits/stl_algobase.h **** 								 __result);
 607:/usr/include/c++/5/bits/stl_algobase.h ****     }
 608:/usr/include/c++/5/bits/stl_algobase.h **** 
 609:/usr/include/c++/5/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 610:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 611:/usr/include/c++/5/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 612:/usr/include/c++/5/bits/stl_algobase.h ****     {
 613:/usr/include/c++/5/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 614:/usr/include/c++/5/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 615:/usr/include/c++/5/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 616:/usr/include/c++/5/bits/stl_algobase.h ****     }
 617:/usr/include/c++/5/bits/stl_algobase.h **** 
 618:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 619:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 620:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
GAS LISTING /tmp/ccbg3Dll.s 			page 233


 621:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 622:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 623:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 624:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result - (first - last)
 625:/usr/include/c++/5/bits/stl_algobase.h ****    *
 626:/usr/include/c++/5/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 627:/usr/include/c++/5/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 628:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 629:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 630:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 631:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 632:/usr/include/c++/5/bits/stl_algobase.h ****    *
 633:/usr/include/c++/5/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 634:/usr/include/c++/5/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 635:/usr/include/c++/5/bits/stl_algobase.h ****   */
 636:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 637:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 638:/usr/include/c++/5/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 639:/usr/include/c++/5/bits/stl_algobase.h ****     {
 640:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 641:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 642:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 643:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 644:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 645:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 646:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 647:/usr/include/c++/5/bits/stl_algobase.h **** 
 648:/usr/include/c++/5/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 649:/usr/include/c++/5/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 650:/usr/include/c++/5/bits/stl_algobase.h **** 	       __result));
 651:/usr/include/c++/5/bits/stl_algobase.h ****     }
 652:/usr/include/c++/5/bits/stl_algobase.h **** 
 653:/usr/include/c++/5/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 654:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 655:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 656:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 657:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 658:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 659:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 660:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   result - (first - last)
 661:/usr/include/c++/5/bits/stl_algobase.h ****    *
 662:/usr/include/c++/5/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 663:/usr/include/c++/5/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 664:/usr/include/c++/5/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 665:/usr/include/c++/5/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 666:/usr/include/c++/5/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 667:/usr/include/c++/5/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 668:/usr/include/c++/5/bits/stl_algobase.h ****    *
 669:/usr/include/c++/5/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 670:/usr/include/c++/5/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 671:/usr/include/c++/5/bits/stl_algobase.h ****   */
 672:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 673:/usr/include/c++/5/bits/stl_algobase.h ****     inline _BI2
 674:/usr/include/c++/5/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 675:/usr/include/c++/5/bits/stl_algobase.h ****     {
 676:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 677:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
GAS LISTING /tmp/ccbg3Dll.s 			page 234


 678:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 679:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 680:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 681:/usr/include/c++/5/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 682:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 683:/usr/include/c++/5/bits/stl_algobase.h **** 
 684:/usr/include/c++/5/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 685:/usr/include/c++/5/bits/stl_algobase.h **** 						std::__miter_base(__last),
 686:/usr/include/c++/5/bits/stl_algobase.h **** 						__result);
 687:/usr/include/c++/5/bits/stl_algobase.h ****     }
 688:/usr/include/c++/5/bits/stl_algobase.h **** 
 689:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 690:/usr/include/c++/5/bits/stl_algobase.h **** #else
 691:/usr/include/c++/5/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 692:/usr/include/c++/5/bits/stl_algobase.h **** #endif
 693:/usr/include/c++/5/bits/stl_algobase.h **** 
 694:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 695:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 696:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 697:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 698:/usr/include/c++/5/bits/stl_algobase.h ****  	     const _Tp& __value)
 699:/usr/include/c++/5/bits/stl_algobase.h ****     {
 700:/usr/include/c++/5/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 701:/usr/include/c++/5/bits/stl_algobase.h **** 	*__first = __value;
 702:/usr/include/c++/5/bits/stl_algobase.h ****     }
 703:/usr/include/c++/5/bits/stl_algobase.h ****     
 704:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 705:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 706:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 707:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 708:/usr/include/c++/5/bits/stl_algobase.h **** 	     const _Tp& __value)
 709:/usr/include/c++/5/bits/stl_algobase.h ****     {
 710:/usr/include/c++/5/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 711:/usr/include/c++/5/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 712:/usr/include/c++/5/bits/stl_algobase.h **** 	*__first = __tmp;
 713:/usr/include/c++/5/bits/stl_algobase.h ****     }
 714:/usr/include/c++/5/bits/stl_algobase.h **** 
 715:/usr/include/c++/5/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 716:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Tp>
 717:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 718:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 719:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 720:/usr/include/c++/5/bits/stl_algobase.h ****     {
 721:/usr/include/c++/5/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 722:/usr/include/c++/5/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 723:/usr/include/c++/5/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 724:/usr/include/c++/5/bits/stl_algobase.h ****     }
 725:/usr/include/c++/5/bits/stl_algobase.h **** 
 726:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 727:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 728:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 729:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 730:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 731:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 732:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   Nothing.
 733:/usr/include/c++/5/bits/stl_algobase.h ****    *
 734:/usr/include/c++/5/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
GAS LISTING /tmp/ccbg3Dll.s 			page 235


 735:/usr/include/c++/5/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 736:/usr/include/c++/5/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 737:/usr/include/c++/5/bits/stl_algobase.h ****   */
 738:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 739:/usr/include/c++/5/bits/stl_algobase.h ****     inline void
 740:/usr/include/c++/5/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 741:/usr/include/c++/5/bits/stl_algobase.h ****     {
 742:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 743:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 744:/usr/include/c++/5/bits/stl_algobase.h **** 				  _ForwardIterator>)
 745:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 746:/usr/include/c++/5/bits/stl_algobase.h **** 
 747:/usr/include/c++/5/bits/stl_algobase.h ****       std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
 748:/usr/include/c++/5/bits/stl_algobase.h **** 		    __value);
 749:/usr/include/c++/5/bits/stl_algobase.h ****     }
 750:/usr/include/c++/5/bits/stl_algobase.h **** 
 751:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 752:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 753:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
 754:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 755:/usr/include/c++/5/bits/stl_algobase.h ****     {
 756:/usr/include/c++/5/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 757:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 758:/usr/include/c++/5/bits/stl_algobase.h **** 	*__first = __value;
 759:/usr/include/c++/5/bits/stl_algobase.h ****       return __first;
 760:/usr/include/c++/5/bits/stl_algobase.h ****     }
 761:/usr/include/c++/5/bits/stl_algobase.h **** 
 762:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _OutputIterator, typename _Size, typename _Tp>
 763:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 764:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
 765:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
 766:/usr/include/c++/5/bits/stl_algobase.h ****     {
 767:/usr/include/c++/5/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 768:/usr/include/c++/5/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 769:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 770:/usr/include/c++/5/bits/stl_algobase.h **** 	*__first = __tmp;
 771:/usr/include/c++/5/bits/stl_algobase.h ****       return __first;
 772:/usr/include/c++/5/bits/stl_algobase.h ****     }
 773:/usr/include/c++/5/bits/stl_algobase.h **** 
 774:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _Size, typename _Tp>
 775:/usr/include/c++/5/bits/stl_algobase.h ****     inline typename
 776:/usr/include/c++/5/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
 777:/usr/include/c++/5/bits/stl_algobase.h ****     __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
 778:/usr/include/c++/5/bits/stl_algobase.h ****     {
 779:/usr/include/c++/5/bits/stl_algobase.h ****       std::__fill_a(__first, __first + __n, __c);
 780:/usr/include/c++/5/bits/stl_algobase.h ****       return __first + __n;
 781:/usr/include/c++/5/bits/stl_algobase.h ****     }
 782:/usr/include/c++/5/bits/stl_algobase.h **** 
 783:/usr/include/c++/5/bits/stl_algobase.h ****   /**
 784:/usr/include/c++/5/bits/stl_algobase.h ****    *  @brief Fills the range [first,first+n) with copies of value.
 785:/usr/include/c++/5/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 786:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __first  An output iterator.
 787:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __n      The count of copies to perform.
 788:/usr/include/c++/5/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 789:/usr/include/c++/5/bits/stl_algobase.h ****    *  @return   The iterator at first+n.
 790:/usr/include/c++/5/bits/stl_algobase.h ****    *
 791:/usr/include/c++/5/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
GAS LISTING /tmp/ccbg3Dll.s 			page 236


 792:/usr/include/c++/5/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 793:/usr/include/c++/5/bits/stl_algobase.h ****    *  to @c memset or @ wmemset.
 794:/usr/include/c++/5/bits/stl_algobase.h ****    *
 795:/usr/include/c++/5/bits/stl_algobase.h ****    *  _GLIBCXX_RESOLVE_LIB_DEFECTS
 796:/usr/include/c++/5/bits/stl_algobase.h ****    *  DR 865. More algorithms that throw away information
 797:/usr/include/c++/5/bits/stl_algobase.h ****   */
 798:/usr/include/c++/5/bits/stl_algobase.h ****   template<typename _OI, typename _Size, typename _Tp>
 799:/usr/include/c++/5/bits/stl_algobase.h ****     inline _OI
 800:/usr/include/c++/5/bits/stl_algobase.h ****     fill_n(_OI __first, _Size __n, const _Tp& __value)
 4252              		.loc 9 800 0
 4253              		.cfi_startproc
 4254 0000 55       		pushq	%rbp
 4255              		.cfi_def_cfa_offset 16
 4256              		.cfi_offset 6, -16
 4257 0001 4889E5   		movq	%rsp, %rbp
 4258              		.cfi_def_cfa_register 6
 4259 0004 4883EC20 		subq	$32, %rsp
 4260 0008 48897DF8 		movq	%rdi, -8(%rbp)
 4261 000c 8975F4   		movl	%esi, -12(%rbp)
 4262 000f 488955E8 		movq	%rdx, -24(%rbp)
 801:/usr/include/c++/5/bits/stl_algobase.h ****     {
 802:/usr/include/c++/5/bits/stl_algobase.h ****       // concept requirements
 803:/usr/include/c++/5/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI, _Tp>)
 804:/usr/include/c++/5/bits/stl_algobase.h **** 
 805:/usr/include/c++/5/bits/stl_algobase.h ****       return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
 4263              		.loc 9 805 0
 4264 0013 488B45F8 		movq	-8(%rbp), %rax
 4265 0017 4889C7   		movq	%rax, %rdi
 4266 001a E8000000 		call	_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_
 4266      00
 4267 001f 4889C1   		movq	%rax, %rcx
 4268 0022 488B55E8 		movq	-24(%rbp), %rdx
 4269 0026 8B45F4   		movl	-12(%rbp), %eax
 4270 0029 89C6     		movl	%eax, %esi
 4271 002b 4889CF   		movq	%rcx, %rdi
 4272 002e E8000000 		call	_ZSt10__fill_n_aIPdidEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_
 4272      00
 806:/usr/include/c++/5/bits/stl_algobase.h ****     }
 4273              		.loc 9 806 0
 4274 0033 C9       		leave
 4275              		.cfi_def_cfa 7, 8
 4276 0034 C3       		ret
 4277              		.cfi_endproc
 4278              	.LFE6945:
 4280              		.section	.text._ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_,"axG",@progbits,_ZSt1
 4281              		.weak	_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_
 4283              	_ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_:
 4284              	.LFB7030:
 282:/usr/include/c++/5/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 4285              		.loc 9 282 0
 4286              		.cfi_startproc
 4287 0000 55       		pushq	%rbp
 4288              		.cfi_def_cfa_offset 16
 4289              		.cfi_offset 6, -16
 4290 0001 4889E5   		movq	%rsp, %rbp
 4291              		.cfi_def_cfa_register 6
 4292 0004 4883EC10 		subq	$16, %rsp
GAS LISTING /tmp/ccbg3Dll.s 			page 237


 4293 0008 48897DF8 		movq	%rdi, -8(%rbp)
 283:/usr/include/c++/5/bits/stl_algobase.h **** 
 4294              		.loc 9 283 0
 4295 000c 488B45F8 		movq	-8(%rbp), %rax
 4296 0010 4889C7   		movq	%rax, %rdi
 4297 0013 E8000000 		call	_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_
 4297      00
 4298 0018 C9       		leave
 4299              		.cfi_def_cfa 7, 8
 4300 0019 C3       		ret
 4301              		.cfi_endproc
 4302              	.LFE7030:
 4304              		.section	.text._ZSt10__fill_n_aIPdidEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6
 4305              		.weak	_ZSt10__fill_n_aIPdidEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6
 4307              	_ZSt10__fill_n_aIPdidEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS
 4308              	.LFB7031:
 765:/usr/include/c++/5/bits/stl_algobase.h ****     {
 4309              		.loc 9 765 0
 4310              		.cfi_startproc
 4311 0000 55       		pushq	%rbp
 4312              		.cfi_def_cfa_offset 16
 4313              		.cfi_offset 6, -16
 4314 0001 4889E5   		movq	%rsp, %rbp
 4315              		.cfi_def_cfa_register 6
 4316 0004 48897DE8 		movq	%rdi, -24(%rbp)
 4317 0008 8975E4   		movl	%esi, -28(%rbp)
 4318 000b 488955D8 		movq	%rdx, -40(%rbp)
 767:/usr/include/c++/5/bits/stl_algobase.h ****       for (__decltype(__n + 0) __niter = __n;
 4319              		.loc 9 767 0
 4320 000f 488B45D8 		movq	-40(%rbp), %rax
 4321 0013 F20F1000 		movsd	(%rax), %xmm0
 4322 0017 F20F1145 		movsd	%xmm0, -8(%rbp)
 4322      F8
 4323              	.LBB28:
 768:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 4324              		.loc 9 768 0
 4325 001c 8B45E4   		movl	-28(%rbp), %eax
 4326 001f 8945F4   		movl	%eax, -12(%rbp)
 4327              	.L212:
 768:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 4328              		.loc 9 768 0 is_stmt 0 discriminator 3
 4329 0022 837DF400 		cmpl	$0, -12(%rbp)
 4330 0026 7E18     		jle	.L211
 770:/usr/include/c++/5/bits/stl_algobase.h ****       return __first;
 4331              		.loc 9 770 0 is_stmt 1 discriminator 2
 4332 0028 488B45E8 		movq	-24(%rbp), %rax
 4333 002c F20F1045 		movsd	-8(%rbp), %xmm0
 4333      F8
 4334 0031 F20F1100 		movsd	%xmm0, (%rax)
 768:/usr/include/c++/5/bits/stl_algobase.h **** 	   __niter > 0; --__niter, ++__first)
 4335              		.loc 9 768 0 discriminator 2
 4336 0035 836DF401 		subl	$1, -12(%rbp)
 4337 0039 488345E8 		addq	$8, -24(%rbp)
 4337      08
 4338 003e EBE2     		jmp	.L212
 4339              	.L211:
 4340              	.LBE28:
GAS LISTING /tmp/ccbg3Dll.s 			page 238


 771:/usr/include/c++/5/bits/stl_algobase.h ****     }
 4341              		.loc 9 771 0
 4342 0040 488B45E8 		movq	-24(%rbp), %rax
 772:/usr/include/c++/5/bits/stl_algobase.h **** 
 4343              		.loc 9 772 0
 4344 0044 5D       		popq	%rbp
 4345              		.cfi_def_cfa 7, 8
 4346 0045 C3       		ret
 4347              		.cfi_endproc
 4348              	.LFE7031:
 4350              		.section	.text._ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_,"axG",@progbits,_ZNSt10_Iter_baseIPdLb0EE7_S_
 4351              		.weak	_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_
 4353              	_ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_:
 4354              	.LFB7086:
 4355              		.file 10 "/usr/include/c++/5/bits/stl_iterator_base_types.h"
   1:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Types used in iterator implementation -*- C++ -*-
   2:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
   3:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Copyright (C) 2001-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/bits/stl_iterator_base_types.h **** //
   5:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // any later version.
  10:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  11:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // GNU General Public License for more details.
  15:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  16:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  20:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/bits/stl_iterator_base_types.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  25:/usr/include/c++/5/bits/stl_iterator_base_types.h **** /*
  26:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  27:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Copyright (c) 1994
  28:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Hewlett-Packard Company
  29:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  30:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  33:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  34:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  36:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  38:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  39:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Copyright (c) 1996-1998
  40:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  42:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * Permission to use, copy, modify, distribute and sell this software
GAS LISTING /tmp/ccbg3Dll.s 			page 239


  43:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * provided that the above copyright notice appear in all copies and
  45:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * that both that copyright notice and this permission notice appear
  46:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * representations about the suitability of this software for any
  48:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  */
  50:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  51:/usr/include/c++/5/bits/stl_iterator_base_types.h **** /** @file bits/stl_iterator_base_types.h
  52:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  This is an internal header file, included by other library headers.
  53:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *
  55:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  This file contains all of the general iterator-related utility types,
  56:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  *  such as iterator_traits and struct iterator.
  57:/usr/include/c++/5/bits/stl_iterator_base_types.h ****  */
  58:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  59:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #ifndef _STL_ITERATOR_BASE_TYPES_H
  60:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #define _STL_ITERATOR_BASE_TYPES_H 1
  61:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  62:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #pragma GCC system_header
  63:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  64:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #include <bits/c++config.h>
  65:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  66:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
  67:/usr/include/c++/5/bits/stl_iterator_base_types.h **** # include <type_traits>  // For __void_t, is_convertible
  68:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #endif
  69:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  70:/usr/include/c++/5/bits/stl_iterator_base_types.h **** namespace std _GLIBCXX_VISIBILITY(default)
  71:/usr/include/c++/5/bits/stl_iterator_base_types.h **** {
  72:/usr/include/c++/5/bits/stl_iterator_base_types.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  73:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  74:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
  75:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @defgroup iterators Iterators
  76:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  Abstractions for uniform iterating through various underlying types.
  77:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
  78:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@{ 
  79:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  80:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
  81:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @defgroup iterator_tags Iterator Tags
  82:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  These are empty types, used to distinguish different iterators.  The
  83:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  distinction is not made by what they contain, but simply by what they
  84:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  are.  Different underlying algorithms can then be used based on the
  85:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  different operations supported by different iterator types.
  86:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
  87:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@{ 
  88:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   ///  Marking input iterators.
  89:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct input_iterator_tag { };
  90:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  91:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   ///  Marking output iterators.
  92:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct output_iterator_tag { };
  93:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  94:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Forward iterators support a superset of input iterator operations.
  95:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct forward_iterator_tag : public input_iterator_tag { };
  96:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
  97:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Bidirectional iterators support a superset of forward iterator
  98:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// operations.
  99:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct bidirectional_iterator_tag : public forward_iterator_tag { };
GAS LISTING /tmp/ccbg3Dll.s 			page 240


 100:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 101:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Random-access iterators support a superset of bidirectional
 102:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// iterator operations.
 103:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   struct random_access_iterator_tag : public bidirectional_iterator_tag { };
 104:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@}
 105:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 106:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 107:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @brief  Common %iterator class.
 108:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 109:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  %Iterator classes
 110:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  can inherit from this class to save some work.  The typedefs are then
 111:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  used in specializations and overloading.
 112:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 113:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  In particular, there are no default implementations of requirements
 114:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  such as @c operator++ and the like.  (How could there be?)
 115:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 116:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
 117:/usr/include/c++/5/bits/stl_iterator_base_types.h ****            typename _Pointer = _Tp*, typename _Reference = _Tp&>
 118:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator
 119:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 120:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// One of the @link iterator_tags tag types@endlink.
 121:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Category  iterator_category;
 122:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// The type "pointed to" by the iterator.
 123:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp        value_type;
 124:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// Distance between iterators is represented as this type.
 125:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Distance  difference_type;
 126:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// This type represents a pointer-to-value_type.
 127:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Pointer   pointer;
 128:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       /// This type represents a reference-to-value_type.
 129:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Reference reference;
 130:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 131:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 132:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 133:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  @brief  Traits class for iterators.
 134:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *
 135:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This class does nothing but define nested typedefs.  The general
 136:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  version simply @a forwards the nested typedefs from the Iterator
 137:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  argument.  Specialized versions for pointers and pointers-to-const
 138:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  provide tighter, more correct semantics.
 139:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 140:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #if __cplusplus >= 201103L
 141:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 142:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // 2408. SFINAE-friendly common_type/iterator_traits is missing in C++14
 143:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator, typename = __void_t<>>
 144:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct __iterator_traits { };
 145:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 146:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 147:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct __iterator_traits<_Iterator,
 148:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 			     __void_t<typename _Iterator::iterator_category,
 149:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::value_type,
 150:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::difference_type,
 151:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::pointer,
 152:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 				      typename _Iterator::reference>>
 153:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 154:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 155:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 156:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
GAS LISTING /tmp/ccbg3Dll.s 			page 241


 157:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 158:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 159:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 160:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 161:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 162:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits
 163:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     : public __iterator_traits<_Iterator> { };
 164:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #else
 165:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator>
 166:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits
 167:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 168:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::iterator_category iterator_category;
 169:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::value_type        value_type;
 170:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::difference_type   difference_type;
 171:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::pointer           pointer;
 172:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef typename _Iterator::reference         reference;
 173:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 174:/usr/include/c++/5/bits/stl_iterator_base_types.h **** #endif
 175:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 176:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Partial specialization for pointer types.
 177:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 178:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits<_Tp*>
 179:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 180:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 181:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 182:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 183:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp*                        pointer;
 184:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp&                        reference;
 185:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 186:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 187:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /// Partial specialization for const pointer types.
 188:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Tp>
 189:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct iterator_traits<const _Tp*>
 190:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
 191:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef random_access_iterator_tag iterator_category;
 192:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Tp                         value_type;
 193:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef ptrdiff_t                   difference_type;
 194:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef const _Tp*                  pointer;
 195:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef const _Tp&                  reference;
 196:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     };
 197:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 198:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   /**
 199:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  This function is not a part of the C++ standard but is syntactic
 200:/usr/include/c++/5/bits/stl_iterator_base_types.h ****    *  sugar for internal library use only.
 201:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   */
 202:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iter>
 203:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     inline typename iterator_traits<_Iter>::iterator_category
 204:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     __iterator_category(const _Iter&)
 205:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     { return typename iterator_traits<_Iter>::iterator_category(); }
 206:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 207:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   //@}
 208:/usr/include/c++/5/bits/stl_iterator_base_types.h **** 
 209:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // If _Iterator has a base returns it otherwise _Iterator is returned
 210:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   // untouched
 211:/usr/include/c++/5/bits/stl_iterator_base_types.h ****   template<typename _Iterator, bool _HasBase>
 212:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     struct _Iter_base
 213:/usr/include/c++/5/bits/stl_iterator_base_types.h ****     {
GAS LISTING /tmp/ccbg3Dll.s 			page 242


 214:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       typedef _Iterator iterator_type;
 215:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       static iterator_type _S_base(_Iterator __it)
 4356              		.loc 10 215 0
 4357              		.cfi_startproc
 4358 0000 55       		pushq	%rbp
 4359              		.cfi_def_cfa_offset 16
 4360              		.cfi_offset 6, -16
 4361 0001 4889E5   		movq	%rsp, %rbp
 4362              		.cfi_def_cfa_register 6
 4363 0004 48897DF8 		movq	%rdi, -8(%rbp)
 216:/usr/include/c++/5/bits/stl_iterator_base_types.h ****       { return __it; }
 4364              		.loc 10 216 0
 4365 0008 488B45F8 		movq	-8(%rbp), %rax
 4366 000c 5D       		popq	%rbp
 4367              		.cfi_def_cfa 7, 8
 4368 000d C3       		ret
 4369              		.cfi_endproc
 4370              	.LFE7086:
 4372              		.weak	_ZTV8Solution
 4373              		.section	.rodata._ZTV8Solution,"aG",@progbits,_ZTV8Solution,comdat
 4374              		.align 8
 4377              	_ZTV8Solution:
 4378 0000 00000000 		.quad	0
 4378      00000000 
 4379 0008 00000000 		.quad	_ZTI8Solution
 4379      00000000 
 4380 0010 00000000 		.quad	_ZN8SolutionD1Ev
 4380      00000000 
 4381 0018 00000000 		.quad	_ZN8SolutionD0Ev
 4381      00000000 
 4382              		.weak	_ZTV10vector_var
 4383              		.section	.rodata._ZTV10vector_var,"aG",@progbits,_ZTV10vector_var,comdat
 4384              		.align 8
 4387              	_ZTV10vector_var:
 4388 0000 00000000 		.quad	0
 4388      00000000 
 4389 0008 00000000 		.quad	_ZTI10vector_var
 4389      00000000 
 4390 0010 00000000 		.quad	_ZN10vector_varD1Ev
 4390      00000000 
 4391 0018 00000000 		.quad	_ZN10vector_varD0Ev
 4391      00000000 
 4392              		.weak	_ZTI8Solution
 4393              		.section	.rodata._ZTI8Solution,"aG",@progbits,_ZTI8Solution,comdat
 4394              		.align 8
 4397              	_ZTI8Solution:
 4398 0000 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 4398      00000000 
 4399 0008 00000000 		.quad	_ZTS8Solution
 4399      00000000 
 4400              		.weak	_ZTS8Solution
 4401              		.section	.rodata._ZTS8Solution,"aG",@progbits,_ZTS8Solution,comdat
 4402              		.align 8
 4405              	_ZTS8Solution:
 4406 0000 38536F6C 		.string	"8Solution"
 4406      7574696F 
 4406      6E00
GAS LISTING /tmp/ccbg3Dll.s 			page 243


 4407              		.weak	_ZTI10vector_var
 4408              		.section	.rodata._ZTI10vector_var,"aG",@progbits,_ZTI10vector_var,comdat
 4409              		.align 8
 4412              	_ZTI10vector_var:
 4413 0000 00000000 		.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
 4413      00000000 
 4414 0008 00000000 		.quad	_ZTS10vector_var
 4414      00000000 
 4415              		.weak	_ZTS10vector_var
 4416              		.section	.rodata._ZTS10vector_var,"aG",@progbits,_ZTS10vector_var,comdat
 4417              		.align 8
 4420              	_ZTS10vector_var:
 4421 0000 31307665 		.string	"10vector_var"
 4421      63746F72 
 4421      5F766172 
 4421      00
 4422              		.text
 4424              	_Z41__static_initialization_and_destruction_0ii:
 4425              	.LFB7152:
 4426              		.loc 6 387 0
 4427              		.cfi_startproc
 4428 254a 55       		pushq	%rbp
 4429              		.cfi_def_cfa_offset 16
 4430              		.cfi_offset 6, -16
 4431 254b 4889E5   		movq	%rsp, %rbp
 4432              		.cfi_def_cfa_register 6
 4433 254e 4883EC10 		subq	$16, %rsp
 4434 2552 897DFC   		movl	%edi, -4(%rbp)
 4435 2555 8975F8   		movl	%esi, -8(%rbp)
 4436              		.loc 6 387 0
 4437 2558 837DFC01 		cmpl	$1, -4(%rbp)
 4438 255c 7527     		jne	.L218
 4439              		.loc 6 387 0 is_stmt 0 discriminator 1
 4440 255e 817DF8FF 		cmpl	$65535, -8(%rbp)
 4440      FF0000
 4441 2565 751E     		jne	.L218
 4442              		.file 11 "/usr/include/c++/5/iostream"
   1:/usr/include/c++/5/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/5/iostream **** 
   3:/usr/include/c++/5/iostream **** // Copyright (C) 1997-2015 Free Software Foundation, Inc.
   4:/usr/include/c++/5/iostream **** //
   5:/usr/include/c++/5/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/5/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/5/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/5/iostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/5/iostream **** // any later version.
  10:/usr/include/c++/5/iostream **** 
  11:/usr/include/c++/5/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/5/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/5/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/5/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/5/iostream **** 
  16:/usr/include/c++/5/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/5/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/5/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/5/iostream **** 
  20:/usr/include/c++/5/iostream **** // You should have received a copy of the GNU General Public License and
GAS LISTING /tmp/ccbg3Dll.s 			page 244


  21:/usr/include/c++/5/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/5/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/5/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/5/iostream **** 
  25:/usr/include/c++/5/iostream **** /** @file include/iostream
  26:/usr/include/c++/5/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/5/iostream ****  */
  28:/usr/include/c++/5/iostream **** 
  29:/usr/include/c++/5/iostream **** //
  30:/usr/include/c++/5/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/5/iostream **** //
  32:/usr/include/c++/5/iostream **** 
  33:/usr/include/c++/5/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/5/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/5/iostream **** 
  36:/usr/include/c++/5/iostream **** #pragma GCC system_header
  37:/usr/include/c++/5/iostream **** 
  38:/usr/include/c++/5/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/5/iostream **** #include <ostream>
  40:/usr/include/c++/5/iostream **** #include <istream>
  41:/usr/include/c++/5/iostream **** 
  42:/usr/include/c++/5/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/5/iostream **** {
  44:/usr/include/c++/5/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/5/iostream **** 
  46:/usr/include/c++/5/iostream ****   /**
  47:/usr/include/c++/5/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/5/iostream ****    *
  49:/usr/include/c++/5/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/5/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/5/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  52:/usr/include/c++/5/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/5/iostream ****    *
  54:/usr/include/c++/5/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/5/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/5/iostream ****    *  startup and termination. For more information, see the section of the
  57:/usr/include/c++/5/iostream ****    *  manual linked to above.
  58:/usr/include/c++/5/iostream ****   */
  59:/usr/include/c++/5/iostream ****   //@{
  60:/usr/include/c++/5/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/5/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/5/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/5/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/5/iostream **** 
  65:/usr/include/c++/5/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  66:/usr/include/c++/5/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/5/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/5/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/5/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/5/iostream **** #endif
  71:/usr/include/c++/5/iostream ****   //@}
  72:/usr/include/c++/5/iostream **** 
  73:/usr/include/c++/5/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/5/iostream ****   static ios_base::Init __ioinit;
 4443              		.loc 11 74 0 is_stmt 1
 4444 2567 BF000000 		movl	$_ZStL8__ioinit, %edi
 4444      00
GAS LISTING /tmp/ccbg3Dll.s 			page 245


 4445 256c E8000000 		call	_ZNSt8ios_base4InitC1Ev
 4445      00
 4446 2571 BA000000 		movl	$__dso_handle, %edx
 4446      00
 4447 2576 BE000000 		movl	$_ZStL8__ioinit, %esi
 4447      00
 4448 257b BF000000 		movl	$_ZNSt8ios_base4InitD1Ev, %edi
 4448      00
 4449 2580 E8000000 		call	__cxa_atexit
 4449      00
 4450              	.L218:
 4451              		.loc 6 387 0
 4452 2585 90       		nop
 4453 2586 C9       		leave
 4454              		.cfi_def_cfa 7, 8
 4455 2587 C3       		ret
 4456              		.cfi_endproc
 4457              	.LFE7152:
 4460              	_GLOBAL__sub_I__ZN8SolutionC2Ev:
 4461              	.LFB7153:
 4462              		.loc 6 387 0
 4463              		.cfi_startproc
 4464 2588 55       		pushq	%rbp
 4465              		.cfi_def_cfa_offset 16
 4466              		.cfi_offset 6, -16
 4467 2589 4889E5   		movq	%rsp, %rbp
 4468              		.cfi_def_cfa_register 6
 4469              		.loc 6 387 0
 4470 258c BEFFFF00 		movl	$65535, %esi
 4470      00
 4471 2591 BF010000 		movl	$1, %edi
 4471      00
 4472 2596 E8AFFFFF 		call	_Z41__static_initialization_and_destruction_0ii
 4472      FF
 4473 259b 5D       		popq	%rbp
 4474              		.cfi_def_cfa 7, 8
 4475 259c C3       		ret
 4476              		.cfi_endproc
 4477              	.LFE7153:
 4479              		.section	.init_array,"aw"
 4480              		.align 8
 4481 0000 00000000 		.quad	_GLOBAL__sub_I__ZN8SolutionC2Ev
 4481      00000000 
 4482              		.section	.rodata
 4483 001b 00000000 		.align 8
 4483      00
 4484              	.LC0:
 4485 0020 00000000 		.long	0
 4486 0024 0000B03C 		.long	1018167296
 4487              		.align 8
 4488              	.LC6:
 4489 0028 00000000 		.long	0
 4490 002c 00005940 		.long	1079574528
 4491              		.align 16
 4492              	.LC7:
 4493 0030 00000000 		.long	0
 4494 0034 00000080 		.long	-2147483648
GAS LISTING /tmp/ccbg3Dll.s 			page 246


 4495 0038 00000000 		.long	0
 4496 003c 00000000 		.long	0
 4497              		.align 8
 4498              	.LC8:
 4499 0040 00000000 		.long	0
 4500 0044 00000040 		.long	1073741824
 4501              		.align 8
 4502              	.LC9:
 4503 0048 00000000 		.long	0
 4504 004c 0000E03F 		.long	1071644672
 4505              		.align 8
 4506              	.LC10:
 4507 0050 00000000 		.long	0
 4508 0054 00000840 		.long	1074266112
 4509              		.align 8
 4510              	.LC11:
 4511 0058 00000000 		.long	0
 4512 005c 00001040 		.long	1074790400
 4513              		.align 16
 4514              	.LC12:
 4515 0060 FFFFFFFF 		.long	4294967295
 4516 0064 FFFFFF7F 		.long	2147483647
 4517 0068 00000000 		.long	0
 4518 006c 00000000 		.long	0
 4519              		.align 8
 4520              	.LC13:
 4521 0070 00000000 		.long	0
 4522 0074 0000E23F 		.long	1071775744
 4523              		.align 8
 4524              	.LC14:
 4525 0078 00000000 		.long	0
 4526 007c 0000C83F 		.long	1070071808
 4527              		.align 8
 4528              	.LC15:
 4529 0080 00000000 		.long	0
 4530 0084 0000B03F 		.long	1068498944
 4531              		.align 8
 4532              	.LC16:
 4533 0088 00000000 		.long	0
 4534 008c 0000F0BF 		.long	-1074790400
 4535              		.text
 4536              	.Letext0:
 4537              		.file 12 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 4538              		.file 13 "/usr/include/x86_64-linux-gnu/bits/types.h"
 4539              		.file 14 "/usr/include/stdlib.h"
 4540              		.file 15 "/usr/include/x86_64-linux-gnu/sys/types.h"
 4541              		.file 16 "/usr/include/c++/5/bits/stringfwd.h"
 4542              		.file 17 "/usr/include/c++/5/type_traits"
 4543              		.file 18 "/usr/include/c++/5/cwchar"
 4544              		.file 19 "/usr/include/c++/5/bits/char_traits.h"
 4545              		.file 20 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h"
 4546              		.file 21 "/usr/include/c++/5/cstdint"
 4547              		.file 22 "/usr/include/c++/5/bits/exception_ptr.h"
 4548              		.file 23 "/usr/include/c++/5/bits/stl_pair.h"
 4549              		.file 24 "/usr/include/c++/5/new"
 4550              		.file 25 "/usr/include/c++/5/bits/allocator.h"
 4551              		.file 26 "/usr/include/c++/5/clocale"
GAS LISTING /tmp/ccbg3Dll.s 			page 247


 4552              		.file 27 "/usr/include/c++/5/cstdlib"
 4553              		.file 28 "/usr/include/c++/5/cstdio"
 4554              		.file 29 "/usr/include/c++/5/bits/alloc_traits.h"
 4555              		.file 30 "/usr/include/c++/5/initializer_list"
 4556              		.file 31 "/usr/include/c++/5/bits/algorithmfwd.h"
 4557              		.file 32 "/usr/include/c++/5/debug/debug.h"
 4558              		.file 33 "/usr/include/c++/5/bits/uniform_int_dist.h"
 4559              		.file 34 "/usr/include/c++/5/bits/random.h"
 4560              		.file 35 "/usr/include/c++/5/bits/stl_algo.h"
 4561              		.file 36 "/usr/include/c++/5/system_error"
 4562              		.file 37 "/usr/include/c++/5/bits/ios_base.h"
 4563              		.file 38 "/usr/include/c++/5/cwctype"
 4564              		.file 39 "/usr/include/c++/5/iosfwd"
 4565              		.file 40 "/usr/include/c++/5/bits/predefined_ops.h"
 4566              		.file 41 "/usr/include/c++/5/ext/new_allocator.h"
 4567              		.file 42 "/usr/include/c++/5/ext/numeric_traits.h"
 4568              		.file 43 "/usr/include/c++/5/ext/alloc_traits.h"
 4569              		.file 44 "/usr/include/c++/5/bits/stl_iterator.h"
 4570              		.file 45 "/usr/include/c++/5/ext/type_traits.h"
 4571              		.file 46 "/usr/include/stdio.h"
 4572              		.file 47 "/usr/include/libio.h"
 4573              		.file 48 "<built-in>"
 4574              		.file 49 "/usr/include/wchar.h"
 4575              		.file 50 "/usr/include/time.h"
 4576              		.file 51 "/usr/include/stdint.h"
 4577              		.file 52 "/usr/include/locale.h"
 4578              		.file 53 "/usr/include/x86_64-linux-gnu/c++/5/bits/atomic_word.h"
 4579              		.file 54 "/usr/include/_G_config.h"
 4580              		.file 55 "/usr/include/x86_64-linux-gnu/bits/mathdef.h"
 4581              		.file 56 "/usr/include/wctype.h"
GAS LISTING /tmp/ccbg3Dll.s 			page 248


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Solution.cpp
     /tmp/ccbg3Dll.s:7      .rodata:0000000000000000 _ZStL19piecewise_construct
     /tmp/ccbg3Dll.s:13     .text._ZN4Mesh9get_num_yEv:0000000000000000 _ZN4Mesh9get_num_yEv
     /tmp/ccbg3Dll.s:37     .text._ZN4Mesh15get_total_cellsEv:0000000000000000 _ZN4Mesh15get_total_cellsEv
     /tmp/ccbg3Dll.s:60     .text._ZN4Mesh5get_YEv:0000000000000000 _ZN4Mesh5get_YEv
     /tmp/ccbg3Dll.s:83     .text._ZN4Mesh14get_centroid_xEi:0000000000000000 _ZN4Mesh14get_centroid_xEi
     /tmp/ccbg3Dll.s:112    .text._ZN4Mesh14get_centroid_yEi:0000000000000000 _ZN4Mesh14get_centroid_yEi
     /tmp/ccbg3Dll.s:141    .text._ZN4Mesh14get_centroid_zEi:0000000000000000 _ZN4Mesh14get_centroid_zEi
     /tmp/ccbg3Dll.s:170    .text._ZN10vector_varD2Ev:0000000000000000 _ZN10vector_varD2Ev
     /tmp/ccbg3Dll.s:4387   .rodata._ZTV10vector_var:0000000000000000 _ZTV10vector_var
     /tmp/ccbg3Dll.s:170    .text._ZN10vector_varD2Ev:0000000000000000 _ZN10vector_varD1Ev
     /tmp/ccbg3Dll.s:209    .text._ZN10vector_varD0Ev:0000000000000000 _ZN10vector_varD0Ev
     /tmp/ccbg3Dll.s:237    .text._ZN19Boundary_Conditions6get_bcEi:0000000000000000 _ZN19Boundary_Conditions6get_bcEi
     /tmp/ccbg3Dll.s:266    .text._ZN19Boundary_Conditions7get_rhoEi:0000000000000000 _ZN19Boundary_Conditions7get_rhoEi
     /tmp/ccbg3Dll.s:295    .text._ZN19Boundary_Conditions5get_uEi:0000000000000000 _ZN19Boundary_Conditions5get_uEi
     /tmp/ccbg3Dll.s:324    .text._ZN19Boundary_Conditions5get_vEi:0000000000000000 _ZN19Boundary_Conditions5get_vEi
     /tmp/ccbg3Dll.s:353    .text._ZN19Boundary_Conditions12get_rho_typeEi:0000000000000000 _ZN19Boundary_Conditions12get_rho_typeEi
     /tmp/ccbg3Dll.s:382    .text._ZN19Boundary_Conditions12get_vel_typeEi:0000000000000000 _ZN19Boundary_Conditions12get_vel_typeEi
     /tmp/ccbg3Dll.s:411    .text._ZN19Boundary_Conditions17get_periodic_nodeEi:0000000000000000 _ZN19Boundary_Conditions17get_periodic_nodeEi
     /tmp/ccbg3Dll.s:440    .text._ZN19Boundary_Conditions13get_neighbourEi:0000000000000000 _ZN19Boundary_Conditions13get_neighbourEi
     /tmp/ccbg3Dll.s:469    .text._ZN8Solution7get_rhoEi:0000000000000000 _ZN8Solution7get_rhoEi
     /tmp/ccbg3Dll.s:499    .text._ZN8Solution5get_uEi:0000000000000000 _ZN8Solution5get_uEi
     /tmp/ccbg3Dll.s:528    .text._ZN8Solution5get_vEi:0000000000000000 _ZN8Solution5get_vEi
     /tmp/ccbg3Dll.s:557    .text._ZN8Solution5get_wEi:0000000000000000 _ZN8Solution5get_wEi
     /tmp/ccbg3Dll.s:586    .text._ZN8Solution15get_average_rhoEv:0000000000000000 _ZN8Solution15get_average_rhoEv
     /tmp/ccbg3Dll.s:609    .text._ZN8Solution15set_average_rhoEd:0000000000000000 _ZN8Solution15set_average_rhoEd
     /tmp/ccbg3Dll.s:635    .text._ZN8Solution7add_rhoEid:0000000000000000 _ZN8Solution7add_rhoEid
     /tmp/ccbg3Dll.s:674    .text._ZN8Solution5add_uEid:0000000000000000 _ZN8Solution5add_uEid
     /tmp/ccbg3Dll.s:713    .text._ZN8Solution5add_vEid:0000000000000000 _ZN8Solution5add_vEid
     /tmp/ccbg3Dll.s:752    .text._ZN8Solution5add_wEid:0000000000000000 _ZN8Solution5add_wEid
     /tmp/ccbg3Dll.s:790    .text._ZNSt14numeric_limitsIdE7epsilonEv:0000000000000000 _ZNSt14numeric_limitsIdE7epsilonEv
                             .bss:0000000000000000 _ZStL8__ioinit
     /tmp/ccbg3Dll.s:814    .text:0000000000000000 _ZN8SolutionC2Ev
     /tmp/ccbg3Dll.s:4377   .rodata._ZTV8Solution:0000000000000000 _ZTV8Solution
     /tmp/ccbg3Dll.s:814    .text:0000000000000000 _ZN8SolutionC1Ev
     /tmp/ccbg3Dll.s:844    .text:0000000000000018 _ZN8SolutionC2Ei
     /tmp/ccbg3Dll.s:1206   .text:0000000000000378 _ZN8Solution10InitialiseEv
     /tmp/ccbg3Dll.s:844    .text:0000000000000018 _ZN8SolutionC1Ei
     /tmp/ccbg3Dll.s:1057   .text:000000000000022c _ZN8SolutionD2Ev
     /tmp/ccbg3Dll.s:1057   .text:000000000000022c _ZN8SolutionD1Ev
     /tmp/ccbg3Dll.s:1179   .text:0000000000000352 _ZN8SolutionD0Ev
     /tmp/ccbg3Dll.s:4249   .text._ZSt6fill_nIPdidET_S1_T0_RKT1_:0000000000000000 _ZSt6fill_nIPdidET_S1_T0_RKT1_
     /tmp/ccbg3Dll.s:1286   .text._ZN10vector_varC2ERKS_:0000000000000000 _ZN10vector_varC2ERKS_
     /tmp/ccbg3Dll.s:1286   .text._ZN10vector_varC2ERKS_:0000000000000000 _ZN10vector_varC1ERKS_
     /tmp/ccbg3Dll.s:1328   .text._ZN10vector_varaSERKS_:0000000000000000 _ZN10vector_varaSERKS_
     /tmp/ccbg3Dll.s:1363   .text:0000000000000450 _ZN8Solution24assign_pressure_gradientE10vector_varS0_S0_R4Mesh
     /tmp/ccbg3Dll.s:1631   .text:0000000000000752 _ZN8Solution24assign_velocity_gradientE10vector_varS0_S0_R4Mesh
     /tmp/ccbg3Dll.s:1890   .text:0000000000000a5c _ZN8Solution6updateEddddi
     /tmp/ccbg3Dll.s:1962   .text:0000000000000af6 _ZN8Solution6outputENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER16global_variablesR15domain_geometry
     /tmp/ccbg3Dll.s:4159   .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_:0000000000000000 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
     /tmp/ccbg3Dll.s:2367   .text:0000000000000fb4 _ZN8Solution5cloneERS_
     /tmp/ccbg3Dll.s:2471   .text._ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_:0000000000000000 _ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
     /tmp/ccbg3Dll.s:2505   .text:00000000000010c2 _ZN8Solution12post_processEdR4MeshR16global_variablesR18initial_conditions
     /tmp/ccbg3Dll.s:2742   .text._ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:0000000000000000 _ZSt3powIdiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_
     /tmp/ccbg3Dll.s:2776   .text:00000000000013a8 _ZN8Solution10update_bcsER19Boundary_ConditionsR4MeshR15domain_geometry
     /tmp/ccbg3Dll.s:3377   .text:0000000000001b8c _ZN8Solution20remove_double_errorsEv
GAS LISTING /tmp/ccbg3Dll.s 			page 249


     /tmp/ccbg3Dll.s:3486   .text._ZSt4fmodIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_:0000000000000000 _ZSt4fmodIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_
     /tmp/ccbg3Dll.s:3518   .text:0000000000001cb0 _ZN8Solution11restrictionERS_R4MeshS2_R19Boundary_Conditions
     /tmp/ccbg3Dll.s:3680   .text._ZSt5floorIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_:0000000000000000 _ZSt5floorIiEN9__gnu_cxx11__enable_ifIXsrSt12__is_integerIT_E7__valueEdE6__typeES3_
     /tmp/ccbg3Dll.s:3708   .text:0000000000001ea0 _ZN8Solution12prolongationERS_S0_S0_R4MeshS2_R19Boundary_Conditionsb
     /tmp/ccbg3Dll.s:4283   .text._ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_:0000000000000000 _ZSt12__niter_baseIPdENSt11_Niter_baseIT_E13iterator_typeES2_
     /tmp/ccbg3Dll.s:4307   .text._ZSt10__fill_n_aIPdidEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_:0000000000000000 _ZSt10__fill_n_aIPdidEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_
     /tmp/ccbg3Dll.s:4353   .text._ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_:0000000000000000 _ZNSt10_Iter_baseIPdLb0EE7_S_baseES0_
     /tmp/ccbg3Dll.s:4397   .rodata._ZTI8Solution:0000000000000000 _ZTI8Solution
     /tmp/ccbg3Dll.s:4412   .rodata._ZTI10vector_var:0000000000000000 _ZTI10vector_var
     /tmp/ccbg3Dll.s:4405   .rodata._ZTS8Solution:0000000000000000 _ZTS8Solution
     /tmp/ccbg3Dll.s:4420   .rodata._ZTS10vector_var:0000000000000000 _ZTS10vector_var
     /tmp/ccbg3Dll.s:4424   .text:000000000000254a _Z41__static_initialization_and_destruction_0ii
     /tmp/ccbg3Dll.s:4460   .text:0000000000002588 _GLOBAL__sub_I__ZN8SolutionC2Ev
                           .group:0000000000000000 _ZN10vector_varD5Ev
                           .group:0000000000000000 _ZN10vector_varC5ERKS_

UNDEFINED SYMBOLS
_ZdlPv
_Znam
__cxa_throw_bad_array_new_length
exit
_ZdaPv
__stack_chk_fail
__gxx_personality_v0
_ZN10vector_varC1Ev
_ZN10vector_var14line_magnitudeES_S_S_
_ZN10vector_var9MagnitudeEv
_ZN10vector_var3addES_
_Unwind_Resume
_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv
_ZNSt14basic_ofstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode
_ZNSolsEi
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
_ZNSolsEd
_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
_ZNSolsEPFRSoS_E
_ZNSt14basic_ofstreamIcSt11char_traitsIcEE5closeEv
_ZNSt14basic_ofstreamIcSt11char_traitsIcEED1Ev
sqrt
pow
fmod
floor
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc
_ZTVN10__cxxabiv117__class_type_infoE
_ZNSt8ios_base4InitC1Ev
__dso_handle
_ZNSt8ios_base4InitD1Ev
__cxa_atexit
